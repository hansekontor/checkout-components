{"version":3,"file":"index.js","sources":["../../node_modules/bsert/lib/assert.js","../../lib/utils/fixed.js","../../lib/btc/amount.js","../../node_modules/bufio/lib/custom.js","../../node_modules/bufio/lib/enforce.js","../../node_modules/bufio/lib/error.js","../../node_modules/bufio/lib/encoding.js","../../node_modules/bufio/lib/reader.js","../../node_modules/bufio/lib/writer.js","../../node_modules/bufio/lib/staticwriter.js","../../node_modules/bufio/lib/struct.js","../../node_modules/bufio/lib/bufio.js","../../61034376ac17f63f4df716351e8232","../../node_modules/loady/lib/loady.js","../../node_modules/bstring/lib/binding.js","../../node_modules/bstring/lib/base58-browser.js","../../node_modules/bstring/lib/base58.js","../../node_modules/bstring/lib/bech32-browser.js","../../node_modules/bstring/lib/bech32.js","../../node_modules/bstring/lib/cashaddr-browser.js","../../node_modules/bstring/lib/cashaddr.js","../../node_modules/bstring/lib/bstring.js","../../node_modules/ecashaddrjs/src/validation.js","../../node_modules/ecashaddrjs/src/base32.js","../../node_modules/big-integer/BigInteger.js","../../node_modules/@noble/hashes/_assert.js","../../node_modules/@noble/hashes/crypto.js","../../node_modules/@noble/hashes/utils.js","../../node_modules/@noble/hashes/_md.js","../../node_modules/@noble/hashes/sha256.js","../../node_modules/base-x/src/index.js","../../node_modules/bs58/index.js","../../node_modules/bs58check/base.js","../../node_modules/bs58check/index.js","../../node_modules/ecashaddrjs/src/convertBits.js","../../node_modules/ecashaddrjs/src/cashaddr.js","../../lib/bcrypto/internal/assert.js","../../lib/bcrypto/internal/hmac.js","../../lib/bcrypto/sha256.js","../../lib/bcrypto/ripemd160.js","../../lib/bcrypto/hash160.js","../../lib/bcrypto/hash256.js","../../lib/utils/binary.js","../../lib/bcrypto/internal/custom.js","../../lib/bcrypto/bn.js","../../lib/protocol/networks.js","../../lib/protocol/consensus.js","../../lib/utils/util.js","../../lib/protocol/timedata.js","../../lib/protocol/network.js","../../lib/bcrypto/random.js","../../lib/bcrypto/internal/asn1.js","../../lib/bcrypto/chacha20.js","../../lib/bcrypto/batch-rng.js","../../lib/bcrypto/schnorr-legacy.js","../../lib/bcrypto/hmac-drbg.js","../../lib/bcrypto/elliptic.js","../../lib/bcrypto/ecdsa.js","../../lib/bcrypto/secp256k1.js","../../lib/utils/message.js","../../lib/utils/index.js","../../lib/primitives/address.js","../../lib/btc/uri.js","../../lib/btc/index.js","../../lib/bcrypto/sha1.js","../../lib/protocol/policy.js","../../node_modules/n64/lib/n64.js","../../lib/script/scripterror.js","../../lib/script/scriptnum.js","../../lib/script/common.js","../../lib/script/opcode.js","../../lib/script/stack.js","../../lib/script/metrics.js","../../lib/script/script.js","../../lib/script/slp.js","../../lib/primitives/output.js","../../lib/primitives/outpoint.js","../../lib/primitives/coin.js","../../lib/coins/compress.js","../../lib/coins/coinentry.js","../../lib/coins/coins.js","../../node_modules/buffer-map/lib/custom.js","../../node_modules/buffer-map/lib/buffer-map.js","../../lib/coins/undocoins.js","../../lib/coins/coinview.js","../../lib/coins/index.js","../../node_modules/blru/lib/lru.js","../../node_modules/blru/lib/blru.js","../../lib/hd/common.js","../../lib/bcrypto/cleanse.js","../../lib/bcrypto/pbkdf2.js","../../lib/bcrypto/sha512.js","../../lib/hd/words/chinese-simplified.js","../../lib/hd/words/chinese-traditional.js","../../lib/hd/words/english.js","../../lib/hd/words/french.js","../../lib/hd/words/italian.js","../../lib/hd/words/japanese.js","../../lib/hd/words/spanish.js","../../lib/hd/wordlist.js","../../lib/hd/nfkd.js","../../lib/hd/mnemonic.js","../../lib/hd/public.js","../../lib/hd/private.js","../../lib/hd/hd.js","../../lib/hd/index.js","../../lib/primitives/invitem.js","../../lib/primitives/abstractblock.js","../../lib/bcrypto/merkle.js","../../lib/primitives/input.js","../../lib/primitives/tx.js","../../lib/primitives/headers.js","../../lib/primitives/merkleblock.js","../../lib/primitives/block.js","../../lib/primitives/keyring.js","../../lib/primitives/memblock.js","../../lib/primitives/mtx.js","../../lib/primitives/txmeta.js","../../lib/primitives/index.js","../../lib/protocol/errors.js","../../lib/protocol/index.js","../../lib/script/sigcache.js","../../lib/script/index.js","../../lib/bcrypto/ciphers/aes.js","../../lib/bcrypto/ciphers/ghash.js","../../lib/bcrypto/ciphers/modes.js","../../lib/bcrypto/aes.js","../../lib/bcrypto/keccak.js","../../lib/bcrypto/murmur3.js","../../lib/bcrypto/p224.js","../../lib/bcrypto/p256.js","../../lib/bcrypto/sha384.js","../../lib/bcrypto/p384.js","../../lib/bcrypto/shake.js","../../lib/bcrypto/shake256.js","../../lib/bcrypto/p521.js","../../lib/bcrypto/internal/primes.js","../../lib/bcrypto/base64.js","../../lib/bcrypto/safe.js","../../lib/bcrypto/rsa.js","../../lib/bcrypto/scrypt.js","../../lib/bcrypto/sha224.js","../../lib/bcrypto/bcrypto.js","../../lib/bfilter/bloom.js","../../lib/bfilter/rolling.js","../../lib/bfilter/bfilter.js","../../lib/b70/certs.js","../../lib/b70/utils/protoreader.js","../../lib/b70/utils/protowriter.js","../../lib/b70/paymentdetails.js","../../lib/b70/payment.js","../../lib/b70/paymentack.js","../../lib/b70/utils/asn1.js","../../lib/b70/crypto.js","../../lib/b70/x509.js","../../lib/b70/paymentrequest.js","../../lib/b70/b70.js","../../lib/pkg.js","../../lib/bcoin-browser.js","../../lib/bcoin-browser.js?commonjs-entry"],"sourcesContent":["/*!\n * assert.js - assertions for javascript\n * Copyright (c) 2018, Christopher Jeffrey (MIT License).\n * https://github.com/chjj/bsert\n */\n\n'use strict';\n\n/**\n * AssertionError\n */\n\nclass AssertionError extends Error {\n  constructor(options) {\n    if (typeof options === 'string')\n      options = { message: options };\n\n    if (options === null || typeof options !== 'object')\n      options = {};\n\n    let message = null;\n    let operator = 'fail';\n    let generatedMessage = Boolean(options.generatedMessage);\n    let start = null;\n\n    if (options.message != null)\n      message = toString(options.message);\n\n    if (typeof options.operator === 'string')\n      operator = options.operator;\n\n    if (message == null) {\n      if (operator === 'fail') {\n        message = 'Assertion failed.';\n      } else {\n        const a = stringify(options.actual);\n        const b = stringify(options.expected);\n\n        message = `${a} ${operator} ${b}`;\n      }\n\n      generatedMessage = true;\n    }\n\n    if (typeof options.stackStartFunction === 'function')\n      start = options.stackStartFunction;\n    else if (typeof options.stackStartFn === 'function')\n      start = options.stackStartFn;\n\n    super(message);\n\n    this.generatedMessage = generatedMessage;\n    this.code = 'ERR_ASSERTION';\n    this.actual = options.actual;\n    this.expected = options.expected;\n    this.operator = operator;\n\n    Object.defineProperty(this, 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n\n    if (Error.captureStackTrace && start != null)\n      Error.captureStackTrace(this, start);\n\n    this.stack;\n    this.name = 'AssertionError';\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n}\n\nAssertionError.prototype.name = 'AssertionError';\nAssertionError.prototype.type = 'AssertionError'; // Deprecated.\n\n/*\n * Assert\n */\n\nfunction assert(value, message) {\n  if (!value) {\n    let generatedMessage = false;\n\n    if (arguments.length === 0) {\n      message = 'No value argument passed to `assert()`.';\n      generatedMessage = true;\n    } else if (message == null) {\n      message = 'Assertion failed.';\n      generatedMessage = true;\n    } else if (isError(message)) {\n      throw message;\n    }\n\n    throw new AssertionError({\n      message,\n      actual: value,\n      expected: true,\n      operator: '==',\n      generatedMessage,\n      stackStartFn: assert\n    });\n  }\n}\n\nfunction equal(actual, expected, message) {\n  if (!Object.is(actual, expected)) {\n    if (isError(message))\n      throw message;\n\n    throw new AssertionError({\n      message,\n      actual,\n      expected,\n      operator: 'strictEqual',\n      stackStartFn: equal\n    });\n  }\n}\n\nfunction notEqual(actual, expected, message) {\n  if (Object.is(actual, expected)) {\n    if (isError(message))\n      throw message;\n\n    throw new AssertionError({\n      message,\n      actual,\n      expected,\n      operator: 'notStrictEqual',\n      stackStartFn: notEqual\n    });\n  }\n}\n\nfunction fail(message) {\n  let generatedMessage = false;\n\n  if (isError(message))\n    throw message;\n\n  if (message == null) {\n    message = 'Assertion failed.';\n    generatedMessage = true;\n  }\n\n  throw new AssertionError({\n    message,\n    actual: false,\n    expected: true,\n    operator: 'fail',\n    generatedMessage,\n    stackStartFn: fail\n  });\n}\n\nfunction throws(func, expected, message) {\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = undefined;\n  }\n\n  let thrown = false;\n  let err = null;\n\n  enforce(typeof func === 'function', 'func', 'function');\n\n  try {\n    func();\n  } catch (e) {\n    thrown = true;\n    err = e;\n  }\n\n  if (!thrown) {\n    let generatedMessage = false;\n\n    if (message == null) {\n      message = 'Missing expected exception.';\n      generatedMessage = true;\n    }\n\n    throw new AssertionError({\n      message,\n      actual: undefined,\n      expected,\n      operator: 'throws',\n      generatedMessage,\n      stackStartFn: throws\n    });\n  }\n\n  if (!testError(err, expected, message, throws))\n    throw err;\n}\n\nfunction doesNotThrow(func, expected, message) {\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = undefined;\n  }\n\n  let thrown = false;\n  let err = null;\n\n  enforce(typeof func === 'function', 'func', 'function');\n\n  try {\n    func();\n  } catch (e) {\n    thrown = true;\n    err = e;\n  }\n\n  if (!thrown)\n    return;\n\n  if (testError(err, expected, message, doesNotThrow)) {\n    let generatedMessage = false;\n\n    if (message == null) {\n      message = 'Got unwanted exception.';\n      generatedMessage = true;\n    }\n\n    throw new AssertionError({\n      message,\n      actual: err,\n      expected,\n      operator: 'doesNotThrow',\n      generatedMessage,\n      stackStartFn: doesNotThrow\n    });\n  }\n\n  throw err;\n}\n\nasync function rejects(func, expected, message) {\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = undefined;\n  }\n\n  let thrown = false;\n  let err = null;\n\n  if (typeof func !== 'function')\n    enforce(isPromise(func), 'func', 'promise');\n\n  try {\n    if (isPromise(func))\n      await func;\n    else\n      await func();\n  } catch (e) {\n    thrown = true;\n    err = e;\n  }\n\n  if (!thrown) {\n    let generatedMessage = false;\n\n    if (message == null) {\n      message = 'Missing expected rejection.';\n      generatedMessage = true;\n    }\n\n    throw new AssertionError({\n      message,\n      actual: undefined,\n      expected,\n      operator: 'rejects',\n      generatedMessage,\n      stackStartFn: rejects\n    });\n  }\n\n  if (!testError(err, expected, message, rejects))\n    throw err;\n}\n\nasync function doesNotReject(func, expected, message) {\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = undefined;\n  }\n\n  let thrown = false;\n  let err = null;\n\n  if (typeof func !== 'function')\n    enforce(isPromise(func), 'func', 'promise');\n\n  try {\n    if (isPromise(func))\n      await func;\n    else\n      await func();\n  } catch (e) {\n    thrown = true;\n    err = e;\n  }\n\n  if (!thrown)\n    return;\n\n  if (testError(err, expected, message, doesNotReject)) {\n    let generatedMessage = false;\n\n    if (message == null) {\n      message = 'Got unwanted rejection.';\n      generatedMessage = true;\n    }\n\n    throw new AssertionError({\n      message,\n      actual: undefined,\n      expected,\n      operator: 'doesNotReject',\n      generatedMessage,\n      stackStartFn: doesNotReject\n    });\n  }\n\n  throw err;\n}\n\nfunction ifError(err) {\n  if (err != null) {\n    let message = 'ifError got unwanted exception: ';\n\n    if (typeof err === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor)\n        message += err.constructor.name;\n      else\n        message += err.message;\n    } else {\n      message += stringify(err);\n    }\n\n    throw new AssertionError({\n      message,\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      generatedMessage: true,\n      stackStartFn: ifError\n    });\n  }\n}\n\nfunction match(string, regexp, message) {\n  testMatch(string, regexp, message, match, true);\n}\n\nfunction doesNotMatch(string, regexp, message) {\n  testMatch(string, regexp, message, doesNotMatch, false);\n}\n\nfunction deepEqual(actual, expected, message) {\n  if (!isDeepEqual(actual, expected, false)) {\n    if (isError(message))\n      throw message;\n\n    throw new AssertionError({\n      message,\n      actual,\n      expected,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepEqual\n    });\n  }\n}\n\nfunction notDeepEqual(actual, expected, message) {\n  if (isDeepEqual(actual, expected, true)) {\n    if (isError(message))\n      throw message;\n\n    throw new AssertionError({\n      message,\n      actual,\n      expected,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n}\n\nfunction bufferEqual(actual, expected, enc, message) {\n  if (!isEncoding(enc)) {\n    message = enc;\n    enc = null;\n  }\n\n  if (enc == null)\n    enc = 'hex';\n\n  expected = bufferize(actual, expected, enc);\n\n  enforce(isBuffer(actual), 'actual', 'buffer');\n  enforce(isBuffer(expected), 'expected', 'buffer');\n\n  if (actual !== expected && !actual.equals(expected)) {\n    if (isError(message))\n      throw message;\n\n    throw new AssertionError({\n      message,\n      actual: actual.toString(enc),\n      expected: expected.toString(enc),\n      operator: 'bufferEqual',\n      stackStartFn: bufferEqual\n    });\n  }\n}\n\nfunction notBufferEqual(actual, expected, enc, message) {\n  if (!isEncoding(enc)) {\n    message = enc;\n    enc = null;\n  }\n\n  if (enc == null)\n    enc = 'hex';\n\n  expected = bufferize(actual, expected, enc);\n\n  enforce(isBuffer(actual), 'actual', 'buffer');\n  enforce(isBuffer(expected), 'expected', 'buffer');\n\n  if (actual === expected || actual.equals(expected)) {\n    if (isError(message))\n      throw message;\n\n    throw new AssertionError({\n      message,\n      actual: actual.toString(enc),\n      expected: expected.toString(enc),\n      operator: 'notBufferEqual',\n      stackStartFn: notBufferEqual\n    });\n  }\n}\n\nfunction enforce(value, name, type) {\n  if (!value) {\n    let msg;\n\n    if (name == null) {\n      msg = 'Invalid type for parameter.';\n    } else {\n      if (type == null)\n        msg = `Invalid type for \"${name}\".`;\n      else\n        msg = `\"${name}\" must be a(n) ${type}.`;\n    }\n\n    const err = new TypeError(msg);\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(err, enforce);\n\n    throw err;\n  }\n}\n\nfunction range(value, name) {\n  if (!value) {\n    const msg = name != null\n      ? `\"${name}\" is out of range.`\n      : 'Parameter is out of range.';\n\n    const err = new RangeError(msg);\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(err, range);\n\n    throw err;\n  }\n}\n\n/*\n * Stringification\n */\n\nfunction stringify(value) {\n  switch (typeof value) {\n    case 'undefined':\n      return 'undefined';\n    case 'object':\n      if (value === null)\n        return 'null';\n      return `[${objectName(value)}]`;\n    case 'boolean':\n      return `${value}`;\n    case 'number':\n      return `${value}`;\n    case 'string':\n      if (value.length > 80)\n        value = `${value.substring(0, 77)}...`;\n      return JSON.stringify(value);\n    case 'symbol':\n      return tryString(value);\n    case 'function':\n      return `[${funcName(value)}]`;\n    case 'bigint':\n      return `${value}n`;\n    default:\n      return `[${typeof value}]`;\n  }\n}\n\nfunction toString(value) {\n  if (typeof value === 'string')\n    return value;\n\n  if (isError(value))\n    return tryString(value);\n\n  return stringify(value);\n}\n\nfunction tryString(value) {\n  try {\n    return String(value);\n  } catch (e) {\n    return 'Object';\n  }\n}\n\n/*\n * Error Testing\n */\n\nfunction testError(err, expected, message, func) {\n  if (expected == null)\n    return true;\n\n  if (isRegExp(expected))\n    return expected.test(err);\n\n  if (typeof expected !== 'function') {\n    if (func === doesNotThrow || func === doesNotReject)\n      throw new TypeError('\"expected\" must not be an object.');\n\n    if (typeof expected !== 'object')\n      throw new TypeError('\"expected\" must be an object.');\n\n    let generatedMessage = false;\n\n    if (message == null) {\n      const name = func === rejects ? 'rejection' : 'exception';\n      message = `Missing expected ${name}.`;\n      generatedMessage = true;\n    }\n\n    if (err == null || typeof err !== 'object') {\n      throw new AssertionError({\n        actual: err,\n        expected,\n        message,\n        operator: func.name,\n        generatedMessage,\n        stackStartFn: func\n      });\n    }\n\n    const keys = Object.keys(expected);\n\n    if (isError(expected))\n      keys.push('name', 'message');\n\n    if (keys.length === 0)\n      throw new TypeError('\"expected\" may not be an empty object.');\n\n    for (const key of keys) {\n      const expect = expected[key];\n      const value = err[key];\n\n      if (typeof value === 'string' &&\n          isRegExp(expect) &&\n          expect.test(value)) {\n        continue;\n      }\n\n      if ((key in err) && isDeepEqual(value, expect, false))\n        continue;\n\n      throw new AssertionError({\n        actual: err,\n        expected: expected,\n        message,\n        operator: func.name,\n        generatedMessage,\n        stackStartFn: func\n      });\n    }\n\n    return true;\n  }\n\n  if (expected.prototype !== undefined && (err instanceof expected))\n    return true;\n\n  // eslint-disable-next-line no-prototype-builtins\n  if (Error.isPrototypeOf(expected))\n    return false;\n\n  return expected.call({}, err) === true;\n}\n\nfunction testMatch(string, regexp, message, fn, expect) {\n  enforce(typeof string === 'string', 'string', 'string');\n  enforce(isRegExp(regexp), 'regexp', 'RegExp');\n\n  if (regexp.test(string) !== expect) {\n    if (isError(message))\n      throw message;\n\n    let generatedMessage = false;\n\n    if (message == null) {\n      message = `The input ${expect ? 'did' : 'was expected to'} `\n              + `not match the regular expression ${regexp}. `\n              + `Input:\\n\\n${stringify(string)}\\n`;\n\n      generatedMessage = true;\n    }\n\n    throw new AssertionError({\n      actual: string,\n      expected: regexp,\n      message,\n      operator: fn.name,\n      generatedMessage,\n      stackStartFn: fn\n    });\n  }\n}\n\n/*\n * Comparisons\n */\n\nfunction isDeepEqual(x, y, fail) {\n  try {\n    return compare(x, y, null);\n  } catch (e) {\n    return fail;\n  }\n}\n\nfunction compare(a, b, cache) {\n  // Primitives.\n  if (Object.is(a, b))\n    return true;\n\n  if (!isObject(a) || !isObject(b))\n    return false;\n\n  // Semi-primitives.\n  if (objectString(a) !== objectString(b))\n    return false;\n\n  if (Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n\n  if (isBuffer(a) && isBuffer(b))\n    return a.equals(b);\n\n  if (isDate(a))\n    return Object.is(a.getTime(), b.getTime());\n\n  if (isRegExp(a))\n    return a.source === b.source && a.flags === b.flags;\n\n  if (isError(a)) {\n    if (a.message !== b.message)\n      return false;\n  }\n\n  if (isArrayBuffer(a)) {\n    a = new Uint8Array(a);\n    b = new Uint8Array(b);\n  }\n\n  if (isView(a) && !isBuffer(a)) {\n    if (isBuffer(b))\n      return false;\n\n    const x = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    const y = new Uint8Array(b.buffer, b.byteOffset, b.byteLength);\n\n    if (x.length !== y.length)\n      return false;\n\n    for (let i = 0; i < x.length; i++) {\n      if (x[i] !== y[i])\n        return false;\n    }\n\n    return true;\n  }\n\n  if (isSet(a)) {\n    if (a.size !== b.size)\n      return false;\n\n    const keys = new Set([...a, ...b]);\n\n    return keys.size === a.size;\n  }\n\n  // Recursive.\n  if (!cache) {\n    cache = {\n      a: new Map(),\n      b: new Map(),\n      p: 0\n    };\n  } else {\n    const aa = cache.a.get(a);\n\n    if (aa != null) {\n      const bb = cache.b.get(b);\n      if (bb != null)\n        return aa === bb;\n    }\n\n    cache.p += 1;\n  }\n\n  cache.a.set(a, cache.p);\n  cache.b.set(b, cache.p);\n\n  const ret = recurse(a, b, cache);\n\n  cache.a.delete(a);\n  cache.b.delete(b);\n\n  return ret;\n}\n\nfunction recurse(a, b, cache) {\n  if (isMap(a)) {\n    if (a.size !== b.size)\n      return false;\n\n    const keys = new Set([...a.keys(), ...b.keys()]);\n\n    if (keys.size !== a.size)\n      return false;\n\n    for (const key of keys) {\n      if (!compare(a.get(key), b.get(key), cache))\n        return false;\n    }\n\n    return true;\n  }\n\n  if (isArray(a)) {\n    if (a.length !== b.length)\n      return false;\n\n    for (let i = 0; i < a.length; i++) {\n      if (!compare(a[i], b[i], cache))\n        return false;\n    }\n\n    return true;\n  }\n\n  const ak = ownKeys(a);\n  const bk = ownKeys(b);\n\n  if (ak.length !== bk.length)\n    return false;\n\n  const keys = new Set([...ak, ...bk]);\n\n  if (keys.size !== ak.length)\n    return false;\n\n  for (const key of keys) {\n    if (!compare(a[key], b[key], cache))\n      return false;\n  }\n\n  return true;\n}\n\nfunction ownKeys(obj) {\n  const keys = Object.keys(obj);\n\n  if (!Object.getOwnPropertySymbols)\n    return keys;\n\n  if (!Object.getOwnPropertyDescriptor)\n    return keys;\n\n  const symbols = Object.getOwnPropertySymbols(obj);\n\n  for (const symbol of symbols) {\n    const desc = Object.getOwnPropertyDescriptor(obj, symbol);\n\n    if (desc && desc.enumerable) {\n      // @ts-ignore\n      keys.push(symbol);\n    }\n  }\n\n  return keys;\n}\n\n/*\n * Helpers\n */\n\nfunction objectString(obj) {\n  if (obj === undefined)\n    return '[object Undefined]';\n\n  if (obj === null)\n    return '[object Null]';\n\n  try {\n    return Object.prototype.toString.call(obj);\n  } catch (e) {\n    return '[object Object]';\n  }\n}\n\nfunction objectType(obj) {\n  return objectString(obj).slice(8, -1);\n}\n\nfunction objectName(obj) {\n  const type = objectType(obj);\n\n  if (obj == null)\n    return type;\n\n  if (type !== 'Object' && type !== 'Error')\n    return type;\n\n  let ctor, name;\n\n  try {\n    ctor = obj.constructor;\n  } catch (e) {\n    ;\n  }\n\n  if (ctor == null)\n    return type;\n\n  try {\n    name = ctor.name;\n  } catch (e) {\n    return type;\n  }\n\n  if (typeof name !== 'string' || name.length === 0)\n    return type;\n\n  return name;\n}\n\nfunction funcName(func) {\n  let name;\n\n  try {\n    name = func.name;\n  } catch (e) {\n    ;\n  }\n\n  if (typeof name !== 'string' || name.length === 0)\n    return 'Function';\n\n  return `Function: ${name}`;\n}\n\nfunction isArray(obj) {\n  return Array.isArray(obj);\n}\n\nfunction isArrayBuffer(obj) {\n  return obj instanceof ArrayBuffer;\n}\n\nfunction isBuffer(obj) {\n  return isObject(obj)\n      && typeof obj.writeUInt32LE === 'function'\n      && typeof obj.equals === 'function';\n}\n\nfunction isDate(obj) {\n  return obj instanceof Date;\n}\n\nfunction isError(obj) {\n  return obj instanceof Error;\n}\n\nfunction isMap(obj) {\n  return obj instanceof Map;\n}\n\nfunction isObject(obj) {\n  return obj && typeof obj === 'object';\n}\n\nfunction isPromise(obj) {\n  return obj instanceof Promise;\n}\n\nfunction isRegExp(obj) {\n  return obj instanceof RegExp;\n}\n\nfunction isSet(obj) {\n  return obj instanceof Set;\n}\n\nfunction isView(obj) {\n  return ArrayBuffer.isView(obj);\n}\n\nfunction isEncoding(enc) {\n  if (typeof enc !== 'string')\n    return false;\n\n  if (enc.length > 9)\n    return false;\n\n  switch (enc.toLowerCase()) {\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'base64url':\n    case 'hex':\n    case 'latin1':\n    case 'ucs2':\n    case 'utf8':\n    case 'utf16le':\n    case 'ucs-2':\n    case 'utf-8':\n    case 'utf-16le':\n      return true;\n  }\n\n  return false;\n}\n\nfunction bufferize(actual, expected, enc) {\n  if (typeof expected === 'string') {\n    if (!isBuffer(actual))\n      return null;\n\n    const {constructor} = actual;\n\n    if (!constructor || typeof constructor.from !== 'function')\n      return null;\n\n    if (!isEncoding(enc))\n      return null;\n\n    const raw = constructor.from(expected, enc);\n\n    if (enc.length === 3 && raw.length * 2 !== expected.length)\n      return null;\n\n    return raw;\n  }\n\n  return expected;\n}\n\n/*\n * API\n */\n\nassert.AssertionError = AssertionError;\nassert.assert = assert;\nassert.strict = assert;\nassert.ok = assert;\nassert.equal = equal;\nassert.notEqual = notEqual;\nassert.strictEqual = equal;\nassert.notStrictEqual = notEqual;\nassert.fail = fail;\nassert.throws = throws;\nassert.doesNotThrow = doesNotThrow;\nassert.rejects = rejects;\nassert.doesNotReject = doesNotReject;\nassert.ifError = ifError;\nassert.match = match;\nassert.doesNotMatch = doesNotMatch;\nassert.deepEqual = deepEqual;\nassert.notDeepEqual = notDeepEqual;\nassert.deepStrictEqual = deepEqual;\nassert.notDeepStrictEqual = notDeepEqual;\nassert.bufferEqual = bufferEqual;\nassert.notBufferEqual = notBufferEqual;\nassert.enforce = enforce;\nassert.range = range;\n\n/*\n * Expose\n */\n\nmodule.exports = assert;\n","/*!\n * fixed.js - fixed number parsing\n * Copyright (c) 2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\n\n/**\n * Convert int to fixed number string and reduce by a\n * power of ten (uses no floating point arithmetic).\n * @param {Number} num\n * @param {Number} exp - Number of decimal places.\n * @returns {String} Fixed number string.\n */\n\nexports.encode = function encode(num, exp) {\n  assert(Number.isSafeInteger(num), 'Invalid integer value.');\n\n  let sign = '';\n\n  if (num < 0) {\n    num = -num;\n    sign = '-';\n  }\n\n  const mult = pow10(exp);\n\n  let lo = num % mult;\n  let hi = (num - lo) / mult;\n\n  lo = lo.toString(10);\n  hi = hi.toString(10);\n\n  while (lo.length < exp)\n    lo = '0' + lo;\n\n  lo = lo.replace(/0+$/, '');\n\n  assert(lo.length <= exp, 'Invalid integer value.');\n\n  if (lo.length === 0)\n    lo = '0';\n\n  if (exp === 0)\n    return `${sign}${hi}`;\n\n  return `${sign}${hi}.${lo}`;\n};\n\n/**\n * Parse a fixed number string and multiply by a\n * power of ten (uses no floating point arithmetic).\n * @param {String} str\n * @param {Number} exp - Number of decimal places.\n * @returns {Number} Integer.\n */\n\nexports.decode = function decode(str, exp) {\n  assert(typeof str === 'string');\n  assert(str.length <= 32, 'Fixed number string too large.');\n\n  let sign = 1;\n\n  if (str.length > 0 && str[0] === '-') {\n    str = str.substring(1);\n    sign = -1;\n  }\n\n  let hi = str;\n  let lo = '0';\n\n  const index = str.indexOf('.');\n\n  if (index !== -1) {\n    hi = str.substring(0, index);\n    lo = str.substring(index + 1);\n  }\n\n  hi = hi.replace(/^0+/, '');\n  lo = lo.replace(/0+$/, '');\n\n  assert(hi.length <= 16 - exp,\n    'Fixed number string exceeds 2^53-1.');\n\n  assert(lo.length <= exp,\n    'Too many decimal places in fixed number string.');\n\n  if (hi.length === 0)\n    hi = '0';\n\n  while (lo.length < exp)\n    lo += '0';\n\n  if (lo.length === 0)\n    lo = '0';\n\n  assert(/^\\d+$/.test(hi) && /^\\d+$/.test(lo),\n    'Non-numeric characters in fixed number string.');\n\n  hi = parseInt(hi, 10);\n  lo = parseInt(lo, 10);\n\n  const mult = pow10(exp);\n  const maxLo = modSafe(mult);\n  const maxHi = divSafe(mult);\n\n  assert(hi < maxHi || (hi === maxHi && lo <= maxLo),\n    'Fixed number string exceeds 2^53-1.');\n\n  return sign * (hi * mult + lo);\n};\n\n/**\n * Convert int to float and reduce by a power\n * of ten (uses no floating point arithmetic).\n * @param {Number} num\n * @param {Number} exp - Number of decimal places.\n * @returns {Number} Double float.\n */\n\nexports.toFloat = function toFloat(num, exp) {\n  return parseFloat(exports.encode(num, exp));\n};\n\n/**\n * Parse a double float number and multiply by a\n * power of ten (uses no floating point arithmetic).\n * @param {Number} num\n * @param {Number} exp - Number of decimal places.\n * @returns {Number} Integer.\n */\n\nexports.fromFloat = function fromFloat(num, exp) {\n  assert(typeof num === 'number' && isFinite(num));\n  assert(Number.isSafeInteger(exp));\n  return exports.decode(num.toFixed(exp), exp);\n};\n\n/*\n * Helpers\n */\n\nfunction pow10(exp) {\n  switch (exp) {\n    case 0:\n      return 1;\n    case 1:\n      return 10;\n    case 2:\n      return 100;\n    case 3:\n      return 1000;\n    case 4:\n      return 10000;\n    case 5:\n      return 100000;\n    case 6:\n      return 1000000;\n    case 7:\n      return 10000000;\n    case 8:\n      return 100000000;\n  }\n  throw new Error('Exponent is too large.');\n}\n\nfunction modSafe(mod) {\n  switch (mod) {\n    case 1:\n      return 0;\n    case 10:\n      return 1;\n    case 100:\n      return 91;\n    case 1000:\n      return 991;\n    case 10000:\n      return 991;\n    case 100000:\n      return 40991;\n    case 1000000:\n      return 740991;\n    case 10000000:\n      return 4740991;\n    case 100000000:\n      return 54740991;\n  }\n  throw new Error('Exponent is too large.');\n}\n\nfunction divSafe(div) {\n  switch (div) {\n    case 1:\n      return 9007199254740991;\n    case 10:\n      return 900719925474099;\n    case 100:\n      return 90071992547409;\n    case 1000:\n      return 9007199254740;\n    case 10000:\n      return 900719925474;\n    case 100000:\n      return 90071992547;\n    case 1000000:\n      return 9007199254;\n    case 10000000:\n      return 900719925;\n    case 100000000:\n      return 90071992;\n  }\n  throw new Error('Exponent is too large.');\n}\n","/*!\n * amount.js - amount object for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst fixed = require('../utils/fixed');\n\n/**\n * Amount\n * Represents a bitcoin amount (satoshis internally).\n * @alias module:btc.Amount\n * @property {Amount} value\n */\n\nclass Amount {\n  /**\n   * Create an amount.\n   * @constructor\n   * @param {(String|Number)?} value\n   * @param {String?} unit\n   */\n\n  constructor(value, unit) {\n    this.value = 0;\n\n    if (value != null)\n      this.fromOptions(value, unit);\n  }\n\n  /**\n   * Inject properties from options.\n   * @private\n   * @param {(String|Number)?} value\n   * @param {String?} unit\n   * @returns {Amount}\n   */\n\n  fromOptions(value, unit) {\n    if (typeof unit === 'string')\n      return this.from(unit, value);\n\n    if (typeof value === 'number')\n      return this.fromValue(value);\n\n    return this.fromBTC(value);\n  }\n\n  /**\n   * Get satoshi value.\n   * @returns {Amount}\n   */\n\n  toValue() {\n    return this.value;\n  }\n\n  /**\n   * Get satoshi string or value.\n   * @param {Boolean?} num\n   * @returns {String|Amount}\n   */\n\n  toSatoshis(num) {\n    if (num)\n      return this.value;\n\n    return this.value.toString(10);\n  }\n\n  /**\n   * Get bits string or value.\n   * @param {Boolean?} num\n   * @returns {String|Amount}\n   */\n\n  toBits(num) {\n    return Amount.encode(this.value, 2, num);\n  }\n\n  /**\n   * Get mbtc string or value.\n   * @param {Boolean?} num\n   * @returns {String|Amount}\n   */\n\n  toMBTC(num) {\n    return Amount.encode(this.value, 5, num);\n  }\n\n  /**\n   * Get btc string or value.\n   * @param {Boolean?} num\n   * @returns {String|Amount}\n   */\n\n  toBTC(num) {\n    return Amount.encode(this.value, 8, num);\n  }\n\n  /**\n   * Get unit string or value.\n   * @param {String} unit - Can be `sat`,\n   * `ubtc`, `bits`, `mbtc`, or `btc`.\n   * @param {Boolean?} num\n   * @returns {String|Amount}\n   */\n\n  to(unit, num) {\n    switch (unit) {\n      case 'sat':\n        return this.toSatoshis(num);\n      case 'ubtc':\n      case 'bits':\n        return this.toBits(num);\n      case 'mbtc':\n        return this.toMBTC(num);\n      case 'btc':\n        return this.toBTC(num);\n    }\n    throw new Error(`Unknown unit \"${unit}\".`);\n  }\n\n  /**\n   * Convert amount to bitcoin string.\n   * @returns {String}\n   */\n\n  toString() {\n    return this.toBTC();\n  }\n\n  /**\n   * Inject properties from value.\n   * @private\n   * @param {Amount} value\n   * @returns {Amount}\n   */\n\n  fromValue(value) {\n    assert(Number.isSafeInteger(value) && value >= 0,\n      'Value must be an int64.');\n    this.value = value;\n    return this;\n  }\n\n  /**\n   * Inject properties from satoshis.\n   * @private\n   * @param {Number|String} value\n   * @returns {Amount}\n   */\n\n  fromSatoshis(value) {\n    this.value = Amount.decode(value, 0);\n    return this;\n  }\n\n  /**\n   * Inject properties from bits.\n   * @private\n   * @param {Number|String} value\n   * @returns {Amount}\n   */\n\n  fromBits(value) {\n    this.value = Amount.decode(value, 2);\n    return this;\n  }\n\n  /**\n   * Inject properties from mbtc.\n   * @private\n   * @param {Number|String} value\n   * @returns {Amount}\n   */\n\n  fromMBTC(value) {\n    this.value = Amount.decode(value, 5);\n    return this;\n  }\n\n  /**\n   * Inject properties from btc.\n   * @private\n   * @param {Number|String} value\n   * @returns {Amount}\n   */\n\n  fromBTC(value) {\n    this.value = Amount.decode(value, 8);\n    return this;\n  }\n\n  /**\n   * Inject properties from unit.\n   * @private\n   * @param {String} unit\n   * @param {Number|String} value\n   * @returns {Amount}\n   */\n\n  from(unit, value) {\n    switch (unit) {\n      case 'sat':\n        return this.fromSatoshis(value);\n      case 'ubtc':\n      case 'bits':\n        return this.fromBits(value);\n      case 'mbtc':\n        return this.fromMBTC(value);\n      case 'btc':\n        return this.fromBTC(value);\n    }\n    throw new Error(`Unknown unit \"${unit}\".`);\n  }\n\n  /**\n   * Instantiate amount from options.\n   * @param {(String|Number)?} value\n   * @param {String?} unit\n   * @returns {Amount}\n   */\n\n  static fromOptions(value, unit) {\n    return new this().fromOptions(value, unit);\n  }\n\n  /**\n   * Instantiate amount from value.\n   * @private\n   * @param {Amount} value\n   * @returns {Amount}\n   */\n\n  static fromValue(value) {\n    return new this().fromValue(value);\n  }\n\n  /**\n   * Instantiate amount from satoshis.\n   * @param {Number|String} value\n   * @returns {Amount}\n   */\n\n  static fromSatoshis(value) {\n    return new this().fromSatoshis(value);\n  }\n\n  /**\n   * Instantiate amount from bits.\n   * @param {Number|String} value\n   * @returns {Amount}\n   */\n\n  static fromBits(value) {\n    return new this().fromBits(value);\n  }\n\n  /**\n   * Instantiate amount from mbtc.\n   * @param {Number|String} value\n   * @returns {Amount}\n   */\n\n  static fromMBTC(value) {\n    return new this().fromMBTC(value);\n  }\n\n  /**\n   * Instantiate amount from btc.\n   * @param {Number|String} value\n   * @returns {Amount}\n   */\n\n  static fromBTC(value) {\n    return new this().fromBTC(value);\n  }\n\n  /**\n   * Instantiate amount from unit.\n   * @param {String} unit\n   * @param {Number|String} value\n   * @returns {Amount}\n   */\n\n  static from(unit, value) {\n    return new this().from(unit, value);\n  }\n\n  /**\n   * Inspect amount.\n   * @returns {String}\n   */\n\n  inspect() {\n    return `<Amount: ${this.toString()}>`;\n  }\n\n  /**\n   * Safely convert satoshis to a BTC string.\n   * This function explicitly avoids any\n   * floating point arithmetic.\n   * @param {Amount} value - Satoshis.\n   * @returns {String} BTC string.\n   */\n\n  static btc(value, num) {\n    if (typeof value === 'string')\n      return value;\n\n    return Amount.encode(value, 8, num);\n  }\n\n  /**\n   * Safely convert a BTC string to satoshis.\n   * @param {String} str - BTC\n   * @returns {Amount} Satoshis.\n   * @throws on parse error\n   */\n\n  static value(str) {\n    if (typeof str === 'number')\n      return str;\n\n    return Amount.decode(str, 8);\n  }\n\n  /**\n   * Safely convert satoshis to a BTC string.\n   * @param {Amount} value\n   * @param {Number} exp - Exponent.\n   * @param {Boolean} num - Return a number.\n   * @returns {String|Number}\n   */\n\n  static encode(value, exp, num) {\n    if (num)\n      return fixed.toFloat(value, exp);\n    return fixed.encode(value, exp);\n  }\n\n  /**\n   * Safely convert a BTC string to satoshis.\n   * @param {String|Number} value - BTC\n   * @param {Number} exp - Exponent.\n   * @returns {Amount} Satoshis.\n   * @throws on parse error\n   */\n\n  static decode(value, exp) {\n    if (typeof value === 'number')\n      return fixed.fromFloat(value, exp);\n    return fixed.decode(value, exp);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Amount;\n","'use strict';\n\nconst {inspect} = require('util');\n\nexports.custom = inspect.custom || 'inspect';\n","/*!\n * enforce.js - type enforcement for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/*\n * Enforce\n */\n\nfunction enforce(value, name, type) {\n  if (!value) {\n    const err = new TypeError(`'${name}' must be a(n) ${type}.`);\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(err, enforce);\n\n    throw err;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = enforce;\n","/*!\n * error.js - encoding error for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * Encoding Error\n * @extends {Error}\n */\n\nclass EncodingError extends Error {\n  /**\n   * Create an encoding error.\n   * @constructor\n   * @param {Number} offset\n   * @param {String} reason\n   */\n\n  constructor(offset, reason, start) {\n    super();\n\n    this.type = 'EncodingError';\n    this.name = 'EncodingError';\n    this.code = 'ERR_ENCODING';\n    this.message = `${reason} (offset=${offset}).`;\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(this, start || EncodingError);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = EncodingError;\n","/*!\n * encoding.js - encoding utils for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n/* eslint no-implicit-coercion: \"off\" */\n\n'use strict';\n\nconst enforce = require('./enforce');\nconst EncodingError = require('./error');\n\n/*\n * Constants\n */\n\nconst HI = 1 / 0x100000000;\nconst {MAX_SAFE_INTEGER} = Number;\nconst F32_ARRAY = new Float32Array(1);\nconst F328_ARRAY = new Uint8Array(F32_ARRAY.buffer);\nconst F64_ARRAY = new Float64Array(1);\nconst F648_ARRAY = new Uint8Array(F64_ARRAY.buffer);\n\nF32_ARRAY[0] = -1;\n\nconst BIG_ENDIAN = F328_ARRAY[3] === 0;\n\n/*\n * Read Unsigned LE\n */\n\nfunction readU(data, off, len) {\n  switch (len) {\n    case 8:\n      return readU64(data, off);\n    case 7:\n      return readU56(data, off);\n    case 6:\n      return readU48(data, off);\n    case 5:\n      return readU40(data, off);\n    case 4:\n      return readU32(data, off);\n    case 3:\n      return readU24(data, off);\n    case 2:\n      return readU16(data, off);\n    case 1:\n      return readU8(data, off);\n    default:\n      throw new EncodingError(off, 'Invalid read length');\n  }\n}\n\nfunction readU64(data, off) {\n  const hi = readU32(data, off + 4);\n  const lo = readU32(data, off);\n\n  check((hi & 0xffe00000) === 0, off, 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readU56(data, off) {\n  const hi = readU24(data, off + 4);\n  const lo = readU32(data, off);\n\n  check((hi & 0xffe00000) === 0, off, 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readU48(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off++] * 0x1000000\n        + data[off++] * 0x100000000\n        + data[off] * 0x10000000000);\n}\n\nfunction readU40(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off++] * 0x1000000\n        + data[off] * 0x100000000);\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\nfunction readU24(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off] * 0x10000);\n}\n\nfunction readU16(data, off) {\n  return data[off++] + data[off] * 0x100;\n}\n\nfunction readU8(data, off) {\n  return data[off];\n}\n\n/*\n * Read Unsigned BE\n */\n\nfunction readUBE(data, off, len) {\n  switch (len) {\n    case 8:\n      return readU64BE(data, off);\n    case 7:\n      return readU56BE(data, off);\n    case 6:\n      return readU48BE(data, off);\n    case 5:\n      return readU40BE(data, off);\n    case 4:\n      return readU32BE(data, off);\n    case 3:\n      return readU24BE(data, off);\n    case 2:\n      return readU16BE(data, off);\n    case 1:\n      return readU8(data, off);\n    default:\n      throw new EncodingError(off, 'Invalid read length');\n  }\n}\n\nfunction readU64BE(data, off) {\n  const hi = readU32BE(data, off);\n  const lo = readU32BE(data, off + 4);\n\n  check((hi & 0xffe00000) === 0, off, 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readU56BE(data, off) {\n  const hi = readU24BE(data, off);\n  const lo = readU32BE(data, off + 3);\n\n  check((hi & 0xffe00000) === 0, off, 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readU48BE(data, off) {\n  return (data[off++] * 0x10000000000\n        + data[off++] * 0x100000000\n        + data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readU40BE(data, off) {\n  return (data[off++] * 0x100000000\n        + data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readU32BE(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readU24BE(data, off) {\n  return (data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readU16BE(data, off) {\n  return data[off++] * 0x100 + data[off];\n}\n\n/*\n * Read Signed LE\n */\n\nfunction readI(data, off, len) {\n  switch (len) {\n    case 8:\n      return readI64(data, off);\n    case 7:\n      return readI56(data, off);\n    case 6:\n      return readI48(data, off);\n    case 5:\n      return readI40(data, off);\n    case 4:\n      return readI32(data, off);\n    case 3:\n      return readI24(data, off);\n    case 2:\n      return readI16(data, off);\n    case 1:\n      return readI8(data, off);\n    default:\n      throw new EncodingError(off, 'Invalid read length');\n  }\n}\n\nfunction readI64(data, off) {\n  const hi = readI32(data, off + 4);\n  const lo = readU32(data, off);\n\n  check(isSafe(hi, lo), 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readI56(data, off) {\n  const hi = readI24(data, off + 4);\n  const lo = readU32(data, off);\n\n  check(isSafe(hi, lo), 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readI48(data, off) {\n  const val = data[off + 4] + data[off + 5] * 0x100;\n\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000\n        + (val | (val & 0x8000) * 0x1fffe) * 0x100000000);\n}\n\nfunction readI40(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off++] * 0x1000000\n        + (data[off] | (data[off] & 0x80) * 0x1fffffe) * 0x100000000);\n}\n\nfunction readI32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + (data[off] << 24));\n}\n\nfunction readI24(data, off) {\n  const val = (data[off++]\n             + data[off++] * 0x100\n             + data[off] * 0x10000);\n\n  return val | (val & 0x800000) * 0x1fe;\n}\n\nfunction readI16(data, off) {\n  const val = data[off++] + data[off] * 0x100;\n  return val | (val & 0x8000) * 0x1fffe;\n}\n\nfunction readI8(data, off) {\n  const val = data[off];\n  return val | (val & 0x80) * 0x1fffffe;\n}\n\n/*\n * Read Signed BE\n */\n\nfunction readIBE(data, off, len) {\n  switch (len) {\n    case 8:\n      return readI64BE(data, off);\n    case 7:\n      return readI56BE(data, off);\n    case 6:\n      return readI48BE(data, off);\n    case 5:\n      return readI40BE(data, off);\n    case 4:\n      return readI32BE(data, off);\n    case 3:\n      return readI24BE(data, off);\n    case 2:\n      return readI16BE(data, off);\n    case 1:\n      return readI8(data, off);\n    default:\n      throw new EncodingError(off, 'Invalid read length');\n  }\n}\n\nfunction readI64BE(data, off) {\n  const hi = readI32BE(data, off);\n  const lo = readU32BE(data, off + 4);\n\n  check(isSafe(hi, lo), 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readI56BE(data, off) {\n  const hi = readI24BE(data, off);\n  const lo = readU32BE(data, off + 3);\n\n  check(isSafe(hi, lo), 'Number exceeds 2^53-1');\n\n  return hi * 0x100000000 + lo;\n}\n\nfunction readI48BE(data, off) {\n  const val = data[off++] * 0x100 + data[off++];\n\n  return ((val | (val & 0x8000) * 0x1fffe) * 0x100000000\n        + data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readI40BE(data, off) {\n  const val = data[off++];\n\n  return ((val | (val & 0x80) * 0x1fffffe) * 0x100000000\n        + data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readI32BE(data, off) {\n  return ((data[off++] << 24)\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction readI24BE(data, off) {\n  const val = (data[off++] * 0x10000\n             + data[off++] * 0x100\n             + data[off]);\n\n  return val | (val & 0x800000) * 0x1fe;\n}\n\nfunction readI16BE(data, off) {\n  const val = data[off++] * 0x100 + data[off];\n  return val | (val & 0x8000) * 0x1fffe;\n}\n\n/*\n * Read Float\n */\n\nfunction _readFloatBackwards(data, off) {\n  F328_ARRAY[3] = data[off++];\n  F328_ARRAY[2] = data[off++];\n  F328_ARRAY[1] = data[off++];\n  F328_ARRAY[0] = data[off];\n  return F32_ARRAY[0];\n}\n\nfunction _readFloatForwards(data, off) {\n  F328_ARRAY[0] = data[off++];\n  F328_ARRAY[1] = data[off++];\n  F328_ARRAY[2] = data[off++];\n  F328_ARRAY[3] = data[off];\n  return F32_ARRAY[0];\n}\n\nfunction _readDoubleBackwards(data, off) {\n  F648_ARRAY[7] = data[off++];\n  F648_ARRAY[6] = data[off++];\n  F648_ARRAY[5] = data[off++];\n  F648_ARRAY[4] = data[off++];\n  F648_ARRAY[3] = data[off++];\n  F648_ARRAY[2] = data[off++];\n  F648_ARRAY[1] = data[off++];\n  F648_ARRAY[0] = data[off];\n  return F64_ARRAY[0];\n}\n\nfunction _readDoubleForwards(data, off) {\n  F648_ARRAY[0] = data[off++];\n  F648_ARRAY[1] = data[off++];\n  F648_ARRAY[2] = data[off++];\n  F648_ARRAY[3] = data[off++];\n  F648_ARRAY[4] = data[off++];\n  F648_ARRAY[5] = data[off++];\n  F648_ARRAY[6] = data[off++];\n  F648_ARRAY[7] = data[off];\n  return F64_ARRAY[0];\n}\n\nconst readFloat = BIG_ENDIAN ? _readFloatBackwards : _readFloatForwards;\nconst readFloatBE = BIG_ENDIAN ? _readFloatForwards : _readFloatBackwards;\nconst readDouble = BIG_ENDIAN ? _readDoubleBackwards : _readDoubleForwards;\nconst readDoubleBE = BIG_ENDIAN ? _readDoubleForwards : _readDoubleBackwards;\n\n/*\n * Write Unsigned LE\n */\n\nfunction writeU(dst, num, off, len) {\n  switch (len) {\n    case 8:\n      return writeU64(dst, num, off);\n    case 7:\n      return writeU56(dst, num, off);\n    case 6:\n      return writeU48(dst, num, off);\n    case 5:\n      return writeU40(dst, num, off);\n    case 4:\n      return writeU32(dst, num, off);\n    case 3:\n      return writeU24(dst, num, off);\n    case 2:\n      return writeU16(dst, num, off);\n    case 1:\n      return writeU8(dst, num, off);\n    default:\n      throw new EncodingError(off, 'Invalid write length');\n  }\n}\n\nfunction writeU64(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n  return write64(dst, num, off, false);\n}\n\nfunction writeU56(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n  return write56(dst, num, off, false);\n}\n\nfunction writeU48(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  const hi = (num * HI) | 0;\n\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  dst[off++] = hi;\n  dst[off++] = hi >>> 8;\n\n  return off;\n}\n\nfunction writeU40(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  const hi = (num * HI) | 0;\n\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  dst[off++] = hi;\n\n  return off;\n}\n\nfunction writeU32(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n\n  return off;\n}\n\nfunction writeU24(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n\n  return off;\n}\n\nfunction writeU16(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off++] = num;\n  dst[off++] = num >>> 8;\n\n  return off;\n}\n\nfunction writeU8(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off] = num;\n\n  return off + 1;\n}\n\n/*\n * Write Unsigned BE\n */\n\nfunction writeUBE(dst, num, off, len) {\n  switch (len) {\n    case 8:\n      return writeU64BE(dst, num, off);\n    case 7:\n      return writeU56BE(dst, num, off);\n    case 6:\n      return writeU48BE(dst, num, off);\n    case 5:\n      return writeU40BE(dst, num, off);\n    case 4:\n      return writeU32BE(dst, num, off);\n    case 3:\n      return writeU24BE(dst, num, off);\n    case 2:\n      return writeU16BE(dst, num, off);\n    case 1:\n      return writeU8(dst, num, off);\n    default:\n      throw new EncodingError(off, 'Invalid write length');\n  }\n}\n\nfunction writeU64BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n  return write64(dst, num, off, true);\n}\n\nfunction writeU56BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n  return write56(dst, num, off, true);\n}\n\nfunction writeU48BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  const hi = (num * HI) | 0;\n\n  dst[off++] = hi >>> 8;\n  dst[off++] = hi;\n  dst[off + 3] = num;\n  num >>>= 8;\n  dst[off + 2] = num;\n  num >>>= 8;\n  dst[off + 1] = num;\n  num >>>= 8;\n  dst[off] = num;\n\n  return off + 4;\n}\n\nfunction writeU40BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  const hi = (num * HI) | 0;\n\n  dst[off++] = hi;\n  dst[off + 3] = num;\n  num >>>= 8;\n  dst[off + 2] = num;\n  num >>>= 8;\n  dst[off + 1] = num;\n  num >>>= 8;\n  dst[off] = num;\n\n  return off + 4;\n}\n\nfunction writeU32BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off + 3] = num;\n  num >>>= 8;\n  dst[off + 2] = num;\n  num >>>= 8;\n  dst[off + 1] = num;\n  num >>>= 8;\n  dst[off] = num;\n\n  return off + 4;\n}\n\nfunction writeU24BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off + 2] = num;\n  num >>>= 8;\n  dst[off + 1] = num;\n  num >>>= 8;\n  dst[off] = num;\n\n  return off + 3;\n}\n\nfunction writeU16BE(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  dst[off++] = num >>> 8;\n  dst[off++] = num;\n\n  return off;\n}\n\n/*\n * Write Signed LE\n */\n\nfunction writeI(dst, num, off, len) {\n  switch (len) {\n    case 8:\n      return writeU64(dst, num, off);\n    case 7:\n      return writeU56(dst, num, off);\n    case 6:\n      return writeU48(dst, num, off);\n    case 5:\n      return writeU40(dst, num, off);\n    case 4:\n      return writeU24(dst, num, off);\n    case 3:\n      return writeU32(dst, num, off);\n    case 2:\n      return writeU16(dst, num, off);\n    case 1:\n      return writeU8(dst, num, off);\n    default:\n      throw new EncodingError(off, 'Invalid write length');\n  }\n}\n\nfunction writeI64(dst, num, off) {\n  return writeU64(dst, num, off);\n}\n\nfunction writeI56(dst, num, off) {\n  return writeU56(dst, num, off);\n}\n\nfunction writeI48(dst, num, off) {\n  return writeU48(dst, num, off);\n}\n\nfunction writeI40(dst, num, off) {\n  return writeU40(dst, num, off);\n}\n\nfunction writeI32(dst, num, off) {\n  return writeU32(dst, num, off);\n}\n\nfunction writeI24(dst, num, off) {\n  return writeU24(dst, num, off);\n}\n\nfunction writeI16(dst, num, off) {\n  return writeU16(dst, num, off);\n}\n\nfunction writeI8(dst, num, off) {\n  return writeU8(dst, num, off);\n}\n\n/*\n * Write Signed BE\n */\n\nfunction writeIBE(dst, num, off, len) {\n  switch (len) {\n    case 8:\n      return writeU64BE(dst, num, off);\n    case 7:\n      return writeU56BE(dst, num, off);\n    case 6:\n      return writeU48BE(dst, num, off);\n    case 5:\n      return writeU40BE(dst, num, off);\n    case 4:\n      return writeU32BE(dst, num, off);\n    case 3:\n      return writeU24BE(dst, num, off);\n    case 2:\n      return writeU16BE(dst, num, off);\n    case 1:\n      return writeU8(dst, num, off);\n    default:\n      throw new EncodingError(off, 'Invalid write length');\n  }\n}\n\nfunction writeI64BE(dst, num, off) {\n  return writeU64BE(dst, num, off);\n}\n\nfunction writeI56BE(dst, num, off) {\n  return writeU56BE(dst, num, off);\n}\n\nfunction writeI48BE(dst, num, off) {\n  return writeU48BE(dst, num, off);\n}\n\nfunction writeI40BE(dst, num, off) {\n  return writeU40BE(dst, num, off);\n}\n\nfunction writeI32BE(dst, num, off) {\n  return writeU32BE(dst, num, off);\n}\n\nfunction writeI24BE(dst, num, off) {\n  return writeU24BE(dst, num, off);\n}\n\nfunction writeI16BE(dst, num, off) {\n  return writeU16BE(dst, num, off);\n}\n\nfunction _writeDoubleForwards(dst, num, off) {\n  enforce(isNumber(num), 'num', 'number');\n\n  F64_ARRAY[0] = num;\n\n  dst[off++] = F648_ARRAY[0];\n  dst[off++] = F648_ARRAY[1];\n  dst[off++] = F648_ARRAY[2];\n  dst[off++] = F648_ARRAY[3];\n  dst[off++] = F648_ARRAY[4];\n  dst[off++] = F648_ARRAY[5];\n  dst[off++] = F648_ARRAY[6];\n  dst[off++] = F648_ARRAY[7];\n\n  return off;\n}\n\nfunction _writeDoubleBackwards(dst, num, off) {\n  enforce(isNumber(num), 'num', 'number');\n\n  F64_ARRAY[0] = num;\n\n  dst[off++] = F648_ARRAY[7];\n  dst[off++] = F648_ARRAY[6];\n  dst[off++] = F648_ARRAY[5];\n  dst[off++] = F648_ARRAY[4];\n  dst[off++] = F648_ARRAY[3];\n  dst[off++] = F648_ARRAY[2];\n  dst[off++] = F648_ARRAY[1];\n  dst[off++] = F648_ARRAY[0];\n\n  return off;\n}\n\nfunction _writeFloatForwards(dst, num, off) {\n  enforce(isNumber(num), 'num', 'number');\n\n  F32_ARRAY[0] = num;\n\n  dst[off++] = F328_ARRAY[0];\n  dst[off++] = F328_ARRAY[1];\n  dst[off++] = F328_ARRAY[2];\n  dst[off++] = F328_ARRAY[3];\n\n  return off;\n}\n\nfunction _writeFloatBackwards(dst, num, off) {\n  enforce(isNumber(num), 'num', 'number');\n\n  F32_ARRAY[0] = num;\n\n  dst[off++] = F328_ARRAY[3];\n  dst[off++] = F328_ARRAY[2];\n  dst[off++] = F328_ARRAY[1];\n  dst[off++] = F328_ARRAY[0];\n\n  return off;\n}\n\nconst writeFloat = BIG_ENDIAN ? _writeFloatBackwards : _writeFloatForwards;\nconst writeFloatBE = BIG_ENDIAN ? _writeFloatForwards : _writeFloatBackwards;\nconst writeDouble = BIG_ENDIAN ? _writeDoubleBackwards : _writeDoubleForwards;\nconst writeDoubleBE = BIG_ENDIAN ? _writeDoubleForwards : _writeDoubleBackwards;\n\n/*\n * Varints\n */\n\nfunction readVarint(data, off) {\n  let value, size;\n\n  checkRead(off < data.length, off);\n\n  switch (data[off]) {\n    case 0xff:\n      size = 9;\n      checkRead(off + size <= data.length, off);\n      value = readU64(data, off + 1);\n      check(value > 0xffffffff, off, 'Non-canonical varint');\n      break;\n    case 0xfe:\n      size = 5;\n      checkRead(off + size <= data.length, off);\n      value = readU32(data, off + 1);\n      check(value > 0xffff, off, 'Non-canonical varint');\n      break;\n    case 0xfd:\n      size = 3;\n      checkRead(off + size <= data.length, off);\n      value = readU16(data, off + 1);\n      check(value >= 0xfd, off, 'Non-canonical varint');\n      break;\n    default:\n      size = 1;\n      value = data[off];\n      break;\n  }\n\n  return new Varint(size, value);\n}\n\nfunction writeVarint(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  if (num < 0xfd) {\n    dst[off++] = num;\n    return off;\n  }\n\n  if (num <= 0xffff) {\n    dst[off++] = 0xfd;\n    return writeU16(dst, num, off);\n  }\n\n  if (num <= 0xffffffff) {\n    dst[off++] = 0xfe;\n    return writeU32(dst, num, off);\n  }\n\n  dst[off++] = 0xff;\n\n  return writeU64(dst, num, off);\n}\n\nfunction sizeVarint(num) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  if (num < 0xfd)\n    return 1;\n\n  if (num <= 0xffff)\n    return 3;\n\n  if (num <= 0xffffffff)\n    return 5;\n\n  return 9;\n}\n\nfunction readVarint2(data, off) {\n  let num = 0;\n  let size = 0;\n\n  for (;;) {\n    checkRead(off < data.length, off);\n\n    const ch = data[off++];\n\n    size += 1;\n\n    // Number.MAX_SAFE_INTEGER >>> 7\n    check(num <= 0x3fffffffffff - (ch & 0x7f), off, 'Number exceeds 2^53-1');\n\n    // num = (num << 7) | (ch & 0x7f);\n    num = (num * 0x80) + (ch & 0x7f);\n\n    if ((ch & 0x80) === 0)\n      break;\n\n    check(num !== MAX_SAFE_INTEGER, off, 'Number exceeds 2^53-1');\n    num += 1;\n  }\n\n  return new Varint(size, num);\n}\n\nfunction writeVarint2(dst, num, off) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  const tmp = [];\n\n  let len = 0;\n\n  for (;;) {\n    tmp[len] = (num & 0x7f) | (len ? 0x80 : 0x00);\n\n    if (num <= 0x7f)\n      break;\n\n    // num = (num >>> 7) - 1;\n    num = ((num - (num % 0x80)) / 0x80) - 1;\n    len += 1;\n  }\n\n  checkRead(off + len + 1 <= dst.length, off);\n\n  do {\n    dst[off++] = tmp[len];\n  } while (len--);\n\n  return off;\n}\n\nfunction sizeVarint2(num) {\n  enforce(Number.isSafeInteger(num), 'num', 'integer');\n\n  let size = 0;\n\n  for (;;) {\n    size += 1;\n\n    if (num <= 0x7f)\n      break;\n\n    // num = (num >>> 7) - 1;\n    num = ((num - (num % 0x80)) / 0x80) - 1;\n  }\n\n  return size;\n}\n\n/*\n * Bytes\n */\n\nfunction sliceBytes(data, off, size) {\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  enforce((off >>> 0) === off, 'off', 'integer');\n  enforce((size >>> 0) === size, 'size', 'integer');\n\n  if (off + size > data.length)\n    throw new EncodingError(off, 'Out of bounds read');\n\n  return data.slice(off, off + size);\n}\n\nfunction readBytes(data, off, size) {\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  enforce((off >>> 0) === off, 'off', 'integer');\n  enforce((size >>> 0) === size, 'size', 'integer');\n\n  if (off + size > data.length)\n    throw new EncodingError(off, 'Out of bounds read');\n\n  const buf = Buffer.allocUnsafeSlow(size);\n\n  data.copy(buf, 0, off, off + size);\n\n  return buf;\n}\n\nfunction writeBytes(data, value, off) {\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  enforce(Buffer.isBuffer(value), 'value', 'buffer');\n  enforce((off >>> 0) === off, 'off', 'integer');\n\n  if (off + value.length > data.length)\n    throw new EncodingError(off, 'Out of bounds write');\n\n  return value.copy(data, off, 0, value.length);\n}\n\nfunction readString(data, off, size, enc) {\n  if (enc == null)\n    enc = 'binary';\n\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  enforce((off >>> 0) === off, 'off', 'integer');\n  enforce((size >>> 0) === size, 'size', 'integer');\n  enforce(typeof enc === 'string', 'enc', 'string');\n\n  if (off + size > data.length)\n    throw new EncodingError(off, 'Out of bounds read');\n\n  return data.toString(enc, off, off + size);\n}\n\nfunction writeString(data, str, off, enc) {\n  if (enc == null)\n    enc = 'binary';\n\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  enforce(typeof str === 'string', 'str', 'string');\n  enforce((off >>> 0) === off, 'off', 'integer');\n  enforce(typeof enc === 'string', 'enc', 'string');\n\n  if (str.length === 0)\n    return 0;\n\n  const size = Buffer.byteLength(str, enc);\n\n  if (off + size > data.length)\n    throw new EncodingError(off, 'Out of bounds write');\n\n  return data.write(str, off, enc);\n}\n\nfunction realloc(data, size) {\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n\n  const buf = Buffer.allocUnsafeSlow(size);\n\n  data.copy(buf, 0);\n\n  return buf;\n}\n\nfunction copy(data) {\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  return realloc(data, data.length);\n}\n\nfunction concat(a, b) {\n  enforce(Buffer.isBuffer(a), 'a', 'buffer');\n  enforce(Buffer.isBuffer(b), 'b', 'buffer');\n\n  const size = a.length + b.length;\n  const buf = Buffer.allocUnsafeSlow(size);\n\n  a.copy(buf, 0);\n  b.copy(buf, a.length);\n\n  return buf;\n}\n\n/*\n * Size Helpers\n */\n\nfunction sizeVarBytes(data) {\n  enforce(Buffer.isBuffer(data), 'data', 'buffer');\n  return sizeVarint(data.length) + data.length;\n}\n\nfunction sizeVarlen(len) {\n  return sizeVarint(len) + len;\n}\n\nfunction sizeVarString(str, enc) {\n  if (enc == null)\n    enc = 'binary';\n\n  enforce(typeof str === 'string', 'str', 'string');\n  enforce(typeof enc === 'string', 'enc', 'string');\n\n  if (str.length === 0)\n    return 1;\n\n  const len = Buffer.byteLength(str, enc);\n\n  return sizeVarint(len) + len;\n}\n\n/*\n * Helpers\n */\n\nfunction isSafe(hi, lo) {\n  if (hi < 0) {\n    hi = ~hi;\n    if (lo === 0)\n      hi += 1;\n  }\n\n  return (hi & 0xffe00000) === 0;\n}\n\nfunction write64(dst, num, off, be) {\n  let neg = false;\n\n  if (num < 0) {\n    num = -num;\n    neg = true;\n  }\n\n  let hi = (num * HI) | 0;\n  let lo = num | 0;\n\n  if (neg) {\n    if (lo === 0) {\n      hi = (~hi + 1) | 0;\n    } else {\n      hi = ~hi;\n      lo = ~lo + 1;\n    }\n  }\n\n  if (be) {\n    off = writeI32BE(dst, hi, off);\n    off = writeI32BE(dst, lo, off);\n  } else {\n    off = writeI32(dst, lo, off);\n    off = writeI32(dst, hi, off);\n  }\n\n  return off;\n}\n\nfunction write56(dst, num, off, be) {\n  let neg = false;\n\n  if (num < 0) {\n    num = -num;\n    neg = true;\n  }\n\n  let hi = (num * HI) | 0;\n  let lo = num | 0;\n\n  if (neg) {\n    if (lo === 0) {\n      hi = (~hi + 1) | 0;\n    } else {\n      hi = ~hi;\n      lo = ~lo + 1;\n    }\n  }\n\n  if (be) {\n    off = writeI24BE(dst, hi, off);\n    off = writeI32BE(dst, lo, off);\n  } else {\n    off = writeI32(dst, lo, off);\n    off = writeI24(dst, hi, off);\n  }\n\n  return off;\n}\n\nclass Varint {\n  constructor(size, value) {\n    this.size = size;\n    this.value = value;\n  }\n}\n\nfunction isNumber(num) {\n  return typeof num === 'number' && isFinite(num);\n}\n\nfunction checkRead(value, offset) {\n  if (!value)\n    throw new EncodingError(offset, 'Out of bounds read', checkRead);\n}\n\nfunction check(value, offset, reason) {\n  if (!value)\n    throw new EncodingError(offset, reason, check);\n}\n\n/*\n * Expose\n */\n\nexports.readU = readU;\nexports.readU64 = readU64;\nexports.readU56 = readU56;\nexports.readU48 = readU48;\nexports.readU40 = readU40;\nexports.readU32 = readU32;\nexports.readU24 = readU24;\nexports.readU16 = readU16;\nexports.readU8 = readU8;\n\nexports.readUBE = readUBE;\nexports.readU64BE = readU64BE;\nexports.readU56BE = readU56BE;\nexports.readU48BE = readU48BE;\nexports.readU40BE = readU40BE;\nexports.readU32BE = readU32BE;\nexports.readU24BE = readU24BE;\nexports.readU16BE = readU16BE;\n\nexports.readI = readI;\nexports.readI64 = readI64;\nexports.readI56 = readI56;\nexports.readI48 = readI48;\nexports.readI40 = readI40;\nexports.readI32 = readI32;\nexports.readI24 = readI24;\nexports.readI16 = readI16;\nexports.readI8 = readI8;\n\nexports.readIBE = readIBE;\nexports.readI64BE = readI64BE;\nexports.readI56BE = readI56BE;\nexports.readI48BE = readI48BE;\nexports.readI40BE = readI40BE;\nexports.readI32BE = readI32BE;\nexports.readI24BE = readI24BE;\nexports.readI16BE = readI16BE;\n\nexports.readFloat = readFloat;\nexports.readFloatBE = readFloatBE;\nexports.readDouble = readDouble;\nexports.readDoubleBE = readDoubleBE;\n\nexports.writeU = writeU;\nexports.writeU64 = writeU64;\nexports.writeU56 = writeU56;\nexports.writeU48 = writeU48;\nexports.writeU40 = writeU40;\nexports.writeU32 = writeU32;\nexports.writeU24 = writeU24;\nexports.writeU16 = writeU16;\nexports.writeU8 = writeU8;\n\nexports.writeUBE = writeUBE;\nexports.writeU64BE = writeU64BE;\nexports.writeU56BE = writeU56BE;\nexports.writeU48BE = writeU48BE;\nexports.writeU40BE = writeU40BE;\nexports.writeU32BE = writeU32BE;\nexports.writeU24BE = writeU24BE;\nexports.writeU16BE = writeU16BE;\n\nexports.writeI = writeI;\nexports.writeI64 = writeI64;\nexports.writeI56 = writeI56;\nexports.writeI48 = writeI48;\nexports.writeI40 = writeI40;\nexports.writeI32 = writeI32;\nexports.writeI24 = writeI24;\nexports.writeI16 = writeI16;\nexports.writeI8 = writeI8;\n\nexports.writeIBE = writeIBE;\nexports.writeI64BE = writeI64BE;\nexports.writeI56BE = writeI56BE;\nexports.writeI48BE = writeI48BE;\nexports.writeI40BE = writeI40BE;\nexports.writeI32BE = writeI32BE;\nexports.writeI24BE = writeI24BE;\nexports.writeI16BE = writeI16BE;\n\nexports.writeFloat = writeFloat;\nexports.writeFloatBE = writeFloatBE;\nexports.writeDouble = writeDouble;\nexports.writeDoubleBE = writeDoubleBE;\n\nexports.readVarint = readVarint;\nexports.writeVarint = writeVarint;\nexports.sizeVarint = sizeVarint;\nexports.readVarint2 = readVarint2;\nexports.writeVarint2 = writeVarint2;\nexports.sizeVarint2 = sizeVarint2;\n\nexports.sliceBytes = sliceBytes;\nexports.readBytes = readBytes;\nexports.writeBytes = writeBytes;\nexports.readString = readString;\nexports.writeString = writeString;\n\nexports.realloc = realloc;\nexports.copy = copy;\nexports.concat = concat;\n\nexports.sizeVarBytes = sizeVarBytes;\nexports.sizeVarlen = sizeVarlen;\nexports.sizeVarString = sizeVarString;\n","/*!\n * reader.js - buffer reader for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst enforce = require('./enforce');\nconst encoding = require('./encoding');\nconst EncodingError = require('./error');\n\n/*\n * Constants\n */\n\nconst EMPTY = Buffer.alloc(0);\n\n/**\n * Buffer Reader\n */\n\nclass BufferReader {\n  /**\n   * Create a buffer reader.\n   * @constructor\n   * @param {Buffer} data\n   * @param {Boolean?} zeroCopy - Do not reallocate buffers when\n   * slicing. Note that this can lead to memory leaks if not used\n   * carefully.\n   */\n\n  constructor(data, zeroCopy = false) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce(typeof zeroCopy === 'boolean', 'zeroCopy', 'boolean');\n\n    this.data = data;\n    this.offset = 0;\n    this.zeroCopy = zeroCopy;\n    this.stack = [];\n  }\n\n  /**\n   * Assertion.\n   * @param {Number} size\n   */\n\n  check(size) {\n    if (this.offset + size > this.data.length)\n      throw new EncodingError(this.offset, 'Out of bounds read', this.check);\n  }\n\n  /**\n   * Get total size of passed-in Buffer.\n   * @returns {Buffer}\n   */\n\n  getSize() {\n    return this.data.length;\n  }\n\n  /**\n   * Calculate number of bytes left to read.\n   * @returns {Number}\n   */\n\n  left() {\n    this.check(0);\n    return this.data.length - this.offset;\n  }\n\n  /**\n   * Seek to a position to read from by offset.\n   * @param {Number} off - Offset (positive or negative).\n   */\n\n  seek(off) {\n    enforce(Number.isSafeInteger(off), 'off', 'integer');\n\n    if (this.offset + off < 0)\n      throw new EncodingError(this.offset, 'Out of bounds read');\n\n    this.check(off);\n    this.offset += off;\n\n    return this;\n  }\n\n  /**\n   * Mark the current starting position.\n   */\n\n  start() {\n    this.stack.push(this.offset);\n    return this.offset;\n  }\n\n  /**\n   * Stop reading. Pop the start position off the stack\n   * and calculate the size of the data read.\n   * @returns {Number} Size.\n   * @throws on empty stack.\n   */\n\n  end() {\n    if (this.stack.length === 0)\n      throw new Error('Cannot end without a stack item.');\n\n    const start = this.stack.pop();\n\n    return this.offset - start;\n  }\n\n  /**\n   * Stop reading. Pop the start position off the stack\n   * and return the data read.\n   * @param {Bolean?} zeroCopy - Do a fast buffer\n   * slice instead of allocating a new buffer (warning:\n   * may cause memory leaks if not used with care).\n   * @returns {Buffer} Data read.\n   * @throws on empty stack.\n   */\n\n  endData(zeroCopy = false) {\n    enforce(typeof zeroCopy === 'boolean', 'zeroCopy', 'boolean');\n\n    if (this.stack.length === 0)\n      throw new Error('Cannot end without a stack item.');\n\n    const start = this.stack.pop();\n    const end = this.offset;\n    const size = end - start;\n    const data = this.data;\n\n    if (size === data.length)\n      return data;\n\n    if (this.zeroCopy || zeroCopy)\n      return data.slice(start, end);\n\n    const ret = Buffer.allocUnsafeSlow(size);\n\n    data.copy(ret, 0, start, end);\n\n    return ret;\n  }\n\n  /**\n   * Destroy the reader. Remove references to the data.\n   */\n\n  destroy() {\n    this.data = EMPTY;\n    this.offset = 0;\n    this.stack.length = 0;\n    return this;\n  }\n\n  /**\n   * Read uint8.\n   * @returns {Number}\n   */\n\n  readU8() {\n    this.check(1);\n\n    const ret = this.data[this.offset];\n\n    this.offset += 1;\n\n    return ret;\n  }\n\n  /**\n   * Read uint16le.\n   * @returns {Number}\n   */\n\n  readU16() {\n    this.check(2);\n\n    const ret = encoding.readU16(this.data, this.offset);\n\n    this.offset += 2;\n\n    return ret;\n  }\n\n  /**\n   * Read uint16be.\n   * @returns {Number}\n   */\n\n  readU16BE() {\n    this.check(2);\n\n    const ret = encoding.readU16BE(this.data, this.offset);\n\n    this.offset += 2;\n\n    return ret;\n  }\n\n  /**\n   * Read uint24le.\n   * @returns {Number}\n   */\n\n  readU24() {\n    this.check(3);\n\n    const ret = encoding.readU24(this.data, this.offset);\n\n    this.offset += 3;\n\n    return ret;\n  }\n\n  /**\n   * Read uint24be.\n   * @returns {Number}\n   */\n\n  readU24BE() {\n    this.check(3);\n\n    const ret = encoding.readU24BE(this.data, this.offset);\n\n    this.offset += 3;\n\n    return ret;\n  }\n\n  /**\n   * Read uint32le.\n   * @returns {Number}\n   */\n\n  readU32() {\n    this.check(4);\n\n    const ret = encoding.readU32(this.data, this.offset);\n\n    this.offset += 4;\n\n    return ret;\n  }\n\n  /**\n   * Read uint32be.\n   * @returns {Number}\n   */\n\n  readU32BE() {\n    this.check(4);\n\n    const ret = encoding.readU32BE(this.data, this.offset);\n\n    this.offset += 4;\n\n    return ret;\n  }\n\n  /**\n   * Read uint40le.\n   * @returns {Number}\n   */\n\n  readU40() {\n    this.check(5);\n\n    const ret = encoding.readU40(this.data, this.offset);\n\n    this.offset += 5;\n\n    return ret;\n  }\n\n  /**\n   * Read uint40be.\n   * @returns {Number}\n   */\n\n  readU40BE() {\n    this.check(5);\n\n    const ret = encoding.readU40BE(this.data, this.offset);\n\n    this.offset += 5;\n\n    return ret;\n  }\n\n  /**\n   * Read uint48le.\n   * @returns {Number}\n   */\n\n  readU48() {\n    this.check(6);\n\n    const ret = encoding.readU48(this.data, this.offset);\n\n    this.offset += 6;\n\n    return ret;\n  }\n\n  /**\n   * Read uint48be.\n   * @returns {Number}\n   */\n\n  readU48BE() {\n    this.check(6);\n\n    const ret = encoding.readU48BE(this.data, this.offset);\n\n    this.offset += 6;\n\n    return ret;\n  }\n\n  /**\n   * Read uint56le.\n   * @returns {Number}\n   */\n\n  readU56() {\n    this.check(7);\n\n    const ret = encoding.readU56(this.data, this.offset);\n\n    this.offset += 7;\n\n    return ret;\n  }\n\n  /**\n   * Read uint56be.\n   * @returns {Number}\n   */\n\n  readU56BE() {\n    this.check(7);\n\n    const ret = encoding.readU56BE(this.data, this.offset);\n\n    this.offset += 7;\n\n    return ret;\n  }\n\n  /**\n   * Read uint64le as a js number.\n   * @returns {Number}\n   * @throws on num > MAX_SAFE_INTEGER\n   */\n\n  readU64() {\n    this.check(8);\n\n    const ret = encoding.readU64(this.data, this.offset);\n\n    this.offset += 8;\n\n    return ret;\n  }\n\n  /**\n   * Read uint64be as a js number.\n   * @returns {Number}\n   * @throws on num > MAX_SAFE_INTEGER\n   */\n\n  readU64BE() {\n    this.check(8);\n\n    const ret = encoding.readU64BE(this.data, this.offset);\n\n    this.offset += 8;\n\n    return ret;\n  }\n\n  /**\n   * Read int8.\n   * @returns {Number}\n   */\n\n  readI8() {\n    this.check(1);\n\n    const ret = encoding.readI8(this.data, this.offset);\n\n    this.offset += 1;\n\n    return ret;\n  }\n\n  /**\n   * Read int16le.\n   * @returns {Number}\n   */\n\n  readI16() {\n    this.check(2);\n\n    const ret = encoding.readI16(this.data, this.offset);\n\n    this.offset += 2;\n\n    return ret;\n  }\n\n  /**\n   * Read int16be.\n   * @returns {Number}\n   */\n\n  readI16BE() {\n    this.check(2);\n\n    const ret = encoding.readI16BE(this.data, this.offset);\n\n    this.offset += 2;\n\n    return ret;\n  }\n\n  /**\n   * Read int24le.\n   * @returns {Number}\n   */\n\n  readI24() {\n    this.check(3);\n\n    const ret = encoding.readI24(this.data, this.offset);\n\n    this.offset += 3;\n\n    return ret;\n  }\n\n  /**\n   * Read int24be.\n   * @returns {Number}\n   */\n\n  readI24BE() {\n    this.check(3);\n\n    const ret = encoding.readI24BE(this.data, this.offset);\n\n    this.offset += 3;\n\n    return ret;\n  }\n\n  /**\n   * Read int32le.\n   * @returns {Number}\n   */\n\n  readI32() {\n    this.check(4);\n\n    const ret = encoding.readI32(this.data, this.offset);\n\n    this.offset += 4;\n\n    return ret;\n  }\n\n  /**\n   * Read int32be.\n   * @returns {Number}\n   */\n\n  readI32BE() {\n    this.check(4);\n\n    const ret = encoding.readI32BE(this.data, this.offset);\n\n    this.offset += 4;\n\n    return ret;\n  }\n\n  /**\n   * Read int40le.\n   * @returns {Number}\n   */\n\n  readI40() {\n    this.check(5);\n\n    const ret = encoding.readI40(this.data, this.offset);\n\n    this.offset += 5;\n\n    return ret;\n  }\n\n  /**\n   * Read int40be.\n   * @returns {Number}\n   */\n\n  readI40BE() {\n    this.check(5);\n\n    const ret = encoding.readI40BE(this.data, this.offset);\n\n    this.offset += 5;\n\n    return ret;\n  }\n\n  /**\n   * Read int48le.\n   * @returns {Number}\n   */\n\n  readI48() {\n    this.check(6);\n\n    const ret = encoding.readI48(this.data, this.offset);\n\n    this.offset += 6;\n\n    return ret;\n  }\n\n  /**\n   * Read int48be.\n   * @returns {Number}\n   */\n\n  readI48BE() {\n    this.check(6);\n\n    const ret = encoding.readI48BE(this.data, this.offset);\n\n    this.offset += 6;\n\n    return ret;\n  }\n\n  /**\n   * Read int56le.\n   * @returns {Number}\n   */\n\n  readI56() {\n    this.check(7);\n\n    const ret = encoding.readI56(this.data, this.offset);\n\n    this.offset += 7;\n\n    return ret;\n  }\n\n  /**\n   * Read int56be.\n   * @returns {Number}\n   */\n\n  readI56BE() {\n    this.check(7);\n\n    const ret = encoding.readI56BE(this.data, this.offset);\n\n    this.offset += 7;\n\n    return ret;\n  }\n\n  /**\n   * Read int64le as a js number.\n   * @returns {Number}\n   * @throws on num > MAX_SAFE_INTEGER\n   */\n\n  readI64() {\n    this.check(8);\n\n    const ret = encoding.readI64(this.data, this.offset);\n\n    this.offset += 8;\n\n    return ret;\n  }\n\n  /**\n   * Read int64be as a js number.\n   * @returns {Number}\n   * @throws on num > MAX_SAFE_INTEGER\n   */\n\n  readI64BE() {\n    this.check(8);\n\n    const ret = encoding.readI64BE(this.data, this.offset);\n\n    this.offset += 8;\n\n    return ret;\n  }\n\n  /**\n   * Read float le.\n   * @returns {Number}\n   */\n\n  readFloat() {\n    this.check(4);\n\n    const ret = encoding.readFloat(this.data, this.offset);\n\n    this.offset += 4;\n\n    return ret;\n  }\n\n  /**\n   * Read float be.\n   * @returns {Number}\n   */\n\n  readFloatBE() {\n    this.check(4);\n\n    const ret = encoding.readFloatBE(this.data, this.offset);\n\n    this.offset += 4;\n\n    return ret;\n  }\n\n  /**\n   * Read double float le.\n   * @returns {Number}\n   */\n\n  readDouble() {\n    this.check(8);\n\n    const ret = encoding.readDouble(this.data, this.offset);\n\n    this.offset += 8;\n\n    return ret;\n  }\n\n  /**\n   * Read double float be.\n   * @returns {Number}\n   */\n\n  readDoubleBE() {\n    this.check(8);\n\n    const ret = encoding.readDoubleBE(this.data, this.offset);\n\n    this.offset += 8;\n\n    return ret;\n  }\n\n  /**\n   * Read a varint.\n   * @returns {Number}\n   */\n\n  readVarint() {\n    const {size, value} = encoding.readVarint(this.data, this.offset);\n\n    this.offset += size;\n\n    return value;\n  }\n\n  /**\n   * Read a varint (type 2).\n   * @returns {Number}\n   */\n\n  readVarint2() {\n    const {size, value} = encoding.readVarint2(this.data, this.offset);\n\n    this.offset += size;\n\n    return value;\n  }\n\n  /**\n   * Read N bytes (will do a fast slice if zero copy).\n   * @param {Number} size\n   * @param {Bolean?} zeroCopy - Do a fast buffer\n   * slice instead of allocating a new buffer (warning:\n   * may cause memory leaks if not used with care).\n   * @returns {Buffer}\n   */\n\n  readBytes(size, zeroCopy = false) {\n    enforce((size >>> 0) === size, 'size', 'integer');\n    enforce(typeof zeroCopy === 'boolean', 'zeroCopy', 'boolean');\n\n    this.check(size);\n\n    let ret;\n\n    if (this.zeroCopy || zeroCopy) {\n      ret = this.data.slice(this.offset, this.offset + size);\n    } else {\n      ret = Buffer.allocUnsafeSlow(size);\n      this.data.copy(ret, 0, this.offset, this.offset + size);\n    }\n\n    this.offset += size;\n\n    return ret;\n  }\n\n  /**\n   * Read a varint number of bytes (will do a fast slice if zero copy).\n   * @param {Bolean?} zeroCopy - Do a fast buffer\n   * slice instead of allocating a new buffer (warning:\n   * may cause memory leaks if not used with care).\n   * @returns {Buffer}\n   */\n\n  readVarBytes(zeroCopy = false) {\n    return this.readBytes(this.readVarint(), zeroCopy);\n  }\n\n  /**\n   * Slice N bytes and create a child reader.\n   * @param {Number} size\n   * @returns {BufferReader}\n   */\n\n  readChild(size) {\n    enforce((size >>> 0) === size, 'size', 'integer');\n\n    this.check(size);\n\n    const data = this.data.slice(0, this.offset + size);\n    const br = new this.constructor(data);\n\n    br.offset = this.offset;\n\n    this.offset += size;\n\n    return br;\n  }\n\n  /**\n   * Read a string.\n   * @param {Number} size\n   * @param {String} enc - Any buffer-supported encoding.\n   * @returns {String}\n   */\n\n  readString(size, enc) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce((size >>> 0) === size, 'size', 'integer');\n    enforce(typeof enc === 'string', 'enc', 'string');\n\n    this.check(size);\n\n    const ret = this.data.toString(enc, this.offset, this.offset + size);\n\n    this.offset += size;\n\n    return ret;\n  }\n\n  /**\n   * Read a 32-byte hash.\n   * @param {String} enc - `\"hex\"` or `null`.\n   * @returns {Hash|Buffer}\n   */\n\n  readHash(enc) {\n    if (enc)\n      return this.readString(32, enc);\n    return this.readBytes(32);\n  }\n\n  /**\n   * Read string of a varint length.\n   * @param {String} enc - Any buffer-supported encoding.\n   * @param {Number?} limit - Size limit.\n   * @returns {String}\n   */\n\n  readVarString(enc, limit = 0) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce(typeof enc === 'string', 'enc', 'string');\n    enforce((limit >>> 0) === limit, 'limit', 'integer');\n\n    const size = this.readVarint();\n\n    if (limit !== 0 && size > limit)\n      throw new EncodingError(this.offset, 'String exceeds limit');\n\n    return this.readString(size, enc);\n  }\n\n  /**\n   * Read a null-terminated string.\n   * @param {String} enc - Any buffer-supported encoding.\n   * @returns {String}\n   */\n\n  readNullString(enc) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce(typeof enc === 'string', 'enc', 'string');\n\n    let i = this.offset;\n\n    for (; i < this.data.length; i++) {\n      if (this.data[i] === 0)\n        break;\n    }\n\n    if (i === this.data.length)\n      throw new EncodingError(this.offset, 'No NUL terminator');\n\n    const ret = this.readString(i - this.offset, enc);\n\n    this.offset = i + 1;\n\n    return ret;\n  }\n\n  /**\n   * Create a checksum from the last start position.\n   * @param {Function} hash\n   * @returns {Number} Checksum.\n   */\n\n  createChecksum(hash) {\n    if (!hash || typeof hash.digest !== 'function')\n      enforce(typeof hash === 'function', 'hash', 'function');\n\n    let start = 0;\n\n    if (this.stack.length > 0)\n      start = this.stack[this.stack.length - 1];\n\n    const data = this.data.slice(start, this.offset);\n    const raw = hash.digest ? hash.digest(data) : hash(data);\n\n    return encoding.readU32(raw, 0);\n  }\n\n  /**\n   * Verify a 4-byte checksum against a calculated checksum.\n   * @param {Function} hash\n   * @returns {Number} checksum\n   * @throws on bad checksum\n   */\n\n  verifyChecksum(hash) {\n    const checksum = this.createChecksum(hash);\n    const expect = this.readU32();\n\n    if (checksum !== expect)\n      throw new EncodingError(this.offset, 'Checksum mismatch');\n\n    return checksum;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = BufferReader;\n","/*!\n * writer.js - buffer writer for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst enforce = require('./enforce');\nconst encoding = require('./encoding');\nconst EncodingError = require('./error');\n\n/*\n * Constants\n */\n\nconst SEEK = 0;\nconst U8 = 1;\nconst U16 = 2;\nconst U16BE = 3;\nconst U24 = 4;\nconst U24BE = 5;\nconst U32 = 6;\nconst U32BE = 7;\nconst U40 = 8;\nconst U40BE = 9;\nconst U48 = 10;\nconst U48BE = 11;\nconst U56 = 12;\nconst U56BE = 13;\nconst U64 = 14;\nconst U64BE = 15;\nconst I8 = 16;\nconst I16 = 17;\nconst I16BE = 18;\nconst I24 = 19;\nconst I24BE = 20;\nconst I32 = 21;\nconst I32BE = 22;\nconst I40 = 23;\nconst I40BE = 24;\nconst I48 = 25;\nconst I48BE = 26;\nconst I56 = 27;\nconst I56BE = 28;\nconst I64 = 29;\nconst I64BE = 30;\nconst FL = 31;\nconst FLBE = 32;\nconst DBL = 33;\nconst DBLBE = 34;\nconst VARINT = 35;\nconst VARINT2 = 36;\nconst BYTES = 37;\nconst STR = 38;\nconst CHECKSUM = 39;\nconst FILL = 40;\n\n/**\n * Buffer Writer\n */\n\nclass BufferWriter {\n  /**\n   * Create a buffer writer.\n   * @constructor\n   */\n\n  constructor() {\n    this.ops = [];\n    this.offset = 0;\n  }\n\n  /**\n   * Allocate and render the final buffer.\n   * @returns {Buffer} Rendered buffer.\n   */\n\n  render() {\n    const data = Buffer.allocUnsafeSlow(this.offset);\n\n    let off = 0;\n\n    for (const op of this.ops) {\n      switch (op.type) {\n        case SEEK:\n          off += op.value;\n          break;\n        case U8:\n          off = encoding.writeU8(data, op.value, off);\n          break;\n        case U16:\n          off = encoding.writeU16(data, op.value, off);\n          break;\n        case U16BE:\n          off = encoding.writeU16BE(data, op.value, off);\n          break;\n        case U24:\n          off = encoding.writeU24(data, op.value, off);\n          break;\n        case U24BE:\n          off = encoding.writeU24BE(data, op.value, off);\n          break;\n        case U32:\n          off = encoding.writeU32(data, op.value, off);\n          break;\n        case U32BE:\n          off = encoding.writeU32BE(data, op.value, off);\n          break;\n        case U40:\n          off = encoding.writeU40(data, op.value, off);\n          break;\n        case U40BE:\n          off = encoding.writeU40BE(data, op.value, off);\n          break;\n        case U48:\n          off = encoding.writeU48(data, op.value, off);\n          break;\n        case U48BE:\n          off = encoding.writeU48BE(data, op.value, off);\n          break;\n        case U56:\n          off = encoding.writeU56(data, op.value, off);\n          break;\n        case U56BE:\n          off = encoding.writeU56BE(data, op.value, off);\n          break;\n        case U64:\n          off = encoding.writeU64(data, op.value, off);\n          break;\n        case U64BE:\n          off = encoding.writeU64BE(data, op.value, off);\n          break;\n        case I8:\n          off = encoding.writeI8(data, op.value, off);\n          break;\n        case I16:\n          off = encoding.writeI16(data, op.value, off);\n          break;\n        case I16BE:\n          off = encoding.writeI16BE(data, op.value, off);\n          break;\n        case I24:\n          off = encoding.writeI24(data, op.value, off);\n          break;\n        case I24BE:\n          off = encoding.writeI24BE(data, op.value, off);\n          break;\n        case I32:\n          off = encoding.writeI32(data, op.value, off);\n          break;\n        case I32BE:\n          off = encoding.writeI32BE(data, op.value, off);\n          break;\n        case I40:\n          off = encoding.writeI40(data, op.value, off);\n          break;\n        case I40BE:\n          off = encoding.writeI40BE(data, op.value, off);\n          break;\n        case I48:\n          off = encoding.writeI48(data, op.value, off);\n          break;\n        case I48BE:\n          off = encoding.writeI48BE(data, op.value, off);\n          break;\n        case I56:\n          off = encoding.writeI56(data, op.value, off);\n          break;\n        case I56BE:\n          off = encoding.writeI56BE(data, op.value, off);\n          break;\n        case I64:\n          off = encoding.writeI64(data, op.value, off);\n          break;\n        case I64BE:\n          off = encoding.writeI64BE(data, op.value, off);\n          break;\n        case FL:\n          off = encoding.writeFloat(data, op.value, off);\n          break;\n        case FLBE:\n          off = encoding.writeFloatBE(data, op.value, off);\n          break;\n        case DBL:\n          off = encoding.writeDouble(data, op.value, off);\n          break;\n        case DBLBE:\n          off = encoding.writeDoubleBE(data, op.value, off);\n          break;\n        case VARINT:\n          off = encoding.writeVarint(data, op.value, off);\n          break;\n        case VARINT2:\n          off = encoding.writeVarint2(data, op.value, off);\n          break;\n        case BYTES:\n          off += op.data.copy(data, off);\n          break;\n        case STR:\n          off += data.write(op.value, off, op.enc);\n          break;\n        case CHECKSUM:\n          off += op.func(data.slice(0, off)).copy(data, off, 0, 4);\n          break;\n        case FILL:\n          data.fill(op.value, off, off + op.size);\n          off += op.size;\n          break;\n        default:\n          throw new Error('Invalid type.');\n      }\n    }\n\n    if (off !== data.length)\n      throw new EncodingError(off, 'Out of bounds write');\n\n    this.destroy();\n\n    return data;\n  }\n\n  /**\n   * Get size of data written so far.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return this.offset;\n  }\n\n  /**\n   * Seek to relative offset.\n   * @param {Number} offset\n   */\n\n  seek(off) {\n    enforce(Number.isSafeInteger(off), 'off', 'integer');\n\n    if (this.offset + off < 0)\n      throw new EncodingError(this.offset, 'Out of bounds write');\n\n    this.offset += off;\n    this.ops.push(new NumberOp(SEEK, off));\n\n    return this;\n  }\n\n  /**\n   * Destroy the buffer writer. Remove references to `ops`.\n   */\n\n  destroy() {\n    this.ops.length = 0;\n    this.offset = 0;\n    return this;\n  }\n\n  /**\n   * Write uint8.\n   * @param {Number} value\n   */\n\n  writeU8(value) {\n    this.offset += 1;\n    this.ops.push(new NumberOp(U8, value));\n    return this;\n  }\n\n  /**\n   * Write uint16le.\n   * @param {Number} value\n   */\n\n  writeU16(value) {\n    this.offset += 2;\n    this.ops.push(new NumberOp(U16, value));\n    return this;\n  }\n\n  /**\n   * Write uint16be.\n   * @param {Number} value\n   */\n\n  writeU16BE(value) {\n    this.offset += 2;\n    this.ops.push(new NumberOp(U16BE, value));\n    return this;\n  }\n\n  /**\n   * Write uint24le.\n   * @param {Number} value\n   */\n\n  writeU24(value) {\n    this.offset += 3;\n    this.ops.push(new NumberOp(U24, value));\n    return this;\n  }\n\n  /**\n   * Write uint24be.\n   * @param {Number} value\n   */\n\n  writeU24BE(value) {\n    this.offset += 3;\n    this.ops.push(new NumberOp(U24BE, value));\n    return this;\n  }\n\n  /**\n   * Write uint32le.\n   * @param {Number} value\n   */\n\n  writeU32(value) {\n    this.offset += 4;\n    this.ops.push(new NumberOp(U32, value));\n    return this;\n  }\n\n  /**\n   * Write uint32be.\n   * @param {Number} value\n   */\n\n  writeU32BE(value) {\n    this.offset += 4;\n    this.ops.push(new NumberOp(U32BE, value));\n    return this;\n  }\n\n  /**\n   * Write uint40le.\n   * @param {Number} value\n   */\n\n  writeU40(value) {\n    this.offset += 5;\n    this.ops.push(new NumberOp(U40, value));\n    return this;\n  }\n\n  /**\n   * Write uint40be.\n   * @param {Number} value\n   */\n\n  writeU40BE(value) {\n    this.offset += 5;\n    this.ops.push(new NumberOp(U40BE, value));\n    return this;\n  }\n\n  /**\n   * Write uint48le.\n   * @param {Number} value\n   */\n\n  writeU48(value) {\n    this.offset += 6;\n    this.ops.push(new NumberOp(U48, value));\n    return this;\n  }\n\n  /**\n   * Write uint48be.\n   * @param {Number} value\n   */\n\n  writeU48BE(value) {\n    this.offset += 6;\n    this.ops.push(new NumberOp(U48BE, value));\n    return this;\n  }\n\n  /**\n   * Write uint56le.\n   * @param {Number} value\n   */\n\n  writeU56(value) {\n    this.offset += 7;\n    this.ops.push(new NumberOp(U56, value));\n    return this;\n  }\n\n  /**\n   * Write uint56be.\n   * @param {Number} value\n   */\n\n  writeU56BE(value) {\n    this.offset += 7;\n    this.ops.push(new NumberOp(U56BE, value));\n    return this;\n  }\n\n  /**\n   * Write uint64le.\n   * @param {Number} value\n   */\n\n  writeU64(value) {\n    this.offset += 8;\n    this.ops.push(new NumberOp(U64, value));\n    return this;\n  }\n\n  /**\n   * Write uint64be.\n   * @param {Number} value\n   */\n\n  writeU64BE(value) {\n    this.offset += 8;\n    this.ops.push(new NumberOp(U64BE, value));\n    return this;\n  }\n\n  /**\n   * Write int8.\n   * @param {Number} value\n   */\n\n  writeI8(value) {\n    this.offset += 1;\n    this.ops.push(new NumberOp(I8, value));\n    return this;\n  }\n\n  /**\n   * Write int16le.\n   * @param {Number} value\n   */\n\n  writeI16(value) {\n    this.offset += 2;\n    this.ops.push(new NumberOp(I16, value));\n    return this;\n  }\n\n  /**\n   * Write int16be.\n   * @param {Number} value\n   */\n\n  writeI16BE(value) {\n    this.offset += 2;\n    this.ops.push(new NumberOp(I16BE, value));\n    return this;\n  }\n\n  /**\n   * Write int24le.\n   * @param {Number} value\n   */\n\n  writeI24(value) {\n    this.offset += 3;\n    this.ops.push(new NumberOp(I24, value));\n    return this;\n  }\n\n  /**\n   * Write int24be.\n   * @param {Number} value\n   */\n\n  writeI24BE(value) {\n    this.offset += 3;\n    this.ops.push(new NumberOp(I24BE, value));\n    return this;\n  }\n\n  /**\n   * Write int32le.\n   * @param {Number} value\n   */\n\n  writeI32(value) {\n    this.offset += 4;\n    this.ops.push(new NumberOp(I32, value));\n    return this;\n  }\n\n  /**\n   * Write int32be.\n   * @param {Number} value\n   */\n\n  writeI32BE(value) {\n    this.offset += 4;\n    this.ops.push(new NumberOp(I32BE, value));\n    return this;\n  }\n\n  /**\n   * Write int40le.\n   * @param {Number} value\n   */\n\n  writeI40(value) {\n    this.offset += 5;\n    this.ops.push(new NumberOp(I40, value));\n    return this;\n  }\n\n  /**\n   * Write int40be.\n   * @param {Number} value\n   */\n\n  writeI40BE(value) {\n    this.offset += 5;\n    this.ops.push(new NumberOp(I40BE, value));\n    return this;\n  }\n\n  /**\n   * Write int48le.\n   * @param {Number} value\n   */\n\n  writeI48(value) {\n    this.offset += 6;\n    this.ops.push(new NumberOp(I48, value));\n    return this;\n  }\n\n  /**\n   * Write int48be.\n   * @param {Number} value\n   */\n\n  writeI48BE(value) {\n    this.offset += 6;\n    this.ops.push(new NumberOp(I48BE, value));\n    return this;\n  }\n\n  /**\n   * Write int56le.\n   * @param {Number} value\n   */\n\n  writeI56(value) {\n    this.offset += 7;\n    this.ops.push(new NumberOp(I56, value));\n    return this;\n  }\n\n  /**\n   * Write int56be.\n   * @param {Number} value\n   */\n\n  writeI56BE(value) {\n    this.offset += 7;\n    this.ops.push(new NumberOp(I56BE, value));\n    return this;\n  }\n\n  /**\n   * Write int64le.\n   * @param {Number} value\n   */\n\n  writeI64(value) {\n    this.offset += 8;\n    this.ops.push(new NumberOp(I64, value));\n    return this;\n  }\n\n  /**\n   * Write int64be.\n   * @param {Number} value\n   */\n\n  writeI64BE(value) {\n    this.offset += 8;\n    this.ops.push(new NumberOp(I64BE, value));\n    return this;\n  }\n\n  /**\n   * Write float le.\n   * @param {Number} value\n   */\n\n  writeFloat(value) {\n    this.offset += 4;\n    this.ops.push(new NumberOp(FL, value));\n    return this;\n  }\n\n  /**\n   * Write float be.\n   * @param {Number} value\n   */\n\n  writeFloatBE(value) {\n    this.offset += 4;\n    this.ops.push(new NumberOp(FLBE, value));\n    return this;\n  }\n\n  /**\n   * Write double le.\n   * @param {Number} value\n   */\n\n  writeDouble(value) {\n    this.offset += 8;\n    this.ops.push(new NumberOp(DBL, value));\n    return this;\n  }\n\n  /**\n   * Write double be.\n   * @param {Number} value\n   */\n\n  writeDoubleBE(value) {\n    this.offset += 8;\n    this.ops.push(new NumberOp(DBLBE, value));\n    return this;\n  }\n\n  /**\n   * Write a varint.\n   * @param {Number} value\n   */\n\n  writeVarint(value) {\n    this.offset += encoding.sizeVarint(value);\n    this.ops.push(new NumberOp(VARINT, value));\n    return this;\n  }\n\n  /**\n   * Write a varint (type 2).\n   * @param {Number} value\n   */\n\n  writeVarint2(value) {\n    this.offset += encoding.sizeVarint2(value);\n    this.ops.push(new NumberOp(VARINT2, value));\n    return this;\n  }\n\n  /**\n   * Write bytes.\n   * @param {Buffer} value\n   */\n\n  writeBytes(value) {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n\n    if (value.length === 0)\n      return this;\n\n    this.offset += value.length;\n    this.ops.push(new BufferOp(BYTES, value));\n\n    return this;\n  }\n\n  /**\n   * Write bytes with a varint length before them.\n   * @param {Buffer} value\n   */\n\n  writeVarBytes(value) {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n\n    this.offset += encoding.sizeVarint(value.length);\n    this.ops.push(new NumberOp(VARINT, value.length));\n\n    if (value.length === 0)\n      return this;\n\n    this.offset += value.length;\n    this.ops.push(new BufferOp(BYTES, value));\n\n    return this;\n  }\n\n  /**\n   * Copy bytes.\n   * @param {Buffer} value\n   * @param {Number} start\n   * @param {Number} end\n   */\n\n  copy(value, start, end) {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n    enforce((start >>> 0) === start, 'start', 'integer');\n    enforce((end >>> 0) === end, 'end', 'integer');\n    enforce(end >= start, 'start', 'integer');\n\n    const buf = value.slice(start, end);\n\n    this.writeBytes(buf);\n\n    return this;\n  }\n\n  /**\n   * Write string to buffer.\n   * @param {String} value\n   * @param {String?} enc - Any buffer-supported encoding.\n   */\n\n  writeString(value, enc) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce(typeof value === 'string', 'value', 'string');\n    enforce(typeof enc === 'string', 'enc', 'string');\n\n    if (value.length === 0)\n      return this;\n\n    this.offset += Buffer.byteLength(value, enc);\n    this.ops.push(new StringOp(STR, value, enc));\n\n    return this;\n  }\n\n  /**\n   * Write a 32 byte hash.\n   * @param {Hash} value\n   */\n\n  writeHash(value) {\n    if (typeof value !== 'string') {\n      enforce(Buffer.isBuffer(value), 'value', 'buffer');\n      enforce(value.length === 32, 'value', '32-byte hash');\n      this.writeBytes(value);\n      return this;\n    }\n\n    enforce(value.length === 64, 'value', '32-byte hash');\n\n    this.writeString(value, 'hex');\n\n    return this;\n  }\n\n  /**\n   * Write a string with a varint length before it.\n   * @param {String}\n   * @param {String?} enc - Any buffer-supported encoding.\n   */\n\n  writeVarString(value, enc) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce(typeof value === 'string', 'value', 'string');\n    enforce(typeof enc === 'string', 'enc', 'string');\n\n    if (value.length === 0) {\n      this.ops.push(new NumberOp(VARINT, 0));\n      return this;\n    }\n\n    const size = Buffer.byteLength(value, enc);\n\n    this.offset += encoding.sizeVarint(size);\n    this.offset += size;\n\n    this.ops.push(new NumberOp(VARINT, size));\n    this.ops.push(new StringOp(STR, value, enc));\n\n    return this;\n  }\n\n  /**\n   * Write a null-terminated string.\n   * @param {String|Buffer}\n   * @param {String?} enc - Any buffer-supported encoding.\n   */\n\n  writeNullString(value, enc) {\n    this.writeString(value, enc);\n    this.writeU8(0);\n    return this;\n  }\n\n  /**\n   * Calculate and write a checksum for the data written so far.\n   * @param {Function} hash\n   */\n\n  writeChecksum(hash) {\n    if (hash && typeof hash.digest === 'function')\n      hash = hash.digest.bind(hash);\n\n    enforce(typeof hash === 'function', 'hash', 'function');\n\n    this.offset += 4;\n    this.ops.push(new FunctionOp(CHECKSUM, hash));\n\n    return this;\n  }\n\n  /**\n   * Fill N bytes with value.\n   * @param {Number} value\n   * @param {Number} size\n   */\n\n  fill(value, size) {\n    enforce((value & 0xff) === value, 'value', 'byte');\n    enforce((size >>> 0) === size, 'size', 'integer');\n\n    if (size === 0)\n      return this;\n\n    this.offset += size;\n    this.ops.push(new FillOp(FILL, value, size));\n\n    return this;\n  }\n}\n\n/*\n * Helpers\n */\n\nclass WriteOp {\n  constructor(type) {\n    this.type = type;\n  }\n}\n\nclass NumberOp extends WriteOp {\n  constructor(type, value) {\n    super(type);\n    this.value = value;\n  }\n}\n\nclass BufferOp extends WriteOp {\n  constructor(type, data) {\n    super(type);\n    this.data = data;\n  }\n}\n\nclass StringOp extends WriteOp {\n  constructor(type, value, enc) {\n    super(type);\n    this.value = value;\n    this.enc = enc;\n  }\n}\n\nclass FunctionOp extends WriteOp {\n  constructor(type, func) {\n    super(type);\n    this.func = func;\n  }\n}\n\nclass FillOp extends WriteOp {\n  constructor(type, value, size) {\n    super(type);\n    this.value = value;\n    this.size = size;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = BufferWriter;\n","/*!\n * staticwriter.js - buffer writer for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst enforce = require('./enforce');\nconst encoding = require('./encoding');\nconst EncodingError = require('./error');\n\n/*\n * Constants\n */\n\nconst EMPTY = Buffer.alloc(0);\nconst POOL_SIZE = 100 << 10;\n\nlet POOL = null;\n\n/**\n * Statically Allocated Writer\n */\n\nclass StaticWriter {\n  /**\n   * Statically allocated buffer writer.\n   * @constructor\n   * @param {Number|Buffer} options\n   */\n\n  constructor(options) {\n    this.data = EMPTY;\n    this.offset = 0;\n\n    if (options != null)\n      this.init(options);\n  }\n\n  /**\n   * Assertion.\n   * @param {Number} size\n   */\n\n  check(size) {\n    if (this.offset + size > this.data.length)\n      throw new EncodingError(this.offset, 'Out of bounds write', this.check);\n  }\n\n  /**\n   * Initialize options.\n   * @param {Object} options\n   */\n\n  init(options) {\n    if (Buffer.isBuffer(options)) {\n      this.data = options;\n      this.offset = 0;\n      return this;\n    }\n\n    enforce((options >>> 0) === options, 'size', 'integer');\n\n    this.data = Buffer.allocUnsafeSlow(options);\n    this.offset = 0;\n\n    return this;\n  }\n\n  /**\n   * Allocate writer from preallocated 100kb pool.\n   * @param {Number} size\n   * @returns {StaticWriter}\n   */\n\n  static pool(size) {\n    enforce((size >>> 0) === size, 'size', 'integer');\n\n    if (size <= POOL_SIZE) {\n      if (!POOL)\n        POOL = Buffer.allocUnsafeSlow(POOL_SIZE);\n\n      const bw = new StaticWriter();\n\n      bw.data = POOL.slice(0, size);\n\n      return bw;\n    }\n\n    return new StaticWriter(size);\n  }\n\n  /**\n   * Allocate and render the final buffer.\n   * @returns {Buffer} Rendered buffer.\n   */\n\n  render() {\n    const {data, offset} = this;\n\n    if (offset !== data.length)\n      throw new EncodingError(offset, 'Out of bounds write');\n\n    this.destroy();\n\n    return data;\n  }\n\n  /**\n   * Slice the final buffer at written offset.\n   * @returns {Buffer} Rendered buffer.\n   */\n\n  slice() {\n    const {data, offset} = this;\n\n    if (offset > data.length)\n      throw new EncodingError(offset, 'Out of bounds write');\n\n    this.destroy();\n\n    return data.slice(0, offset);\n  }\n\n  /**\n   * Get size of data written so far.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return this.offset;\n  }\n\n  /**\n   * Seek to relative offset.\n   * @param {Number} off\n   */\n\n  seek(off) {\n    enforce(Number.isSafeInteger(off), 'off', 'integer');\n\n    if (this.offset + off < 0)\n      throw new EncodingError(this.offset, 'Out of bounds write');\n\n    this.check(off);\n    this.offset += off;\n\n    return this;\n  }\n\n  /**\n   * Destroy the buffer writer.\n   */\n\n  destroy() {\n    this.data = EMPTY;\n    this.offset = 0;\n    return this;\n  }\n\n  /**\n   * Write uint8.\n   * @param {Number} value\n   */\n\n  writeU8(value) {\n    this.check(1);\n    this.offset = encoding.writeU8(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint16le.\n   * @param {Number} value\n   */\n\n  writeU16(value) {\n    this.check(2);\n    this.offset = encoding.writeU16(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint16be.\n   * @param {Number} value\n   */\n\n  writeU16BE(value) {\n    this.check(2);\n    this.offset = encoding.writeU16BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint24le.\n   * @param {Number} value\n   */\n\n  writeU24(value) {\n    this.check(3);\n    this.offset = encoding.writeU24(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint24be.\n   * @param {Number} value\n   */\n\n  writeU24BE(value) {\n    this.check(3);\n    this.offset = encoding.writeU24BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint32le.\n   * @param {Number} value\n   */\n\n  writeU32(value) {\n    this.check(4);\n    this.offset = encoding.writeU32(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint32be.\n   * @param {Number} value\n   */\n\n  writeU32BE(value) {\n    this.check(4);\n    this.offset = encoding.writeU32BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint40le.\n   * @param {Number} value\n   */\n\n  writeU40(value) {\n    this.check(5);\n    this.offset = encoding.writeU40(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint40be.\n   * @param {Number} value\n   */\n\n  writeU40BE(value) {\n    this.check(5);\n    this.offset = encoding.writeU40BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint48le.\n   * @param {Number} value\n   */\n\n  writeU48(value) {\n    this.check(6);\n    this.offset = encoding.writeU48(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint48be.\n   * @param {Number} value\n   */\n\n  writeU48BE(value) {\n    this.check(6);\n    this.offset = encoding.writeU48BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint56le.\n   * @param {Number} value\n   */\n\n  writeU56(value) {\n    this.check(7);\n    this.offset = encoding.writeU56(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint56be.\n   * @param {Number} value\n   */\n\n  writeU56BE(value) {\n    this.check(7);\n    this.offset = encoding.writeU56BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint64le.\n   * @param {Number} value\n   */\n\n  writeU64(value) {\n    this.check(8);\n    this.offset = encoding.writeU64(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write uint64be.\n   * @param {Number} value\n   */\n\n  writeU64BE(value) {\n    this.check(8);\n    this.offset = encoding.writeU64BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int8.\n   * @param {Number} value\n   */\n\n  writeI8(value) {\n    this.check(1);\n    this.offset = encoding.writeI8(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int16le.\n   * @param {Number} value\n   */\n\n  writeI16(value) {\n    this.check(2);\n    this.offset = encoding.writeI16(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int16be.\n   * @param {Number} value\n   */\n\n  writeI16BE(value) {\n    this.check(2);\n    this.offset = encoding.writeI16BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int24le.\n   * @param {Number} value\n   */\n\n  writeI24(value) {\n    this.check(3);\n    this.offset = encoding.writeI24(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int24be.\n   * @param {Number} value\n   */\n\n  writeI24BE(value) {\n    this.check(3);\n    this.offset = encoding.writeI24BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int32le.\n   * @param {Number} value\n   */\n\n  writeI32(value) {\n    this.check(4);\n    this.offset = encoding.writeI32(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int32be.\n   * @param {Number} value\n   */\n\n  writeI32BE(value) {\n    this.check(4);\n    this.offset = encoding.writeI32BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int40le.\n   * @param {Number} value\n   */\n\n  writeI40(value) {\n    this.check(5);\n    this.offset = encoding.writeI40(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int40be.\n   * @param {Number} value\n   */\n\n  writeI40BE(value) {\n    this.check(5);\n    this.offset = encoding.writeI40BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int48le.\n   * @param {Number} value\n   */\n\n  writeI48(value) {\n    this.check(6);\n    this.offset = encoding.writeI48(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int48be.\n   * @param {Number} value\n   */\n\n  writeI48BE(value) {\n    this.check(6);\n    this.offset = encoding.writeI48BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int56le.\n   * @param {Number} value\n   */\n\n  writeI56(value) {\n    this.check(7);\n    this.offset = encoding.writeI56(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int56be.\n   * @param {Number} value\n   */\n\n  writeI56BE(value) {\n    this.check(7);\n    this.offset = encoding.writeI56BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int64le.\n   * @param {Number} value\n   */\n\n  writeI64(value) {\n    this.check(8);\n    this.offset = encoding.writeI64(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write int64be.\n   * @param {Number} value\n   */\n\n  writeI64BE(value) {\n    this.check(8);\n    this.offset = encoding.writeI64BE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write float le.\n   * @param {Number} value\n   */\n\n  writeFloat(value) {\n    this.check(4);\n    this.offset = encoding.writeFloat(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write float be.\n   * @param {Number} value\n   */\n\n  writeFloatBE(value) {\n    this.check(4);\n    this.offset = encoding.writeFloatBE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write double le.\n   * @param {Number} value\n   */\n\n  writeDouble(value) {\n    this.check(8);\n    this.offset = encoding.writeDouble(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write double be.\n   * @param {Number} value\n   */\n\n  writeDoubleBE(value) {\n    this.check(8);\n    this.offset = encoding.writeDoubleBE(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write a varint.\n   * @param {Number} value\n   */\n\n  writeVarint(value) {\n    this.offset = encoding.writeVarint(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write a varint (type 2).\n   * @param {Number} value\n   */\n\n  writeVarint2(value) {\n    this.offset = encoding.writeVarint2(this.data, value, this.offset);\n    return this;\n  }\n\n  /**\n   * Write bytes.\n   * @param {Buffer} value\n   */\n\n  writeBytes(value) {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n\n    this.check(value.length);\n    this.offset += value.copy(this.data, this.offset);\n\n    return this;\n  }\n\n  /**\n   * Write bytes with a varint length before them.\n   * @param {Buffer} value\n   */\n\n  writeVarBytes(value) {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n\n    this.writeVarint(value.length);\n    this.writeBytes(value);\n\n    return this;\n  }\n\n  /**\n   * Copy bytes.\n   * @param {Buffer} value\n   * @param {Number} start\n   * @param {Number} end\n   */\n\n  copy(value, start, end) {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n    enforce((start >>> 0) === start, 'start', 'integer');\n    enforce((end >>> 0) === end, 'end', 'integer');\n    enforce(end >= start, 'start', 'integer');\n\n    this.check(end - start);\n    this.offset += value.copy(this.data, this.offset, start, end);\n\n    return this;\n  }\n\n  /**\n   * Write string to buffer.\n   * @param {String} value\n   * @param {String?} enc - Any buffer-supported encoding.\n   */\n\n  writeString(value, enc) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce(typeof value === 'string', 'value', 'string');\n    enforce(typeof enc === 'string', 'enc', 'string');\n\n    if (value.length === 0)\n      return this;\n\n    const size = Buffer.byteLength(value, enc);\n\n    this.check(size);\n\n    this.offset += this.data.write(value, this.offset, enc);\n\n    return this;\n  }\n\n  /**\n   * Write a 32 byte hash.\n   * @param {Hash} value\n   */\n\n  writeHash(value) {\n    if (typeof value !== 'string') {\n      enforce(Buffer.isBuffer(value), 'value', 'buffer');\n      enforce(value.length === 32, 'value', '32-byte hash');\n      this.writeBytes(value);\n      return this;\n    }\n\n    enforce(value.length === 64, 'value', '32-byte hash');\n\n    this.check(32);\n    this.offset += this.data.write(value, this.offset, 'hex');\n\n    return this;\n  }\n\n  /**\n   * Write a string with a varint length before it.\n   * @param {String}\n   * @param {String?} enc - Any buffer-supported encoding.\n   */\n\n  writeVarString(value, enc) {\n    if (enc == null)\n      enc = 'binary';\n\n    enforce(typeof value === 'string', 'value', 'string');\n    enforce(typeof enc === 'string', 'enc', 'string');\n\n    if (value.length === 0) {\n      this.writeVarint(0);\n      return this;\n    }\n\n    const size = Buffer.byteLength(value, enc);\n\n    this.writeVarint(size);\n    this.check(size);\n    this.offset += this.data.write(value, this.offset, enc);\n\n    return this;\n  }\n\n  /**\n   * Write a null-terminated string.\n   * @param {String|Buffer}\n   * @param {String?} enc - Any buffer-supported encoding.\n   */\n\n  writeNullString(value, enc) {\n    this.writeString(value, enc);\n    this.writeU8(0);\n    return this;\n  }\n\n  /**\n   * Calculate and write a checksum for the data written so far.\n   * @param {Function} hash\n   */\n\n  writeChecksum(hash) {\n    if (!hash || typeof hash.digest !== 'function')\n      enforce(typeof hash === 'function', 'hash', 'function');\n\n    this.check(4);\n\n    const data = this.data.slice(0, this.offset);\n    const raw = hash.digest ? hash.digest(data) : hash(data);\n\n    raw.copy(this.data, this.offset, 0, 4);\n\n    this.offset += 4;\n\n    return this;\n  }\n\n  /**\n   * Fill N bytes with value.\n   * @param {Number} value\n   * @param {Number} size\n   */\n\n  fill(value, size) {\n    enforce((value & 0xff) === value, 'value', 'byte');\n    enforce((size >>> 0) === size, 'size', 'integer');\n\n    this.check(size);\n\n    this.data.fill(value, this.offset, this.offset + size);\n    this.offset += size;\n\n    return this;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = StaticWriter;\n","/*!\n * struct.js - struct object for bcoin\n * Copyright (c) 2018, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst enforce = require('./enforce');\nconst BufferReader = require('./reader');\nconst BufferWriter = require('./writer');\nconst StaticWriter = require('./staticwriter');\nconst {custom} = require('./custom');\n\n/**\n * Struct\n */\n\nclass Struct {\n  constructor() {}\n\n  inject(obj) {\n    enforce(obj instanceof this.constructor, 'obj', 'struct');\n    return this.decode(obj.encode());\n  }\n\n  clone() {\n    const copy = new this.constructor();\n    return copy.inject(this);\n  }\n\n  /*\n   * Bindable\n   */\n\n  getSize(extra) {\n    return -1;\n  }\n\n  write(bw, extra) {\n    return bw;\n  }\n\n  read(br, extra) {\n    return this;\n  }\n\n  toString() {\n    return Object.prototype.toString.call(this);\n  }\n\n  fromString(str, extra) {\n    return this;\n  }\n\n  getJSON() {\n    return this;\n  }\n\n  fromJSON(json, extra) {\n    return this;\n  }\n\n  fromOptions(options, extra) {\n    return this;\n  }\n\n  from(options, extra) {\n    return this.fromOptions(options, extra);\n  }\n\n  format() {\n    return this.getJSON();\n  }\n\n  /*\n   * API\n   */\n\n  encode(extra) {\n    const size = this.getSize(extra);\n    const bw = size === -1\n      ? new BufferWriter()\n      : new StaticWriter(size);\n\n    this.write(bw, extra);\n\n    return bw.render();\n  }\n\n  decode(data, extra) {\n    const br = new BufferReader(data);\n\n    this.read(br, extra);\n\n    return this;\n  }\n\n  toHex(extra) {\n    return this.encode(extra).toString('hex');\n  }\n\n  fromHex(str, extra) {\n    enforce(typeof str === 'string', 'str', 'string');\n\n    const size = str.length >>> 1;\n    const data = Buffer.from(str, 'hex');\n\n    if (data.length !== size)\n      throw new Error('Invalid hex string.');\n\n    return this.decode(data, extra);\n  }\n\n  toBase64(extra) {\n    return this.encode(extra).toString('base64');\n  }\n\n  fromBase64(str, extra) {\n    enforce(typeof str === 'string', 'str', 'string');\n\n    const data = Buffer.from(str, 'base64');\n\n    if (str.length > size64(data.length))\n      throw new Error('Invalid base64 string.');\n\n    return this.decode(data, extra);\n  }\n\n  toJSON() {\n    return this.getJSON();\n  }\n\n  [custom]() {\n    return this.format();\n  }\n\n  /*\n   * Static API\n   */\n\n  static read(br, extra) {\n    return new this().read(br, extra);\n  }\n\n  static decode(data, extra) {\n    return new this().decode(data, extra);\n  }\n\n  static fromHex(str, extra) {\n    return new this().fromHex(str, extra);\n  }\n\n  static fromBase64(str, extra) {\n    return new this().fromBase64(str, extra);\n  }\n\n  static fromString(str, extra) {\n    return new this().fromString(str, extra);\n  }\n\n  static fromJSON(json, extra) {\n    return new this().fromJSON(json, extra);\n  }\n\n  static fromOptions(options, extra) {\n    return new this().fromOptions(options, extra);\n  }\n\n  static from(options, extra) {\n    return new this().from(options, extra);\n  }\n\n  /*\n   * Aliases\n   */\n\n  toWriter(bw, extra) {\n    return this.write(bw, extra);\n  }\n\n  fromReader(br, extra) {\n    return this.read(br, extra);\n  }\n\n  toRaw(extra) {\n    return this.encode(extra);\n  }\n\n  fromRaw(data, extra) {\n    return this.decode(data, extra);\n  }\n\n  /*\n   * Static Aliases\n   */\n\n  static fromReader(br, extra) {\n    return this.read(br, extra);\n  }\n\n  static fromRaw(data, extra) {\n    return this.decode(data, extra);\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction size64(size) {\n  const expect = ((4 * size / 3) + 3) & ~3;\n  return expect >>> 0;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Struct;\n","/*!\n * bufio.js - buffer utilities for javascript\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst custom = require('./custom');\nconst encoding = require('./encoding');\nconst enforce = require('./enforce');\nconst EncodingError = require('./error');\nconst BufferReader = require('./reader');\nconst BufferWriter = require('./writer');\nconst StaticWriter = require('./staticwriter');\nconst Struct = require('./struct');\n\nexports.custom = custom;\nexports.encoding = encoding;\nexports.EncodingError = EncodingError;\nexports.BufferReader = BufferReader;\nexports.BufferWriter = BufferWriter;\nexports.StaticWriter = StaticWriter;\nexports.Struct = Struct;\n\nexports.read = function read(data, zeroCopy) {\n  return new BufferReader(data, zeroCopy);\n};\n\nexports.write = function write(size) {\n  return size != null\n    ? new StaticWriter(size)\n    : new BufferWriter();\n};\n\nexports.pool = function pool(size) {\n  return StaticWriter.pool(size);\n};\n\nfunction _read(func, size) {\n  return function(data, off) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce((off >>> 0) === off, 'off', 'integer');\n\n    if (off + size > data.length)\n      throw new EncodingError(off, 'Out of bounds read');\n\n    return func(data, off);\n  };\n}\n\nfunction _readn(func) {\n  return function(data, off, len) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce((off >>> 0) === off, 'off', 'integer');\n    enforce((len >>> 0) === len, 'len', 'integer');\n\n    if (off + len > data.length)\n      throw new EncodingError(off, 'Out of bounds read');\n\n    return func(data, off, len);\n  };\n}\n\nfunction _readvar(func) {\n  return function(data, off) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce((off >>> 0) === off, 'off', 'integer');\n    return func(data, off);\n  };\n}\n\nfunction _write(func, size) {\n  return function(data, num, off) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce((off >>> 0) === off, 'off', 'integer');\n\n    if (off + size > data.length)\n      throw new EncodingError(off, 'Out of bounds write');\n\n    return func(data, num, off);\n  };\n}\n\nfunction _writen(func) {\n  return function(data, num, off, len) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce((off >>> 0) === off, 'off', 'integer');\n    enforce((len >>> 0) === len, 'len', 'integer');\n\n    if (off + len > data.length)\n      throw new EncodingError(off, 'Out of bounds write');\n\n    return func(data, num, off, len);\n  };\n}\n\nfunction _writecb(func, size) {\n  return function(data, num, off) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    enforce((off >>> 0) === off, 'off', 'integer');\n\n    if (off + size(num) > data.length)\n      throw new EncodingError(off, 'Out of bounds write');\n\n    return func(data, num, off);\n  };\n}\n\nexports.readU = _readn(encoding.readU);\nexports.readU64 = _read(encoding.readU64, 8);\nexports.readU56 = _read(encoding.readU56, 7);\nexports.readU48 = _read(encoding.readU48, 6);\nexports.readU40 = _read(encoding.readU40, 5);\nexports.readU32 = _read(encoding.readU32, 4);\nexports.readU24 = _read(encoding.readU24, 3);\nexports.readU16 = _read(encoding.readU16, 2);\nexports.readU8 = _read(encoding.readU8, 1);\n\nexports.readUBE = _readn(encoding.readUBE);\nexports.readU64BE = _read(encoding.readU64BE, 8);\nexports.readU56BE = _read(encoding.readU56BE, 7);\nexports.readU48BE = _read(encoding.readU48BE, 6);\nexports.readU40BE = _read(encoding.readU40BE, 5);\nexports.readU32BE = _read(encoding.readU32BE, 4);\nexports.readU24BE = _read(encoding.readU24BE, 3);\nexports.readU16BE = _read(encoding.readU16BE, 2);\n\nexports.readI = _readn(encoding.readI);\nexports.readI64 = _read(encoding.readI64, 8);\nexports.readI56 = _read(encoding.readI56, 7);\nexports.readI48 = _read(encoding.readI48, 6);\nexports.readI40 = _read(encoding.readI40, 5);\nexports.readI32 = _read(encoding.readI32, 4);\nexports.readI24 = _read(encoding.readI24, 3);\nexports.readI16 = _read(encoding.readI16, 2);\nexports.readI8 = _read(encoding.readI8, 1);\n\nexports.readIBE = _readn(encoding.readIBE);\nexports.readI64BE = _read(encoding.readI64BE, 8);\nexports.readI56BE = _read(encoding.readI56BE, 7);\nexports.readI48BE = _read(encoding.readI48BE, 6);\nexports.readI40BE = _read(encoding.readI40BE, 5);\nexports.readI32BE = _read(encoding.readI32BE, 4);\nexports.readI24BE = _read(encoding.readI24BE, 3);\nexports.readI16BE = _read(encoding.readI16BE, 2);\n\nexports.readFloat = _read(encoding.readFloat, 4);\nexports.readFloatBE = _read(encoding.readFloatBE, 4);\nexports.readDouble = _read(encoding.readDouble, 8);\nexports.readDoubleBE = _read(encoding.readDoubleBE, 8);\n\nexports.writeU = _writen(encoding.writeU);\nexports.writeU64 = _write(encoding.writeU64, 8);\nexports.writeU56 = _write(encoding.writeU56, 7);\nexports.writeU48 = _write(encoding.writeU48, 6);\nexports.writeU40 = _write(encoding.writeU40, 5);\nexports.writeU32 = _write(encoding.writeU32, 4);\nexports.writeU24 = _write(encoding.writeU24, 3);\nexports.writeU16 = _write(encoding.writeU16, 2);\nexports.writeU8 = _write(encoding.writeU8, 1);\n\nexports.writeUBE = _writen(encoding.writeUBE);\nexports.writeU64BE = _write(encoding.writeU64BE, 8);\nexports.writeU56BE = _write(encoding.writeU56BE, 7);\nexports.writeU48BE = _write(encoding.writeU48BE, 6);\nexports.writeU40BE = _write(encoding.writeU40BE, 5);\nexports.writeU32BE = _write(encoding.writeU32BE, 4);\nexports.writeU24BE = _write(encoding.writeU24BE, 3);\nexports.writeU16BE = _write(encoding.writeU16BE, 2);\n\nexports.writeI = _writen(encoding.writeI);\nexports.writeI64 = _write(encoding.writeI64, 8);\nexports.writeI56 = _write(encoding.writeI56, 7);\nexports.writeI48 = _write(encoding.writeI48, 6);\nexports.writeI40 = _write(encoding.writeI40, 5);\nexports.writeI32 = _write(encoding.writeI32, 4);\nexports.writeI24 = _write(encoding.writeI24, 3);\nexports.writeI16 = _write(encoding.writeI16, 2);\nexports.writeI8 = _write(encoding.writeI8, 1);\n\nexports.writeIBE = _writen(encoding.writeIBE);\nexports.writeI64BE = _write(encoding.writeI64BE, 8);\nexports.writeI56BE = _write(encoding.writeI56BE, 7);\nexports.writeI48BE = _write(encoding.writeI48BE, 6);\nexports.writeI40BE = _write(encoding.writeI40BE, 5);\nexports.writeI32BE = _write(encoding.writeI32BE, 4);\nexports.writeI24BE = _write(encoding.writeI24BE, 3);\nexports.writeI16BE = _write(encoding.writeI16BE, 2);\n\nexports.writeFloat = _write(encoding.writeFloat, 4);\nexports.writeFloatBE = _write(encoding.writeFloatBE, 4);\nexports.writeDouble = _write(encoding.writeDouble, 8);\nexports.writeDoubleBE = _write(encoding.writeDoubleBE, 8);\n\nexports.readVarint = _readvar(encoding.readVarint);\nexports.writeVarint = _writecb(encoding.writeVarint, encoding.sizeVarint);\nexports.sizeVarint = encoding.sizeVarint;\nexports.readVarint2 = _readvar(encoding.readVarint2);\nexports.writeVarint2 = _writecb(encoding.writeVarint2, encoding.sizeVarint2);\nexports.sizeVarint2 = encoding.sizeVarint2;\n\nexports.sliceBytes = encoding.sliceBytes;\nexports.readBytes = encoding.readBytes;\nexports.writeBytes = encoding.writeBytes;\nexports.readString = encoding.readString;\nexports.writeString = encoding.writeString;\n\nexports.realloc = encoding.realloc;\nexports.copy = encoding.copy;\nexports.concat = encoding.concat;\n\nexports.sizeVarBytes = encoding.sizeVarBytes;\nexports.sizeVarlen = encoding.sizeVarlen;\nexports.sizeVarString = encoding.sizeVarString;\n","export default '/home/henrik/Documents/dev/checkout-components/node_modules/bstring/lib'","/*!\n * loady.js - dynamic loader for node.js\n * Copyright (c) 2019-2020, Christopher Jeffrey (MIT License).\n * https://github.com/chjj/loady\n */\n\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\n/*\n * Constants\n */\n\nconst types = [\n  'Debug',\n  'Release',\n  'MinSizeRel',\n  'RelWithDebInfo'\n];\n\n/**\n * Resolve\n */\n\nfunction resolve(name, root) {\n  if (typeof name !== 'string')\n    throw new TypeError('\"name\" must be a string.');\n\n  if (typeof root !== 'string')\n    throw new TypeError('\"root\" must be a string.');\n\n  if (!fs.existsSync)\n    throw moduleError(name);\n\n  if (path.extname(name) !== '.node')\n    name += '.node';\n\n  root = ensurePath(root);\n\n  const key = `${name}\\0${root}`;\n\n  if (resolve.cache[key])\n    return resolve.cache[key];\n\n  if (process.pkg && !isPath(name))\n    name = path.resolve(process.execPath, '..', name);\n\n  if (isPath(name)) {\n    const file = path.resolve(root, name);\n\n    if (!fs.existsSync(file))\n      throw moduleError(file);\n\n    const real = realpath(file);\n\n    resolve.cache[key] = real;\n\n    return real;\n  }\n\n  for (;;) {\n    const build = path.join(root, 'build');\n\n    if (fs.existsSync(build)) {\n      const files = [path.join(build, name)];\n\n      for (const type of types)\n        files.push(path.join(build, type, name));\n\n      for (const file of files) {\n        if (fs.existsSync(file)) {\n          const real = realpath(file);\n          resolve.cache[key] = real;\n          return real;\n        }\n      }\n    }\n\n    const next = path.dirname(root);\n\n    if (next === root)\n      break;\n\n    root = next;\n  }\n\n  throw moduleError(name);\n}\n\nresolve.cache = Object.create(null);\n\n/**\n * Load\n */\n\nfunction load(name, root) {\n  const file = resolve(name, root);\n\n  if (load.cache[file])\n    return load.cache[file];\n\n  if (!process.dlopen)\n    throw new Error(`${name}: cannot open shared object file`);\n\n  const module = { exports: {} };\n\n  process.dlopen(module, file);\n\n  load.cache[file] = module.exports;\n\n  return module.exports;\n}\n\nload.cache = Object.create(null);\n\n/*\n * Helpers\n */\n\nfunction isPath(str) {\n  if (process.platform === 'win32')\n    str = str.replace('\\\\', '/');\n\n  return str[0] === '/'\n      || str.startsWith('./')\n      || str.startsWith('../');\n}\n\nfunction ensurePath(str) {\n  if (str.indexOf('file:') === 0) {\n    const url = require('url');\n\n    if (!url.fileURLToPath)\n      throw new Error('File URLs are unsupported on this platform.');\n\n    // Assume this is an import.meta.url.\n    return path.resolve(url.fileURLToPath(str), '..');\n  }\n\n  return path.resolve(str);\n}\n\nfunction realpath(file) {\n  try {\n    return fs.realpathSync(file);\n  } catch (e) {\n    return path.resolve(file);\n  }\n}\n\nfunction moduleError(name) {\n  const err = new Error(`Cannot find module '${name}'`);\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\n/*\n * Expose\n */\n\nload.load = load;\nload.resolve = resolve;\n\nmodule.exports = load;\n","/*!\n * bstring\n * Copyright (c) 2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bstring\n */\n\n'use strict';\n\nif (process.env.NODE_BACKEND && process.env.NODE_BACKEND !== 'native')\n  throw new Error('Non-native backend selected.');\n\nconst assert = require('bsert');\nconst binding = require('loady')('bstring', __dirname);\n\nexports.base58 = {\n  encode: binding.base58_encode,\n  decode: binding.base58_decode,\n  test: binding.base58_test\n};\n\nexports.bech32 = {\n  serialize: binding.bech32_serialize,\n  deserialize: binding.bech32_deserialize,\n  is: binding.bech32_is,\n  convertBits: binding.bech32_convert_bits,\n  encode: binding.bech32_encode,\n  decode: binding.bech32_decode,\n  test: binding.bech32_test\n};\n\nexports.cashaddr = {\n  encode(prefix, type, hash) {\n    assert((type & 0x0f) === type, 'Invalid cashaddr type.');\n    return binding.cashaddr_encode(prefix, type, hash);\n  },\n  decode(str, defaultPrefix = 'bitcoincash') {\n    return binding.cashaddr_decode(str, defaultPrefix);\n  },\n  test(str, defaultPrefix = 'bitcoincash') {\n    return binding.cashaddr_test(str, defaultPrefix);\n  }\n};\n","/*!\n * base58.js - base58 for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\n\n/*\n * Constants\n */\n\nconst CHARSET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst TABLE = [\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1,  0,  1,  2,  3,  4,  5,  6,  7,  8, -1, -1, -1, -1, -1, -1,\n  -1,  9, 10, 11, 12, 13, 14, 15, 16, -1, 17, 18, 19, 20, 21, -1,\n  22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, -1, -1, -1, -1, -1,\n  -1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, -1, 44, 45, 46,\n  47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, -1, -1, -1, -1, -1\n];\n\n/**\n * Encode a base58 string.\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/base58.cpp\n * @param {Buffer} data\n * @returns {String}\n */\n\nexports.encode = function encode(data) {\n  assert(Buffer.isBuffer(data));\n\n  let zeroes = 0;\n  let i = 0;\n\n  for (; i < data.length; i++) {\n    if (data[i] !== 0)\n      break;\n    zeroes += 1;\n  }\n\n  const b58 = Buffer.allocUnsafe(((data.length * 138 / 100) | 0) + 1);\n  b58.fill(0);\n\n  let length = 0;\n\n  for (; i < data.length; i++) {\n    let carry = data[i];\n    let j = 0;\n\n    for (let k = b58.length - 1; k >= 0; k--, j++) {\n      if (carry === 0 && j >= length)\n        break;\n      carry += 256 * b58[k];\n      b58[k] = carry % 58;\n      carry = carry / 58 | 0;\n    }\n\n    assert(carry === 0);\n    length = j;\n  }\n\n  i = b58.length - length;\n  while (i < b58.length && b58[i] === 0)\n    i += 1;\n\n  let str = '';\n\n  for (let j = 0; j < zeroes; j++)\n    str += '1';\n\n  for (; i < b58.length; i++)\n    str += CHARSET[b58[i]];\n\n  return str;\n};\n\n/**\n * Decode a base58 string.\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/base58.cpp\n * @param {String} str\n * @returns {Buffer}\n * @throws on non-base58 character.\n */\n\nexports.decode = function decode(str) {\n  assert(typeof str === 'string');\n\n  let zeroes = 0;\n  let i = 0;\n\n  for (; i < str.length; i++) {\n    if (str[i] !== '1')\n      break;\n    zeroes += 1;\n  }\n\n  const b256 = Buffer.allocUnsafe(((str.length * 733) / 1000 | 0) + 1);\n  b256.fill(0);\n\n  let length = 0;\n\n  for (; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n    const v = (ch & 0xff80) ? -1 : TABLE[ch];\n\n    if (v === -1)\n      throw new Error('Non-base58 character.');\n\n    let carry = v;\n    let j = 0;\n\n    for (let k = b256.length - 1; k >= 0; k--, j++) {\n      if (carry === 0 && j >= length)\n        break;\n      carry += 58 * b256[k];\n      b256[k] = carry & 0xff;\n      carry >>>= 8;\n    }\n\n    assert(carry === 0);\n    length = j;\n  }\n\n  i = 0;\n  while (i < b256.length && b256[i] === 0)\n    i += 1;\n\n  const out = Buffer.allocUnsafe(zeroes + (b256.length - i));\n\n  let j;\n  for (j = 0; j < zeroes; j++)\n    out[j] = 0;\n\n  while (i < b256.length)\n    out[j++] = b256[i++];\n\n  return out;\n};\n\n/**\n * Test whether the string is a base58 string.\n * @param {String} str\n * @returns {Buffer}\n */\n\nexports.test = function test(str) {\n  if (typeof str !== 'string')\n    return false;\n\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch & 0xff80)\n      return false;\n\n    if (TABLE[ch] === -1)\n      return false;\n  }\n\n  return true;\n};\n","'use strict';\n\ntry {\n  module.exports = require('./binding').base58;\n} catch (e) {\n  module.exports = require('./base58-browser');\n}\n","/*!\n * bech32.js - bech32 for bcoin\n * Copyright (c) 2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n *\n * Parts of this software are based on \"bech32\".\n * https://github.com/sipa/bech32\n *\n * Copyright (c) 2017 Pieter Wuille\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\nconst assert = require('bsert');\n\n/**\n * Constants\n */\n\nconst POOL66 = Buffer.allocUnsafe(66);\nconst CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst TABLE = [\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  15, -1, 10, 17, 21, 20, 26, 30,  7,  5, -1, -1, -1, -1, -1, -1,\n  -1, 29, -1, 24, 13, 25,  9,  8, 23, -1, 18, 22, 31, 27, 19, -1,\n   1,  0,  3, 16, 11, 28, 12, 14,  6,  4,  2, -1, -1, -1, -1, -1,\n  -1, 29, -1, 24, 13, 25,  9,  8, 23, -1, 18, 22, 31, 27, 19, -1,\n   1,  0,  3, 16, 11, 28, 12, 14,  6,  4,  2, -1, -1, -1, -1, -1\n];\n\n/**\n * Update checksum.\n * @ignore\n * @param {Number} chk\n * @returns {Number}\n */\n\nfunction polymod(pre) {\n  const b = pre >>> 25;\n  return ((pre & 0x1ffffff) << 5)\n    ^ (-((b >>> 0) & 1) & 0x3b6a57b2)\n    ^ (-((b >>> 1) & 1) & 0x26508e6d)\n    ^ (-((b >>> 2) & 1) & 0x1ea119fa)\n    ^ (-((b >>> 3) & 1) & 0x3d4233dd)\n    ^ (-((b >>> 4) & 1) & 0x2a1462b3);\n}\n\n/**\n * Encode hrp and data as a bech32 string.\n * @ignore\n * @param {String} hrp\n * @param {Buffer} data\n * @returns {String}\n */\n\nfunction serialize(hrp, data) {\n  assert(typeof hrp === 'string');\n  assert(Buffer.isBuffer(data));\n\n  let chk = 1;\n  let i;\n\n  for (i = 0; i < hrp.length; i++) {\n    const ch = hrp.charCodeAt(i);\n\n    if ((ch & 0xff00) || (ch >>> 5) === 0)\n      throw new Error('Invalid bech32 character.');\n\n    chk = polymod(chk) ^ (ch >>> 5);\n  }\n\n  if (i + 7 + data.length > 90)\n    throw new Error('Invalid bech32 data length.');\n\n  chk = polymod(chk);\n\n  let str = '';\n\n  for (let i = 0; i < hrp.length; i++) {\n    const ch = hrp.charCodeAt(i);\n    chk = polymod(chk) ^ (ch & 0x1f);\n    str += hrp[i];\n  }\n\n  str += '1';\n\n  for (let i = 0; i < data.length; i++) {\n    const ch = data[i];\n\n    if ((ch >>> 5) !== 0)\n      throw new Error('Invalid bech32 value.');\n\n    chk = polymod(chk) ^ ch;\n    str += CHARSET[ch];\n  }\n\n  for (let i = 0; i < 6; i++)\n    chk = polymod(chk);\n\n  chk ^= 1;\n\n  for (let i = 0; i < 6; i++)\n    str += CHARSET[(chk >>> ((5 - i) * 5)) & 0x1f];\n\n  return str;\n}\n\n/**\n * Decode a bech32 string.\n * @param {String} str\n * @returns {Array} [hrp, data]\n */\n\nfunction deserialize(str) {\n  assert(typeof str === 'string');\n\n  if (str.length < 8 || str.length > 90)\n    throw new Error('Invalid bech32 string length.');\n\n  let dlen = 0;\n\n  while (dlen < str.length && str[(str.length - 1) - dlen] !== '1')\n    dlen += 1;\n\n  const hlen = str.length - (1 + dlen);\n\n  if (1 + dlen >= str.length || dlen < 6)\n    throw new Error('Invalid bech32 data length.');\n\n  dlen -= 6;\n\n  const data = Buffer.allocUnsafe(dlen);\n\n  let chk = 1;\n  let lower = false;\n  let upper = false;\n  let hrp = '';\n\n  for (let i = 0; i < hlen; i++) {\n    let ch = str.charCodeAt(i);\n\n    if (ch < 0x21 || ch > 0x7e)\n      throw new Error('Invalid bech32 character.');\n\n    if (ch >= 0x61 && ch <= 0x7a) {\n      lower = true;\n    } else if (ch >= 0x41 && ch <= 0x5a) {\n      upper = true;\n      ch = (ch - 0x41) + 0x61;\n    }\n\n    hrp += String.fromCharCode(ch);\n    chk = polymod(chk) ^ (ch >>> 5);\n  }\n\n  chk = polymod(chk);\n\n  let i;\n  for (i = 0; i < hlen; i++)\n    chk = polymod(chk) ^ (str.charCodeAt(i) & 0x1f);\n\n  i += 1;\n\n  while (i < str.length) {\n    const ch = str.charCodeAt(i);\n    const v = (ch & 0xff80) ? -1 : TABLE[ch];\n\n    if (v === -1)\n      throw new Error('Invalid bech32 character.');\n\n    if (ch >= 0x61 && ch <= 0x7a)\n      lower = true;\n    else if (ch >= 0x41 && ch <= 0x5a)\n      upper = true;\n\n    chk = polymod(chk) ^ v;\n\n    if (i + 6 < str.length)\n      data[i - (1 + hlen)] = v;\n\n    i += 1;\n  }\n\n  if (lower && upper)\n    throw new Error('Invalid bech32 casing.');\n\n  if (chk !== 1)\n    throw new Error('Invalid bech32 checksum.');\n\n  return [hrp, data.slice(0, dlen)];\n}\n\n/**\n * Test whether a string is a bech32 string.\n * @param {String} str\n * @returns {Boolean}\n */\n\nfunction is(str) {\n  if (typeof str !== 'string')\n    return false;\n\n  try {\n    deserialize(str);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Convert serialized data to another base.\n * @param {Buffer} input\n * @param {Number} i\n * @param {Buffer} output\n * @param {Number} j\n * @param {Number} frombits\n * @param {Number} tobits\n * @param {Boolean} pad\n * @returns {Buffer}\n */\n\nfunction convert(input, i, output, j, frombits, tobits, pad) {\n  assert(Buffer.isBuffer(input));\n  assert((i >>> 0) === i);\n  assert(Buffer.isBuffer(output));\n  assert((j >>> 0) === j);\n  assert((frombits & 0xff) === frombits);\n  assert((tobits & 0xff) === tobits);\n  assert(typeof pad === 'boolean');\n\n  const maxv = (1 << tobits) - 1;\n\n  let acc = 0;\n  let bits = 0;\n\n  for (; i < input.length; i++) {\n    const value = input[i];\n\n    if ((value >>> frombits) !== 0)\n      throw new Error('Invalid bits.');\n\n    acc = (acc << frombits) | value;\n    bits += frombits;\n\n    while (bits >= tobits) {\n      bits -= tobits;\n      output[j++] = (acc >>> bits) & maxv;\n    }\n  }\n\n  if (pad) {\n    if (bits)\n      output[j++] = (acc << (tobits - bits)) & maxv;\n  } else {\n    if (bits >= frombits || ((acc << (tobits - bits)) & maxv))\n      throw new Error('Invalid bits.');\n  }\n\n  assert(j <= output.length);\n\n  return output.slice(0, j);\n}\n\n/**\n * Calculate size required for bit conversion.\n * @param {Number} len\n * @param {Number} frombits\n * @param {Number} tobits\n * @param {Boolean} pad\n * @returns {Number}\n */\n\nfunction convertSize(len, frombits, tobits, pad) {\n  assert((len >>> 0) === len);\n  assert((frombits & 0xff) === frombits);\n  assert((tobits & 0xff) === tobits);\n  assert(typeof pad === 'boolean');\n  assert(tobits !== 0);\n\n  let size = (len * frombits + (tobits - 1)) / tobits;\n\n  size >>>= 0;\n\n  if (pad)\n    size += 1;\n\n  return size;\n}\n\n/**\n * Convert serialized data to another base.\n * @param {Buffer} data\n * @param {Number} frombits\n * @param {Number} tobits\n * @param {Boolean} pad\n * @returns {Buffer}\n */\n\nfunction convertBits(data, frombits, tobits, pad) {\n  assert(Buffer.isBuffer(data));\n  assert((frombits & 0xff) === frombits);\n  assert((tobits & 0xff) === tobits);\n  assert(typeof pad === 'boolean');\n\n  const size = convertSize(data.length, frombits, tobits, pad);\n  const out = Buffer.allocUnsafe(size);\n\n  return convert(data, 0, out, 0, frombits, tobits, pad);\n}\n\n/**\n * Serialize data to bech32 address.\n * @param {String} hrp\n * @param {Number} version\n * @param {Buffer} hash\n * @returns {String}\n */\n\nfunction encode(hrp, version, hash) {\n  assert(typeof hrp === 'string');\n  assert((version & 0xff) === version);\n  assert(Buffer.isBuffer(hash));\n\n  if (version < 0 || version > 31)\n    throw new Error('Invalid bech32 version.');\n\n  if (hash.length < 2 || hash.length > 40)\n    throw new Error('Invalid bech32 data length.');\n\n  const out = POOL66;\n  out[0] = version;\n\n  const data = convert(hash, 0, out, 1, 8, 5, true);\n\n  return serialize(hrp, data);\n}\n\n/**\n * Deserialize data from bech32 address.\n * @param {String} str\n * @returns {Object}\n */\n\nfunction decode(str) {\n  assert(typeof str === 'string');\n\n  const [hrp, data] = deserialize(str);\n\n  if (data.length === 0 || data.length > 65)\n    throw new Error('Invalid bech32 data length.');\n\n  const version = data[0];\n\n  if (version > 31)\n    throw new Error('Invalid bech32 version.');\n\n  const hash = convert(data, 1, data, 0, 5, 8, false);\n\n  if (hash.length < 2 || hash.length > 40)\n    throw new Error('Invalid bech32 data length.');\n\n  return new AddrResult(hrp, version, hash);\n}\n\n/**\n * Test whether a string is a bech32 string.\n * @param {String} str\n * @returns {Boolean}\n */\n\nfunction test(str) {\n  if (typeof str !== 'string')\n    return false;\n\n  let data;\n\n  try {\n    [, data] = deserialize(str);\n  } catch (e) {\n    return false;\n  }\n\n  if (data.length === 0 || data.length > 65)\n    return false;\n\n  const version = data[0];\n\n  if (version > 31)\n    return false;\n\n  return true;\n}\n\n/**\n * AddrResult\n * @constructor\n * @private\n * @param {String} hrp\n * @param {Number} version\n * @param {Buffer} hash\n * @property {String} hrp\n * @property {Number} version\n * @property {Buffer} hash\n */\n\nclass AddrResult {\n  constructor(hrp, version, hash) {\n    this.hrp = hrp;\n    this.version = version;\n    this.hash = hash;\n  }\n}\n\n/*\n * Expose\n */\n\nexports.serialize = serialize;\nexports.deserialize = deserialize;\nexports.is = is;\nexports.convertBits = convertBits;\nexports.encode = encode;\nexports.decode = decode;\nexports.test = test;\n","'use strict';\n\ntry {\n  module.exports = require('./binding').bech32;\n} catch (e) {\n  module.exports = require('./bech32-browser');\n}\n","/*!\n * cashaddr.js - cashaddr for bcash\n * Copyright (c) 2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n *\n * Implementation of CashAddr\n * https://github.com/bitcoincashorg/spec/blob/master/cashaddr.md\n *\n * Parts of this software are based on \"bitcoin-abc\".\n * https://github.com/Bitcoin-ABC/bitcoin-abc\n *\n * Parts of this software are based on \"bech32\".\n * https://github.com/sipa/bech32\n *\n * Copyright (c) 2017 Pieter Wuille\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\nconst assert = require('bsert');\n\n/**\n * U64\n */\n\nclass U64 {\n  constructor(hi, lo) {\n    this.hi = hi | 0;\n    this.lo = lo | 0;\n  }\n\n  ushrn32(bits) {\n    bits &= 63;\n\n    let lo = this.lo;\n\n    if (bits === 0)\n      return lo;\n\n    if (bits < 32) {\n      lo >>>= bits;\n      lo |= this.hi << (32 - bits);\n    } else {\n      lo = this.hi >>> (bits - 32);\n    }\n\n    return lo;\n  }\n}\n\n/**\n * Constants\n */\n\nconst POOL105 = Buffer.allocUnsafe(105);\nconst CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n\nconst TABLE = [\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  15, -1, 10, 17, 21, 20, 26, 30,  7,  5, -1, -1, -1, -1, -1, -1,\n  -1, 29, -1, 24, 13, 25,  9,  8, 23, -1, 18, 22, 31, 27, 19, -1,\n   1,  0,  3, 16, 11, 28, 12, 14,  6,  4,  2, -1, -1, -1, -1, -1,\n  -1, 29, -1, 24, 13, 25,  9,  8, 23, -1, 18, 22, 31, 27, 19, -1,\n   1,  0,  3, 16, 11, 28, 12, 14,  6,  4,  2, -1, -1, -1, -1, -1\n];\n\nconst CHECKSUM_MASK = new U64(0x00000007, 0xffffffff);\n\nconst GENERATOR = [\n  new U64(0x00000098, 0xf2bc8e61),\n  new U64(0x00000079, 0xb76d99e2),\n  new U64(0x000000f3, 0x3e5fb3c4),\n  new U64(0x000000ae, 0x2eabe2a8),\n  new U64(0x0000001e, 0x4f43e470)\n];\n\n/**\n * Update checksum\n * @ignore\n * @param {U64} chk\n * @param {Number} x\n * @returns {U64} -- new checksum\n */\n\nfunction polymod(pre, x) {\n  const c = pre;\n\n  // b = c >> 35\n  const b = c.hi >>> 3;\n\n  // c = (c & CHECKSUM_MASK) << 5\n  c.hi &= CHECKSUM_MASK.hi;\n  c.lo &= CHECKSUM_MASK.lo;\n  c.hi <<= 5;\n  c.hi |= c.lo >>> 27;\n  c.lo <<= 5;\n\n  for (let i = 0; i < GENERATOR.length; i++) {\n    if ((b >>> i) & 1) {\n      // c ^= GENERATOR[i]\n      c.hi ^= GENERATOR[i].hi;\n      c.lo ^= GENERATOR[i].lo;\n    }\n  }\n\n  // c ^= x\n  c.lo ^= x;\n\n  return c;\n}\n\n/**\n * Serialize data to cashaddr.\n * @param {String} prefix\n * @param {Buffer} data - 5bit serialized\n * @returns {String}\n */\n\nfunction serialize(prefix, data) {\n  assert(typeof prefix === 'string');\n  assert(Buffer.isBuffer(data));\n\n  const chk = new U64(0, 1);\n\n  let str = '';\n\n  let upper = false;\n  let lower = false;\n\n  for (let i = 0; i < prefix.length; i++) {\n    let ch = prefix.charCodeAt(i);\n\n    if ((ch & 0xff00) || (ch >>> 5) === 0)\n      throw new Error('Invalid cashaddr character.');\n\n    if (ch >= 0x61 && ch <= 0x7a) {\n      lower = true;\n    } else if (ch >= 0x41 && ch <= 0x5a) {\n      upper = true;\n      ch = (ch - 0x41) + 0x61;\n    } else if (ch >= 0x30 && ch <= 0x39) {\n      throw new Error('Invalid cashaddr prefix.');\n    }\n\n    polymod(chk, ch & 0x1f);\n\n    str += String.fromCharCode(ch);\n  }\n\n  if (lower && upper)\n    throw new Error('Invalid cashaddr prefix.');\n\n  polymod(chk, 0);\n  str += ':';\n\n  for (let i = 0; i < data.length; i++) {\n    const ch = data[i];\n\n    if ((ch >>> 5) !== 0)\n      throw new Error('Invalid cashaddr value.');\n\n    polymod(chk, ch);\n\n    str += CHARSET[ch];\n  }\n\n  for (let i = 0; i < 8; i++)\n    polymod(chk, 0);\n\n  chk.lo ^= 1;\n\n  for (let i = 0; i < 8; i++) {\n    const v = chk.ushrn32((7 - i) * 5) & 0x1f;\n\n    str += CHARSET[v];\n  }\n\n  return str;\n}\n\n/**\n * Decode CashAddr string.\n * @param {String} str\n * @param {String} defaultPrefix (lowercase and w/o numbers)\n * @returns {Array} [prefix, data]\n */\n\nfunction deserialize(str, defaultPrefix) {\n  assert(typeof str === 'string');\n\n  if (str.length < 8 || str.length > 196) // 83 + 1 + 112\n    throw new Error('Invalid cashaddr data length.');\n\n  let lower = false;\n  let upper = false;\n  let number = false;\n  let plen = 0;\n\n  // Process lower/upper, make sure we have prefix.\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch >= 0x61 && ch <= 0x7a) {\n      lower = true;\n      continue;\n    }\n\n    if (ch >= 0x41 && ch <= 0x5a) {\n      upper = true;\n      continue;\n    }\n\n    if (ch >= 0x30 && ch <= 0x39) {\n      number = true;\n      continue;\n    }\n\n    if (ch === 0x3a) { // :\n      if (number || i === 0 || i > 83)\n        throw new Error('Invalid cashaddr prefix.');\n\n      if (plen !== 0)\n        throw new Error('Invalid cashaddr separators.');\n\n      plen = i;\n\n      continue;\n    }\n\n    throw new Error('Invalid cashaddr character.');\n  }\n\n  if (upper && lower)\n    throw new Error('Invalid cashaddr casing.');\n\n  // Process checksum.\n  const chk = new U64(0, 1);\n\n  let prefix;\n\n  if (plen === 0) {\n    prefix = defaultPrefix.toLowerCase();\n  } else {\n    prefix = str.substring(0, plen).toLowerCase();\n    plen += 1;\n  }\n\n  // Process prefix.\n  for (let i = 0; i < prefix.length; i++) {\n    const ch = prefix.charCodeAt(i);\n\n    polymod(chk, (ch | 0x20) & 0x1f);\n  }\n\n  polymod(chk, 0);\n\n  const dlen = str.length - plen;\n\n  if (dlen <= 8 || dlen > 112)\n    throw new Error('Invalid cashaddr data length.');\n\n  const data = Buffer.allocUnsafe(dlen);\n\n  for (let i = plen; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n    const v = (ch & 0xff80) ? -1 : TABLE[ch];\n\n    if (v === -1)\n      throw new Error('Invalid cashaddr character.');\n\n    polymod(chk, v);\n\n    if (i + 8 < str.length)\n      data[i - plen] = v;\n  }\n\n  const valid = chk.hi === 0 && chk.lo === 1 && prefix === defaultPrefix;\n\n  if (!valid)\n    throw new Error('Invalid cashaddr checksum.');\n\n  return [prefix, data.slice(0, -8)];\n}\n\n/**\n * Convert serialized data to another base.\n * @param {Buffer} input\n * @param {Number} i\n * @param {Buffer} output\n * @param {Number} j\n * @param {Number} frombits\n * @param {Number} tobits\n * @param {Boolean} pad\n * @returns {Buffer}\n */\n\nfunction convert(input, i, output, j, frombits, tobits, pad) {\n  assert(Buffer.isBuffer(input));\n  assert((i >>> 0) === i);\n  assert(Buffer.isBuffer(output));\n  assert((j >>> 0) === j);\n  assert((frombits & 0xff) === frombits);\n  assert((tobits & 0xff) === tobits);\n  assert(typeof pad === 'boolean');\n\n  const maxv = (1 << tobits) - 1;\n\n  let acc = 0;\n  let bits = 0;\n\n  for (; i < input.length; i++) {\n    const value = input[i];\n\n    if ((value >>> frombits) !== 0)\n      throw new Error('Invalid bits.');\n\n    acc = (acc << frombits) | value;\n    bits += frombits;\n\n    while (bits >= tobits) {\n      bits -= tobits;\n      output[j++] = (acc >>> bits) & maxv;\n    }\n  }\n\n  if (pad) {\n    if (bits)\n      output[j++] = (acc << (tobits - bits)) & maxv;\n  } else {\n    if (bits >= frombits || ((acc << (tobits - bits)) & maxv))\n      throw new Error('Invalid bits.');\n  }\n\n  assert(j <= output.length);\n\n  return output.slice(0, j);\n}\n\n/**\n * Calculate size required for bit conversion.\n * @param {Number} len\n * @param {Number} frombits\n * @param {Number} tobits\n * @param {Boolean} pad\n * @returns {Number}\n */\n\nfunction convertSize(len, frombits, tobits, pad) {\n  assert((len >>> 0) === len);\n  assert((frombits & 0xff) === frombits);\n  assert((tobits & 0xff) === tobits);\n  assert(typeof pad === 'boolean');\n  assert(tobits !== 0);\n\n  let size = (len * frombits + (tobits - 1)) / tobits;\n\n  size >>>= 0;\n\n  if (pad)\n    size += 1;\n\n  return size;\n}\n\n/**\n * Convert serialized data to another base.\n * @param {Buffer} data\n * @param {Number} frombits\n * @param {Number} tobits\n * @param {Boolean} pad\n * @returns {Buffer}\n */\n\nfunction convertBits(data, frombits, tobits, pad) {\n  assert(Buffer.isBuffer(data));\n  assert((frombits & 0xff) === frombits);\n  assert((tobits & 0xff) === tobits);\n  assert(typeof pad === 'boolean');\n\n  const size = convertSize(data.length, frombits, tobits, pad);\n  const out = Buffer.allocUnsafe(size);\n\n  return convert(data, 0, out, 0, frombits, tobits, pad);\n}\n\n/**\n * Get cashaddr encoded size.\n * @param {Number} size\n * @returns {Number}\n */\n\nfunction encodedSize(size) {\n  assert((size >>> 0) === size);\n\n  switch (size) {\n    case 20:\n      return 0;\n    case 24:\n      return 1;\n    case 28:\n      return 2;\n    case 32:\n      return 3;\n    case 40:\n      return 4;\n    case 48:\n      return 5;\n    case 56:\n      return 6;\n    case 64:\n      return 7;\n    default:\n      throw new Error('Non standard length.');\n  }\n}\n\n/**\n * Serialize data to cashaddr\n * @param {String} prefix\n * @param {Number} type - (0 = P2PKH, 1 = P2SH)\n * @param {Buffer} hash\n * @returns {String}\n */\n\nfunction encode(prefix, type, hash) {\n  assert(typeof prefix === 'string');\n  // There are 4 bits available for the version (2 ^ 4 = 16)\n  assert((type & 0x0f) === type, 'Invalid cashaddr type.');\n  assert(Buffer.isBuffer(hash));\n\n  if (prefix.length === 0 || prefix.length > 83)\n    throw new Error('Invalid cashaddr prefix.');\n\n  const size = encodedSize(hash.length);\n  const data = Buffer.allocUnsafe(hash.length + 1);\n  data[0] = (type << 3) | size;\n  hash.copy(data, 1);\n\n  const output = POOL105;\n  const converted = convert(data, 0, output, 0, 8, 5, true);\n\n  return serialize(prefix, converted);\n}\n\n/**\n * Deserialize data from CashAddr address.\n * @param {String} str\n * @param {String} defaultPrefix (lowercase and w/o numbers)\n * @returns {Object}\n */\n\nfunction decode(str, defaultPrefix = 'bitcoincash') {\n  assert(typeof str === 'string');\n  assert(typeof defaultPrefix === 'string');\n\n  const [prefix, data] = deserialize(str, defaultPrefix);\n  const extrabits = (data.length * 5) & 7;\n\n  if (extrabits >= 5)\n    throw new Error('Invalid padding in data.');\n\n  const last = data[data.length - 1];\n  const mask = (1 << extrabits) - 1;\n\n  if (last & mask)\n    throw new Error('Non zero padding.');\n\n  const output = data;\n  const converted = convert(data, 0, output, 0, 5, 8, false);\n\n  const type = (converted[0] >>> 3) & 0x1f;\n  const hash = converted.slice(1);\n\n  let size = 20 + 4 * (converted[0] & 0x03);\n\n  if (converted[0] & 0x04)\n    size *= 2;\n\n  if (size !== hash.length)\n    throw new Error('Invalid cashaddr data length.');\n\n  return new AddrResult(prefix, type, hash);\n}\n\n/**\n * Test whether a string is a cashaddr string.\n * @param {String} str\n * @param {String} defaultPrefix (lowercase and w/o numbers)\n * @returns {Boolean}\n */\n\nfunction test(str, defaultPrefix = 'bitcoincash') {\n  try {\n    decode(str, defaultPrefix);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * AddrResult\n * @private\n * @property {String} prefix\n * @property {Number} type (0 = P2PKH, 1 = P2SH)\n * @property {Buffer} hash\n */\n\nclass AddrResult {\n  constructor(prefix, type, hash) {\n    this.prefix = prefix;\n    this.type = type;\n    this.hash = hash;\n  }\n}\n\n/*\n * Expose\n */\n\nconvertBits;\n\nexports.encode = encode;\nexports.decode = decode;\nexports.test = test;\n","'use strict';\n\ntry {\n  module.exports = require('./binding').cashaddr;\n} catch (e) {\n  module.exports = require('./cashaddr-browser');\n}\n","/*!\n * bstring\n * Copyright (c) 2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bstring\n */\n\n'use strict';\n\nexports.base58 = require('./base58');\nexports.bech32 = require('./bech32');\nexports.cashaddr = require('./cashaddr');\n","/**\n * @license\n * https://reviews.bitcoinabc.org\n * Copyright (c) 2017-2020 Emilio Almansi\n * Copyright (c) 2023 Bitcoin ABC\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n'use strict';\n\n/**\n * Validation utility.\n *\n * @module validation\n */\n\n/**\n * Error thrown when encoding or decoding fail due to invalid input.\n *\n * @constructor ValidationError\n * @param {string} message Error description.\n */\nfunction ValidationError(message) {\n    var error = new Error();\n    this.name = error.name = 'ValidationError';\n    this.message = error.message = message;\n    this.stack = error.stack;\n}\n\nValidationError.prototype = Object.create(Error.prototype);\n\n/**\n * Validates a given condition, throwing a {@link ValidationError} if\n * the given condition does not hold.\n *\n * @static\n * @param {boolean} condition Condition to validate.\n * @param {string} message Error message in case the condition does not hold.\n */\nfunction validate(condition, message) {\n    if (!condition) {\n        throw new ValidationError(message);\n    }\n}\n\nmodule.exports = {\n    ValidationError: ValidationError,\n    validate: validate,\n};\n","/**\n * @license\n * https://reviews.bitcoinabc.org\n * Copyright (c) 2017-2020 Emilio Almansi\n * Copyright (c) 2023 Bitcoin ABC\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n'use strict';\n\nvar validate = require('./validation').validate;\n\n/**\n * Base32 encoding and decoding.\n *\n * @module base32\n */\n\n/**\n * Charset containing the 32 symbols used in the base32 encoding.\n * @private\n */\nvar CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n\n/**\n * Inverted index mapping each symbol into its index within the charset.\n * @private\n */\nvar CHARSET_INVERSE_INDEX = {\n    q: 0,\n    p: 1,\n    z: 2,\n    r: 3,\n    y: 4,\n    9: 5,\n    x: 6,\n    8: 7,\n    g: 8,\n    f: 9,\n    2: 10,\n    t: 11,\n    v: 12,\n    d: 13,\n    w: 14,\n    0: 15,\n    s: 16,\n    3: 17,\n    j: 18,\n    n: 19,\n    5: 20,\n    4: 21,\n    k: 22,\n    h: 23,\n    c: 24,\n    e: 25,\n    6: 26,\n    m: 27,\n    u: 28,\n    a: 29,\n    7: 30,\n    l: 31,\n};\n\n/**\n * Encodes the given array of 5-bit integers as a base32-encoded string.\n *\n * @static\n * @param {Uint8Array} data Array of integers between 0 and 31 inclusive.\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction encode(data) {\n    validate(data instanceof Uint8Array, 'Invalid data: ' + data + '.');\n    var base32 = '';\n    for (var i = 0; i < data.length; ++i) {\n        var value = data[i];\n        validate(0 <= value && value < 32, 'Invalid value: ' + value + '.');\n        base32 += CHARSET[value];\n    }\n    return base32;\n}\n\n/**\n * Decodes the given base32-encoded string into an array of 5-bit integers.\n *\n * @static\n * @param {string} string\n * @returns {Uint8Array}\n * @throws {ValidationError}\n */\nfunction decode(string) {\n    validate(\n        typeof string === 'string',\n        'Invalid base32-encoded string: ' + string + '.',\n    );\n    var data = new Uint8Array(string.length);\n    for (var i = 0; i < string.length; ++i) {\n        var value = string[i];\n        validate(\n            value in CHARSET_INVERSE_INDEX,\n            'Invalid value: ' + value + '.',\n        );\n        data[i] = CHARSET_INVERSE_INDEX[value];\n    }\n    return data;\n}\n\nmodule.exports = {\n    encode: encode,\n    decode: decode,\n};\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        LOG_MAX_INT = Math.log(MAX_INT);\r\n\r\n    function Integer(v, radix) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        var value = n.value;\r\n        if (value === 0) return false;\r\n        if (value === 1) return true;\r\n        if (value === 2) return this.isEven();\r\n        return this.mod(n).equals(Integer[0]);\r\n    };\r\n    SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n    \r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next : for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;    \r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n// Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if(bits <= 64)\r\n            return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\r\n        var logN = Math.log(2) * bits;\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.equals(bigInt.zero)) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return ((typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE) ||\r\n            (n instanceof BigInteger && n.value.length <= 1);\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (n) {\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (n) {\r\n        var remQuo;\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value, x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = Math.min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var length = range.value.length - 1;\r\n        var result = [], restricted = true;\r\n        for (var i = length; i >= 0; i--) {\r\n            var top = restricted ? range.value[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.unshift(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        result = arrayToSmall(result);\r\n        return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\r\n    }\r\n    var parseBase = function (text, base) {\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        for (var i = 0; i < length; i++) {\r\n            var c = text[i].toLowerCase();\r\n            if (c === \"-\") continue;\r\n            if (/[a-z0-9]/.test(c)) {\r\n                if (/[0-9]/.test(c) && +c >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                } else if (c.charCodeAt(0) - 87 >= absBase) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        if (2 <= base && base <= 36) {\r\n            if (length <= LOG_MAX_INT / Math.log(base)) {\r\n                var result = parseInt(text, base);\r\n                if (isNaN(result)) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n                return new SmallInteger(parseInt(text, base));\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i].toLowerCase(),\r\n                charCode = c.charCodeAt(0);\r\n            if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));\r\n            else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\");\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit) {\r\n        if (digit <= 35) {\r\n            return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit);\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(+n - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.equals(1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(+n))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(stringify).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix);\r\n        return String(this.value);\r\n    };\r\n    BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = new SmallInteger(i);\r\n        if (i > 0) Integer[-i] = new SmallInteger(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isBytes = isBytes;\nexports.number = number;\nexports.bool = bool;\nexports.bytes = bytes;\nexports.hash = hash;\nexports.exists = exists;\nexports.output = output;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = { number, bool, bytes, hash, exists, output };\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Hash = exports.nextTick = exports.byteSwapIfBE = exports.byteSwap = exports.isLE = exports.rotl = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\nexports.isBytes = isBytes;\nexports.byteSwap32 = byteSwap32;\nexports.bytesToHex = bytesToHex;\nexports.hexToBytes = hexToBytes;\nexports.asyncLoop = asyncLoop;\nexports.utf8ToBytes = utf8ToBytes;\nexports.toBytes = toBytes;\nexports.concatBytes = concatBytes;\nexports.checkOpts = checkOpts;\nexports.wrapConstructor = wrapConstructor;\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\nexports.randomBytes = randomBytes;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\nconst _assert_js_1 = require(\"./_assert.js\");\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexports.rotl = rotl;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nconst byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\nexports.byteSwap = byteSwap;\n// Conditionally byte swap if on a big-endian platform\nexports.byteSwapIfBE = exports.isLE ? (n) => n : (n) => (0, exports.byteSwap)(n);\n// In place byte swap for Uint32Array\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = (0, exports.byteSwap)(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0, _assert_js_1.bytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    (0, _assert_js_1.bytes)(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0, _assert_js_1.bytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto_1.crypto && typeof crypto_1.crypto.randomBytes === 'function') {\n        return crypto_1.crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HashMD = exports.Maj = exports.Chi = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n/**\n * Polyfill for Safari 14\n */\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/**\n * Choice: a ? b : c\n */\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\nexports.Chi = Chi;\n/**\n * Majority function, true if any two inputs is true\n */\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\nexports.Maj = Maj;\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nclass HashMD extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.HashMD = HashMD;\n//# sourceMappingURL=_md.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = exports.SHA256 = void 0;\nconst _md_js_1 = require(\"./_md.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends _md_js_1.HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + (0, _md_js_1.Chi)(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + (0, _md_js_1.Maj)(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\nexports.SHA256 = SHA256;\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\n/**\n * SHA2-224 hash function\n */\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n\nvar base58 = require('bs58')\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var payloadU8 = Uint8Array.from(payload)\n    var checksum = checksumFn(payloadU8)\n    var length = payloadU8.length + 4\n    var both = new Uint8Array(length)\n    both.set(payloadU8, 0)\n    both.set(checksum.subarray(0, 4), payloadU8.length)\n    return base58.encode(both, length)\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n","'use strict'\n\nvar { sha256 } = require('@noble/hashes/sha256')\nvar bs58checkBase = require('./base')\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  return sha256(sha256(buffer))\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n","// Copyright (c) 2017-2018 Emilio Almansi\n// Copyright (c) 2017 Pieter Wuille\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar validate = require('./validation').validate;\n\n/**\n * Converts an array of integers made up of 'from' bits into an\n * array of integers made up of 'to' bits. The output array is\n * zero-padded if necessary, unless strict mode is true.\n * Throws a {@link ValidationError} if input is invalid.\n * Original by Pieter Wuille: https://github.com/sipa/bech32.\n *\n * @param {Uint8Array} data Array of integers made up of 'from' bits.\n * @param {number} from Length in bits of elements in the input array.\n * @param {number} to Length in bits of elements in the output array.\n * @param {bool} strictMode Require the conversion to be completed without padding.\n * @returns {Uint8Array}\n */\nmodule.exports = function (data, from, to, strictMode) {\n    var length = strictMode\n        ? Math.floor((data.length * from) / to)\n        : Math.ceil((data.length * from) / to);\n    var mask = (1 << to) - 1;\n    var result = new Uint8Array(length);\n    var index = 0;\n    var accumulator = 0;\n    var bits = 0;\n    for (var i = 0; i < data.length; ++i) {\n        var value = data[i];\n        validate(\n            0 <= value && value >> from === 0,\n            'Invalid value: ' + value + '.',\n        );\n        accumulator = (accumulator << from) | value;\n        bits += from;\n        while (bits >= to) {\n            bits -= to;\n            result[index] = (accumulator >> bits) & mask;\n            ++index;\n        }\n    }\n    if (!strictMode) {\n        if (bits > 0) {\n            result[index] = (accumulator << (to - bits)) & mask;\n            ++index;\n        }\n    } else {\n        validate(\n            bits < from && ((accumulator << (to - bits)) & mask) === 0,\n            'Input cannot be converted to ' +\n                to +\n                ' bits without padding, but strict mode was used.',\n        );\n    }\n    return result;\n};\n","/**\n * @license\n * https://reviews.bitcoinabc.org\n * Copyright (c) 2017-2020 Emilio Almansi\n * Copyright (c) 2023 Bitcoin ABC\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n'use strict';\n\nvar base32 = require('./base32');\nvar bigInt = require('big-integer');\nvar bs58check = require('bs58check');\nvar convertBits = require('./convertBits');\nvar validation = require('./validation');\nvar validate = validation.validate;\n\n/**\n * Encoding and decoding of the new Cash Address format for eCash. <br />\n * Compliant with the original cashaddr specification:\n * {@link https://github.com/bitcoincashorg/bitcoincash.org/blob/master/spec/cashaddr.md}\n * @module cashaddr\n */\n\n/**\n * Encodes a hash from a given type into an eCash address with the given prefix.\n *\n * @static\n * @param {string} prefix Cash address prefix. E.g.: 'ecash'.\n * @param {string} type Type of address to generate. Either 'P2PKH' or 'P2SH'. Case-insensitive.\n * @param {Uint8Array or string} hash Hash to encode represented as an array of 8-bit integers.\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction encode(prefix, type, hash) {\n    validate(\n        typeof prefix === 'string' && isValidPrefix(prefix),\n        'Invalid prefix: ' + prefix + '.',\n    );\n    validate(typeof type === 'string', 'Invalid type: ' + type + '.');\n    validate(\n        hash instanceof Uint8Array || typeof hash === 'string',\n        'Invalid hash: ' + hash + '. Must be string or Uint8Array.',\n    );\n    if (typeof hash === 'string') {\n        hash = stringToUint8Array(hash);\n    }\n    var prefixData = concat(prefixToUint5Array(prefix), new Uint8Array(1));\n    var versionByte = getTypeBits(type.toUpperCase()) + getHashSizeBits(hash);\n    var payloadData = toUint5Array(concat(new Uint8Array([versionByte]), hash));\n    var checksumData = concat(\n        concat(prefixData, payloadData),\n        new Uint8Array(8),\n    );\n    var payload = concat(\n        payloadData,\n        checksumToUint5Array(polymod(checksumData)),\n    );\n    return prefix + ':' + base32.encode(payload);\n}\n\n/**\n * Decodes the given address into its constituting prefix, type and hash. See [#encode()]{@link encode}.\n *\n * @static\n * @param {string} address Address to decode. E.g.: 'ecash:qpm2qsznhks23z7629mms6s4cwef74vcwva87rkuu2'.\n * @param {chronikReady} bool Return hash160 as a string, and return type as lowercase. Inputs expected by chronik.\n * @returns {object}\n * @throws {ValidationError}\n */\nfunction decode(address, chronikReady = false) {\n    validate(\n        typeof address === 'string' && hasSingleCase(address),\n        'Invalid address: ' + address + '.',\n    );\n    var pieces = address.toLowerCase().split(':');\n    // if there is no prefix, it might still be valid\n    let prefix, payload;\n    if (pieces.length === 1) {\n        // Check and see if it has a valid checksum for accepted prefixes\n        let hasValidChecksum = false;\n        for (let i = 0; i < VALID_PREFIXES.length; i += 1) {\n            const testedPrefix = VALID_PREFIXES[i];\n            const prefixlessPayload = base32.decode(pieces[0]);\n            hasValidChecksum = validChecksum(testedPrefix, prefixlessPayload);\n            if (hasValidChecksum) {\n                // Here's your prefix\n                prefix = testedPrefix;\n                payload = prefixlessPayload;\n                // Stop testing other prefixes\n                break;\n            }\n        }\n        validate(\n            hasValidChecksum,\n            `Prefixless address ${address} does not have valid checksum for any valid prefix (${VALID_PREFIXES.join(\n                ', ',\n            )})`,\n        );\n    } else {\n        validate(pieces.length === 2, 'Invalid address: ' + address + '.');\n        prefix = pieces[0];\n        payload = base32.decode(pieces[1]);\n        validate(\n            validChecksum(prefix, payload),\n            'Invalid checksum: ' + address + '.',\n        );\n    }\n\n    var payloadData = fromUint5Array(payload.subarray(0, -8));\n    var versionByte = payloadData[0];\n    var hash = payloadData.subarray(1);\n    validate(\n        getHashSize(versionByte) === hash.length * 8,\n        'Invalid hash size: ' + address + '.',\n    );\n    var type = getType(versionByte);\n    return {\n        prefix: prefix,\n        type: chronikReady ? type.toLowerCase() : type,\n        hash: chronikReady ? uint8arraytoString(hash) : hash,\n    };\n}\n\n/**\n * Error thrown when encoding or decoding fail due to invalid input.\n *\n * @constructor ValidationError\n * @param {string} message Error description.\n */\nvar ValidationError = validation.ValidationError;\n\n/**\n * All valid address prefixes.\n *\n * @private\n */\nvar VALID_PREFIXES = [\n    'ecash',\n    'bitcoincash',\n    'simpleledger',\n    'etoken',\n    'ectest',\n    'ecregtest',\n    'bchtest',\n    'bchreg',\n];\n\n/**\n * Valid mainnet prefixes\n *\n * @private\n */\nvar VALID_PREFIXES_MAINNET = ['ecash', 'bitcoincash', 'simpleledger', 'etoken'];\n\n/**\n * Checks whether a string is a valid prefix; ie., it has a single letter case\n * and is one of 'ecash', 'ectest', 'etoken', etc\n *\n * @private\n * @param {string} prefix\n * @returns {boolean}\n */\nfunction isValidPrefix(prefix) {\n    return (\n        hasSingleCase(prefix) &&\n        VALID_PREFIXES.indexOf(prefix.toLowerCase()) !== -1\n    );\n}\n\n/**\n * Derives an array from the given prefix to be used in the computation\n * of the address' checksum.\n *\n * @private\n * @param {string} prefix Cash address prefix. E.g.: 'ecash'.\n * @returns {Uint8Array}\n */\nfunction prefixToUint5Array(prefix) {\n    var result = new Uint8Array(prefix.length);\n    for (var i = 0; i < prefix.length; ++i) {\n        result[i] = prefix[i].charCodeAt(0) & 31;\n    }\n    return result;\n}\n\n/**\n * Returns an array representation of the given checksum to be encoded\n * within the address' payload.\n *\n * @private\n * @param {BigInteger} checksum Computed checksum.\n * @returns {Uint8Array}\n */\nfunction checksumToUint5Array(checksum) {\n    var result = new Uint8Array(8);\n    for (var i = 0; i < 8; ++i) {\n        result[7 - i] = checksum.and(31).toJSNumber();\n        checksum = checksum.shiftRight(5);\n    }\n    return result;\n}\n\n/**\n * Returns the bit representation of the given type within the version\n * byte.\n *\n * @private\n * @param {string} type Address type. Either 'P2PKH' or 'P2SH'.\n * @returns {number}\n * @throws {ValidationError}\n */\nfunction getTypeBits(type) {\n    switch (type) {\n        case 'p2pkh':\n        case 'P2PKH':\n            return 0;\n        case 'p2sh':\n        case 'P2SH':\n            return 8;\n        default:\n            throw new ValidationError('Invalid type: ' + type + '.');\n    }\n}\n\n/**\n * Retrieves the address type from its bit representation within the\n * version byte.\n *\n * @private\n * @param {number} versionByte\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction getType(versionByte) {\n    switch (versionByte & 120) {\n        case 0:\n            return 'P2PKH';\n        case 8:\n            return 'P2SH';\n        default:\n            throw new ValidationError(\n                'Invalid address type in version byte: ' + versionByte + '.',\n            );\n    }\n}\n\n/**\n * Returns the bit representation of the length in bits of the given\n * hash within the version byte.\n *\n * @private\n * @param {Uint8Array} hash Hash to encode represented as an array of 8-bit integers.\n * @returns {number}\n * @throws {ValidationError}\n */\nfunction getHashSizeBits(hash) {\n    switch (hash.length * 8) {\n        case 160:\n            return 0;\n        case 192:\n            return 1;\n        case 224:\n            return 2;\n        case 256:\n            return 3;\n        case 320:\n            return 4;\n        case 384:\n            return 5;\n        case 448:\n            return 6;\n        case 512:\n            return 7;\n        default:\n            throw new ValidationError(\n                'Invalid hash size: ' + hash.length + '.',\n            );\n    }\n}\n\n/**\n * Retrieves the the length in bits of the encoded hash from its bit\n * representation within the version byte.\n *\n * @private\n * @param {number} versionByte\n * @returns {number}\n */\nfunction getHashSize(versionByte) {\n    switch (versionByte & 7) {\n        case 0:\n            return 160;\n        case 1:\n            return 192;\n        case 2:\n            return 224;\n        case 3:\n            return 256;\n        case 4:\n            return 320;\n        case 5:\n            return 384;\n        case 6:\n            return 448;\n        case 7:\n            return 512;\n    }\n}\n\n/**\n * Converts an array of 8-bit integers into an array of 5-bit integers,\n * right-padding with zeroes if necessary.\n *\n * @private\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nfunction toUint5Array(data) {\n    return convertBits(data, 8, 5);\n}\n\n/**\n * Converts an array of 5-bit integers back into an array of 8-bit integers,\n * removing extra zeroes left from padding if necessary.\n * Throws a {@link ValidationError} if input is not a zero-padded array of 8-bit integers.\n *\n * @private\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n * @throws {ValidationError}\n */\nfunction fromUint5Array(data) {\n    return convertBits(data, 5, 8, true);\n}\n\n/**\n * Returns the concatenation a and b.\n *\n * @private\n * @param {Uint8Array} a\n * @param {Uint8Array} b\n * @returns {Uint8Array}\n * @throws {ValidationError}\n */\nfunction concat(a, b) {\n    var ab = new Uint8Array(a.length + b.length);\n    ab.set(a);\n    ab.set(b, a.length);\n    return ab;\n}\n\n/**\n * Computes a checksum from the given input data as specified for the CashAddr\n * format: https://github.com/Bitcoin-UAHF/spec/blob/master/cashaddr.md.\n *\n * @private\n * @param {Uint8Array} data Array of 5-bit integers over which the checksum is to be computed.\n * @returns {BigInteger}\n */\nfunction polymod(data) {\n    var GENERATOR = [\n        0x98f2bc8e61, 0x79b76d99e2, 0xf33e5fb3c4, 0xae2eabe2a8, 0x1e4f43e470,\n    ];\n    var checksum = bigInt(1);\n    for (var i = 0; i < data.length; ++i) {\n        var value = data[i];\n        var topBits = checksum.shiftRight(35);\n        checksum = checksum.and(0x07ffffffff).shiftLeft(5).xor(value);\n        for (var j = 0; j < GENERATOR.length; ++j) {\n            if (topBits.shiftRight(j).and(1).equals(1)) {\n                checksum = checksum.xor(GENERATOR[j]);\n            }\n        }\n    }\n    return checksum.xor(1);\n}\n\n/**\n * Verify that the payload has not been corrupted by checking that the\n * checksum is valid.\n *\n * @private\n * @param {string} prefix Cash address prefix. E.g.: 'ecash'.\n * @param {Uint8Array} payload Array of 5-bit integers containing the address' payload.\n * @returns {boolean}\n */\nfunction validChecksum(prefix, payload) {\n    var prefixData = concat(prefixToUint5Array(prefix), new Uint8Array(1));\n    var checksumData = concat(prefixData, payload);\n    return polymod(checksumData).equals(0);\n}\n\n/**\n * Returns true if, and only if, the given string contains either uppercase\n * or lowercase letters, but not both.\n *\n * @private\n * @param {string} string Input string.\n * @returns {boolean}\n */\nfunction hasSingleCase(string) {\n    return string === string.toLowerCase() || string === string.toUpperCase();\n}\n\n/**\n * Returns a uint8array for a given string input\n *\n * @private\n * @param {string} string Input string.\n * @returns {Uint8Array}\n */\nfunction stringToUint8Array(string) {\n    const buffer = Buffer.from(string, 'hex');\n    const arrayBuffer = new ArrayBuffer(buffer.length);\n    const uint8Array = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < uint8Array.length; i += 1) {\n        uint8Array[i] = buffer[i];\n    }\n    return uint8Array;\n}\n\n/**\n * Returns a uint8array for a given string input\n *\n * @private\n * @param {Uint8Array} uint8Array Input string.\n * @returns {string}\n */\nfunction uint8arraytoString(uint8Array) {\n    let buffer = [];\n    for (let i = 0; i < uint8Array.length; i += 1) {\n        buffer.push(uint8Array[i]);\n    }\n    const hexBuffer = Buffer.from(buffer, 'hex');\n    const string = hexBuffer.toString('hex');\n    return string;\n}\n\n/**\n * Get type and hash from an outputScript\n *\n * Supported outputScripts:\n *\n * P2PKH: 76a914<hash>88ac\n * P2SH:  a914<hash>87\n *\n * Validates for supported outputScript and hash length *\n *\n * @private\n * @param {string} outputScript an ecash tx outputScript\n * @returns {object}\n * @throws {ValidationError}\n */\nfunction getTypeAndHashFromOutputScript(outputScript) {\n    const p2pkhPrefix = '76a914';\n    const p2pkhSuffix = '88ac';\n\n    const p2shPrefix = 'a914';\n    const p2shSuffix = '87';\n\n    let hash, type;\n\n    // If outputScript begins with '76a914' and ends with '88ac'\n    if (\n        outputScript.slice(0, p2pkhPrefix.length) === p2pkhPrefix &&\n        outputScript.slice(-1 * p2pkhSuffix.length) === p2pkhSuffix\n    ) {\n        // We have type p2pkh\n        type = 'p2pkh';\n\n        // hash is the string in between '76a194' and '88ac'\n        hash = outputScript.substring(\n            outputScript.indexOf(p2pkhPrefix) + p2pkhPrefix.length,\n            outputScript.lastIndexOf(p2pkhSuffix),\n        );\n        // If outputScript begins with 'a914' and ends with '87'\n    } else if (\n        outputScript.slice(0, p2shPrefix.length) === p2shPrefix &&\n        outputScript.slice(-1 * p2shSuffix.length) === p2shSuffix\n    ) {\n        // We have type p2sh\n        type = 'p2sh';\n        // hash is the string in between 'a914' and '87'\n        hash = outputScript.substring(\n            outputScript.indexOf(p2shPrefix) + p2shPrefix.length,\n            outputScript.lastIndexOf(p2shSuffix),\n        );\n    } else {\n        // Throw validation error if outputScript not of these two types\n        throw new ValidationError('Unsupported outputScript: ' + outputScript);\n    }\n\n    // Throw validation error if hash is of invalid size\n    // Per spec, valid hash sizes in bytes\n    const VALID_SIZES = [20, 24, 28, 32, 40, 48, 56, 64];\n\n    if (!VALID_SIZES.includes(hash.length / 2)) {\n        throw new ValidationError(\n            'Invalid hash size in outputScript: ' + outputScript,\n        );\n    }\n    return { type, hash };\n}\n\n/**\n * Encodes a given outputScript into an eCash address using the optionally specified prefix.\n *\n * @static\n * @param {string} outputScript an ecash tx outputScript\n * @param {string} prefix Cash address prefix. E.g.: 'ecash'.\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction encodeOutputScript(outputScript, prefix = 'ecash') {\n    // Get type and hash from outputScript\n    const { type, hash } = getTypeAndHashFromOutputScript(outputScript);\n\n    // The encode function validates hash for correct length\n    return encode(prefix, type, hash);\n}\n\n/**\n * Converts an ecash address to legacy format\n *\n * @static\n * @param {string} cashaddress a valid p2pkh or p2sh ecash address\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction toLegacy(cashaddress) {\n    const { prefix, type, hash } = decode(cashaddress);\n    const isMainnet = VALID_PREFIXES_MAINNET.includes(prefix);\n    // Get correct version byte for legacy format\n    let versionByte;\n    switch (type) {\n        case 'P2PKH':\n            versionByte = isMainnet ? 0 : 111;\n            break;\n        case 'P2SH':\n            versionByte = isMainnet ? 5 : 196;\n            break;\n        default:\n            throw new ValidationError('Unsupported address type: ' + type);\n    }\n    var buffer = Buffer.alloc(1 + hash.length);\n    buffer[0] = versionByte;\n    buffer.set(hash, 1);\n    return bs58check.encode(buffer);\n}\n\n/**\n * Return true for a valid cashaddress\n * Prefixless addresses with valid checksum are also valid\n *\n * @static\n * @param {string} testedAddress a string tested for cashaddress validity\n * @param {string} optionalPrefix cashaddr prefix\n * @returns {bool}\n * @throws {ValidationError}\n */\nfunction isValidCashAddress(cashaddress, optionalPrefix = false) {\n    try {\n        const { prefix } = decode(cashaddress);\n        if (optionalPrefix) {\n            return prefix === optionalPrefix;\n        }\n        return true;\n    } catch (err) {\n        return false;\n    }\n}\n\n/**\n * Return true for a valid cashaddress\n * Prefixless addresses with valid checksum are also valid\n *\n * @static\n * @param {string} address a valid p2pkh or p2sh cash address\n * @returns {string} the outputScript associated with this address and type\n * @throws {ValidationError} if decode fails\n */\nfunction getOutputScriptFromAddress(address) {\n    const { type, hash } = decode(address, true);\n    let registrationOutputScript;\n    if (type === 'p2pkh') {\n        registrationOutputScript = `76a914${hash}88ac`;\n    } else {\n        registrationOutputScript = `a914${hash}87`;\n    }\n    return registrationOutputScript;\n}\n\nmodule.exports = {\n    encode: encode,\n    decode: decode,\n    uint8arraytoString: uint8arraytoString,\n    encodeOutputScript: encodeOutputScript,\n    getTypeAndHashFromOutputScript: getTypeAndHashFromOutputScript,\n    toLegacy: toLegacy,\n    isValidCashAddress: isValidCashAddress,\n    getOutputScriptFromAddress: getOutputScriptFromAddress,\n    ValidationError: ValidationError,\n};\n","/*!\n * assert.js - assert for bcrypto\n * Copyright (c) 2020, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\n/*\n * Assert\n */\n\nfunction assert(val, msg) {\n  if (!val) {\n    const err = new Error(msg || 'Assertion failed');\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(err, assert);\n\n    throw err;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = assert;\n","/*!\n * hmac.js - hmac for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/HMAC\n *   https://tools.ietf.org/html/rfc2104\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/hmac.js\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/**\n * HMAC\n */\n\nclass HMAC {\n  /**\n   * Create an HMAC.\n   * @param {Function} Hash\n   * @param {Number} size\n   * @param {Array} [x=[]]\n   * @param {Array} [y=[]]\n   */\n\n  constructor(Hash, size, x = [], y = []) {\n    assert(typeof Hash === 'function');\n    assert((size >>> 0) === size);\n    assert(Array.isArray(x));\n    assert(Array.isArray(y));\n\n    this.hash = Hash;\n    this.size = size;\n    this.x = x;\n    this.y = y;\n\n    this.inner = new Hash();\n    this.outer = new Hash();\n  }\n\n  /**\n   * Initialize HMAC context.\n   * @param {Buffer} data\n   */\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n\n    // Shorten key\n    if (key.length > this.size) {\n      const Hash = this.hash;\n      const h = new Hash();\n\n      h.init(...this.x);\n      h.update(key);\n\n      key = h.final(...this.y);\n\n      assert(key.length <= this.size);\n    }\n\n    // Pad key\n    const pad = Buffer.alloc(this.size);\n\n    for (let i = 0; i < key.length; i++)\n      pad[i] = key[i] ^ 0x36;\n\n    for (let i = key.length; i < pad.length; i++)\n      pad[i] = 0x36;\n\n    this.inner.init(...this.x);\n    this.inner.update(pad);\n\n    for (let i = 0; i < key.length; i++)\n      pad[i] = key[i] ^ 0x5c;\n\n    for (let i = key.length; i < pad.length; i++)\n      pad[i] = 0x5c;\n\n    this.outer.init(...this.x);\n    this.outer.update(pad);\n\n    return this;\n  }\n\n  /**\n   * Update HMAC context.\n   * @param {Buffer} data\n   */\n\n  update(data) {\n    this.inner.update(data);\n    return this;\n  }\n\n  /**\n   * Finalize HMAC context.\n   * @returns {Buffer}\n   */\n\n  final() {\n    this.outer.update(this.inner.final(...this.y));\n    return this.outer.final(...this.y);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = HMAC;","/*!\n * sha256.js - SHA256 implementation for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-2\n *   https://tools.ietf.org/html/rfc4634\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/sha/256.js\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst HMAC = require('./internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = -1;\nconst DESC = Buffer.alloc(8, 0x00);\nconst PADDING = Buffer.alloc(64, 0x00);\n\nPADDING[0] = 0x80;\n\nconst K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n/**\n * SHA256\n */\n\nclass SHA256 {\n  constructor() {\n    this.state = new Uint32Array(8);\n    this.msg = new Uint32Array(64);\n    this.block = Buffer.alloc(64);\n    this.size = FINALIZED;\n  }\n\n  init() {\n    this.state[0] = 0x6a09e667;\n    this.state[1] = 0xbb67ae85;\n    this.state[2] = 0x3c6ef372;\n    this.state[3] = 0xa54ff53a;\n    this.state[4] = 0x510e527f;\n    this.state[5] = 0x9b05688c;\n    this.state[6] = 0x1f83d9ab;\n    this.state[7] = 0x5be0cd19;\n    this.size = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    this._update(data, data.length);\n    return this;\n  }\n\n  final() {\n    return this._final(Buffer.alloc(32));\n  }\n\n  _update(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 63;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 64 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 64)\n        return;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= 64) {\n      this._transform(data, off);\n      off += 64;\n      len -= 64;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  _final(out) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    const pos = this.size & 63;\n    const len = this.size * 8;\n\n    writeU32(DESC, (len * (1 / 0x100000000)) >>> 0, 0);\n    writeU32(DESC, len >>> 0, 4);\n\n    this._update(PADDING, 1 + ((119 - pos) & 63));\n    this._update(DESC, 8);\n\n    for (let i = 0; i < 8; i++) {\n      writeU32(out, this.state[i], i * 4);\n      this.state[i] = 0;\n    }\n\n    for (let i = 0; i < 64; i++)\n      this.msg[i] = 0;\n\n    for (let i = 0; i < 64; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n\n    return out;\n  }\n\n  _transform(chunk, pos) {\n    const W = this.msg;\n\n    let a = this.state[0];\n    let b = this.state[1];\n    let c = this.state[2];\n    let d = this.state[3];\n    let e = this.state[4];\n    let f = this.state[5];\n    let g = this.state[6];\n    let h = this.state[7];\n    let i = 0;\n\n    for (; i < 16; i++)\n      W[i] = readU32(chunk, pos + i * 4);\n\n    for (; i < 64; i++)\n      W[i] = sigma1(W[i - 2]) + W[i - 7] + sigma0(W[i - 15]) + W[i - 16];\n\n    for (i = 0; i < 64; i++) {\n      const t1 = h + Sigma1(e) + Ch(e, f, g) + K[i] + W[i];\n      const t2 = Sigma0(a) + Maj(a, b, c);\n\n      h = g;\n      g = f;\n      f = e;\n\n      e = (d + t1) >>> 0;\n\n      d = c;\n      c = b;\n      b = a;\n\n      a = (t1 + t2) >>> 0;\n    }\n\n    this.state[0] += a;\n    this.state[1] += b;\n    this.state[2] += c;\n    this.state[3] += d;\n    this.state[4] += e;\n    this.state[5] += f;\n    this.state[6] += g;\n    this.state[7] += h;\n  }\n\n  static hash() {\n    return new SHA256();\n  }\n\n  static hmac() {\n    return new HMAC(SHA256, 64);\n  }\n\n  static digest(data) {\n    return SHA256.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 32);\n    assert(Buffer.isBuffer(right) && right.length === 32);\n    return SHA256.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = SHA256;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return SHA256.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nSHA256.native = 0;\nSHA256.id = 'SHA256';\nSHA256.size = 32;\nSHA256.bits = 256;\nSHA256.blockSize = 64;\nSHA256.zero = Buffer.alloc(32, 0x00);\nSHA256.ctx = new SHA256();\n\n/*\n * Helpers\n */\n\nfunction Sigma0(x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);\n}\n\nfunction Sigma1(x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);\n}\n\nfunction sigma0(x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3);\n}\n\nfunction sigma1(x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10);\n}\n\nfunction Ch(x, y, z) {\n  return z ^ (x & (y ^ z));\n}\n\nfunction Maj(x, y, z) {\n  return (x & y) | (z & (x | y));\n}\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction writeU32(data, num, off) {\n  data[off++] = num >>> 24;\n  data[off++] = num >>> 16;\n  data[off++] = num >>> 8;\n  data[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = SHA256;","/*!\n * ripemd160.js - RIPEMD160 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/RIPEMD-160\n *   https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/ripemd.js\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst HMAC = require('./internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = -1;\nconst DESC = Buffer.alloc(8, 0x00);\nconst PADDING = Buffer.alloc(64, 0x00);\n\nPADDING[0] = 0x80;\n\nconst r = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]);\n\nconst rh = new Uint8Array([\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]);\n\nconst s = new Uint8Array([\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]);\n\nconst sh = new Uint8Array([\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]);\n\n/**\n * RIPEMD160\n */\n\nclass RIPEMD160 {\n  constructor() {\n    this.state = new Uint32Array(5);\n    this.msg = new Uint32Array(16);\n    this.block = Buffer.alloc(64);\n    this.size = FINALIZED;\n  }\n\n  init() {\n    this.state[0] = 0x67452301;\n    this.state[1] = 0xefcdab89;\n    this.state[2] = 0x98badcfe;\n    this.state[3] = 0x10325476;\n    this.state[4] = 0xc3d2e1f0;\n    this.size = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    this._update(data, data.length);\n    return this;\n  }\n\n  final() {\n    return this._final(Buffer.alloc(20));\n  }\n\n  _update(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 63;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 64 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 64)\n        return;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= 64) {\n      this._transform(data, off);\n      off += 64;\n      len -= 64;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  _final(out) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    const pos = this.size & 63;\n    const len = this.size * 8;\n\n    writeU32(DESC, len >>> 0, 0);\n    writeU32(DESC, (len * (1 / 0x100000000)) >>> 0, 4);\n\n    this._update(PADDING, 1 + ((119 - pos) & 63));\n    this._update(DESC, 8);\n\n    for (let i = 0; i < 5; i++) {\n      writeU32(out, this.state[i], i * 4);\n      this.state[i] = 0;\n    }\n\n    for (let i = 0; i < 16; i++)\n      this.msg[i] = 0;\n\n    for (let i = 0; i < 64; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n\n    return out;\n  }\n\n  _transform(chunk, pos) {\n    const W = this.msg;\n\n    let A = this.state[0];\n    let B = this.state[1];\n    let C = this.state[2];\n    let D = this.state[3];\n    let E = this.state[4];\n    let Ah = A;\n    let Bh = B;\n    let Ch = C;\n    let Dh = D;\n    let Eh = E;\n\n    for (let i = 0; i < 16; i++)\n      W[i] = readU32(chunk, pos + i * 4);\n\n    for (let j = 0; j < 80; j++) {\n      let a = A + f(j, B, C, D) + W[r[j]] + K(j);\n      let b = rotl32(a, s[j]);\n      let T = b + E;\n\n      A = E;\n      E = D;\n      D = rotl32(C, 10);\n      C = B;\n      B = T;\n\n      a = Ah + f(79 - j, Bh, Ch, Dh) + W[rh[j]] + Kh(j);\n      b = rotl32(a, sh[j]);\n      T = b + Eh;\n      Ah = Eh;\n      Eh = Dh;\n      Dh = rotl32(Ch, 10);\n      Ch = Bh;\n      Bh = T;\n    }\n\n    const T = this.state[1] + C + Dh;\n\n    this.state[1] = this.state[2] + D + Eh;\n    this.state[2] = this.state[3] + E + Ah;\n    this.state[3] = this.state[4] + A + Bh;\n    this.state[4] = this.state[0] + B + Ch;\n    this.state[0] = T;\n  }\n\n  static hash() {\n    return new RIPEMD160();\n  }\n\n  static hmac() {\n    return new HMAC(RIPEMD160, 64);\n  }\n\n  static digest(data) {\n    return RIPEMD160.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 20);\n    assert(Buffer.isBuffer(right) && right.length === 20);\n    return RIPEMD160.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = RIPEMD160;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return RIPEMD160.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nRIPEMD160.native = 0;\nRIPEMD160.id = 'RIPEMD160';\nRIPEMD160.size = 20;\nRIPEMD160.bits = 160;\nRIPEMD160.blockSize = 64;\nRIPEMD160.zero = Buffer.alloc(20, 0x00);\nRIPEMD160.ctx = new RIPEMD160();\n\n/*\n * Helpers\n */\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n\n  if (j <= 31)\n    return (x & y) | ((~x) & z);\n\n  if (j <= 47)\n    return (x | (~y)) ^ z;\n\n  if (j <= 63)\n    return (x & z) | (y & (~z));\n\n  return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n\n  if (j <= 31)\n    return 0x5a827999;\n\n  if (j <= 47)\n    return 0x6ed9eba1;\n\n  if (j <= 63)\n    return 0x8f1bbcdc;\n\n  return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n\n  if (j <= 31)\n    return 0x5c4dd124;\n\n  if (j <= 47)\n    return 0x6d703ef3;\n\n  if (j <= 63)\n    return 0x7a6d76e9;\n\n  return 0x00000000;\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = RIPEMD160;","/*!\n * hash160.js - Hash160 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://github.com/bitcoin/bitcoin/blob/master/src/hash.h\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst SHA256 = require('./sha256');\nconst RIPEMD160 = require('./ripemd160');\nconst HMAC = require('./internal/hmac');\n\n/*\n * Constants\n */\n\nconst rmd = new RIPEMD160();\n\n/**\n * Hash160\n */\n\nclass Hash160 {\n  constructor() {\n    this.ctx = new SHA256();\n  }\n\n  init() {\n    this.ctx.init();\n    return this;\n  }\n\n  update(data) {\n    this.ctx.update(data);\n    return this;\n  }\n\n  final() {\n    const out = Buffer.alloc(32);\n\n    this.ctx._final(out);\n\n    rmd.init();\n    rmd.update(out);\n    rmd._final(out);\n\n    return out.slice(0, 20);\n  }\n\n  static hash() {\n    return new Hash160();\n  }\n\n  static hmac() {\n    return new HMAC(Hash160, 64);\n  }\n\n  static digest(data) {\n    return Hash160.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 20);\n    assert(Buffer.isBuffer(right) && right.length === 20);\n    return Hash160.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = Hash160;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return Hash160.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nHash160.native = 0;\nHash160.id = 'HASH160';\nHash160.size = 20;\nHash160.bits = 160;\nHash160.blockSize = 64;\nHash160.zero = Buffer.alloc(20, 0x00);\nHash160.ctx = new Hash160();\n\n/*\n * Expose\n */\n\nmodule.exports = Hash160;","/*!\n * hash256.js - Hash256 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://github.com/bitcoin/bitcoin/blob/master/src/hash.h\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst SHA256 = require('./sha256');\nconst HMAC = require('./internal/hmac');\n\n/**\n * Hash256\n */\n\nclass Hash256 {\n  constructor() {\n    this.ctx = new SHA256();\n  }\n\n  init() {\n    this.ctx.init();\n    return this;\n  }\n\n  update(data) {\n    this.ctx.update(data);\n    return this;\n  }\n\n  final() {\n    const out = Buffer.alloc(32);\n\n    this.ctx._final(out);\n    this.ctx.init();\n    this.ctx.update(out);\n    this.ctx._final(out);\n\n    return out;\n  }\n\n  static hash() {\n    return new Hash256();\n  }\n\n  static hmac() {\n    return new HMAC(Hash256, 64);\n  }\n\n  static digest(data) {\n    return Hash256.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 32);\n    assert(Buffer.isBuffer(right) && right.length === 32);\n    return Hash256.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = Hash256;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return Hash256.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nHash256.native = 0;\nHash256.id = 'HASH256';\nHash256.size = 32;\nHash256.bits = 256;\nHash256.blockSize = 64;\nHash256.zero = Buffer.alloc(32, 0x00);\nHash256.ctx = new Hash256();\n\n/*\n * Expose\n */\n\nmodule.exports = Hash256;","/*!\n * binary.js - binary search utils for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * Perform a binary search on a sorted array.\n * @param {Array} items\n * @param {Object} key\n * @param {Function} compare\n * @param {Boolean?} insert\n * @returns {Number} Index.\n */\n\nexports.search = function search(items, key, compare, insert) {\n  let start = 0;\n  let end = items.length - 1;\n\n  while (start <= end) {\n    const pos = (start + end) >>> 1;\n    const cmp = compare(items[pos], key);\n\n    if (cmp === 0)\n      return pos;\n\n    if (cmp < 0)\n      start = pos + 1;\n    else\n      end = pos - 1;\n  }\n\n  if (!insert)\n    return -1;\n\n  return start;\n};\n\n/**\n * Perform a binary insert on a sorted array.\n * @param {Array} items\n * @param {Object} item\n * @param {Function} compare\n * @returns {Number} index\n */\n\nexports.insert = function insert(items, item, compare, uniq) {\n  const i = exports.search(items, item, compare, true);\n\n  if (uniq && i < items.length) {\n    if (compare(items[i], item) === 0)\n      return -1;\n  }\n\n  if (i === 0)\n    items.unshift(item);\n  else if (i === items.length)\n    items.push(item);\n  else\n    items.splice(i, 0, item);\n\n  return i;\n};\n\n/**\n * Perform a binary removal on a sorted array.\n * @param {Array} items\n * @param {Object} item\n * @param {Function} compare\n * @returns {Boolean}\n */\n\nexports.remove = function remove(items, item, compare) {\n  const i = exports.search(items, item, compare, false);\n\n  if (i === -1)\n    return false;\n\n  splice(items, i);\n\n  return true;\n};\n\n/*\n * Helpers\n */\n\nfunction splice(list, i) {\n  if (i === 0) {\n    list.shift();\n    return;\n  }\n\n  let k = i + 1;\n\n  while (k < list.length)\n    list[i++] = list[k++];\n\n  list.pop();\n}\n","/*!\n * custom.js - custom inspect symbol for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst {inspect} = require('util');\n\nexports.custom = inspect.custom || 'inspect';","/*!\n * bn.js - big numbers for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/bn.js:\n *   Copyright (c) 2015, Fedor Indutny (MIT License).\n *   https://github.com/indutny/bn.js\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Parts of this software are based on openssl/openssl:\n *   Copyright (c) 1998-2018, The OpenSSL Project (Apache License v2.0).\n *   Copyright (c) 1995-1998, Eric A. Young, Tim J. Hudson. All rights reserved.\n *   https://github.com/openssl/openssl\n *\n * Parts of this software are based on libgmp:\n *   Copyright (c) 1991-1997, 1999-2014, Free Software Foundation, Inc.\n *   https://gmplib.org/\n *\n * Parts of this software are based on v8/v8:\n *   Copyright (c) 2017, The V8 Project Authors (BSD-Style License).\n *   https://github.com/v8/v8\n *\n * Resources:\n *   https://github.com/indutny/bn.js/blob/master/lib/bn.js\n *   https://github.com/indutny/miller-rabin/blob/master/lib/mr.js\n *   https://github.com/golang/go/blob/master/src/math/big/int.go\n *   https://github.com/golang/go/blob/master/src/math/big/nat.go\n *   https://github.com/golang/go/blob/master/src/math/big/prime.go\n *   https://github.com/openssl/openssl/tree/master/crypto/bn\n *   https://github.com/openssl/openssl/blob/master/crypto/bn/bn_kron.c\n *   https://github.com/gnutls/nettle/blob/master/mini-gmp.c\n *   https://github.com/v8/v8/blob/master/src/objects/bigint.cc\n */\n\n/* eslint valid-typeof: \"off\" */\n\n'use strict';\n\nconst {custom} = require('./internal/custom');\n\n/*\n * Constants\n */\n\nconst zeros = [\n  '',\n  '0',\n  '00',\n  '000',\n  '0000',\n  '00000',\n  '000000',\n  '0000000',\n  '00000000',\n  '000000000',\n  '0000000000',\n  '00000000000',\n  '000000000000',\n  '0000000000000',\n  '00000000000000',\n  '000000000000000',\n  '0000000000000000',\n  '00000000000000000',\n  '000000000000000000',\n  '0000000000000000000',\n  '00000000000000000000',\n  '000000000000000000000',\n  '0000000000000000000000',\n  '00000000000000000000000',\n  '000000000000000000000000',\n  '0000000000000000000000000'\n];\n\nconst groupSizes = [\n  0x00, 0x19, 0x10, 0x0c, 0x0b, 0x0a,\n  0x09, 0x08, 0x08, 0x07, 0x07, 0x07,\n  0x07, 0x06, 0x06, 0x06, 0x06, 0x06,\n  0x06, 0x06, 0x05, 0x05, 0x05, 0x05,\n  0x05, 0x05, 0x05, 0x05, 0x05, 0x05,\n  0x05, 0x05, 0x05, 0x05, 0x05, 0x05\n];\n\nconst groupBases = [\n  0x00000000, 0x02000000, 0x0290d741, 0x01000000,\n  0x02e90edd, 0x039aa400, 0x0267bf47, 0x01000000,\n  0x0290d741, 0x00989680, 0x012959c3, 0x0222c000,\n  0x03bd7765, 0x0072e440, 0x00adcea1, 0x01000000,\n  0x01704f61, 0x0206fc40, 0x02cddcf9, 0x03d09000,\n  0x003e5185, 0x004ea360, 0x006235f7, 0x00798000,\n  0x009502f9, 0x00b54ba0, 0x00daf26b, 0x01069c00,\n  0x0138f9ad, 0x0172c9e0, 0x01b4d89f, 0x02000000,\n  0x025528a1, 0x02b54a20, 0x03216b93, 0x039aa400\n];\n\nconst primes = {\n  p192: null,\n  p224: null,\n  p521: null,\n  k256: null,\n  p251: null,\n  p25519: null,\n  p448: null\n};\n\nconst modes = {\n  NONE: 0,\n  QUO: 1,\n  REM: 2,\n  BOTH: 3,\n  EUCLID: 4,\n  ALL: 7\n};\n\nconst WND_WIDTH = 4;\nconst WND_SIZE = 1 << (WND_WIDTH - 1);\n\nconst HAS_BIGINT = typeof BigInt === 'function';\n\n/**\n * BN\n */\n\nclass BN {\n  constructor(num, base, endian) {\n    this.words = [0];\n    this.length = 1;\n    this.negative = 0;\n    this.red = null;\n    this.from(num, base, endian);\n  }\n\n  /*\n   * Addition Engine\n   */\n\n  _iadd(a, b) {\n    let carry = 0;\n    let i = 0;\n\n    // a.length > b.length\n    if (a.length < b.length)\n      [a, b] = [b, a];\n\n    if (a !== this)\n      this._alloc(a.length);\n\n    for (; i < b.length; i++) {\n      const r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n\n      this.words[i] = r & 0x3ffffff;\n\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      const r = (a.words[i] | 0) + carry;\n\n      this.words[i] = r & 0x3ffffff;\n\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this._alloc(this.length + 1);\n      this.words[this.length++] = carry;\n    } else if (a !== this) {\n      // Copy the rest of the words.\n      for (; i < a.length; i++)\n        this.words[i] = a.words[i];\n    }\n\n    // Note: we shouldn't need to strip here.\n    return this;\n  }\n\n  _iaddn(num) {\n    this.words[0] += num;\n\n    if (this.words[0] < 0x4000000)\n      return this;\n\n    // Carry.\n    let i = 0;\n\n    this._alloc(this.length + 1);\n\n    this.words[this.length] = 0;\n\n    for (; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      this.words[i + 1] += 1;\n    }\n\n    this.length = Math.max(this.length, i + 1);\n\n    // Note: we shouldn't need to strip here.\n    return this;\n  }\n\n  /*\n   * Addition\n   */\n\n  iadd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.negative === num.negative) {\n      // x + y == x + y\n      // (-x) + (-y) == -(x + y)\n      this._iadd(this, num);\n    } else {\n      // x + (-y) == x - y == -(y - x)\n      // (-x) + y == y - x == -(x - y)\n      const cmp = this.ucmp(num);\n\n      // x + (-x) == (-x) + x == 0\n      if (cmp === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n        this.negative = 0;\n        return this;\n      }\n\n      if (cmp < 0) {\n        this._isub(num, this);\n        this.negative ^= 1;\n      } else {\n        this._isub(this, num);\n      }\n    }\n\n    return this;\n  }\n\n  iaddn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const negative = (num < 0) | 0;\n\n    if (negative)\n      num = -num;\n\n    if (this.negative === negative) {\n      // x + y == x + y\n      // (-x) + (-y) == -(x + y)\n      this._iaddn(num);\n    } else {\n      // x + (-y) == x - y == -(y - x)\n      // (-x) + y == y - x == -(x - y)\n      if (this.length === 1 && this.words[0] < num) {\n        this.words[0] = num - this.words[0];\n        this.negative ^= 1;\n      } else {\n        this._isubn(num);\n      }\n    }\n\n    return this;\n  }\n\n  add(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (num.length > this.length)\n      return num.clone().iadd(this);\n\n    return this.clone().iadd(num);\n  }\n\n  addn(num) {\n    return this.clone().iaddn(num);\n  }\n\n  /*\n   * Subtraction Engine\n   */\n\n  _isub(a, b) {\n    let carry = 0;\n    let i = 0;\n\n    // a > b\n    assert(a.length >= b.length);\n\n    if (a !== this)\n      this._alloc(a.length);\n\n    for (; i < b.length; i++) {\n      const r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n\n      carry = r >> 26;\n\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      const r = (a.words[i] | 0) + carry;\n\n      carry = r >> 26;\n\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    assert(carry === 0);\n\n    // Copy rest of the words.\n    if (a !== this) {\n      for (; i < a.length; i++)\n        this.words[i] = a.words[i];\n    }\n\n    this.length = Math.max(this.length, i);\n\n    return this._strip();\n  }\n\n  _isubn(num) {\n    this.words[0] -= num;\n\n    if (this.words[0] >= 0)\n      return this._normalize();\n\n    assert(this.length !== 1);\n\n    // Carry.\n    this._alloc(this.length + 1);\n\n    for (let i = 0; i < this.length && this.words[i] < 0; i++) {\n      this.words[i] += 0x4000000;\n      this.words[i + 1] -= 1;\n    }\n\n    this.words[this.length] = 0;\n\n    return this._strip();\n  }\n\n  /*\n   * Subtraction\n   */\n\n  isub(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.negative !== num.negative) {\n      // x - (-y) == x + y\n      // (-x) - y == -(x + y)\n      this._iadd(this, num);\n    } else {\n      // x - y == x - y == -(y - x)\n      // (-x) - (-y) == y - x == -(x - y)\n      const cmp = this.ucmp(num);\n\n      // x - x == 0\n      if (cmp === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n        this.negative = 0;\n        return this;\n      }\n\n      if (cmp < 0) {\n        this._isub(num, this);\n        this.negative ^= 1;\n      } else {\n        this._isub(this, num);\n      }\n    }\n\n    return this;\n  }\n\n  isubn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const negative = (num < 0) | 0;\n\n    if (negative)\n      num = -num;\n\n    if (this.negative !== negative) {\n      // x - (-y) == x + y\n      // (-x) - y == -(x + y)\n      this._iaddn(num);\n    } else {\n      // x - y == x - y == -(y - x)\n      // (-x) - (-y) == y - x == -(x - y)\n      if (this.length === 1 && this.words[0] < num) {\n        this.words[0] = num - this.words[0];\n        this.negative ^= 1;\n      } else {\n        this._isubn(num);\n      }\n    }\n\n    return this;\n  }\n\n  sub(num) {\n    return this.clone().isub(num);\n  }\n\n  subn(num) {\n    return this.clone().isubn(num);\n  }\n\n  /*\n   * Multiplication Engine\n   */\n\n  _mul(num, out) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    enforce(BN.isBN(out), 'out', 'bignum');\n\n    if (this.length === 10 && num.length === 10)\n      return comb10MulTo(this, num, out);\n\n    const len = this.length + num.length;\n\n    if (len < 63)\n      return smallMulTo(this, num, out);\n\n    if (len < 1024)\n      return bigMulTo(this, num, out);\n\n    return jumboMulTo(this, num, out);\n  }\n\n  /*\n   * Multiplication\n   */\n\n  imul(num) {\n    return this.mul(num)._move(this);\n  }\n\n  imuln(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const neg = (num < 0) | 0;\n\n    if (neg)\n      num = -num;\n\n    // Carry.\n    let carry = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      const w = this.words[i] * num;\n      const lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      carry += lo >>> 26;\n\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    this.negative ^= neg;\n\n    if (carry !== 0) {\n      this._alloc(this.length + 1);\n      this.words[this.length++] = carry;\n    } else {\n      this._strip();\n    }\n\n    return this;\n  }\n\n  mul(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    const len = this.length + num.length;\n    const out = new BN();\n\n    out.words = new Array(len);\n\n    for (let i = 0; i < len; i ++)\n      out.words[i] = 0;\n\n    return this._mul(num, out);\n  }\n\n  muln(num) {\n    return this.clone().imuln(num);\n  }\n\n  /*\n   * Multiplication + Shift\n   */\n\n  mulShift(num, bits) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    const r = this.mul(num);\n    const b = r.utestn(bits - 1);\n\n    r.iushrn(bits);\n\n    if (this.negative ^ num.negative)\n      return r.isubn(b);\n\n    return r.iaddn(b);\n  }\n\n  /*\n   * Division Engine\n   */\n\n  _div(num, flags) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    assert((flags & modes.ALL) === flags);\n    assert(flags !== modes.NONE);\n\n    const a = this;\n    const b = num;\n\n    nonzero(!b.isZero());\n\n    if (a.isZero())\n      return [new BN(0), new BN(0)];\n\n    const as = a.negative;\n    const bs = b.negative;\n\n    a.negative = 0;\n    b.negative = 0;\n\n    let q = null;\n    let r = null;\n\n    if (a.ucmp(b) < 0) {\n      if (flags & modes.QUO)\n        q = new BN(0);\n\n      if (flags & modes.REM)\n        r = a.clone();\n    } else if (b.length === 1) {\n      if (flags & modes.QUO)\n        q = a.quon(b.words[0]);\n\n      if (flags & modes.REM)\n        r = a.remn(b.words[0]);\n    } else {\n      [q, r] = a._wordDiv(b, flags);\n    }\n\n    a.negative = as;\n    b.negative = bs;\n\n    if (flags & modes.QUO) {\n      q.negative = a.negative ^ b.negative;\n      q._normalize();\n    }\n\n    if (flags & modes.REM) {\n      r.negative = a.negative;\n      r._normalize();\n    }\n\n    if (flags & modes.EUCLID) {\n      if (flags & modes.QUO) {\n        assert((flags & modes.REM) !== 0);\n\n        if (r.negative !== 0) {\n          if (b.negative !== 0)\n            q.iaddn(1);\n          else\n            q.isubn(1);\n        }\n      }\n\n      if (flags & modes.REM) {\n        if (r.negative !== 0) {\n          if (b.negative !== 0)\n            r.isub(b);\n          else\n            r.iadd(b);\n        }\n      }\n    }\n\n    return [q, r];\n  }\n\n  _wordDiv(num, flags) {\n    let a = this.clone();\n    let b = num;\n    let q = null;\n    let hi;\n\n    // Normalize.\n    const word = b.words[b.length - 1] | 0;\n    const shift = 26 - countBits(word);\n\n    if (shift !== 0) {\n      b = b.clone();\n\n      a.iushln(shift);\n      b.iushln(shift);\n\n      hi = b.words[b.length - 1] | 0;\n    } else {\n      hi = word;\n    }\n\n    // Initialize quotient.\n    const m = a.length - b.length;\n\n    assert(m >= 0);\n\n    if (flags & modes.QUO) {\n      q = new BN(0);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (let i = 0; i < q.length; i++)\n        q.words[i] = 0;\n    }\n\n    // Diff.\n    const d = a.clone();\n\n    d._ishlnsubmul(b, 1, m);\n\n    if (d.negative === 0) {\n      if (q)\n        q.words[m] = 1;\n\n      a = d;\n    }\n\n    // Divide.\n    for (let j = m - 1; j >= 0; j--) {\n      const ahi = a.words[b.length + j];\n      const alo = a.words[b.length + j - 1];\n      const quo = ((ahi * 0x4000000 + alo) / hi) | 0;\n\n      let qj = Math.min(quo, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj -= 1;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        a.ineg();\n      }\n\n      if (q)\n        q.words[j] = qj;\n    }\n\n    // Strip.\n    if (q)\n      q._strip();\n\n    // Denormalize.\n    // Note: we shouldn't need to strip `a` here.\n    if ((flags & modes.REM) && shift !== 0)\n      a.iushrn(shift);\n\n    return [q, a];\n  }\n\n  _ishlnsubmul(num, mul, shift) {\n    let carry = 0;\n    let i = 0;\n\n    this._expand(num.length + shift);\n\n    for (; i < num.length; i++) {\n      const k = (this.words[i + shift] | 0) + carry;\n      const r = num.words[i] * mul;\n      const w = k - (r & 0x3ffffff);\n\n      carry = (w >> 26) - ((r / 0x4000000) | 0);\n\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      const w = (this.words[i + shift] | 0) + carry;\n\n      carry = w >> 26;\n\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0)\n      return this._strip();\n\n    // Subtraction overflow.\n    assert(carry === -1);\n\n    carry = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      const w = -(this.words[i] | 0) + carry;\n\n      carry = w >> 26;\n\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n\n    return this._strip();\n  }\n\n  /*\n   * Truncation Division + Modulo\n   */\n\n  quorem(num) {\n    return this._div(num, modes.BOTH);\n  }\n\n  /*\n   * Truncation Division\n   */\n\n  iquo(num) {\n    return this.quo(num)._move(this);\n  }\n\n  iquon(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    nonzero(num !== 0);\n\n    const neg = (num < 0) | 0;\n\n    if (neg)\n      num = -num;\n\n    let carry = 0;\n\n    for (let i = this.length - 1; i >= 0; i--) {\n      const w = (this.words[i] | 0) + carry * 0x4000000;\n\n      this.words[i] = (w / num) | 0;\n\n      carry = w % num;\n    }\n\n    this.negative ^= neg;\n\n    return this._strip();\n  }\n\n  quo(num) {\n    return this._div(num, modes.QUO)[0];\n  }\n\n  quon(num) {\n    return this.clone().iquon(num);\n  }\n\n  /*\n   * Truncation Modulo\n   */\n\n  irem(num) {\n    return this.rem(num)._move(this);\n  }\n\n  iremn(num) {\n    let m = this.remrn(num);\n\n    if (m < 0)\n      m = -m;\n\n    this.words[0] = m;\n    this.length = 1;\n\n    return this._normalize();\n  }\n\n  rem(num) {\n    return this._div(num, modes.REM)[1];\n  }\n\n  remn(num) {\n    return this.clone().iremn(num);\n  }\n\n  remrn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    nonzero(num !== 0);\n\n    if (num < 0)\n      num = -num;\n\n    const p = (1 << 26) % num;\n\n    let acc = 0;\n\n    for (let i = this.length - 1; i >= 0; i--)\n      acc = (p * acc + (this.words[i] | 0)) % num;\n\n    return this.negative !== 0 ? (-acc | 0) : acc;\n  }\n\n  /*\n   * Euclidean Division + Modulo\n   */\n\n  divmod(num) {\n    return this._div(num, modes.BOTH | modes.EUCLID);\n  }\n\n  /*\n   * Euclidean Division\n   */\n\n  idiv(num) {\n    return this.div(num)._move(this);\n  }\n\n  idivn(num) {\n    if (this.negative === 0)\n      return this.iquon(num);\n\n    const r = this.remrn(num);\n\n    this.iquon(num);\n\n    if (r < 0) {\n      if (num < 0)\n        this.iaddn(1);\n      else\n        this.isubn(1);\n    }\n\n    return this;\n  }\n\n  div(num) {\n    return this._div(num, modes.BOTH | modes.EUCLID)[0];\n  }\n\n  divn(num) {\n    return this.clone().idivn(num);\n  }\n\n  /*\n   * Euclidean Modulo\n   */\n\n  imod(num) {\n    if (this.ucmp(num) < 0) {\n      if (this.negative !== 0) {\n        this._isub(num, this);\n        this.negative = 0;\n      }\n      return this;\n    }\n\n    return this.mod(num)._move(this);\n  }\n\n  imodn(num) {\n    this.words[0] = this.modrn(num);\n    this.length = 1;\n    this.negative = 0;\n    return this;\n  }\n\n  mod(num) {\n    return this._div(num, modes.REM | modes.EUCLID)[1];\n  }\n\n  modn(num) {\n    return this.clone().imodn(num);\n  }\n\n  modrn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    let r = this.remrn(num);\n\n    if (r < 0) {\n      if (num < 0)\n        r -= num;\n      else\n        r += num;\n    }\n\n    return r;\n  }\n\n  /*\n   * Round Division\n   */\n\n  divRound(num) {\n    const [q, r] = this.quorem(num);\n\n    // Fast case - exact division.\n    if (r.isZero())\n      return q;\n\n    const bit = num.words[0] & 1;\n\n    num.iushrn(1);\n\n    const cmp = r.ucmp(num);\n\n    num.iushln(1);\n\n    num.words[0] |= bit;\n\n    // Round down.\n    if (cmp < 0 || (num.isOdd() && cmp === 0))\n      return q;\n\n    // Round up.\n    if (this.negative ^ num.negative)\n      return q.isubn(1);\n\n    return q.iaddn(1);\n  }\n\n  /*\n   * Exponentiation\n   */\n\n  ipow(num) {\n    return this.pow(num)._move(this);\n  }\n\n  ipown(num) {\n    return this.pown(num)._move(this);\n  }\n\n  pow(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let b = countBits(num.words[num.length - 1]);\n    let r = new BN(1);\n\n    for (let i = num.length - 1; i >= 0; i--) {\n      const word = num.words[i];\n\n      for (let j = b - 1; j >= 0; j--) {\n        r = r.sqr();\n\n        if ((word >> j) & 1)\n          r = r.mul(this);\n      }\n\n      b = 26;\n    }\n\n    return r;\n  }\n\n  pown(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if (num < 0)\n      num = -num;\n\n    if (num === 0)\n      return new BN(1);\n\n    if (num === 1)\n      return this.clone();\n\n    const bits = countBits(num);\n\n    let r = this;\n\n    for (let i = bits - 2; i >= 0; i--) {\n      r = r.sqr();\n\n      if ((num >> i) & 1)\n        r = r.mul(this);\n    }\n\n    return r;\n  }\n\n  isqr() {\n    return this.imul(this);\n  }\n\n  sqr() {\n    return this.mul(this);\n  }\n\n  /*\n   * Roots Engine\n   */\n\n  _rootrem(pow, rem) {\n    enforce((pow >>> 0) === pow, 'num', 'uint32');\n\n    if (pow === 0)\n      throw new RangeError('Zeroth root.');\n\n    if (~pow & this.negative)\n      throw new RangeError('Negative with even root.');\n\n    if (this.ucmpn(1) <= 0)\n      return [this.clone(), new BN(0)];\n\n    let u = new BN(0);\n    let t = BN.shift(1, this.bitLength() / pow + 1 | 0);\n    let v, r;\n\n    if (this.negative !== 0)\n      t.ineg();\n\n    if (pow === 2) {\n      do {\n        u = t;\n        t = this.quo(u);\n        t.iadd(u);\n        t.iushrn(1);\n      } while (t.ucmp(u) < 0);\n    } else {\n      do {\n        u = t;\n        t = u.pown(pow - 1);\n        t = this.quo(t);\n        v = u.muln(pow - 1);\n        t.iadd(v);\n        t = t.quon(pow);\n      } while (t.ucmp(u) < 0);\n    }\n\n    if (rem) {\n      t = u.pown(pow);\n      r = this.sub(t);\n    }\n\n    return [u, r];\n  }\n\n  /*\n   * Roots\n   */\n\n  rootrem(pow) {\n    return this._rootrem(pow, 1);\n  }\n\n  iroot(pow) {\n    return this.root(pow)._move(this);\n  }\n\n  root(pow) {\n    return this._rootrem(pow, 0)[0];\n  }\n\n  isPower(pow) {\n    enforce((pow >>> 0) === pow, 'num', 'uint32');\n\n    if (pow === 0 || (~pow & this.negative))\n      return false;\n\n    const [, r] = this.rootrem(pow);\n\n    return r.sign() === 0;\n  }\n\n  sqrtrem() {\n    return this.rootrem(2);\n  }\n\n  isqrt() {\n    return this.sqrt()._move(this);\n  }\n\n  sqrt() {\n    return this.root(2);\n  }\n\n  isSquare() {\n    return this.isPower(2);\n  }\n\n  /*\n   * AND\n   */\n\n  iand(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let x = this;\n    let y = num;\n\n    if (x === y)\n      return x;\n\n    if ((x.negative | y.negative) === 0)\n      return x.iuand(y);\n\n    if ((x.negative & y.negative) === 1) {\n      // (-x) & (-y) == ~(x-1) & ~(y-1)\n      //             == ~((x-1) | (y-1))\n      //             == -(((x-1) | (y-1)) + 1)\n      x.iaddn(1);\n      y.iaddn(1);\n      x.iuor(y);\n      x.isubn(1);\n      y.isubn(1);\n      return x;\n    }\n\n    // Assume x is the positive number.\n    if (x.negative !== 0)\n      [x, y] = [y.clone(), x];\n\n    // x & (-y) == x & ~(y-1)\n    //          == x & ~(y-1)\n    const width = x.bitLength();\n\n    y.iaddn(1);\n    y.inotn(width);\n    x.iuand(y);\n    y.inotn(width);\n    y.isubn(1);\n\n    return x._move(this);\n  }\n\n  iandn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if ((this.negative | (num < 0)) !== 0)\n      return this.iand(new BN(num));\n\n    this.words[0] &= num;\n    this.length = 1;\n\n    return this;\n  }\n\n  and(num) {\n    return this.clone().iand(num);\n  }\n\n  andn(num) {\n    return this.clone().iandn(num);\n  }\n\n  andrn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if ((this.negative | (num < 0)) !== 0) {\n      const n = this.iand(new BN(num));\n\n      if (n.length > 1)\n        throw new RangeError('Number exceeds 26 bits.');\n\n      return n.negative !== 0 ? -n.words[0] : n.words[0];\n    }\n\n    return this.words[0] & num;\n  }\n\n  /*\n   * Unsigned AND\n   */\n\n  iuand(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    this.length = Math.min(this.length, num.length);\n\n    for (let i = 0; i < this.length; i++)\n      this.words[i] &= num.words[i];\n\n    return this._strip();\n  }\n\n  iuandn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    this.words[0] &= Math.abs(num);\n    this.length = 1;\n\n    return this._normalize();\n  }\n\n  uand(num) {\n    return this.clone().iuand(num);\n  }\n\n  uandn(num) {\n    return this.clone().iuandn(num);\n  }\n\n  uandrn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const n = this.words[0] & Math.abs(num);\n\n    return this.negative !== 0 ? (-n | 0) : n;\n  }\n\n  /*\n   * OR\n   */\n\n  ior(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let x = this;\n    let y = num;\n\n    if (x === y)\n      return x;\n\n    if ((x.negative | y.negative) === 0)\n      return x.iuor(y);\n\n    if ((x.negative & y.negative) === 1) {\n      // (-x) | (-y) == ~(x-1) | ~(y-1)\n      //             == ~((x-1) & (y-1))\n      //             == -(((x-1) & (y-1)) + 1)\n      x.iaddn(1);\n      y.iaddn(1);\n      x.iuand(y);\n      x.isubn(1);\n      y.isubn(1);\n      return x;\n    }\n\n    // Assume x is the positive number.\n    y = y.clone();\n\n    if (x.negative !== 0)\n      [x, y] = [y, x];\n\n    // x | (-y) == x | ~(y-1)\n    //          == ~((y-1) & ~x)\n    //          == -(((y-1) & ~x) + 1)\n    y.iaddn(1);\n    x.inotn(y.bitLength());\n    y.iuand(x);\n    y.isubn(1);\n\n    return y._move(this);\n  }\n\n  iorn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if ((this.negative | (num < 0)) !== 0)\n      return this.ior(new BN(num));\n\n    this.words[0] |= num;\n\n    return this;\n  }\n\n  or(num) {\n    return this.clone().ior(num);\n  }\n\n  orn(num) {\n    return this.clone().iorn(num);\n  }\n\n  /*\n   * Unsigned OR\n   */\n\n  iuor(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    this._expand(num.length);\n\n    for (let i = 0; i < num.length; i++)\n      this.words[i] |= num.words[i];\n\n    // Note: we shouldn't need to strip here.\n    return this;\n  }\n\n  iuorn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    this.words[0] |= Math.abs(num);\n\n    return this;\n  }\n\n  uor(num) {\n    return this.clone().iuor(num);\n  }\n\n  uorn(num) {\n    return this.clone().iuorn(num);\n  }\n\n  /*\n   * XOR\n   */\n\n  ixor(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let x = this;\n    let y = num;\n\n    if (x === y) {\n      x.words[0] = 0;\n      x.length = 1;\n      x.negative = 0;\n      return x;\n    }\n\n    if ((x.negative | y.negative) === 0)\n      return x.iuxor(y);\n\n    if ((x.negative & y.negative) === 1) {\n      // (-x) ^ (-y) == ~(x-1) ^ ~(y-1)\n      //             == (x-1) ^ (y-1)\n      x.iaddn(1);\n      y.iaddn(1);\n      x.iuxor(y);\n      x.ineg();\n      y.isubn(1);\n      return x;\n    }\n\n    // Assume x is the positive number.\n    if (x.negative !== 0)\n      [x, y] = [y.clone(), x];\n\n    // x ^ (-y) == x ^ ~(y-1)\n    //          == ~(x ^ (y-1))\n    //          == -((x ^ (y-1)) + 1)\n    y.iaddn(1);\n    x.iuxor(y);\n    x.iaddn(1);\n    x.ineg();\n    y.isubn(1);\n\n    return x._move(this);\n  }\n\n  ixorn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if ((this.negative | (num < 0)) !== 0)\n      return this.ixor(new BN(num));\n\n    this.words[0] ^= num;\n\n    return this;\n  }\n\n  xor(num) {\n    return this.clone().ixor(num);\n  }\n\n  xorn(num) {\n    return this.clone().ixorn(num);\n  }\n\n  /*\n   * Unsigned XOR\n   */\n\n  iuxor(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let a = this;\n    let b = num;\n\n    if (a.length < b.length)\n      [a, b] = [b, a];\n\n    let i = 0;\n\n    for (; i < b.length; i++)\n      this.words[i] = a.words[i] ^ b.words[i];\n\n    if (a !== this) {\n      this._alloc(a.length);\n\n      for (; i < a.length; i++)\n        this.words[i] = a.words[i];\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  }\n\n  iuxorn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    this.words[0] ^= Math.abs(num);\n\n    return this._normalize();\n  }\n\n  uxor(num) {\n    return this.clone().iuxor(num);\n  }\n\n  uxorn(num) {\n    return this.clone().iuxorn(num);\n  }\n\n  /*\n   * NOT\n   */\n\n  inot() {\n    if (this.negative !== 0) {\n      // ~(-x) == ~(~(x-1)) == x-1\n      this.ineg().isubn(1);\n    } else {\n      // ~x == -x-1 == -(x+1)\n      this.iaddn(1).ineg();\n    }\n    return this;\n  }\n\n  not() {\n    return this.clone().inot();\n  }\n\n  inotn(width) {\n    enforce((width >>> 0) === width, 'width', 'uint32');\n\n    const r = width % 26;\n\n    let s = Math.ceil(width / 26);\n    let i = 0;\n\n    // Extend the buffer with leading zeroes.\n    this._expand(s);\n\n    if (r > 0)\n      s -= 1;\n\n    // Handle complete words.\n    for (; i < s; i++)\n      this.words[i] ^= 0x3ffffff;\n\n    // Handle the residue.\n    if (r > 0)\n      this.words[i] ^= (1 << r) - 1;\n\n    // And remove leading zeroes.\n    return this._strip();\n  }\n\n  notn(width) {\n    return this.clone().inotn(width);\n  }\n\n  /*\n   * Left Shift\n   */\n\n  ishl(num) {\n    enforce(BN.isBN(num), 'bits', 'bignum');\n    enforce(num.bitLength() <= 32, 'bits', 'uint32');\n    return this.ishln(num.toNumber());\n  }\n\n  ishln(bits) {\n    return this.iushln(bits);\n  }\n\n  shl(num) {\n    return this.clone().ishl(num);\n  }\n\n  shln(bits) {\n    return this.clone().ishln(bits);\n  }\n\n  /*\n   * Unsigned Left Shift\n   */\n\n  iushl(num) {\n    enforce(BN.isBN(num), 'bits', 'bignum');\n    enforce(num.bitLength() <= 32, 'bits', 'uint32');\n    return this.iushln(num.toNumber());\n  }\n\n  iushln(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    const r = bits % 26;\n    const s = (bits - r) / 26;\n    const mask = ((1 << r) - 1) << (26 - r);\n\n    if (r !== 0) {\n      let carry = 0;\n\n      for (let i = 0; i < this.length; i++) {\n        const ncarry = this.words[i] & mask;\n        const c = ((this.words[i] | 0) - ncarry) << r;\n\n        this.words[i] = c | carry;\n\n        carry = ncarry >>> (26 - r);\n      }\n\n      if (carry !== 0) {\n        this._alloc(this.length + 1);\n        this.words[this.length++] = carry;\n      }\n    }\n\n    if (s !== 0) {\n      this._alloc(this.length + s);\n\n      for (let i = this.length - 1; i >= 0; i--)\n        this.words[i + s] = this.words[i];\n\n      for (let i = 0; i < s; i++)\n        this.words[i] = 0;\n\n      this.length += s;\n    }\n\n    return this._strip();\n  }\n\n  ushl(num) {\n    return this.clone().iushl(num);\n  }\n\n  ushln(bits) {\n    return this.clone().iushln(bits);\n  }\n\n  /*\n   * Right Shift Engine\n   */\n\n  _split(bits, output) {\n    const r = bits % 26;\n    const s = Math.min((bits - r) / 26, this.length);\n    const mask = (1 << r) - 1;\n\n    // Extended mode, copy masked part.\n    if (output) {\n      output._alloc(s);\n\n      for (let i = 0; i < s; i++)\n        output.words[i] = this.words[i];\n\n      output.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all.\n    } else if (this.length > s) {\n      this.length -= s;\n      for (let i = 0; i < this.length; i++)\n        this.words[i] = this.words[i + s];\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    let carry = 0;\n\n    if (r !== 0) {\n      for (let i = this.length - 1; i >= 0; i--) {\n        const word = this.words[i] | 0;\n\n        this.words[i] = (carry << (26 - r)) | (word >>> r);\n\n        carry = word & mask;\n      }\n    }\n\n    // Push carried bits as a mask.\n    if (output) {\n      if (carry !== 0) {\n        output._alloc(output.length + 1);\n        output.words[output.length++] = carry;\n      } else {\n        if (output.length === 0)\n          output.words[output.length++] = 0;\n\n        output._strip();\n      }\n    }\n\n    return this._strip();\n  }\n\n  /*\n   * Right Shift\n   */\n\n  ishr(num) {\n    enforce(BN.isBN(num), 'bits', 'bignum');\n    enforce(num.bitLength() <= 32, 'bits', 'uint32');\n    return this.ishrn(num.toNumber());\n  }\n\n  ishrn(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    if (this.negative !== 0) {\n      // (-x) >> y == ~(x-1) >> y\n      //           == ~((x-1) >> y)\n      //           == -(((x-1) >> y) + 1)\n      this.iaddn(1);\n      this.iushrn(bits);\n      this.isubn(1);\n      return this;\n    }\n\n    return this.iushrn(bits);\n  }\n\n  shr(num) {\n    return this.clone().ishr(num);\n  }\n\n  shrn(bits) {\n    return this.clone().ishrn(bits);\n  }\n\n  /*\n   * Unsigned Right Shift\n   */\n\n  iushr(num) {\n    enforce(BN.isBN(num), 'bits', 'bignum');\n    enforce(num.bitLength() <= 32, 'bits', 'uint32');\n    return this.iushrn(num.toNumber());\n  }\n\n  iushrn(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n    return this._split(bits, null);\n  }\n\n  ushr(num) {\n    return this.clone().iushr(num);\n  }\n\n  ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }\n\n  /*\n   * Bit Manipulation\n   */\n\n  setn(bit, val) {\n    enforce((bit >>> 0) === bit, 'bit', 'uint32');\n\n    if (this.negative !== 0) {\n      this.iaddn(1);\n      this.usetn(bit, !val);\n      this.isubn(1);\n      return this;\n    }\n\n    return this.usetn(bit, val);\n  }\n\n  usetn(bit, val) {\n    enforce((bit >>> 0) === bit, 'bit', 'uint32');\n\n    const r = bit % 26;\n    const s = (bit - r) / 26;\n\n    this._expand(s + 1);\n\n    if (val)\n      this.words[s] |= (1 << r);\n    else\n      this.words[s] &= ~(1 << r);\n\n    return this._strip();\n  }\n\n  testn(bit) {\n    enforce((bit >>> 0) === bit, 'bit', 'uint32');\n\n    const r = bit % 26;\n    const s = (bit - r) / 26;\n\n    // Fast case: bit is much higher than all existing words.\n    if (this.length <= s)\n      return this.negative;\n\n    // Check bit and return.\n    const w = this.words[s];\n    const val = (w >> r) & 1;\n\n    if (this.negative !== 0) {\n      if (r > 0 && (w & ((1 << r) - 1)))\n        return val ^ 1;\n\n      let j = s;\n\n      while (j--) {\n        if (this.words[j] > 0)\n          return val ^ 1;\n      }\n    }\n\n    return val;\n  }\n\n  utestn(bit) {\n    enforce((bit >>> 0) === bit, 'bit', 'uint32');\n\n    const r = bit % 26;\n    const s = (bit - r) / 26;\n\n    // Fast case: bit is much higher than all existing words.\n    if (this.length <= s)\n      return 0;\n\n    // Check bit and return.\n    return (this.words[s] >> r) & 1;\n  }\n\n  imaskn(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    if (this.negative !== 0) {\n      this.iaddn(1);\n      this.inotn(bits + 1);\n      this.ineg();\n    }\n\n    return this.iumaskn(bits);\n  }\n\n  maskn(bits) {\n    return this.clone().imaskn(bits);\n  }\n\n  iumaskn(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    const r = bits % 26;\n\n    let s = (bits - r) / 26;\n\n    if (this.length <= s)\n      return this;\n\n    if (r !== 0)\n      s += 1;\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0)\n      this.words[this.length - 1] &= (1 << r) - 1;\n\n    if (this.length === 0)\n      this.words[this.length++] = 0;\n\n    return this._strip();\n  }\n\n  umaskn(bits) {\n    return this.clone().iumaskn(bits);\n  }\n\n  andln(num) {\n    return this.words[0] & num;\n  }\n\n  bit(pos) {\n    return this.utestn(pos);\n  }\n\n  bits(pos, width) {\n    enforce((pos >>> 0) === pos, 'pos', 'uint32');\n    enforce((width >>> 0) === width, 'width', 'uint32');\n    enforce(width <= 26, 'width', 'width');\n\n    const shift = pos % 26;\n    const index = (pos - shift) / 26;\n\n    if (index >= this.length)\n      return 0;\n\n    let bits = (this.words[index] >> shift) & ((1 << width) - 1);\n\n    if (shift + width > 26 && index + 1 < this.length) {\n      const more = shift + width - 26;\n      const next = this.words[index + 1] & ((1 << more) - 1);\n\n      bits |= next << (26 - shift);\n    }\n\n    return bits;\n  }\n\n  /*\n   * Negation\n   */\n\n  ineg() {\n    if (!this.isZero())\n      this.negative ^= 1;\n\n    return this;\n  }\n\n  neg() {\n    return this.clone().ineg();\n  }\n\n  iabs() {\n    this.negative = 0;\n    return this;\n  }\n\n  abs() {\n    return this.clone().iabs();\n  }\n\n  /*\n   * Comparison\n   */\n\n  cmp(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.negative !== num.negative)\n      return num.negative - this.negative;\n\n    const res = this.ucmp(num);\n\n    if (this.negative !== 0)\n      return -res | 0;\n\n    return res;\n  }\n\n  cmpn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const negative = (num < 0) | 0;\n\n    if (this.negative !== negative)\n      return negative - this.negative;\n\n    const res = this.ucmpn(num);\n\n    if (this.negative !== 0)\n      return -res | 0;\n\n    return res;\n  }\n\n  eq(num) {\n    return this.cmp(num) === 0;\n  }\n\n  eqn(num) {\n    return this.cmpn(num) === 0;\n  }\n\n  gt(num) {\n    return this.cmp(num) > 0;\n  }\n\n  gtn(num) {\n    return this.cmpn(num) > 0;\n  }\n\n  gte(num) {\n    return this.cmp(num) >= 0;\n  }\n\n  gten(num) {\n    return this.cmpn(num) >= 0;\n  }\n\n  lt(num) {\n    return this.cmp(num) < 0;\n  }\n\n  ltn(num) {\n    return this.cmpn(num) < 0;\n  }\n\n  lte(num) {\n    return this.cmp(num) <= 0;\n  }\n\n  lten(num) {\n    return this.cmpn(num) <= 0;\n  }\n\n  sign() {\n    if (this.negative !== 0)\n      return -1;\n\n    if (this.length === 1 && this.words[0] === 0)\n      return 0;\n\n    return 1;\n  }\n\n  isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  }\n\n  isNeg() {\n    return this.negative !== 0;\n  }\n\n  isPos() {\n    return this.negative === 0;\n  }\n\n  isOdd() {\n    return (this.words[0] & 1) === 1;\n  }\n\n  isEven() {\n    return (this.words[0] & 1) === 0;\n  }\n\n  /*\n   * Unsigned Comparison\n   */\n\n  ucmp(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.length < num.length)\n      return -1;\n\n    if (this.length > num.length)\n      return 1;\n\n    for (let i = this.length - 1; i >= 0; i--) {\n      const a = this.words[i] | 0;\n      const b = num.words[i] | 0;\n\n      if (a === b)\n        continue;\n\n      return (a > b) - (a < b);\n    }\n\n    return 0;\n  }\n\n  ucmpn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if (this.length > 1)\n      return 1;\n\n    const w = this.words[0] | 0;\n\n    if (num < 0)\n      num = -num;\n\n    return (w > num) - (w < num);\n  }\n\n  /*\n   * Number Theoretic Functions\n   */\n\n  legendre(num) {\n    const red = HAS_BIGINT ? BN.red(num) : BN.mont(num);\n    return this.toRed(red).redLegendre();\n  }\n\n  jacobi(num) {\n    // See: A Binary Algorithm for the Jacobi Symbol\n    //   J. Shallit, J. Sorenson\n    //   Page 3, Section 3\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (num.isZero() || num.isEven())\n      throw new Error('jacobi: `num` must be odd.');\n\n    let a = this._cloneNormal();\n    let b = num.clone();\n    let j = 1;\n\n    if (b.isNeg()) {\n      if (a.isNeg())\n        j = -1;\n      b.ineg();\n    }\n\n    if (a.isNeg() || a.ucmp(b) >= 0)\n      a.imod(b);\n\n    while (!a.isZero()) {\n      const bits = a._makeOdd();\n\n      if (bits & 1) {\n        const bmod8 = b.andln(7);\n\n        if (bmod8 === 3 || bmod8 === 5)\n          j = -j;\n      }\n\n      if (a.ucmp(b) < 0) {\n        [a, b] = [b, a];\n\n        if (a.andln(3) === 3 && b.andln(3) === 3)\n          j = -j;\n      }\n\n      a._isub(a, b).iushrn(1);\n\n      const bmod8 = b.andln(7);\n\n      if (bmod8 === 3 || bmod8 === 5)\n        j = -j;\n    }\n\n    if (b.cmpn(1) !== 0)\n      return 0;\n\n    return j;\n  }\n\n  kronecker(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.isZero())\n      return num.ucmpn(1) === 0 ? 1 : 0;\n\n    if (num.isZero())\n      return this.ucmpn(1) === 0 ? 1 : 0;\n\n    if (((this.words[0] | num.words[0]) & 1) === 0)\n      return 0;\n\n    const x = this;\n    const y = num.clone();\n    const bits = y._makeOdd();\n    const table = [0, 1, 0, -1, 0, -1, 0, 1];\n\n    let k = x.jacobi(y);\n\n    if (bits & 1)\n      k *= table[x.andln(7)];\n\n    return k | 0;\n  }\n\n  igcd(num) {\n    return this.gcd(num)._move(this);\n  }\n\n  gcd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.isZero())\n      return num.abs();\n\n    if (num.isZero())\n      return this.abs();\n\n    let a = this.clone();\n    let b = num.clone();\n\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two.\n    const shift = a._factor2(b);\n\n    if (shift !== 0) {\n      a.iushrn(shift);\n      b.iushrn(shift);\n    }\n\n    for (;;) {\n      a._makeOdd();\n      b._makeOdd();\n\n      const cmp = a.ucmp(b);\n\n      if (cmp < 0) {\n        // a > b\n        [a, b] = [b, a];\n      } else if (cmp === 0 || b.ucmpn(1) === 0) {\n        // Break if a == b.\n        // Break if b == 1 to avoid repeated subtraction.\n        break;\n      }\n\n      a._isub(a, b);\n    }\n\n    return b.iushln(shift);\n  }\n\n  ilcm(num) {\n    return this.lcm(num)._move(this);\n  }\n\n  lcm(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.isZero() || num.isZero())\n      return new BN(0);\n\n    return this.quo(this.gcd(num)).mul(num).iabs();\n  }\n\n  egcd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.isZero()) {\n      return [\n        new BN(0),\n        new BN(num.sign()),\n        num.abs()\n      ];\n    }\n\n    if (num.isZero()) {\n      return [\n        new BN(this.sign()),\n        new BN(0),\n        this.abs()\n      ];\n    }\n\n    const x = this.clone();\n    const y = num.clone();\n\n    x.negative = 0;\n    y.negative = 0;\n\n    // A * x + B * y = x\n    const A = new BN(1);\n    const B = new BN(0);\n\n    // C * x + D * y = y\n    const C = new BN(0);\n    const D = new BN(1);\n\n    // Remove common factor of two.\n    const g = x._factor2(y);\n\n    if (g > 0) {\n      x.iushrn(g);\n      y.iushrn(g);\n    }\n\n    const xp = x.clone();\n    const yp = y.clone();\n\n    while (!x.isZero()) {\n      let i = x._makeOdd();\n      let j = y._makeOdd();\n\n      while (i--) {\n        if (A.isOdd() || B.isOdd()) {\n          A.iadd(yp);\n          B.isub(xp);\n        }\n\n        A.iushrn(1);\n        B.iushrn(1);\n      }\n\n      while (j--) {\n        if (C.isOdd() || D.isOdd()) {\n          C.iadd(yp);\n          D.isub(xp);\n        }\n\n        C.iushrn(1);\n        D.iushrn(1);\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    if (this.negative !== 0)\n      C.ineg();\n\n    if (num.negative !== 0)\n      D.ineg();\n\n    return [C, D, y.iushln(g)];\n  }\n\n  iinvert(num) {\n    return this.invert(num)._move(this);\n  }\n\n  invert(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    range(num.sign() > 0, 'invert');\n\n    if (num.isOdd())\n      return this._invertp(num);\n\n    if (num.cmpn(1) === 0)\n      throw new RangeError('Not invertible.');\n\n    const [s,, g] = this.egcd(num);\n\n    if (g.cmpn(1) !== 0)\n      throw new RangeError('Not invertible.');\n\n    return s.imod(num);\n  }\n\n  ifermat(num) {\n    return this.fermat(num)._move(this);\n  }\n\n  fermat(num) {\n    const red = HAS_BIGINT ? BN.red(num) : BN.mont(num);\n    return this.toRed(red).redFermat().fromRed();\n  }\n\n  ipowm(y, m, mont) {\n    return this.powm(y, m, mont)._move(this);\n  }\n\n  powm(y, m, mont) {\n    const red = !HAS_BIGINT && mont ? BN.mont(m) : BN.red(m);\n    return this.toRed(red).redPow(y).fromRed();\n  }\n\n  ipowmn(y, m, mont) {\n    return this.powmn(y, m, mont)._move(this);\n  }\n\n  powmn(y, m, mont) {\n    const red = mont ? BN.mont(m) : BN.red(m);\n    return this.toRed(red).redPown(y).fromRed();\n  }\n\n  isqrtm(p) {\n    return this.sqrtm(p)._move(this);\n  }\n\n  sqrtm(p) {\n    enforce(BN.isBN(p), 'p', 'bignum');\n\n    let red;\n\n    if (p.andln(3) === 3 || p.andln(7) === 5) {\n      // Probably not worth the setup.\n      red = BN.red(p);\n    } else {\n      red = BN.mont(p);\n    }\n\n    return this.toRed(red).redSqrt().fromRed();\n  }\n\n  isqrtpq(p, q) {\n    return this.sqrtpq(p, q)._move(this);\n  }\n\n  sqrtpq(p, q) {\n    const sp = this.sqrtm(p);\n    const sq = this.sqrtm(q);\n    const [mp, mq] = p.egcd(q);\n    const lhs = sq.mul(mp).mul(p);\n    const rhs = sp.mul(mq).mul(q);\n    const n = p.mul(q);\n\n    return lhs.iadd(rhs).imod(n);\n  }\n\n  /*\n   * Primality Testing\n   */\n\n  isPrime(rng, reps, limit) {\n    enforce((reps >>> 0) === reps, 'reps', 'uint32');\n\n    if (!this.isPrimeMR(rng, reps + 1, true))\n      return false;\n\n    if (!this.isPrimeLucas(limit))\n      return false;\n\n    return true;\n  }\n\n  isPrimeMR(rng, reps, force2 = false) {\n    enforce((reps >>> 0) === reps, 'reps', 'uint32');\n    enforce(reps > 0, 'reps', 'integer');\n    enforce(typeof force2 === 'boolean', 'force2', 'boolean');\n\n    const n = this;\n\n    if (n.cmpn(7) < 0) {\n      return n.cmpn(2) === 0\n          || n.cmpn(3) === 0\n          || n.cmpn(5) === 0;\n    }\n\n    if (n.isEven())\n      return false;\n\n    const nm1 = n.subn(1);\n    const nm3 = nm1.subn(2);\n    const k = nm1.zeroBits();\n    const q = nm1.ushrn(k);\n\n    const red = BN.red(n);\n    const rnm1 = nm1.toRed(red);\n    const rone = new BN(1).toRed(red);\n\nnext:\n    for (let i = 0; i < reps; i++) {\n      let x;\n\n      if (i === reps - 1 && force2) {\n        x = new BN(2);\n      } else {\n        x = BN.random(rng, 0, nm3);\n        x.iaddn(2);\n      }\n\n      let y = x.toRed(red).redPow(q);\n\n      if (y.cmp(rone) === 0 || y.cmp(rnm1) === 0)\n        continue;\n\n      for (let j = 1; j < k; j++) {\n        y = y.redSqr();\n\n        if (y.cmp(rnm1) === 0)\n          continue next;\n\n        if (y.cmp(rone) === 0)\n          return false;\n      }\n\n      return false;\n    }\n\n    return true;\n  }\n\n  isPrimeLucas(limit = 0) {\n    enforce((limit >>> 0) === limit, 'limit', 'uint32');\n\n    const n = this;\n\n    // Ignore 0 and 1.\n    if (n.cmpn(1) <= 0)\n      return false;\n\n    // Two is the only even prime.\n    if (n.isEven())\n      return n.cmpn(2) === 0;\n\n    let p = 3;\n\n    for (;;) {\n      if (p > 10000) {\n        // Thought to be impossible.\n        throw new Error(`Cannot find (D/n) = -1 for ${n.toString(10)}.`);\n      }\n\n      if (limit !== 0 && p > limit) {\n        // Optional DoS limit.\n        return false;\n      }\n\n      const d = new BN(p * p - 4);\n      const j = d.jacobi(n);\n\n      if (j === -1)\n        break;\n\n      if (j === 0)\n        return n.cmpn(p + 2) === 0;\n\n      if (p === 40) {\n        if (n.isSquare())\n          return false;\n      }\n\n      p += 1;\n    }\n\n    const s = n.addn(1);\n    const r = s._makeOdd();\n\n    let vk = new BN(2);\n    let vk1 = new BN(p);\n\n    for (let i = s.bitLength(); i >= 0; i--) {\n      if (s.utestn(i)) {\n        vk = vk.mul(vk1).isubn(p).imod(n);\n        vk1 = vk1.sqr().isubn(2).imod(n);\n      } else {\n        vk1 = vk1.mul(vk).isubn(p).imod(n);\n        vk = vk.sqr().isubn(2).imod(n);\n      }\n    }\n\n    if (vk.cmpn(2) === 0 || vk.cmp(n.subn(2)) === 0) {\n      const a = vk.muln(p).imod(n);\n      const b = vk1.ushln(1).imod(n);\n\n      if (a.cmp(b) === 0)\n        return true;\n    }\n\n    for (let t = 0; t < r - 1; t++) {\n      if (vk.isZero())\n        return true;\n\n      if (vk.cmpn(2) === 0)\n        return false;\n\n      vk = vk.sqr().isubn(2).imod(n);\n    }\n\n    return false;\n  }\n\n  /*\n   * Twos Complement\n   */\n\n  toTwos(width) {\n    if (this.negative !== 0)\n      return this.abs().inotn(width).iaddn(1);\n\n    return this.clone();\n  }\n\n  fromTwos(width) {\n    enforce((width >>> 0) === width, 'width', 'uint32');\n    range(width > 0, 'width');\n\n    if (this.testn(width - 1))\n      return this.notn(width).iaddn(1).ineg();\n\n    return this.clone();\n  }\n\n  /*\n   * Reduction Context\n   */\n\n  toRed(ctx) {\n    enforce(ctx instanceof Red, 'ctx', 'reduction context');\n\n    if (this.red)\n      throw new Error('Already in reduction context.');\n\n    return ctx.convertTo(this);\n  }\n\n  fromRed() {\n    red(this.red, 'fromRed');\n    return this.red.convertFrom(this);\n  }\n\n  forceRed(ctx) {\n    enforce(ctx instanceof Red, 'ctx', 'reduction context');\n\n    if (this.red) {\n      if (!ctx.m.eq(this.red.m) || ctx.mont !== this.red.mont)\n        throw new Error('Already in reduction context.');\n    } else {\n      range(this.negative === 0, 'red');\n      range(this.ucmp(ctx.m) < 0, 'red');\n    }\n\n    return this.clone()._forceRed(ctx);\n  }\n\n  redIAdd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIAdd');\n    return this.red.iadd(this, num);\n  }\n\n  redAdd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redAdd');\n    return this.red.add(this, num);\n  }\n\n  redIAddn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redIAddn');\n    return this.red.iaddn(this, num);\n  }\n\n  redAddn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redAddn');\n    return this.red.addn(this, num);\n  }\n\n  redISub(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redISub');\n    return this.red.isub(this, num);\n  }\n\n  redSub(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redSub');\n    return this.red.sub(this, num);\n  }\n\n  redISubn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redISubn');\n    return this.red.isubn(this, num);\n  }\n\n  redSubn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redSubn');\n    return this.red.subn(this, num);\n  }\n\n  redIMul(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIMul');\n    return this.red.imul(this, num);\n  }\n\n  redMul(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redMul');\n    return this.red.mul(this, num);\n  }\n\n  redIMuln(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redIMuln');\n    return this.red.imuln(this, num);\n  }\n\n  redMuln(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redMuln');\n    return this.red.muln(this, num);\n  }\n\n  redIDiv(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIDiv');\n    return this.red.idiv(this, num);\n  }\n\n  redDiv(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redDiv');\n    return this.red.div(this, num);\n  }\n\n  redIDivn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redIDivn');\n    return this.red.idivn(this, num);\n  }\n\n  redDivn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redDivn');\n    return this.red.divn(this, num);\n  }\n\n  redIPow(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIPow');\n    nonred(!num.red, 'redIPow');\n    return this.red.ipow(this, num);\n  }\n\n  redPow(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redPow');\n    nonred(!num.red, 'redPow');\n    return this.red.pow(this, num);\n  }\n\n  redIPown(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redIPown');\n    return this.red.ipown(this, num);\n  }\n\n  redPown(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redPown');\n    return this.red.pown(this, num);\n  }\n\n  redISqr() {\n    red(this.red, 'redISqr');\n    return this.red.isqr(this);\n  }\n\n  redSqr() {\n    red(this.red, 'redSqr');\n    return this.red.sqr(this);\n  }\n\n  redISqrt() {\n    red(this.red, 'redISqrt');\n    return this.red.isqrt(this);\n  }\n\n  redSqrt() {\n    red(this.red, 'redSqrt');\n    return this.red.sqrt(this);\n  }\n\n  redIDivSqrt(v) {\n    red(this.red, 'redIDivSqrt');\n    return this.red.idivsqrt(this, v);\n  }\n\n  redDivSqrt(v) {\n    red(this.red, 'redDivSqrt');\n    return this.red.divsqrt(this, v);\n  }\n\n  redIsSquare() {\n    red(this.red, 'redIsSquare');\n    return this.red.isSquare(this);\n  }\n\n  redIShl(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIShl');\n    nonred(!num.red, 'redIShl');\n    return this.red.ishl(this, num);\n  }\n\n  redShl(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redShl');\n    nonred(!num.red, 'redShl');\n    return this.red.shl(this, num);\n  }\n\n  redIShln(num) {\n    enforce((num >>> 0) === num, 'num', 'uint32');\n    red(this.red, 'redIShln');\n    return this.red.ishln(this, num);\n  }\n\n  redShln(num) {\n    enforce((num >>> 0) === num, 'num', 'uint32');\n    red(this.red, 'redShln');\n    return this.red.shln(this, num);\n  }\n\n  redINeg() {\n    red(this.red, 'redINeg');\n    return this.red.ineg(this);\n  }\n\n  redNeg() {\n    red(this.red, 'redNeg');\n    return this.red.neg(this);\n  }\n\n  redEq(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redEq');\n    return this.red.eq(this, num);\n  }\n\n  redEqn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redEqn');\n    return this.red.eqn(this, num);\n  }\n\n  redIsHigh() {\n    red(this.red, 'redIsHigh');\n    return this.red.isHigh(this);\n  }\n\n  redIsLow() {\n    red(this.red, 'redIsLow');\n    return this.red.isLow(this);\n  }\n\n  redIsOdd() {\n    red(this.red, 'redIsOdd');\n    return this.red.isOdd(this);\n  }\n\n  redIsEven() {\n    red(this.red, 'redIsEven');\n    return this.red.isEven(this);\n  }\n\n  redLegendre() {\n    red(this.red, 'redLegendre');\n    return this.red.legendre(this);\n  }\n\n  redJacobi() {\n    red(this.red, 'redJacobi');\n    return this.red.jacobi(this);\n  }\n\n  redKronecker() {\n    red(this.red, 'redKronecker');\n    return this.red.kronecker(this);\n  }\n\n  redIInvert() {\n    red(this.red, 'redIInvert');\n    return this.red.iinvert(this);\n  }\n\n  redInvert() {\n    red(this.red, 'redInvert');\n    return this.red.invert(this);\n  }\n\n  redIFermat() {\n    red(this.red, 'redIFermat');\n    return this.red.ifermat(this);\n  }\n\n  redFermat() {\n    red(this.red, 'redFermat');\n    return this.red.fermat(this);\n  }\n\n  /*\n   * Internal\n   */\n\n  _move(dest) {\n    dest.words = this.words;\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n    return dest;\n  }\n\n  _alloc(size) {\n    while (this.words.length < size)\n      this.words.push(0);\n\n    return this;\n  }\n\n  _expand(size) {\n    this._alloc(size);\n\n    while (this.length < size)\n      this.words[this.length++] = 0;\n\n    return this;\n  }\n\n  _strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0)\n      this.length -= 1;\n\n    return this._normalize();\n  }\n\n  _normalize() {\n    assert(this.length > 0);\n\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0)\n      this.negative = 0;\n\n    return this;\n  }\n\n  _check() {\n    // We never have a zero length number.\n    assert(this.length > 0);\n\n    // Cannot exceed array bounds.\n    assert(this.length <= this.words.length);\n\n    if (this.length === 1) {\n      // Must be normalized.\n      if (this.words[0] === 0)\n        assert(this.negative === 0);\n      return this;\n    }\n\n    // Must be stripped.\n    assert(this.words[this.length - 1] !== 0);\n\n    return this;\n  }\n\n  _invertp(p) {\n    // Penk's right shift binary EGCD.\n    //\n    // See: The Art of Computer Programming,\n    //      Volume 2, Seminumerical Algorithms\n    //   Donald E. Knuth\n    //   Exercise 4.5.2.39\n    enforce(BN.isBN(p), 'p', 'bignum');\n    range(p.sign() > 0, 'invert');\n    assert(p.isOdd());\n\n    if (p.cmpn(1) === 0)\n      throw new RangeError('Not invertible.');\n\n    const a = this.clone();\n    const b = p.clone();\n    const u = new BN(1);\n    const v = new BN(0);\n\n    if (a.isNeg() || a.ucmp(b) >= 0)\n      a.imod(b);\n\n    while (!a.isZero()) {\n      let i = a._makeOdd();\n      let j = b._makeOdd();\n\n      while (i--) {\n        if (u.isOdd())\n          u._iadd(u, p);\n\n        u.iushrn(1);\n      }\n\n      while (j--) {\n        if (v.isOdd())\n          v._iadd(v, p);\n\n        v.iushrn(1);\n      }\n\n      if (a.ucmp(b) >= 0) {\n        a._isub(a, b);\n        if (u.ucmp(v) < 0) {\n          u._isub(v, u);\n          u._isub(p, u);\n        } else {\n          u._isub(u, v);\n        }\n      } else {\n        b._isub(b, a);\n        if (v.ucmp(u) < 0) {\n          v._isub(u, v);\n          v._isub(p, v);\n        } else {\n          v._isub(v, u);\n        }\n      }\n    }\n\n    if (b.cmpn(1) !== 0)\n      throw new RangeError('Not invertible.');\n\n    assert(v.negative === 0);\n    assert(v.ucmp(p) < 0);\n\n    return v;\n  }\n\n  _makeOdd() {\n    const shift = this.zeroBits();\n\n    if (shift > 0)\n      this.iushrn(shift);\n\n    return shift;\n  }\n\n  _factor2(num) {\n    // Find common factor of two.\n    // Expects inputs to be non-zero.\n    if ((this.words[0] | num.words[0]) & 1)\n      return 0;\n\n    const len = Math.min(this.length, num.length);\n\n    let r = 0;\n\n    for (let i = 0; i < len; i++) {\n      const b = zeroBits(this.words[i] | num.words[i]);\n\n      r += b;\n\n      if (b !== 26)\n        break;\n    }\n\n    return r;\n  }\n\n  _cloneNormal() {\n    return this.red ? this.fromRed() : this.clone();\n  }\n\n  _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  }\n\n  /*\n   * Helpers\n   */\n\n  clone() {\n    const copy = new BN();\n\n    copy.words = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++)\n      copy.words[i] = this.words[i];\n\n    copy.length = this.length;\n    copy.negative = this.negative;\n    copy.red = this.red;\n\n    return copy;\n  }\n\n  inject(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    this._alloc(num.length);\n\n    for (let i = 0; i < num.length; i++)\n      this.words[i] = num.words[i];\n\n    this.length = num.length;\n    this.negative = num.negative;\n    this.red = num.red;\n\n    return this;\n  }\n\n  set(num, endian) {\n    return this.fromNumber(num, endian);\n  }\n\n  swap(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    const x = this;\n    const y = num;\n\n    [x.words, y.words] = [y.words, x.words];\n    [x.length, y.length] = [y.length, x.length];\n    [x.negative, y.negative] = [y.negative, x.negative];\n    [x.red, y.red] = [y.red, x.red];\n\n    return x;\n  }\n\n  reverse() {\n    const neg = this.negative;\n\n    this.fromBuffer(this.toBuffer('be'), 'le');\n    this.negative = neg;\n\n    return this;\n  }\n\n  byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  }\n\n  bitLength() {\n    const w = this.words[this.length - 1];\n    const hi = countBits(w);\n    return (this.length - 1) * 26 + hi;\n  }\n\n  zeroBits() {\n    if (this.isZero())\n      return 0;\n\n    if (this.isOdd())\n      return 0;\n\n    let r = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      const b = zeroBits(this.words[i]);\n\n      r += b;\n\n      if (b !== 26)\n        break;\n    }\n\n    return r;\n  }\n\n  isSafe() {\n    if (this.length <= 2)\n      return true;\n\n    if (this.length === 3 && this.words[2] === 0x01)\n      return true;\n\n    return false;\n  }\n\n  word(pos) {\n    enforce((pos >>> 0) === pos, 'pos', 'uint32');\n\n    if (pos >= this.length)\n      return 0;\n\n    return this.words[pos];\n  }\n\n  [custom]() {\n    let prefix = 'BN';\n\n    if (this.red)\n      prefix = 'BN-R';\n\n    return `<${prefix}: ${this.toString(10)}>`;\n  }\n\n  /*\n   * Conversion\n   */\n\n  toNumber() {\n    let num = this.words[0];\n\n    if (this.length === 2) {\n      num += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // Note: at this stage it is known that the top bit is set.\n      num += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      throw new RangeError('Number can only safely store up to 53 bits.');\n    }\n\n    return this.negative !== 0 ? -num : num;\n  }\n\n  toDouble() {\n    let num = 0;\n\n    for (let i = this.length - 1; i >= 0; i--)\n      num = (num * 0x4000000) + this.words[i];\n\n    return this.negative !== 0 ? -num : num;\n  }\n\n  valueOf() {\n    return this.toDouble();\n  }\n\n  toBigInt() {\n    if (!HAS_BIGINT)\n      throw new Error('BigInt is not supported!');\n\n    const s52 = BigInt(52);\n    const s26 = BigInt(26);\n\n    let i = this.length - 1;\n    let num = BigInt(0);\n\n    for (; i >= 1; i -= 2) {\n      const hi = this.words[i] * 0x4000000;\n      const lo = this.words[i - 1];\n\n      num = (num << s52) | BigInt(hi + lo);\n    }\n\n    if (i >= 0)\n      num = (num << s26) | BigInt(this.words[0]);\n\n    return this.negative !== 0 ? -num : num;\n  }\n\n  toBool() {\n    return !this.isZero();\n  }\n\n  toString(base, padding) {\n    base = getBase(base);\n\n    if (padding == null)\n      padding = 0;\n\n    if (padding === 0)\n      padding = 1;\n\n    enforce((base >>> 0) === base, 'base', 'uint32');\n    enforce((padding >>> 0) === padding, 'padding', 'uint32');\n\n    if (base < 2 || base > 36)\n      throw new RangeError('Base ranges between 2 and 36.');\n\n    this._check();\n\n    if (base === 16) {\n      let out = '';\n      let off = 0;\n      let carry = 0;\n\n      for (let i = 0; i < this.length; i++) {\n        const w = this.words[i];\n        const word = (((w << off) | carry) & 0xffffff).toString(16);\n\n        carry = (w >>> (24 - off)) & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1)\n          out = zeros[6 - word.length] + word + out;\n        else\n          out = word + out;\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i -= 1;\n        }\n      }\n\n      if (carry !== 0)\n        out = carry.toString(16) + out;\n\n      while (out.length % padding !== 0)\n        out = '0' + out;\n\n      if (this.negative !== 0)\n        out = '-' + out;\n\n      return out;\n    }\n\n    const groupSize = groupSizes[base - 1];\n    const groupBase = groupBases[base - 1];\n    const c = this.clone();\n\n    let out = '';\n\n    c.negative = 0;\n\n    while (!c.isZero()) {\n      const r = c.remrn(groupBase).toString(base);\n\n      c.iquon(groupBase);\n\n      if (!c.isZero())\n        out = zeros[groupSize - r.length] + r + out;\n      else\n        out = r + out;\n    }\n\n    if (this.isZero())\n      out = '0';\n\n    while (out.length % padding !== 0)\n      out = '0' + out;\n\n    if (this.negative !== 0)\n      out = '-' + out;\n\n    return out;\n  }\n\n  toJSON() {\n    return this.toString(16, 2);\n  }\n\n  toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  }\n\n  toBuffer(endian, length) {\n    return this.toArrayLike(Buffer, endian, length);\n  }\n\n  toArrayLike(ArrayType, endian, length) {\n    if (endian == null)\n      endian = 'be';\n\n    if (length == null)\n      length = 0;\n\n    enforce(typeof ArrayType === 'function', 'ArrayType', 'function');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n    enforce((length >>> 0) === length, 'length', 'uint32');\n\n    this._check();\n\n    const bytes = this.byteLength();\n    const size = length || Math.max(1, bytes);\n\n    if (bytes > size)\n      throw new RangeError('Byte array longer than desired length.');\n\n    const res = allocate(ArrayType, size);\n\n    // See: https://github.com/indutny/bn.js/pull/222\n    if (endian === 'be') {\n      let pos = res.length - 1;\n      let carry = 0;\n\n      for (let i = 0; i < this.length; i++) {\n        const shift = (i & 3) << 1;\n        const word = (this.words[i] << shift) | carry;\n\n        res[pos--] = word & 0xff;\n\n        if (pos >= 0)\n          res[pos--] = (word >>> 8) & 0xff;\n\n        if (pos >= 0)\n          res[pos--] = (word >>> 16) & 0xff;\n\n        if (shift === 6) {\n          if (pos >= 0)\n            res[pos--] = (word >>> 24) & 0xff;\n\n          carry = 0;\n        } else {\n          carry = word >>> 24;\n        }\n      }\n\n      if (pos >= 0) {\n        res[pos--] = carry;\n\n        while (pos >= 0)\n          res[pos--] = 0;\n\n        carry = 0;\n      }\n\n      assert(carry === 0);\n    } else {\n      let pos = 0;\n      let carry = 0;\n\n      for (let i = 0; i < this.length; i++) {\n        const shift = (i & 3) << 1;\n        const word = (this.words[i] << shift) | carry;\n\n        res[pos++] = word & 0xff;\n\n        if (pos < res.length)\n          res[pos++] = (word >>> 8) & 0xff;\n\n        if (pos < res.length)\n          res[pos++] = (word >>> 16) & 0xff;\n\n        if (shift === 6) {\n          if (pos < res.length)\n            res[pos++] = (word >>> 24) & 0xff;\n\n          carry = 0;\n        } else {\n          carry = word >>> 24;\n        }\n      }\n\n      if (pos < res.length) {\n        res[pos++] = carry;\n\n        while (pos < res.length)\n          res[pos++] = 0;\n\n        carry = 0;\n      }\n\n      assert(carry === 0);\n    }\n\n    return res;\n  }\n\n  encode(endian, length) {\n    return this.toBuffer(endian, length);\n  }\n\n  /*\n   * Instantiation\n   */\n\n  of(num, endian) {\n    return this.fromNumber(num, endian);\n  }\n\n  fromNumber(num, endian) {\n    if (endian == null)\n      endian = 'be';\n\n    enforce(isInteger(num), 'num', 'integer');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    const neg = (num < 0) | 0;\n\n    if (neg)\n      num = -num;\n\n    if (num < 0x4000000) {\n      this.words[0] = num & 0x3ffffff;\n      this.length = 1;\n    } else if (num < 0x10000000000000) {\n      this.words = [\n        num & 0x3ffffff,\n        (num / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      this.words = [\n        num & 0x3ffffff,\n        (num / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    this.negative = neg;\n\n    if (endian === 'le')\n      this.reverse();\n\n    return this;\n  }\n\n  fromDouble(num, endian) {\n    if (endian == null)\n      endian = 'be';\n\n    enforce(typeof num === 'number', 'num', 'double');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    if (!isFinite(num))\n      num = 0;\n\n    const neg = (num <= -1) | 0;\n\n    if (num < 0)\n      num = -num;\n\n    num = Math.floor(num);\n\n    this.words = [];\n\n    while (num > 0) {\n      const lo = num % 0x4000000;\n      const hi = (num - lo) / 0x4000000;\n\n      this.words.push(lo);\n\n      num = hi;\n    }\n\n    if (this.words.length === 0)\n      this.words.push(0);\n\n    this.length = this.words.length;\n    this.negative = neg;\n\n    if (endian === 'le')\n      this.reverse();\n\n    return this;\n  }\n\n  fromBigInt(num, endian) {\n    if (endian == null)\n      endian = 'be';\n\n    enforce(typeof num === 'bigint', 'num', 'bigint');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    if (!HAS_BIGINT)\n      throw new Error('BigInt is not supported!');\n\n    // You know the implementation has a\n    // problem when strings are twice\n    // as fast as bigints.\n    const start = (num < BigInt(0)) | 0;\n\n    this._fromHex(num.toString(16), start);\n    this.negative = start;\n\n    if (endian === 'le')\n      this.reverse();\n\n    return this;\n  }\n\n  fromBool(value) {\n    enforce(typeof value === 'boolean', 'value', 'boolean');\n\n    this.words[0] = value | 0;\n    this.length = 1;\n    this.negative = 0;\n\n    return this;\n  }\n\n  fromString(str, base, endian) {\n    if (base === 'le' || base === 'be')\n      [base, endian] = [endian, base];\n\n    base = getBase(base);\n\n    if (endian == null)\n      endian = 'be';\n\n    enforce(typeof str === 'string', 'string', 'string');\n    enforce((base >>> 0) === base, 'base', 'uint32');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    if (base < 2 || base > 36)\n      throw new Error('Base ranges between 2 and 36.');\n\n    str = str.replace(/\\s+/g, '');\n\n    let start = 0;\n\n    if (str.length > 0 && str.charCodeAt(0) === 0x2d)\n      start = 1;\n\n    if (base === 16)\n      this._fromHex(str, start);\n    else\n      this._fromBase(str, base, start);\n\n    this.negative = start;\n\n    this._normalize();\n\n    if (endian === 'le')\n      this.reverse();\n\n    return this;\n  }\n\n  _fromHex(str, start) {\n    this.length = Math.max(2, Math.ceil((str.length - start) / 6));\n    this.words = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++)\n      this.words[i] = 0;\n\n    // Scan 24-bit chunks and add them to the number.\n    let off = 0;\n    let i = str.length - 6;\n    let j = 0;\n\n    for (; i >= start; i -= 6) {\n      const w = parseHex(str, i, i + 6);\n\n      this.words[j] |= (w << off) & 0x3ffffff;\n\n      // `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb.\n      this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;\n\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j += 1;\n      }\n    }\n\n    if (i + 6 !== start) {\n      const w = parseHex(str, start, i + 6);\n\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;\n    }\n\n    return this._strip();\n  }\n\n  _fromBase(str, base, start) {\n    // Initialize as zero.\n    this.words[0] = 0;\n    this.length = 1;\n    this.negative = 0;\n\n    // Find length of limb in base.\n    let limbLen = 0;\n    let limbPow = 1;\n\n    for (; limbPow <= 0x3ffffff; limbPow *= base)\n      limbLen += 1;\n\n    limbLen -= 1;\n    limbPow = (limbPow / base) | 0;\n\n    const total = str.length - start;\n    const mod = total % limbLen;\n    const end = Math.min(total, total - mod) + start;\n\n    let i = start;\n\n    for (; i < end; i += limbLen) {\n      const word = parseBase(str, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      this._iaddn(word);\n    }\n\n    if (mod !== 0) {\n      const pow = Math.pow(base, mod);\n      const word = parseBase(str, i, str.length, base);\n\n      this.imuln(pow);\n      this._iaddn(word);\n    }\n\n    return this;\n  }\n\n  fromJSON(json) {\n    if (BN.isBN(json)) {\n      if (json.red)\n        return json.fromRed();\n\n      return json.clone();\n    }\n\n    if (Array.isArray(json)) {\n      for (const chunk of json)\n        enforce(typeof chunk === 'string', 'chunk', 'string');\n\n      json = json.join('');\n    }\n\n    return this.fromString(json, 16);\n  }\n\n  fromBN(num) {\n    return this.inject(num);\n  }\n\n  fromArray(data, endian) {\n    enforce(Array.isArray(data), 'data', 'array');\n    return this.fromArrayLike(data, endian);\n  }\n\n  fromBuffer(data, endian) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    return this.fromArrayLike(data, endian);\n  }\n\n  fromArrayLike(data, endian) {\n    if (endian == null)\n      endian = 'be';\n\n    enforce(data && (data.length >>> 0) === data.length, 'data', 'array-like');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    if (data.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n      this.negative = 0;\n      return this;\n    }\n\n    this.length = Math.max(2, Math.ceil(data.length / 3));\n    this.words = new Array(this.length);\n    this.negative = 0;\n\n    for (let i = 0; i < this.length; i++)\n      this.words[i] = 0;\n\n    const left = data.length % 3;\n\n    let off = 0;\n    let j = 0;\n    let w = 0;\n\n    if (endian === 'be') {\n      for (let i = data.length - 1; i >= 2; i -= 3) {\n        const w = data[i] | (data[i - 1] << 8) | (data[i - 2] << 16);\n\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j += 1;\n        }\n      }\n\n      switch (left) {\n        case 2:\n          w = data[1] | (data[0] << 8);\n          break;\n        case 1:\n          w = data[0];\n          break;\n      }\n    } else {\n      const len = data.length - left;\n\n      for (let i = 0; i < len; i += 3) {\n        const w = data[i] | (data[i + 1] << 8) | (data[i + 2] << 16);\n\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j += 1;\n        }\n      }\n\n      switch (left) {\n        case 2:\n          w = data[len] | (data[len + 1] << 8);\n          break;\n        case 1:\n          w = data[len];\n          break;\n      }\n    }\n\n    if (left > 0) {\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n    }\n\n    return this._strip();\n  }\n\n  decode(data, endian) {\n    return this.fromBuffer(data, endian);\n  }\n\n  from(num, base, endian) {\n    if (num == null)\n      return this;\n\n    if (base === 'le' || base === 'be')\n      [base, endian] = [endian, base];\n\n    if (typeof num === 'number')\n      return this.fromNumber(num, endian);\n\n    if (typeof num === 'bigint')\n      return this.fromBigInt(num, endian);\n\n    if (typeof num === 'string')\n      return this.fromString(num, base, endian);\n\n    if (typeof num === 'object') {\n      if (BN.isBN(num))\n        return this.fromBN(num, endian);\n\n      if ((num.length >>> 0) === num.length)\n        return this.fromArrayLike(num, endian);\n    }\n\n    if (typeof num === 'boolean')\n      return this.fromBool(num);\n\n    throw new TypeError('Non-numeric object passed to BN.');\n  }\n\n  /*\n   * Static Methods\n   */\n\n  static min(...args) {\n    let min = null;\n\n    for (const num of args) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n\n      if (!min || num.cmp(min) < 0)\n        min = num;\n    }\n\n    return min || new BN(0);\n  }\n\n  static max(...args) {\n    let max = null;\n\n    for (const num of args) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n\n      if (!max || num.cmp(max) > 0)\n        max = num;\n    }\n\n    return max || new BN(0);\n  }\n\n  static cmp(a, b) {\n    enforce(BN.isBN(a), 'a', 'bignum');\n    return a.cmp(b);\n  }\n\n  static ucmp(a, b) {\n    enforce(BN.isBN(a), 'a', 'bignum');\n    return a.ucmp(b);\n  }\n\n  static red(num) {\n    return new Red(num);\n  }\n\n  static barrett(num) {\n    return new Barrett(num);\n  }\n\n  static mont(num) {\n    return new Mont(num);\n  }\n\n  static _prime(name) {\n    if (primes[name])\n      return primes[name];\n\n    let prime;\n\n    if (name === 'p192')\n      prime = new P192();\n    else if (name === 'p224')\n      prime = new P224();\n    else if (name === 'p521')\n      prime = new P521();\n    else if (name === 'k256')\n      prime = new K256();\n    else if (name === 'p251')\n      prime = new P251();\n    else if (name === 'p25519')\n      prime = new P25519();\n    else if (name === 'p448')\n      prime = new P448();\n    else\n      throw new Error(`Unknown prime: \"${name}\".`);\n\n    primes[name] = prime;\n\n    return prime;\n  }\n\n  static prime(name) {\n    return BN._prime(name).p.clone();\n  }\n\n  static pow(num, exp) {\n    if (num === 2)\n      return BN.shift(1, exp);\n\n    return new BN().fromNumber(num).pown(exp);\n  }\n\n  static shift(num, bits) {\n    if (num === 1)\n      return new BN(0).usetn(bits, 1);\n\n    return new BN().fromNumber(num).ishln(bits);\n  }\n\n  static mask(bits) {\n    return BN.shift(1, bits).isubn(1);\n  }\n\n  static randomBits(rng, bits) {\n    enforce(rng != null, 'rng', 'rng');\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    if (typeof rng === 'object') {\n      enforce(typeof rng.randomBytes === 'function', 'rng', 'rng');\n\n      const size = (bits + 7) >>> 3;\n      const total = size * 8;\n      const bytes = rng.randomBytes(size);\n\n      enforce(Buffer.isBuffer(bytes), 'bytes', 'buffer');\n\n      if (bytes.length !== size)\n        throw new RangeError('Invalid number of bytes returned from RNG.');\n\n      const num = BN.fromBuffer(bytes);\n\n      if (total > bits)\n        num.iushrn(total - bits);\n\n      return num;\n    }\n\n    enforce(typeof rng === 'function', 'rng', 'rng');\n\n    const num = rng(bits);\n\n    enforce(BN.isBN(num), 'num', 'bignum');\n    range(num.negative === 0, 'RNG');\n    nonred(!num.red, 'RNG');\n\n    if (num.bitLength() > bits)\n      throw new RangeError('Invalid number of bits returned from RNG.');\n\n    return num;\n  }\n\n  static random(rng, min, max) {\n    min = BN.cast(min, 16);\n    max = BN.cast(max, 16);\n\n    if (min.cmp(max) > 0)\n      throw new RangeError('Minimum cannot be greater than maximum.');\n\n    const space = max.sub(min).iabs();\n    const bits = space.bitLength();\n\n    if (bits === 0)\n      return min.clone();\n\n    for (;;) {\n      const num = BN.randomBits(rng, bits);\n\n      // Maximum is _exclusive_!\n      if (num.cmp(space) >= 0)\n        continue;\n\n      // Minimum is _inclusive_!\n      num.iadd(min);\n\n      return num;\n    }\n  }\n\n  static of(num, endian) {\n    return new BN().of(num, endian);\n  }\n\n  static fromNumber(num, endian) {\n    return new BN().fromNumber(num, endian);\n  }\n\n  static fromDouble(num, endian) {\n    return new BN().fromDouble(num, endian);\n  }\n\n  static fromBigInt(num, endian) {\n    return new BN().fromBigInt(num, endian);\n  }\n\n  static fromBool(value) {\n    return new BN().fromBool(value);\n  }\n\n  static fromString(str, base, endian) {\n    return new BN().fromString(str, base, endian);\n  }\n\n  static fromJSON(json) {\n    return new BN().fromJSON(json);\n  }\n\n  static fromBN(num) {\n    return new BN().fromBN(num);\n  }\n\n  static fromArray(data, endian) {\n    return new BN().fromArray(data, endian);\n  }\n\n  static fromBuffer(data, endian) {\n    return new BN().fromBuffer(data, endian);\n  }\n\n  static fromArrayLike(data, endian) {\n    return new BN().fromArrayLike(data, endian);\n  }\n\n  static decode(data, endian) {\n    return new BN().decode(data, endian);\n  }\n\n  static from(num, base, endian) {\n    return new BN().from(num, base, endian);\n  }\n\n  static cast(num, base, endian) {\n    if (BN.isBN(num))\n      return num;\n\n    return new BN(num, base, endian);\n  }\n\n  static isBN(obj) {\n    return obj instanceof BN;\n  }\n}\n\n/*\n * Static\n */\n\nBN.BN = BN;\nBN.wordSize = 26;\nBN.native = 0;\n\n/**\n * Prime\n */\n\nclass Prime {\n  constructor(name, p) {\n    // P = 2^N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = BN.shift(1, this.n).isub(this.p);\n    this.lo = this.p.clone();\n    this.one = this.p.clone();\n  }\n\n  ireduce(num) {\n    // Assumes that `num` is less than `P^2`:\n    // num = HI * (2^N - K) + HI * K + LO = HI * K + LO (mod P)\n    const neg = num.negative !== 0;\n\n    // Track bits.\n    let bits = num.bitLength();\n\n    // Must be less than P^2.\n    assert(bits <= this.n * 2);\n\n    // Ensure positive.\n    num.negative = 0;\n\n    // Reduce.\n    while (bits > this.n) {\n      // lo = num & ((1 << n) - 1)\n      // num = num >> n\n      this.split(num, this.lo);\n\n      // num = num * K\n      this.imulK(num);\n\n      // num = num + lo\n      num._iadd(num, this.lo);\n\n      // bits = bitlen(num)\n      bits = num.bitLength();\n    }\n\n    // Final reduction.\n    const cmp = bits < this.n ? -1 : num.ucmp(this.p);\n\n    if (cmp === 0) {\n      num.words[0] = 0;\n      num.length = 1;\n    } else if (cmp > 0) {\n      num._isub(num, this.p);\n    } else {\n      // Note: we shouldn't need to strip here.\n    }\n\n    // Adjust sign.\n    if (neg && !num.isZero())\n      num._isub(this.p, num);\n\n    return num;\n  }\n\n  split(input, out) {\n    input._split(this.n, out);\n  }\n\n  imulK(num) {\n    return num.imul(this.k);\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    throw new Error('Not implemented.');\n  }\n\n  fermat(x) {\n    return this.pm2(x);\n  }\n}\n\n/**\n * Prime (3 mod 4)\n */\n\nclass Prime34 extends Prime {\n  constructor(name, p) {\n    super(name, p);\n  }\n\n  pm3d4(x1) {\n    // Exponent: (p - 3) / 4\n    throw new Error('Not implemented.');\n  }\n\n  pp1d4(x1) {\n    // Exponent: (p + 1) / 4\n    throw new Error('Not implemented.');\n  }\n\n  sqrt(x) {\n    // r = x^((p + 1) / 4) mod p\n    const {red} = x;\n    const r = this.pp1d4(x);\n\n    if (!red.sqr(r).eq(x))\n      throw new SquareRootError(r);\n\n    return r;\n  }\n\n  divsqrt(u, v) {\n    // x = u^3 * v * (u^5 * v^3)^((p - 3) / 4) mod p\n    const {red} = u;\n    const u2 = red.sqr(u);\n    const u3 = red.mul(u2, u);\n    const u5 = red.mul(u3, u2);\n    const v3 = red.mul(red.sqr(v), v);\n    const p = this.pm3d4(red.mul(u5, v3));\n    const x = red.mul(red.mul(u3, v), p);\n    const c = red.mul(v, red.sqr(x));\n\n    if (c.eq(u))\n      return x;\n\n    throw new SquareRootError(x);\n  }\n}\n\n/**\n * Prime (5 mod 8)\n */\n\nclass Prime58 extends Prime {\n  constructor(name, p, sm1) {\n    super(name, p);\n\n    this.sm1 = new BN(sm1, 16);\n  }\n\n  pm5d8(x1) {\n    // Exponent: (p - 5) / 8\n    throw new Error('Not implemented.');\n  }\n\n  pp3d8(x1) {\n    // Exponent: (p + 3) / 8\n    throw new Error('Not implemented.');\n  }\n\n  sqrt(x) {\n    // r = x^((p + 3) / 8) mod p\n    const {red} = x;\n    const sm1 = this.sm1._forceRed(red);\n    const r = this.pp3d8(x);\n\n    if (red.sqr(r).eq(x))\n      return r;\n\n    const c = red.mul(r, sm1);\n\n    if (red.sqr(c).eq(x))\n      return c;\n\n    throw new SquareRootError(r);\n  }\n\n  divsqrt(u, v) {\n    // x = u * v^3 * (u * v^7)^((p - 5) / 8) mod p\n    const {red} = u;\n    const sm1 = this.sm1._forceRed(red);\n    const v3 = red.mul(red.sqr(v), v);\n    const v7 = red.mul(red.sqr(v3), v);\n    const p = this.pm5d8(red.mul(u, v7));\n    const x = red.mul(red.mul(u, v3), p);\n    const c = red.mul(v, red.sqr(x));\n\n    if (c.eq(u))\n      return x;\n\n    const mc = red.ineg(c);\n\n    if (mc.eq(u))\n      return red.mul(x, sm1);\n\n    if (mc.eq(red.mul(u, sm1)))\n      throw new SquareRootError(red.mul(x, sm1));\n\n    throw new SquareRootError(x);\n  }\n}\n\n/**\n * Prime (1 mod 16)\n */\n\nclass Prime116 extends Prime {\n  constructor(name, p, g) {\n    super(name, p);\n\n    this.g = new BN(g, 16);\n    this.z = this.p.subn(1).zeroBits();\n  }\n\n  powS(x1) {\n    // Exponent: (p - 1) / 2^k\n    throw new Error('Not implemented.');\n  }\n\n  powE(x1) {\n    // Exponent: (s + 1) / 2\n    throw new Error('Not implemented.');\n  }\n\n  sqrt(x) {\n    // Tonelli-Shanks (variable time).\n    //\n    // Constants:\n    //\n    //   k = factors of 2 for (p - 1)\n    //   s = (p - 1) / 2^k\n    //   e = (s + 1) / 2\n    //   n = first non-square in F(p)\n    //\n    // Algorithm:\n    //\n    //   g = n^s mod p\n    //   y = x^e mod p\n    //   b = x^s mod p\n    //\n    //   loop:\n    //     t = b\n    //     m = 0\n    //\n    //     while t != 1:\n    //       t = t^2 mod p\n    //       m += 1\n    //\n    //     if m == 0:\n    //       break\n    //\n    //     if m >= k:\n    //       fail\n    //\n    //     t = g^(2^(k - m - 1)) mod p\n    //     g = t^2 mod p\n    //     y = y * t mod p\n    //     b = b * g mod p\n    //     k = m\n    //\n    //   return y\n    //\n    const {red} = x;\n\n    switch (red.jacobi(x)) {\n      case -1:\n        throw new SquareRootError(x);\n      case 0:\n        return x.clone();\n      case 1:\n        break;\n    }\n\n    let g = this.g._forceRed(red);\n    let y = this.powE(x);\n    let b = this.powS(x);\n    let k = this.z;\n\n    for (;;) {\n      let t = b;\n      let m = 0;\n\n      while (t.cmpn(1) !== 0 && m < k) {\n        t = red.sqr(t);\n        m += 1;\n      }\n\n      if (m === 0)\n        break;\n\n      assert(m < k);\n\n      t = red.sqrn(g, k - m - 1);\n      g = red.sqr(t);\n      y = red.mul(y, t);\n      b = red.mul(b, g);\n      k = m;\n    }\n\n    return y;\n  }\n\n  divsqrt(u, v) {\n    const {red} = u;\n\n    if (v.isZero())\n      throw new SquareRootError(v);\n\n    return this.sqrt(red.div(u, v));\n  }\n}\n\n/**\n * P192\n */\n\nclass P192 extends Prime34 {\n  constructor() {\n    // 2^192 - 2^64 - 1 (= 3 mod 4)\n    super('p192', 'ffffffff ffffffff ffffffff fffffffe'\n                + 'ffffffff ffffffff');\n  }\n\n  imulK(num) {\n    // K = 0x10000000000000001\n    // K = 2^64 + 1\n    const one = this.one.inject(num);\n    return num.iushln(64)._iadd(num, one);\n  }\n\n  core(x1) {\n    // Exponent: (p - 3) / 4\n    // Bits: 127x1 1x0 62x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x3 = red.sqrnmul(x2, 1, x1);\n    const x6 = red.sqrnmul(x3, 3, x3);\n    const x12 = red.sqrnmul(x6, 6, x6);\n    const x24 = red.sqrnmul(x12, 12, x12);\n    const x30 = red.sqrnmul(x24, 6, x6);\n    const x31 = red.sqrnmul(x30, 1, x1);\n    const x62 = red.sqrnmul(x31, 31, x31);\n    const x124 = red.sqrnmul(x62, 62, x62);\n    const x127 = red.sqrnmul(x124, 3, x3);\n    const r0 = red.sqrn(x127, 1);\n    const r1 = red.sqrnmul(r0, 62, x62);\n\n    return r1;\n  }\n\n  pm3d4(x1) {\n    // Exponent: (p - 3) / 4\n    // Bits: 127x1 1x0 62x1\n    return this.core(x1);\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 127x1 1x0 62x1 1x0 1x1\n    const {red} = x1;\n    const r0 = this.core(x1);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n\n    return r2;\n  }\n\n  pp1d4(x1) {\n    // Exponent: (p + 1) / 4\n    // Bits: 128x1 62x0\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x4 = red.sqrnmul(x2, 2, x2);\n    const x8 = red.sqrnmul(x4, 4, x4);\n    const x16 = red.sqrnmul(x8, 8, x8);\n    const x32 = red.sqrnmul(x16, 16, x16);\n    const x64 = red.sqrnmul(x32, 32, x32);\n    const x128 = red.sqrnmul(x64, 64, x64);\n    const r0 = red.sqrn(x128, 62);\n\n    return r0;\n  }\n}\n\n/**\n * P224\n */\n\nclass P224 extends Prime116 {\n  constructor() {\n    // 2^224 - 2^96 + 1 (1 mod 16)\n    super('p224', 'ffffffff ffffffff ffffffff ffffffff'\n                + '00000000 00000000 00000001',\n                  '6a0fec67 8598a792 0c55b2d4 0b2d6ffb'\n                + 'bea3d8ce f3fb3632 dc691b74');\n  }\n\n  imulK(num) {\n    // K = 0xffffffffffffffffffffffff\n    // K = 2^96 - 1\n    const one = this.one.inject(num);\n    return num.iushln(96)._isub(num, one);\n  }\n\n  powS(x1) {\n    // Exponent: 2^128 - 1\n    // Bits: 128x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x4 = red.sqrnmul(x2, 2, x2);\n    const x8 = red.sqrnmul(x4, 4, x4);\n    const x16 = red.sqrnmul(x8, 8, x8);\n    const x32 = red.sqrnmul(x16, 16, x16);\n    const x64 = red.sqrnmul(x32, 32, x32);\n    const x128 = red.sqrnmul(x64, 64, x64);\n\n    return x128;\n  }\n\n  powE(x1) {\n    // Exponent: 2^127\n    // Bits: 1x1 127x0\n    const {red} = x1;\n    const r0 = red.sqrn(x1, 127);\n\n    return r0;\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 127x1 1x0 96x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x3 = red.sqrnmul(x2, 1, x1);\n    const x6 = red.sqrnmul(x3, 3, x3);\n    const x12 = red.sqrnmul(x6, 6, x6);\n    const x24 = red.sqrnmul(x12, 12, x12);\n    const x48 = red.sqrnmul(x24, 24, x24);\n    const x96 = red.sqrnmul(x48, 48, x48);\n    const x120 = red.sqrnmul(x96, 24, x24);\n    const x126 = red.sqrnmul(x120, 6, x6);\n    const x127 = red.sqrnmul(x126, 1, x1);\n    const r0 = red.sqrn(x127, 1);\n    const r1 = red.sqrnmul(r0, 96, x96);\n\n    return r1;\n  }\n}\n\n/**\n * P521\n */\n\nclass P521 extends Prime34 {\n  constructor() {\n    // 2^521 - 1 (= 3 mod 4)\n    super('p521', '000001ff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff');\n  }\n\n  imulK(num) {\n    // K = 0x01\n    return num;\n  }\n\n  core(x1) {\n    // Exponent: 2^519 - 1\n    // Bits: 519x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x3 = red.sqrnmul(x2, 1, x1);\n    const x6 = red.sqrnmul(x3, 3, x3);\n    const x7 = red.sqrnmul(x6, 1, x1);\n    const x8 = red.sqrnmul(x7, 1, x1);\n    const x16 = red.sqrnmul(x8, 8, x8);\n    const x32 = red.sqrnmul(x16, 16, x16);\n    const x64 = red.sqrnmul(x32, 32, x32);\n    const x128 = red.sqrnmul(x64, 64, x64);\n    const x256 = red.sqrnmul(x128, 128, x128);\n    const x512 = red.sqrnmul(x256, 256, x256);\n    const x519 = red.sqrnmul(x512, 7, x7);\n\n    return x519;\n  }\n\n  pm3d4(x1) {\n    // Exponent: 2^519 - 1\n    // Bits: 519x1\n    return this.core(x1);\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 519x1 1x0 1x1\n    const {red} = x1;\n    const r0 = this.core(x1);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n\n    return r2;\n  }\n\n  pp1d4(x1) {\n    // Exponent: (p + 1) / 4\n    // Bits: 1x1 519x0\n    const {red} = x1;\n    const r0 = red.sqrn(x1, 519);\n\n    return r0;\n  }\n}\n\n/**\n * K256\n */\n\nclass K256 extends Prime34 {\n  constructor() {\n    // 2^256 - 2^32 - 977 (= 3 mod 4)\n    super('k256', 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  split(input, output) {\n    // 256 = 9 * 26 + 22\n    const mask = 0x3fffff;\n    const len = Math.min(input.length, 9);\n\n    output._alloc(len + 1);\n\n    for (let i = 0; i < len; i++)\n      output.words[i] = input.words[i];\n\n    output.length = len;\n\n    if (input.length <= 9) {\n      output._strip();\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs.\n    let prev = input.words[9];\n    let i = 10;\n\n    output.words[output.length++] = prev & mask;\n    output._strip();\n\n    for (; i < input.length; i++) {\n      const next = input.words[i] | 0;\n\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n\n      prev = next;\n    }\n\n    prev >>>= 22;\n\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10)\n      input.length -= 10;\n    else\n      input.length -= 9;\n\n    input._strip(); // Unsure if we need this.\n  }\n\n  imulK(num) {\n    // K = 0x1000003d1 = [0x40, 0x3d1]\n    // K = 2^32 + 977\n    num._expand(num.length + 2);\n\n    // Bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    let lo = 0;\n\n    for (let i = 0; i < num.length; i++) {\n      const w = num.words[i];\n\n      lo += w * 0x3d1;\n\n      num.words[i] = lo & 0x3ffffff;\n\n      lo = w * 0x40 + Math.floor(lo / 0x4000000);\n    }\n\n    // Fast length reduction.\n    if (num.words[num.length - 1] === 0) {\n      num.length -= 1;\n      if (num.words[num.length - 1] === 0)\n        num.length -= 1;\n    }\n\n    // Note: we shouldn't need to strip here.\n    return num;\n  }\n\n  core(x1, x2) {\n    // Exponent: (p - 47) / 64\n    // Bits: 223x1 1x0 22x1 4x0\n    const {red} = x1;\n    const x3 = red.sqrnmul(x2, 1, x1);\n    const x6 = red.sqrnmul(x3, 3, x3);\n    const x9 = red.sqrnmul(x6, 3, x3);\n    const x11 = red.sqrnmul(x9, 2, x2);\n    const x22 = red.sqrnmul(x11, 11, x11);\n    const x44 = red.sqrnmul(x22, 22, x22);\n    const x88 = red.sqrnmul(x44, 44, x44);\n    const x176 = red.sqrnmul(x88, 88, x88);\n    const x220 = red.sqrnmul(x176, 44, x44);\n    const x223 = red.sqrnmul(x220, 3, x3);\n    const r0 = red.sqrn(x223, 1);\n    const r1 = red.sqrnmul(r0, 22, x22);\n    const r2 = red.sqrn(r1, 4);\n\n    return r2;\n  }\n\n  pm3d4(x1) {\n    // Exponent: (p - 3) / 4\n    // Bits: 223x1 1x0 22x1 4x0 1x1 1x0 2x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r2 = this.core(x1, x2);\n    const r3 = red.sqrnmul(r2, 1, x1);\n    const r4 = red.sqrn(r3, 1);\n    const r5 = red.sqrnmul(r4, 2, x2);\n\n    return r5;\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 223x1 1x0 22x1 4x0 1x1 1x0 2x1 1x0 1x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r2 = this.core(x1, x2);\n    const r3 = red.sqrnmul(r2, 1, x1);\n    const r4 = red.sqrn(r3, 1);\n    const r5 = red.sqrnmul(r4, 2, x2);\n    const r6 = red.sqrn(r5, 1);\n    const r7 = red.sqrnmul(r6, 1, x1);\n\n    return r7;\n  }\n\n  pp1d4(x1) {\n    // Exponent: (p + 1) / 4\n    // Bits: 223x1 1x0 22x1 4x0 2x1 2x0\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r2 = this.core(x1, x2);\n    const r3 = red.sqrnmul(r2, 2, x2);\n    const r4 = red.sqrn(r3, 2);\n\n    return r4;\n  }\n}\n\n/**\n * P251\n */\n\nclass P251 extends Prime34 {\n  constructor() {\n    // 2^251 - 9\n    super('p251', '07ffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff ffffffff fffffff7');\n  }\n\n  imulK(num) {\n    // K = 0x09\n    if (num.isZero())\n      return num;\n\n    let carry = 0;\n\n    for (let i = 0; i < num.length; i++) {\n      const w = num.words[i] * 0x09 + carry;\n\n      carry = w >>> 26;\n\n      num.words[i] = w & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      num._alloc(num.length + 1);\n      num.words[num.length++] = carry;\n    }\n\n    // Note: we shouldn't need to strip here.\n    return num;\n  }\n\n  core(x1) {\n    // Exponent: 2^247 - 1\n    // Bits: 247x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x3 = red.sqrnmul(x2, 1, x1);\n    const x6 = red.sqrnmul(x3, 3, x3);\n    const x12 = red.sqrnmul(x6, 6, x6);\n    const x24 = red.sqrnmul(x12, 12, x12);\n    const x48 = red.sqrnmul(x24, 24, x24);\n    const x96 = red.sqrnmul(x48, 48, x48);\n    const x192 = red.sqrnmul(x96, 96, x96);\n    const x240 = red.sqrnmul(x192, 48, x48);\n    const x246 = red.sqrnmul(x240, 6, x6);\n    const x247 = red.sqrnmul(x246, 1, x1);\n\n    return x247;\n  }\n\n  pm3d4(x1) {\n    // Exponent: (p - 3) / 4\n    // Bits: 247x1 1x0 1x1\n    const {red} = x1;\n    const r0 = this.core(x1);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n\n    return r2;\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 247x1 1x0 1x1 1x0 1x1\n    const {red} = x1;\n    const r0 = this.core(x1);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n    const r3 = red.sqrn(r2, 1);\n    const r4 = red.sqrnmul(r3, 1, x1);\n\n    return r4;\n  }\n\n  pp1d4(x1) {\n    // Exponent: (p + 1) / 4\n    // Bits: 248x1 1x0\n    const {red} = x1;\n    const r0 = this.core(x1);\n    const r1 = red.sqrnmul(r0, 1, x1);\n    const r2 = red.sqrn(r1, 1);\n\n    return r2;\n  }\n}\n\n/**\n * P25519\n */\n\nclass P25519 extends Prime58 {\n  constructor() {\n    // 2^255 - 19 (= 5 mod 8)\n    super('p25519', '7fffffff ffffffff ffffffff ffffffff'\n                  + 'ffffffff ffffffff ffffffff ffffffed',\n                    '2b832480 4fc1df0b 2b4d0099 3dfbd7a7'\n                  + '2f431806 ad2fe478 c4ee1b27 4a0ea0b0');\n  }\n\n  imulK(num) {\n    // K = 0x13\n    let carry = 0;\n\n    for (let i = 0; i < num.length; i++) {\n      const w = num.words[i] * 0x13 + carry;\n\n      carry = w >>> 26;\n\n      num.words[i] = w & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      num._alloc(num.length + 1);\n      num.words[num.length++] = carry;\n    }\n\n    // Note: we shouldn't need to strip here.\n    return num;\n  }\n\n  core(x1, x2) {\n    // Exponent: 2^250 - 1\n    // Bits: 250x1\n    const {red} = x1;\n    const x4 = red.sqrnmul(x2, 2, x2);\n    const x5 = red.sqrnmul(x4, 1, x1);\n    const x10 = red.sqrnmul(x5, 5, x5);\n    const x20 = red.sqrnmul(x10, 10, x10);\n    const x40 = red.sqrnmul(x20, 20, x20);\n    const x50 = red.sqrnmul(x40, 10, x10);\n    const x100 = red.sqrnmul(x50, 50, x50);\n    const x200 = red.sqrnmul(x100, 100, x100);\n    const x250 = red.sqrnmul(x200, 50, x50);\n\n    return x250;\n  }\n\n  pm5d8(x1) {\n    // Exponent: (p - 5) / 8\n    // Bits: 250x1 1x0 1x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r0 = this.core(x1, x2);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n\n    return r2;\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 250x1 1x0 1x1 1x0 2x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r0 = this.core(x1, x2);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n    const r3 = red.sqrn(r2, 1);\n    const r4 = red.sqrnmul(r3, 2, x2);\n\n    return r4;\n  }\n\n  pp3d8(x1) {\n    // Exponent: (p + 3) / 8\n    // Bits: 251x1 1x0\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r0 = this.core(x1, x2);\n    const r1 = red.sqrnmul(r0, 1, x1);\n    const r2 = red.sqrn(r1, 1);\n\n    return r2;\n  }\n}\n\n/**\n * P448\n */\n\nclass P448 extends Prime34 {\n  constructor() {\n    // 2^448 - 2^224 - 1 (= 3 mod 4)\n    super('p448', 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff fffffffe ffffffff'\n                + 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff');\n  }\n\n  imulK(num) {\n    // K = 0x100000000000000000000000000000000000000000000000000000001\n    // K = 2^224 + 1\n    const one = this.one.inject(num);\n    return num.iushln(224)._iadd(num, one);\n  }\n\n  core(x1, x2) {\n    // Exponent: 2^222 - 1\n    // Bits: 222x1\n    const {red} = x1;\n    const x3 = red.sqrnmul(x2, 1, x1);\n    const x6 = red.sqrnmul(x3, 3, x3);\n    const x9 = red.sqrnmul(x6, 3, x3);\n    const x11 = red.sqrnmul(x9, 2, x2);\n    const x22 = red.sqrnmul(x11, 11, x11);\n    const x44 = red.sqrnmul(x22, 22, x22);\n    const x88 = red.sqrnmul(x44, 44, x44);\n    const x176 = red.sqrnmul(x88, 88, x88);\n    const x220 = red.sqrnmul(x176, 44, x44);\n    const x222 = red.sqrnmul(x220, 2, x2);\n\n    return x222;\n  }\n\n  pm3d4(x1) {\n    // Exponent: (p - 3) / 4\n    // Bits: 223x1 1x0 222x1\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const x222 = this.core(x1, x2);\n    const r0 = red.sqrnmul(x222, 1, x1);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 222, x222);\n\n    return r2;\n  }\n\n  pm2(x1) {\n    // Exponent: p - 2\n    // Bits: 223x1 1x0 222x1 1x0 1x1\n    const {red} = x1;\n    const r0 = this.pm3d4(x1);\n    const r1 = red.sqrn(r0, 1);\n    const r2 = red.sqrnmul(r1, 1, x1);\n\n    return r2;\n  }\n\n  pp1d4(x1) {\n    // Exponent: (p + 1) / 4\n    // Bits: 224x1 222x0\n    const {red} = x1;\n    const x2 = red.sqrnmul(x1, 1, x1);\n    const r0 = this.core(x1, x2);\n    const r1 = red.sqrnmul(r0, 2, x2);\n    const r2 = red.sqrn(r1, 222);\n\n    return r2;\n  }\n}\n\n/**\n * Reduction Engine\n */\n\nclass Red {\n  constructor(m) {\n    let prime = null;\n\n    if (typeof m === 'string') {\n      prime = BN._prime(m);\n      m = prime.p;\n    }\n\n    enforce(BN.isBN(m), 'm', 'bignum');\n    nonred(!m.red, 'reduction');\n    range(m.sign() > 0, 'reduction');\n\n    this.m = m;\n    this.prime = prime;\n    this.mb = null;\n    this.sm1 = null;\n  }\n\n  _verify1(a) {\n    range(a.negative === 0, 'red');\n    red(a.red != null, 'red');\n  }\n\n  _verify2(a, b) {\n    range((a.negative | b.negative) === 0, 'red');\n    red(a.red != null && a.red === b.red, 'red');\n  }\n\n  get mont() {\n    return false;\n  }\n\n  precompute() {\n    // Precompute `sqrt(-1)` for primes congruent to 5 mod 8.\n    if (this.sm1 === null && this.m.andln(7) === 5) {\n      if (this.prime) {\n        this.sm1 = this.prime.sm1.clone()._forceRed(this);\n      } else {\n        const x = new BN(2).toRed(this);\n        const e = this.m.subn(1).iushrn(2);\n\n        // sqrt(-1) = 2^((p - 1) / 4) mod p\n        this.sm1 = this.pow(x, e);\n      }\n    }\n\n    return this;\n  }\n\n  convertTo(num) {\n    const res = num.mod(this.m);\n    res.red = this;\n    return res;\n  }\n\n  convertFrom(num) {\n    const res = num.clone();\n    res.red = null;\n    return res;\n  }\n\n  intTo(a) {\n    return a;\n  }\n\n  intFrom(a) {\n    return a;\n  }\n\n  imod(a) {\n    if (this.prime)\n      return this.prime.ireduce(a)._forceRed(this);\n\n    return a.imod(this.m)._forceRed(this);\n  }\n\n  iadd(a, b) {\n    this._verify2(a, b);\n\n    a._iadd(a, b);\n\n    if (a.ucmp(this.m) >= 0)\n      a._isub(a, this.m);\n\n    return a;\n  }\n\n  add(a, b) {\n    if (a.length < b.length)\n      return this.iadd(b.clone(), a);\n\n    return this.iadd(a.clone(), b);\n  }\n\n  iaddn(a, num) {\n    this._verify1(a);\n\n    if (num < 0)\n      return this.isubn(a, -num);\n\n    if (this.m.length === 1)\n      num %= this.m.words[0];\n\n    a._iaddn(num);\n\n    if (a.ucmp(this.m) >= 0)\n      a._isub(a, this.m);\n\n    return a;\n  }\n\n  addn(a, num) {\n    return this.iaddn(a.clone(), num);\n  }\n\n  isub(a, b) {\n    this._verify2(a, b);\n\n    //  0: a - a mod m == 0\n    // -1: a - b mod m == m - (b - a)\n    // +1: a - b mod m == a - b\n    const cmp = a.ucmp(b);\n\n    if (cmp === 0) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    if (cmp < 0) {\n      a._isub(b, a);\n      a._isub(this.m, a);\n    } else {\n      a._isub(a, b);\n    }\n\n    return a;\n  }\n\n  sub(a, b) {\n    return this.isub(a.clone(), b);\n  }\n\n  isubn(a, num) {\n    this._verify1(a);\n\n    if (num < 0)\n      return this.iaddn(a, -num);\n\n    if (this.m.length === 1)\n      num %= this.m.words[0];\n\n    //  <: a - b mod m == m - (b - a)\n    // >=: a - b mod m == a - b\n    if (a.length === 1 && a.words[0] < num) {\n      a.words[0] = num - a.words[0];\n      a._isub(this.m, a);\n    } else {\n      a._isubn(num);\n    }\n\n    return a;\n  }\n\n  subn(a, num) {\n    return this.isubn(a.clone(), num);\n  }\n\n  imul(a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  }\n\n  mul(a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  }\n\n  imuln(a, num) {\n    this._verify1(a);\n\n    if (a.isZero())\n      return a;\n\n    if (num === 0) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    const neg = num < 0;\n\n    if (neg)\n      num = -num;\n\n    if (this.m.length === 1)\n      num %= this.m.words[0];\n\n    a.imuln(num);\n\n    if (num <= 16) {\n      // Quick reduction.\n      while (a.ucmp(this.m) >= 0)\n        a._isub(a, this.m);\n    } else {\n      this.imod(a);\n    }\n\n    if (neg)\n      this.ineg(a);\n\n    return a;\n  }\n\n  muln(a, num) {\n    return this.imuln(a.clone(), num);\n  }\n\n  idiv(a, b) {\n    return this.div(a, b)._move(a);\n  }\n\n  div(a, b) {\n    return this.mul(a, this.invert(b));\n  }\n\n  idivn(a, num) {\n    return this.divn(a, num)._move(a);\n  }\n\n  divn(a, num) {\n    return this.div(a, this.convertTo(new BN(num)));\n  }\n\n  ipow(a, num) {\n    return this.pow(a, num)._move(a);\n  }\n\n  pow(a, num) {\n    this._verify1(a);\n\n    if (num.isNeg())\n      a = this.invert(a);\n\n    // Small exponent.\n    if (num.length === 1)\n      return this.pown(a, num.words[0]);\n\n    // Call out to BigInt.\n    if (HAS_BIGINT && !this.prime)\n      return this.powInt(a, num);\n\n    // Otherwise, a BN implementation.\n    return this.powNum(a, num);\n  }\n\n  powNum(a, num) {\n    // Sliding window (odd multiples only).\n    const one = new BN(1).toRed(this);\n    const wnd = new Array(WND_SIZE);\n    const a2 = this.sqr(a);\n\n    wnd[0] = a;\n\n    for (let i = 1; i < WND_SIZE; i++)\n      wnd[i] = this.mul(wnd[i - 1], a2);\n\n    let i = num.bitLength();\n    let r = one;\n\n    while (i >= WND_WIDTH) {\n      let width = WND_WIDTH;\n      let bits = num.bits(i - width, width);\n\n      if (bits < WND_SIZE) {\n        r = this.sqr(r);\n        i -= 1;\n        continue;\n      }\n\n      while ((bits & 1) === 0) {\n        width -= 1;\n        bits >>= 1;\n      }\n\n      if (r === one) {\n        r = wnd[bits >> 1].clone();\n      } else {\n        r = this.sqrn(r, width);\n        r = this.mul(r, wnd[bits >> 1]);\n      }\n\n      i -= width;\n    }\n\n    if (i > 0) {\n      const bits = num.bits(0, i);\n\n      while (i--) {\n        r = this.sqr(r);\n\n        if ((bits >> i) & 1)\n          r = this.mul(r, a);\n      }\n    }\n\n    return r;\n  }\n\n  powInt(a, num) {\n    if (this.mb === null)\n      this.mb = this.m.toBigInt();\n\n    const x = this.intFrom(a.toBigInt());\n    const y = powInt(x, num, this.mb);\n    const z = this.intTo(y);\n\n    return BN.fromBigInt(z)._forceRed(this);\n  }\n\n  sqrn(a, n) {\n    while (n--)\n      a = this.sqr(a);\n\n    return a;\n  }\n\n  sqrnmul(a, n, b) {\n    return this.mul(this.sqrn(a, n), b);\n  }\n\n  ipown(a, num) {\n    return this.pown(a, num)._move(a);\n  }\n\n  pown(a, num) {\n    this._verify1(a);\n\n    if (num < 0) {\n      a = this.invert(a);\n      num = -num;\n    }\n\n    if (num === 0)\n      return new BN(1).toRed(this);\n\n    if (num === 1)\n      return a.clone();\n\n    const bits = countBits(num);\n\n    let r = a;\n\n    for (let i = bits - 2; i >= 0; i--) {\n      r = this.sqr(r);\n\n      if ((num >> i) & 1)\n        r = this.mul(r, a);\n    }\n\n    return r;\n  }\n\n  isqr(a) {\n    return this.imul(a, a);\n  }\n\n  sqr(a) {\n    return this.mul(a, a);\n  }\n\n  isqrt(x) {\n    return this.sqrt(x)._move(x);\n  }\n\n  sqrt(x) {\n    this._verify1(x);\n\n    // Optimized square root chain.\n    if (this.prime)\n      return this.prime.sqrt(x);\n\n    // Fast case (p = 3 mod 4).\n    if (this.m.andln(3) === 3)\n      return this.sqrt3mod4(x);\n\n    // Fast case (p = 5 mod 8).\n    if (this.m.andln(7) === 5) {\n      if (this.sm1 != null)\n        return this.sqrt5mod8sm1(x);\n      return this.sqrt5mod8(x);\n    }\n\n    // Slow case (Tonelli-Shanks).\n    return this.sqrt0(x);\n  }\n\n  sqrt3mod4(x) {\n    const e = this.m.addn(1).iushrn(2); // (p + 1) / 4\n    const b = this.pow(x, e);\n\n    if (!this.sqr(b).eq(x))\n      throw new SquareRootError(b);\n\n    return b;\n  }\n\n  sqrt5mod8(x) {\n    // Atkin's Algorithm.\n    const one = new BN(1).toRed(this);\n    const e = this.m.ushrn(3); // (p - 5) / 8\n    const x2 = this.add(x, x);\n    const alpha = this.pow(x2, e);\n    const beta = this.mul(x2, this.sqr(alpha));\n    const b = this.mul(this.mul(alpha, x), this.isub(beta, one));\n\n    if (!this.sqr(b).eq(x))\n      throw new SquareRootError(b);\n\n    return b;\n  }\n\n  sqrt5mod8sm1(x) {\n    const e = this.m.addn(3).iushrn(3); // (p + 3) / 8\n    const b = this.pow(x, e);\n\n    if (this.sqr(b).eq(x))\n      return b;\n\n    const c = this.mul(b, this.sm1);\n\n    if (this.sqr(c).eq(x))\n      return c;\n\n    throw new SquareRootError(b);\n  }\n\n  sqrt0(x) {\n    if (this.m.cmpn(1) === 0 || !this.m.isOdd())\n      throw new Error('Invalid prime.');\n\n    switch (this.jacobi(x)) {\n      case -1:\n        throw new SquareRootError(x);\n      case 0:\n        return x.clone();\n      case 1:\n        break;\n    }\n\n    const one = new BN(1).toRed(this);\n    const s = this.m.subn(1);\n    const e = s._makeOdd();\n    const n = new BN(2).toRed(this);\n\n    while (this.jacobi(n) !== -1)\n      this.iadd(n, one);\n\n    let g = this.pow(n, s);\n    let b = this.pow(x, s);\n    let y = this.pow(x, s.iaddn(1).iushrn(1));\n    let k = e;\n\n    for (;;) {\n      let t = b;\n      let m = 0;\n\n      while (!t.eq(one) && m < k) {\n        t = this.sqr(t);\n        m += 1;\n      }\n\n      if (m === 0)\n        break;\n\n      assert(m < k);\n\n      t = this.sqrn(g, k - m - 1);\n      g = this.sqr(t);\n      y = this.mul(y, t);\n      b = this.mul(b, g);\n      k = m;\n    }\n\n    return y;\n  }\n\n  idivsqrt(u, v) {\n    return this.divsqrt(u, v)._move(u);\n  }\n\n  divsqrt(u, v) {\n    this._verify2(u, v);\n\n    // u = 0, v = 0\n    if (u.isZero() && v.isZero())\n      throw new SquareRootError(v);\n\n    // Optimized inverse square root chain.\n    if (this.prime)\n      return this.prime.divsqrt(u, v);\n\n    // p = 3 mod 4\n    if (this.m.andln(3) === 3)\n      return this.divsqrt3mod4(u, v);\n\n    // p = 5 mod 8\n    if (this.sm1 != null && this.m.andln(7) === 5)\n      return this.divsqrt5mod8(u, v);\n\n    // v = 0\n    if (v.isZero())\n      throw new SquareRootError(v);\n\n    return this.sqrt(this.div(u, v));\n  }\n\n  divsqrt3mod4(u, v) {\n    // x = u^3 * v * (u^5 * v^3)^((p - 3) / 4) mod p\n    const e = this.m.subn(3).iushrn(2);\n    const u2 = this.sqr(u);\n    const u3 = this.mul(u2, u);\n    const u5 = this.mul(u3, u2);\n    const v3 = this.mul(this.sqr(v), v);\n    const p = this.pow(this.mul(u5, v3), e);\n    const x = this.mul(this.mul(u3, v), p);\n    const c = this.mul(v, this.sqr(x));\n\n    if (c.eq(u))\n      return x;\n\n    throw new SquareRootError(x);\n  }\n\n  divsqrt5mod8(u, v) {\n    // x = u * v^3 * (u * v^7)^((p - 5) / 8) mod p\n    const e = this.m.subn(5).iushrn(3);\n    const v3 = this.mul(this.sqr(v), v);\n    const v7 = this.mul(this.sqr(v3), v);\n    const p = this.pow(this.mul(u, v7), e);\n    const x = this.mul(this.mul(u, v3), p);\n    const c = this.mul(v, this.sqr(x));\n\n    if (c.eq(u))\n      return x;\n\n    const mc = this.ineg(c);\n\n    if (mc.eq(u))\n      return this.mul(x, this.sm1);\n\n    if (mc.eq(this.mul(u, this.sm1)))\n      throw new SquareRootError(this.mul(x, this.sm1));\n\n    throw new SquareRootError(x);\n  }\n\n  isSquare(a) {\n    if (this.m.isOdd())\n      return this.jacobi(a) >= 0;\n\n    return this.kronecker(a) >= 0;\n  }\n\n  ishl(a, num) {\n    this._verify1(a);\n    return this.imod(a.iushl(num));\n  }\n\n  shl(a, num) {\n    return this.ishl(a.clone(), num);\n  }\n\n  ishln(a, num) {\n    this._verify1(a);\n\n    a.iushln(num);\n\n    if (num <= 4) {\n      // Quick reduction.\n      while (a.ucmp(this.m) >= 0)\n        a._isub(a, this.m);\n    } else {\n      this.imod(a);\n    }\n\n    return a;\n  }\n\n  shln(a, num) {\n    return this.ishln(a.clone(), num);\n  }\n\n  ineg(a) {\n    this._verify1(a);\n\n    if (!a.isZero())\n      a._isub(this.m, a);\n\n    return a;\n  }\n\n  neg(a) {\n    return this.ineg(a.clone());\n  }\n\n  eq(a, b) {\n    this._verify2(a, b);\n    return a.ucmp(b) === 0;\n  }\n\n  eqn(a, num) {\n    this._verify1(a);\n\n    if (this.m.length === 1) {\n      num %= this.m.words[0];\n\n      if (num < 0)\n        num += this.m.words[0];\n\n      return a.ucmpn(num) === 0;\n    }\n\n    if (num < 0) {\n      this.m._isubn(-num);\n\n      const cmp = a.ucmp(this.m);\n\n      this.m._iaddn(-num);\n\n      return cmp === 0;\n    }\n\n    return a.ucmpn(num) === 0;\n  }\n\n  isHigh(a) {\n    return !this.isLow(a);\n  }\n\n  isLow(a) {\n    this._verify1(a);\n    return a.ucmp(this.m.ushrn(1)) <= 0;\n  }\n\n  isOdd(a) {\n    this._verify1(a);\n    return a.isOdd();\n  }\n\n  isEven(a) {\n    this._verify1(a);\n    return a.isEven();\n  }\n\n  legendre(num) {\n    this._verify1(num);\n\n    if (this.m.isEven())\n      throw new Error('legendre: `num` must be odd.');\n\n    // Euler's criterion.\n    const e = this.m.subn(1).iushrn(1); // (p - 1) / 2\n    const symbol = this.pow(num, e);\n\n    if (symbol.isZero())\n      return 0;\n\n    const one = new BN(1).toRed(this);\n\n    if (symbol.eq(one))\n      return 1;\n\n    if (symbol.eq(this.ineg(one)))\n      return -1;\n\n    throw new Error('Invalid prime.');\n  }\n\n  jacobi(a) {\n    this._verify1(a);\n    return a.jacobi(this.m);\n  }\n\n  kronecker(a) {\n    this._verify1(a);\n    return a.kronecker(this.m);\n  }\n\n  iinvert(a) {\n    return this.invert(a)._move(a);\n  }\n\n  invert(a) {\n    this._verify1(a);\n    return a.invert(this.m)._forceRed(this);\n  }\n\n  ifermat(a) {\n    return this.fermat(a)._move(a);\n  }\n\n  fermat(a) {\n    this._verify1(a);\n\n    if (a.isZero() || this.m.cmpn(1) === 0)\n      throw new RangeError('Not invertible.');\n\n    // Optimized inversion chain.\n    if (this.prime)\n      return this.prime.fermat(a);\n\n    // Invert using fermat's little theorem.\n    return this.pow(a, this.m.subn(2));\n  }\n\n  invertAll(elems) {\n    // Montgomery's trick.\n    enforce(Array.isArray(elems), 'elems', 'array');\n\n    for (const elem of elems) {\n      enforce(BN.isBN(elem), 'elem', 'bignum');\n\n      this._verify1(elem);\n    }\n\n    if (this.m.cmpn(1) === 0 || this.m.isEven())\n      throw new RangeError('Not invertible.');\n\n    const len = elems.length;\n    const invs = new Array(len);\n\n    if (len === 0)\n      return invs;\n\n    let acc = new BN(1).toRed(this);\n\n    for (let i = 0; i < len; i++) {\n      if (elems[i].isZero()) {\n        invs[i] = elems[i].clone();\n        continue;\n      }\n\n      invs[i] = acc;\n      acc = this.mul(acc, elems[i]);\n    }\n\n    acc = this.invert(acc);\n\n    for (let i = len - 1; i >= 0; i--) {\n      if (elems[i].isZero())\n        continue;\n\n      invs[i] = this.mul(acc, invs[i]);\n      acc = this.mul(acc, elems[i]);\n    }\n\n    return invs;\n  }\n\n  [custom]() {\n    if (this.prime)\n      return `<Red: ${this.prime.name}>`;\n\n    return `<Red: ${this.m.toString(10)}>`;\n  }\n}\n\n/**\n * Barrett Engine\n */\n\nclass Barrett extends Red {\n  constructor(m) {\n    super(m);\n\n    this.prime = null;\n    this.n = this.m.bitLength();\n\n    if ((this.n % 26) !== 0)\n      this.n += 26 - (this.n % 26);\n\n    this.k = this.n * 2;\n    this.w = this.k / 26;\n    this.b = BN.shift(1, this.k).div(this.m);\n  }\n\n  convertTo(num) {\n    if (num.length > this.w)\n      return super.convertTo(num);\n\n    return this.imod(num.clone());\n  }\n\n  _shift(q) {\n    let i = 0;\n    let j = this.w;\n\n    while (j < q.length)\n      q.words[i++] = q.words[j++];\n\n    if (i === 0)\n      q.words[i++] = 0;\n\n    q.length = i;\n  }\n\n  imod(a) {\n    const neg = a.negative;\n\n    assert(a.length <= this.w);\n\n    a.negative = 0;\n\n    const q = a.mul(this.b);\n\n    // Shift right by `k` bits.\n    this._shift(q);\n\n    a._isub(a, q.mul(this.m));\n\n    if (a.ucmp(this.m) >= 0)\n      a._isub(a, this.m);\n\n    if (neg && !a.isZero())\n      a._isub(this.m, a);\n\n    a.red = this;\n\n    return a;\n  }\n}\n\n/**\n * Montgomery Engine\n */\n\nclass Mont extends Red {\n  constructor(m) {\n    super(m);\n\n    // Note that:\n    //\n    //   mi = (-m^-1 mod (2^(n * 2))) mod r\n    //\n    // and:\n    //\n    //   mi = (((2^n)^-1 mod m) * r^-1 - 1) / m\n    //\n    // are equivalent.\n    this.prime = null;\n    this.n = this.m.length * 26;\n    this.r = BN.shift(1, this.n);\n    this.r2 = BN.shift(1, this.n * 2).imod(this.m);\n    this.ri = this.r.invert(this.m);\n    this.mi = this.r.mul(this.ri).isubn(1).div(this.m);\n    this.rib = null;\n  }\n\n  get mont() {\n    return true;\n  }\n\n  convertTo(num) {\n    if (num.isNeg() || num.ucmp(this.m) >= 0)\n      return this.imod(num.ushln(this.n));\n\n    // Equivalent to: (num * 2^n) mod m\n    return this.mul(num, this.r2);\n  }\n\n  convertFrom(num) {\n    // Equivalent to: num * r^-1 mod m\n    const r = this.mul(num, new BN(1));\n    r.red = null;\n    return r;\n  }\n\n  intTo(a) {\n    return (a << BigInt(this.n)) % this.mb;\n  }\n\n  intFrom(a) {\n    if (this.rib === null)\n      this.rib = this.ri.toBigInt();\n\n    return (a * this.rib) % this.mb;\n  }\n\n  iaddn(a, num) {\n    return this.iadd(a, this.convertTo(new BN(num)));\n  }\n\n  isubn(a, num) {\n    return this.isub(a, this.convertTo(new BN(num)));\n  }\n\n  imul(a, b) {\n    return this.mul(a, b)._move(a);\n  }\n\n  mul(a, b) {\n    if (a.isZero() || b.isZero())\n      return new BN(0)._forceRed(this);\n\n    const t = a.mul(b);\n    const c = t.umaskn(this.n).mul(this.mi).iumaskn(this.n);\n    const u = t.iadd(c.mul(this.m)).iushrn(this.n);\n\n    if (u.ucmp(this.m) >= 0)\n      u._isub(u, this.m);\n\n    return u._forceRed(this);\n  }\n\n  imuln(a, num) {\n    this._verify1(a);\n\n    if (a.isZero())\n      return a;\n\n    if (num === 0) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    const neg = num < 0;\n\n    if (neg)\n      num = -num;\n\n    if (this.m.length === 1)\n      num %= this.m.words[0];\n\n    const bits = countBits(num);\n\n    // Potentially compute with additions.\n    // This avoids an expensive division.\n    if (bits > 5) {\n      // Slow case (num > 31).\n      this.imul(a, this.convertTo(new BN(num)));\n    } else if ((num & (num - 1)) === 0) {\n      // Optimize for powers of two.\n      for (let i = 0; i < bits - 1; i++)\n        this.iadd(a, a);\n    } else {\n      // Multiply left to right.\n      const c = a.clone();\n\n      for (let i = bits - 2; i >= 0; i--) {\n        this.iadd(a, a);\n\n        if ((num >> i) & 1)\n          this.iadd(a, c);\n      }\n    }\n\n    if (neg)\n      this.ineg(a);\n\n    return a;\n  }\n\n  eqn(a, num) {\n    this._verify1(a);\n\n    if (num === 0)\n      return a.isZero();\n\n    return a.ucmp(this.convertTo(new BN(num))) === 0;\n  }\n\n  isLow(a) {\n    this._verify1(a);\n    return this.convertFrom(a).ucmp(this.m.ushrn(1)) <= 0;\n  }\n\n  isOdd(a) {\n    this._verify1(a);\n    return this.convertFrom(a).isOdd();\n  }\n\n  isEven(a) {\n    this._verify1(a);\n    return this.convertFrom(a).isEven();\n  }\n\n  invert(a) {\n    this._verify1(a);\n\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    return this.imod(a.invert(this.m).mul(this.r2));\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction makeError(Error, msg, start) {\n  const err = new Error(msg);\n\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(err, start);\n\n  return err;\n}\n\nfunction assert(value, message) {\n  if (!value) {\n    const msg = message || 'Assertion failed.';\n    throw makeError(Error, msg, assert);\n  }\n}\n\nfunction enforce(value, name, type) {\n  if (!value) {\n    const msg = `\"${name}\" must be a(n) ${type}.`;\n    throw makeError(TypeError, msg, enforce);\n  }\n}\n\nfunction range(value, name) {\n  if (!value) {\n    const msg = `\"${name}\" only works with positive numbers.`;\n    throw makeError(RangeError, msg, range);\n  }\n}\n\nfunction red(value, name) {\n  if (!value) {\n    const msg = `\"${name}\" only works with red numbers.`;\n    throw makeError(TypeError, msg, red);\n  }\n}\n\nfunction nonred(value, name) {\n  if (!value) {\n    const msg = `\"${name}\" only works with normal numbers.`;\n    throw makeError(TypeError, msg, nonred);\n  }\n}\n\nfunction nonzero(value) {\n  if (!value) {\n    const msg = 'Cannot divide by zero.';\n    throw makeError(RangeError, msg, nonzero);\n  }\n}\n\nclass SquareRootError extends Error {\n  constructor(result) {\n    super();\n\n    this.name = 'SquareRootError';\n    this.message = 'X is not a square mod P.';\n    this.result = result.fromRed();\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(this, SquareRootError);\n  }\n}\n\nfunction isInteger(num) {\n  return Number.isSafeInteger(num);\n}\n\nfunction isSMI(num) {\n  return isInteger(num)\n      && num >= -0x3ffffff\n      && num <= 0x3ffffff;\n}\n\nfunction allocate(ArrayType, size) {\n  if (ArrayType.allocUnsafeSlow)\n    return ArrayType.allocUnsafeSlow(size);\n\n  return new ArrayType(size);\n}\n\nfunction getBase(base) {\n  if (base == null)\n    return 10;\n\n  if (typeof base === 'number')\n    return base;\n\n  switch (base) {\n    case 'bin':\n      return 2;\n    case 'oct':\n      return 8;\n    case 'dec':\n      return 10;\n    case 'hex':\n      return 16;\n  }\n\n  return 0;\n}\n\n/*\n * Internal\n */\n\nfunction countBits(w) {\n  if (Math.clz32)\n    return 32 - Math.clz32(w);\n\n  let t = w;\n  let r = 0;\n\n  if (t >= 0x1000) {\n    r += 13;\n    t >>>= 13;\n  }\n\n  if (t >= 0x40) {\n    r += 7;\n    t >>>= 7;\n  }\n\n  if (t >= 0x8) {\n    r += 4;\n    t >>>= 4;\n  }\n\n  if (t >= 0x02) {\n    r += 2;\n    t >>>= 2;\n  }\n\n  return r + t;\n}\n\nfunction zeroBits(w) {\n  // Shortcut.\n  if (w === 0)\n    return 26;\n\n  let t = w;\n  let r = 0;\n\n  if ((t & 0x1fff) === 0) {\n    r += 13;\n    t >>>= 13;\n  }\n\n  if ((t & 0x7f) === 0) {\n    r += 7;\n    t >>>= 7;\n  }\n\n  if ((t & 0xf) === 0) {\n    r += 4;\n    t >>>= 4;\n  }\n\n  if ((t & 0x3) === 0) {\n    r += 2;\n    t >>>= 2;\n  }\n\n  if ((t & 0x1) === 0)\n    r += 1;\n\n  return r;\n}\n\nfunction parseHex(str, start, end) {\n  const len = Math.min(str.length, end);\n\n  let r = 0;\n  let z = 0;\n\n  for (let i = start; i < len; i++) {\n    const c = str.charCodeAt(i) - 48;\n\n    r <<= 4;\n\n    let b;\n\n    if (c >= 49 && c <= 54) {\n      // 'a' - 'f'\n      b = c - 49 + 0xa;\n    } else if (c >= 17 && c <= 22) {\n      // 'A' - 'F'\n      b = c - 17 + 0xa;\n    } else {\n      // '0' - '9'\n      b = c;\n    }\n\n    r |= b;\n    z |= b;\n  }\n\n  if (z & ~15)\n    throw new Error('Invalid string.');\n\n  return r;\n}\n\nfunction parseBase(str, start, end, mul) {\n  const len = Math.min(str.length, end);\n\n  let r = 0;\n\n  for (let i = start; i < len; i++) {\n    const c = str.charCodeAt(i) - 48;\n\n    r *= mul;\n\n    let b;\n\n    if (c >= 49) {\n      // 'a'\n      b = c - 49 + 0xa;\n    } else if (c >= 17) {\n      // 'A'\n      b = c - 17 + 0xa;\n    } else {\n      // '0' - '9'\n      b = c;\n    }\n\n    if (c < 0 || c > 207 || b >= mul)\n      throw new Error('Invalid string.');\n\n    r += b;\n  }\n\n  return r;\n}\n\n/*\n * Exponentiation (bigint)\n */\n\nfunction powInt(x, e, m) {\n  // Sliding window (odd multiples only).\n  const one = BigInt(1);\n  const wnd = new Array(WND_SIZE);\n  const x2 = (x * x) % m;\n\n  wnd[0] = x;\n\n  for (let i = 1; i < WND_SIZE; i++)\n    wnd[i] = (wnd[i - 1] * x2) % m;\n\n  let i = e.bitLength();\n  let r = one;\n\n  while (i >= WND_WIDTH) {\n    let width = WND_WIDTH;\n    let bits = e.bits(i - width, width);\n\n    if (bits < WND_SIZE) {\n      r = (r * r) % m;\n      i -= 1;\n      continue;\n    }\n\n    while ((bits & 1) === 0) {\n      width -= 1;\n      bits >>= 1;\n    }\n\n    if (r === one) {\n      r = wnd[bits >> 1];\n    } else {\n      r = sqrn(r, width, m);\n      r = (r * wnd[bits >> 1]) % m;\n    }\n\n    i -= width;\n  }\n\n  if (i > 0) {\n    const bits = e.bits(0, i);\n\n    while (i--) {\n      r = (r * r) % m;\n\n      if ((bits >> i) & 1)\n        r = (r * x) % m;\n    }\n  }\n\n  return r;\n}\n\nfunction sqrn(x, n, m) {\n  for (let i = 0; i < n; i++)\n    x = (x * x) % m;\n  return x;\n}\n\n/*\n * Multiplication\n */\n\nfunction smallMulTo(self, num, out) {\n  const len = self.length + num.length;\n\n  out.negative = self.negative ^ num.negative;\n  out._alloc(len);\n  out.length = len;\n\n  // Peel one iteration (compiler can't\n  // do it, because of code complexity).\n  const a = self.words[0];\n  const b = num.words[0];\n  const r = a * b;\n  const lo = r & 0x3ffffff;\n\n  let carry = (r / 0x4000000) | 0;\n  let k = 1;\n\n  out.words[0] = lo;\n\n  for (; k < out.length - 1; k++) {\n    // Sum all words with the same\n    // `i + j = k` and accumulate\n    // `ncarry`, note that ncarry\n    // could be >= 0x3ffffff.\n    let ncarry = carry >>> 26;\n    let rword = carry & 0x3ffffff;\n\n    const min = Math.max(0, k - self.length + 1);\n    const max = Math.min(k, num.length - 1);\n\n    for (let j = min; j <= max; j++) {\n      const i = k - j;\n      const a = self.words[i];\n      const b = num.words[j];\n      const r = a * b + rword;\n\n      ncarry += (r / 0x4000000) | 0;\n      rword = r & 0x3ffffff;\n    }\n\n    out.words[k] = rword | 0;\n    carry = ncarry | 0;\n  }\n\n  if (carry !== 0)\n    out.words[k] = carry | 0;\n  else\n    out.length -= 1;\n\n  return out._strip();\n}\n\nfunction bigMulTo(self, num, out) {\n  const len = self.length + num.length;\n\n  out.negative = self.negative ^ num.negative;\n  out._alloc(len);\n  out.length = len;\n\n  let carry = 0;\n  let hncarry = 0;\n  let k = 0;\n\n  for (; k < out.length - 1; k++) {\n    // Sum all words with the same\n    // `i + j = k` and accumulate\n    // `ncarry`, note that ncarry\n    // could be >= 0x3ffffff.\n    let ncarry = hncarry;\n\n    hncarry = 0;\n\n    let rword = carry & 0x3ffffff;\n\n    const min = Math.max(0, k - self.length + 1);\n    const max = Math.min(k, num.length - 1);\n\n    for (let j = min; j <= max; j++) {\n      const i = k - j;\n      const a = self.words[i];\n      const b = num.words[j];\n      const r = a * b;\n\n      let lo = r & 0x3ffffff;\n\n      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n      lo = (lo + rword) | 0;\n      rword = lo & 0x3ffffff;\n      ncarry = (ncarry + (lo >>> 26)) | 0;\n\n      hncarry += ncarry >>> 26;\n      ncarry &= 0x3ffffff;\n    }\n\n    out.words[k] = rword;\n    carry = ncarry;\n    ncarry = hncarry;\n  }\n\n  if (carry !== 0)\n    out.words[k] = carry;\n  else\n    out.length -= 1;\n\n  return out._strip();\n}\n\nfunction jumboMulTo(x, y, out) {\n  // v8 has a 2147483519 bit max (~256mb).\n  if (!HAS_BIGINT || x.length + y.length > 82595519)\n    return bigMulTo(x, y, out);\n\n  const zero = BigInt(0);\n  const mask = BigInt(0x3ffffff);\n  const shift = BigInt(26);\n\n  let z = x.toBigInt() * y.toBigInt();\n\n  const neg = (z < zero) | 0;\n\n  if (neg)\n    z = -z;\n\n  let i = 0;\n\n  while (z > zero) {\n    out.words[i++] = Number(z & mask);\n    z >>= shift;\n  }\n\n  if (i === 0)\n    out.words[i++] = 0;\n\n  out.length = i;\n  out.negative = neg;\n\n  return out;\n}\n\nfunction comb10MulTo(self, num, out) {\n  const a = self.words;\n  const b = num.words;\n  const o = out.words;\n  const a0 = a[0] | 0;\n  const al0 = a0 & 0x1fff;\n  const ah0 = a0 >>> 13;\n  const a1 = a[1] | 0;\n  const al1 = a1 & 0x1fff;\n  const ah1 = a1 >>> 13;\n  const a2 = a[2] | 0;\n  const al2 = a2 & 0x1fff;\n  const ah2 = a2 >>> 13;\n  const a3 = a[3] | 0;\n  const al3 = a3 & 0x1fff;\n  const ah3 = a3 >>> 13;\n  const a4 = a[4] | 0;\n  const al4 = a4 & 0x1fff;\n  const ah4 = a4 >>> 13;\n  const a5 = a[5] | 0;\n  const al5 = a5 & 0x1fff;\n  const ah5 = a5 >>> 13;\n  const a6 = a[6] | 0;\n  const al6 = a6 & 0x1fff;\n  const ah6 = a6 >>> 13;\n  const a7 = a[7] | 0;\n  const al7 = a7 & 0x1fff;\n  const ah7 = a7 >>> 13;\n  const a8 = a[8] | 0;\n  const al8 = a8 & 0x1fff;\n  const ah8 = a8 >>> 13;\n  const a9 = a[9] | 0;\n  const al9 = a9 & 0x1fff;\n  const ah9 = a9 >>> 13;\n  const b0 = b[0] | 0;\n  const bl0 = b0 & 0x1fff;\n  const bh0 = b0 >>> 13;\n  const b1 = b[1] | 0;\n  const bl1 = b1 & 0x1fff;\n  const bh1 = b1 >>> 13;\n  const b2 = b[2] | 0;\n  const bl2 = b2 & 0x1fff;\n  const bh2 = b2 >>> 13;\n  const b3 = b[3] | 0;\n  const bl3 = b3 & 0x1fff;\n  const bh3 = b3 >>> 13;\n  const b4 = b[4] | 0;\n  const bl4 = b4 & 0x1fff;\n  const bh4 = b4 >>> 13;\n  const b5 = b[5] | 0;\n  const bl5 = b5 & 0x1fff;\n  const bh5 = b5 >>> 13;\n  const b6 = b[6] | 0;\n  const bl6 = b6 & 0x1fff;\n  const bh6 = b6 >>> 13;\n  const b7 = b[7] | 0;\n  const bl7 = b7 & 0x1fff;\n  const bh7 = b7 >>> 13;\n  const b8 = b[8] | 0;\n  const bl8 = b8 & 0x1fff;\n  const bh8 = b8 >>> 13;\n  const b9 = b[9] | 0;\n  const bl9 = b9 & 0x1fff;\n  const bh9 = b9 >>> 13;\n\n  let c = 0;\n  let lo, mid, hi;\n\n  out.negative = self.negative ^ num.negative;\n  out._alloc(20);\n  out.length = 19;\n\n  /* k = 0 */\n  lo = Math.imul(al0, bl0);\n  mid = Math.imul(al0, bh0);\n  mid = (mid + Math.imul(ah0, bl0)) | 0;\n  hi = Math.imul(ah0, bh0);\n\n  let w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n  w0 &= 0x3ffffff;\n\n  /* k = 1 */\n  lo = Math.imul(al1, bl0);\n  mid = Math.imul(al1, bh0);\n  mid = (mid + Math.imul(ah1, bl0)) | 0;\n  hi = Math.imul(ah1, bh0);\n  lo = (lo + Math.imul(al0, bl1)) | 0;\n  mid = (mid + Math.imul(al0, bh1)) | 0;\n  mid = (mid + Math.imul(ah0, bl1)) | 0;\n  hi = (hi + Math.imul(ah0, bh1)) | 0;\n\n  let w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n  w1 &= 0x3ffffff;\n\n  /* k = 2 */\n  lo = Math.imul(al2, bl0);\n  mid = Math.imul(al2, bh0);\n  mid = (mid + Math.imul(ah2, bl0)) | 0;\n  hi = Math.imul(ah2, bh0);\n  lo = (lo + Math.imul(al1, bl1)) | 0;\n  mid = (mid + Math.imul(al1, bh1)) | 0;\n  mid = (mid + Math.imul(ah1, bl1)) | 0;\n  hi = (hi + Math.imul(ah1, bh1)) | 0;\n  lo = (lo + Math.imul(al0, bl2)) | 0;\n  mid = (mid + Math.imul(al0, bh2)) | 0;\n  mid = (mid + Math.imul(ah0, bl2)) | 0;\n  hi = (hi + Math.imul(ah0, bh2)) | 0;\n\n  let w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n  w2 &= 0x3ffffff;\n\n  /* k = 3 */\n  lo = Math.imul(al3, bl0);\n  mid = Math.imul(al3, bh0);\n  mid = (mid + Math.imul(ah3, bl0)) | 0;\n  hi = Math.imul(ah3, bh0);\n  lo = (lo + Math.imul(al2, bl1)) | 0;\n  mid = (mid + Math.imul(al2, bh1)) | 0;\n  mid = (mid + Math.imul(ah2, bl1)) | 0;\n  hi = (hi + Math.imul(ah2, bh1)) | 0;\n  lo = (lo + Math.imul(al1, bl2)) | 0;\n  mid = (mid + Math.imul(al1, bh2)) | 0;\n  mid = (mid + Math.imul(ah1, bl2)) | 0;\n  hi = (hi + Math.imul(ah1, bh2)) | 0;\n  lo = (lo + Math.imul(al0, bl3)) | 0;\n  mid = (mid + Math.imul(al0, bh3)) | 0;\n  mid = (mid + Math.imul(ah0, bl3)) | 0;\n  hi = (hi + Math.imul(ah0, bh3)) | 0;\n\n  let w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n  w3 &= 0x3ffffff;\n\n  /* k = 4 */\n  lo = Math.imul(al4, bl0);\n  mid = Math.imul(al4, bh0);\n  mid = (mid + Math.imul(ah4, bl0)) | 0;\n  hi = Math.imul(ah4, bh0);\n  lo = (lo + Math.imul(al3, bl1)) | 0;\n  mid = (mid + Math.imul(al3, bh1)) | 0;\n  mid = (mid + Math.imul(ah3, bl1)) | 0;\n  hi = (hi + Math.imul(ah3, bh1)) | 0;\n  lo = (lo + Math.imul(al2, bl2)) | 0;\n  mid = (mid + Math.imul(al2, bh2)) | 0;\n  mid = (mid + Math.imul(ah2, bl2)) | 0;\n  hi = (hi + Math.imul(ah2, bh2)) | 0;\n  lo = (lo + Math.imul(al1, bl3)) | 0;\n  mid = (mid + Math.imul(al1, bh3)) | 0;\n  mid = (mid + Math.imul(ah1, bl3)) | 0;\n  hi = (hi + Math.imul(ah1, bh3)) | 0;\n  lo = (lo + Math.imul(al0, bl4)) | 0;\n  mid = (mid + Math.imul(al0, bh4)) | 0;\n  mid = (mid + Math.imul(ah0, bl4)) | 0;\n  hi = (hi + Math.imul(ah0, bh4)) | 0;\n\n  let w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n  w4 &= 0x3ffffff;\n\n  /* k = 5 */\n  lo = Math.imul(al5, bl0);\n  mid = Math.imul(al5, bh0);\n  mid = (mid + Math.imul(ah5, bl0)) | 0;\n  hi = Math.imul(ah5, bh0);\n  lo = (lo + Math.imul(al4, bl1)) | 0;\n  mid = (mid + Math.imul(al4, bh1)) | 0;\n  mid = (mid + Math.imul(ah4, bl1)) | 0;\n  hi = (hi + Math.imul(ah4, bh1)) | 0;\n  lo = (lo + Math.imul(al3, bl2)) | 0;\n  mid = (mid + Math.imul(al3, bh2)) | 0;\n  mid = (mid + Math.imul(ah3, bl2)) | 0;\n  hi = (hi + Math.imul(ah3, bh2)) | 0;\n  lo = (lo + Math.imul(al2, bl3)) | 0;\n  mid = (mid + Math.imul(al2, bh3)) | 0;\n  mid = (mid + Math.imul(ah2, bl3)) | 0;\n  hi = (hi + Math.imul(ah2, bh3)) | 0;\n  lo = (lo + Math.imul(al1, bl4)) | 0;\n  mid = (mid + Math.imul(al1, bh4)) | 0;\n  mid = (mid + Math.imul(ah1, bl4)) | 0;\n  hi = (hi + Math.imul(ah1, bh4)) | 0;\n  lo = (lo + Math.imul(al0, bl5)) | 0;\n  mid = (mid + Math.imul(al0, bh5)) | 0;\n  mid = (mid + Math.imul(ah0, bl5)) | 0;\n  hi = (hi + Math.imul(ah0, bh5)) | 0;\n\n  let w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n  w5 &= 0x3ffffff;\n\n  /* k = 6 */\n  lo = Math.imul(al6, bl0);\n  mid = Math.imul(al6, bh0);\n  mid = (mid + Math.imul(ah6, bl0)) | 0;\n  hi = Math.imul(ah6, bh0);\n  lo = (lo + Math.imul(al5, bl1)) | 0;\n  mid = (mid + Math.imul(al5, bh1)) | 0;\n  mid = (mid + Math.imul(ah5, bl1)) | 0;\n  hi = (hi + Math.imul(ah5, bh1)) | 0;\n  lo = (lo + Math.imul(al4, bl2)) | 0;\n  mid = (mid + Math.imul(al4, bh2)) | 0;\n  mid = (mid + Math.imul(ah4, bl2)) | 0;\n  hi = (hi + Math.imul(ah4, bh2)) | 0;\n  lo = (lo + Math.imul(al3, bl3)) | 0;\n  mid = (mid + Math.imul(al3, bh3)) | 0;\n  mid = (mid + Math.imul(ah3, bl3)) | 0;\n  hi = (hi + Math.imul(ah3, bh3)) | 0;\n  lo = (lo + Math.imul(al2, bl4)) | 0;\n  mid = (mid + Math.imul(al2, bh4)) | 0;\n  mid = (mid + Math.imul(ah2, bl4)) | 0;\n  hi = (hi + Math.imul(ah2, bh4)) | 0;\n  lo = (lo + Math.imul(al1, bl5)) | 0;\n  mid = (mid + Math.imul(al1, bh5)) | 0;\n  mid = (mid + Math.imul(ah1, bl5)) | 0;\n  hi = (hi + Math.imul(ah1, bh5)) | 0;\n  lo = (lo + Math.imul(al0, bl6)) | 0;\n  mid = (mid + Math.imul(al0, bh6)) | 0;\n  mid = (mid + Math.imul(ah0, bl6)) | 0;\n  hi = (hi + Math.imul(ah0, bh6)) | 0;\n\n  let w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n  w6 &= 0x3ffffff;\n\n  /* k = 7 */\n  lo = Math.imul(al7, bl0);\n  mid = Math.imul(al7, bh0);\n  mid = (mid + Math.imul(ah7, bl0)) | 0;\n  hi = Math.imul(ah7, bh0);\n  lo = (lo + Math.imul(al6, bl1)) | 0;\n  mid = (mid + Math.imul(al6, bh1)) | 0;\n  mid = (mid + Math.imul(ah6, bl1)) | 0;\n  hi = (hi + Math.imul(ah6, bh1)) | 0;\n  lo = (lo + Math.imul(al5, bl2)) | 0;\n  mid = (mid + Math.imul(al5, bh2)) | 0;\n  mid = (mid + Math.imul(ah5, bl2)) | 0;\n  hi = (hi + Math.imul(ah5, bh2)) | 0;\n  lo = (lo + Math.imul(al4, bl3)) | 0;\n  mid = (mid + Math.imul(al4, bh3)) | 0;\n  mid = (mid + Math.imul(ah4, bl3)) | 0;\n  hi = (hi + Math.imul(ah4, bh3)) | 0;\n  lo = (lo + Math.imul(al3, bl4)) | 0;\n  mid = (mid + Math.imul(al3, bh4)) | 0;\n  mid = (mid + Math.imul(ah3, bl4)) | 0;\n  hi = (hi + Math.imul(ah3, bh4)) | 0;\n  lo = (lo + Math.imul(al2, bl5)) | 0;\n  mid = (mid + Math.imul(al2, bh5)) | 0;\n  mid = (mid + Math.imul(ah2, bl5)) | 0;\n  hi = (hi + Math.imul(ah2, bh5)) | 0;\n  lo = (lo + Math.imul(al1, bl6)) | 0;\n  mid = (mid + Math.imul(al1, bh6)) | 0;\n  mid = (mid + Math.imul(ah1, bl6)) | 0;\n  hi = (hi + Math.imul(ah1, bh6)) | 0;\n  lo = (lo + Math.imul(al0, bl7)) | 0;\n  mid = (mid + Math.imul(al0, bh7)) | 0;\n  mid = (mid + Math.imul(ah0, bl7)) | 0;\n  hi = (hi + Math.imul(ah0, bh7)) | 0;\n\n  let w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n  w7 &= 0x3ffffff;\n\n  /* k = 8 */\n  lo = Math.imul(al8, bl0);\n  mid = Math.imul(al8, bh0);\n  mid = (mid + Math.imul(ah8, bl0)) | 0;\n  hi = Math.imul(ah8, bh0);\n  lo = (lo + Math.imul(al7, bl1)) | 0;\n  mid = (mid + Math.imul(al7, bh1)) | 0;\n  mid = (mid + Math.imul(ah7, bl1)) | 0;\n  hi = (hi + Math.imul(ah7, bh1)) | 0;\n  lo = (lo + Math.imul(al6, bl2)) | 0;\n  mid = (mid + Math.imul(al6, bh2)) | 0;\n  mid = (mid + Math.imul(ah6, bl2)) | 0;\n  hi = (hi + Math.imul(ah6, bh2)) | 0;\n  lo = (lo + Math.imul(al5, bl3)) | 0;\n  mid = (mid + Math.imul(al5, bh3)) | 0;\n  mid = (mid + Math.imul(ah5, bl3)) | 0;\n  hi = (hi + Math.imul(ah5, bh3)) | 0;\n  lo = (lo + Math.imul(al4, bl4)) | 0;\n  mid = (mid + Math.imul(al4, bh4)) | 0;\n  mid = (mid + Math.imul(ah4, bl4)) | 0;\n  hi = (hi + Math.imul(ah4, bh4)) | 0;\n  lo = (lo + Math.imul(al3, bl5)) | 0;\n  mid = (mid + Math.imul(al3, bh5)) | 0;\n  mid = (mid + Math.imul(ah3, bl5)) | 0;\n  hi = (hi + Math.imul(ah3, bh5)) | 0;\n  lo = (lo + Math.imul(al2, bl6)) | 0;\n  mid = (mid + Math.imul(al2, bh6)) | 0;\n  mid = (mid + Math.imul(ah2, bl6)) | 0;\n  hi = (hi + Math.imul(ah2, bh6)) | 0;\n  lo = (lo + Math.imul(al1, bl7)) | 0;\n  mid = (mid + Math.imul(al1, bh7)) | 0;\n  mid = (mid + Math.imul(ah1, bl7)) | 0;\n  hi = (hi + Math.imul(ah1, bh7)) | 0;\n  lo = (lo + Math.imul(al0, bl8)) | 0;\n  mid = (mid + Math.imul(al0, bh8)) | 0;\n  mid = (mid + Math.imul(ah0, bl8)) | 0;\n  hi = (hi + Math.imul(ah0, bh8)) | 0;\n\n  let w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n  w8 &= 0x3ffffff;\n\n  /* k = 9 */\n  lo = Math.imul(al9, bl0);\n  mid = Math.imul(al9, bh0);\n  mid = (mid + Math.imul(ah9, bl0)) | 0;\n  hi = Math.imul(ah9, bh0);\n  lo = (lo + Math.imul(al8, bl1)) | 0;\n  mid = (mid + Math.imul(al8, bh1)) | 0;\n  mid = (mid + Math.imul(ah8, bl1)) | 0;\n  hi = (hi + Math.imul(ah8, bh1)) | 0;\n  lo = (lo + Math.imul(al7, bl2)) | 0;\n  mid = (mid + Math.imul(al7, bh2)) | 0;\n  mid = (mid + Math.imul(ah7, bl2)) | 0;\n  hi = (hi + Math.imul(ah7, bh2)) | 0;\n  lo = (lo + Math.imul(al6, bl3)) | 0;\n  mid = (mid + Math.imul(al6, bh3)) | 0;\n  mid = (mid + Math.imul(ah6, bl3)) | 0;\n  hi = (hi + Math.imul(ah6, bh3)) | 0;\n  lo = (lo + Math.imul(al5, bl4)) | 0;\n  mid = (mid + Math.imul(al5, bh4)) | 0;\n  mid = (mid + Math.imul(ah5, bl4)) | 0;\n  hi = (hi + Math.imul(ah5, bh4)) | 0;\n  lo = (lo + Math.imul(al4, bl5)) | 0;\n  mid = (mid + Math.imul(al4, bh5)) | 0;\n  mid = (mid + Math.imul(ah4, bl5)) | 0;\n  hi = (hi + Math.imul(ah4, bh5)) | 0;\n  lo = (lo + Math.imul(al3, bl6)) | 0;\n  mid = (mid + Math.imul(al3, bh6)) | 0;\n  mid = (mid + Math.imul(ah3, bl6)) | 0;\n  hi = (hi + Math.imul(ah3, bh6)) | 0;\n  lo = (lo + Math.imul(al2, bl7)) | 0;\n  mid = (mid + Math.imul(al2, bh7)) | 0;\n  mid = (mid + Math.imul(ah2, bl7)) | 0;\n  hi = (hi + Math.imul(ah2, bh7)) | 0;\n  lo = (lo + Math.imul(al1, bl8)) | 0;\n  mid = (mid + Math.imul(al1, bh8)) | 0;\n  mid = (mid + Math.imul(ah1, bl8)) | 0;\n  hi = (hi + Math.imul(ah1, bh8)) | 0;\n  lo = (lo + Math.imul(al0, bl9)) | 0;\n  mid = (mid + Math.imul(al0, bh9)) | 0;\n  mid = (mid + Math.imul(ah0, bl9)) | 0;\n  hi = (hi + Math.imul(ah0, bh9)) | 0;\n\n  let w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n  w9 &= 0x3ffffff;\n\n  /* k = 10 */\n  lo = Math.imul(al9, bl1);\n  mid = Math.imul(al9, bh1);\n  mid = (mid + Math.imul(ah9, bl1)) | 0;\n  hi = Math.imul(ah9, bh1);\n  lo = (lo + Math.imul(al8, bl2)) | 0;\n  mid = (mid + Math.imul(al8, bh2)) | 0;\n  mid = (mid + Math.imul(ah8, bl2)) | 0;\n  hi = (hi + Math.imul(ah8, bh2)) | 0;\n  lo = (lo + Math.imul(al7, bl3)) | 0;\n  mid = (mid + Math.imul(al7, bh3)) | 0;\n  mid = (mid + Math.imul(ah7, bl3)) | 0;\n  hi = (hi + Math.imul(ah7, bh3)) | 0;\n  lo = (lo + Math.imul(al6, bl4)) | 0;\n  mid = (mid + Math.imul(al6, bh4)) | 0;\n  mid = (mid + Math.imul(ah6, bl4)) | 0;\n  hi = (hi + Math.imul(ah6, bh4)) | 0;\n  lo = (lo + Math.imul(al5, bl5)) | 0;\n  mid = (mid + Math.imul(al5, bh5)) | 0;\n  mid = (mid + Math.imul(ah5, bl5)) | 0;\n  hi = (hi + Math.imul(ah5, bh5)) | 0;\n  lo = (lo + Math.imul(al4, bl6)) | 0;\n  mid = (mid + Math.imul(al4, bh6)) | 0;\n  mid = (mid + Math.imul(ah4, bl6)) | 0;\n  hi = (hi + Math.imul(ah4, bh6)) | 0;\n  lo = (lo + Math.imul(al3, bl7)) | 0;\n  mid = (mid + Math.imul(al3, bh7)) | 0;\n  mid = (mid + Math.imul(ah3, bl7)) | 0;\n  hi = (hi + Math.imul(ah3, bh7)) | 0;\n  lo = (lo + Math.imul(al2, bl8)) | 0;\n  mid = (mid + Math.imul(al2, bh8)) | 0;\n  mid = (mid + Math.imul(ah2, bl8)) | 0;\n  hi = (hi + Math.imul(ah2, bh8)) | 0;\n  lo = (lo + Math.imul(al1, bl9)) | 0;\n  mid = (mid + Math.imul(al1, bh9)) | 0;\n  mid = (mid + Math.imul(ah1, bl9)) | 0;\n  hi = (hi + Math.imul(ah1, bh9)) | 0;\n\n  let w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n  w10 &= 0x3ffffff;\n\n  /* k = 11 */\n  lo = Math.imul(al9, bl2);\n  mid = Math.imul(al9, bh2);\n  mid = (mid + Math.imul(ah9, bl2)) | 0;\n  hi = Math.imul(ah9, bh2);\n  lo = (lo + Math.imul(al8, bl3)) | 0;\n  mid = (mid + Math.imul(al8, bh3)) | 0;\n  mid = (mid + Math.imul(ah8, bl3)) | 0;\n  hi = (hi + Math.imul(ah8, bh3)) | 0;\n  lo = (lo + Math.imul(al7, bl4)) | 0;\n  mid = (mid + Math.imul(al7, bh4)) | 0;\n  mid = (mid + Math.imul(ah7, bl4)) | 0;\n  hi = (hi + Math.imul(ah7, bh4)) | 0;\n  lo = (lo + Math.imul(al6, bl5)) | 0;\n  mid = (mid + Math.imul(al6, bh5)) | 0;\n  mid = (mid + Math.imul(ah6, bl5)) | 0;\n  hi = (hi + Math.imul(ah6, bh5)) | 0;\n  lo = (lo + Math.imul(al5, bl6)) | 0;\n  mid = (mid + Math.imul(al5, bh6)) | 0;\n  mid = (mid + Math.imul(ah5, bl6)) | 0;\n  hi = (hi + Math.imul(ah5, bh6)) | 0;\n  lo = (lo + Math.imul(al4, bl7)) | 0;\n  mid = (mid + Math.imul(al4, bh7)) | 0;\n  mid = (mid + Math.imul(ah4, bl7)) | 0;\n  hi = (hi + Math.imul(ah4, bh7)) | 0;\n  lo = (lo + Math.imul(al3, bl8)) | 0;\n  mid = (mid + Math.imul(al3, bh8)) | 0;\n  mid = (mid + Math.imul(ah3, bl8)) | 0;\n  hi = (hi + Math.imul(ah3, bh8)) | 0;\n  lo = (lo + Math.imul(al2, bl9)) | 0;\n  mid = (mid + Math.imul(al2, bh9)) | 0;\n  mid = (mid + Math.imul(ah2, bl9)) | 0;\n  hi = (hi + Math.imul(ah2, bh9)) | 0;\n\n  let w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n  w11 &= 0x3ffffff;\n\n  /* k = 12 */\n  lo = Math.imul(al9, bl3);\n  mid = Math.imul(al9, bh3);\n  mid = (mid + Math.imul(ah9, bl3)) | 0;\n  hi = Math.imul(ah9, bh3);\n  lo = (lo + Math.imul(al8, bl4)) | 0;\n  mid = (mid + Math.imul(al8, bh4)) | 0;\n  mid = (mid + Math.imul(ah8, bl4)) | 0;\n  hi = (hi + Math.imul(ah8, bh4)) | 0;\n  lo = (lo + Math.imul(al7, bl5)) | 0;\n  mid = (mid + Math.imul(al7, bh5)) | 0;\n  mid = (mid + Math.imul(ah7, bl5)) | 0;\n  hi = (hi + Math.imul(ah7, bh5)) | 0;\n  lo = (lo + Math.imul(al6, bl6)) | 0;\n  mid = (mid + Math.imul(al6, bh6)) | 0;\n  mid = (mid + Math.imul(ah6, bl6)) | 0;\n  hi = (hi + Math.imul(ah6, bh6)) | 0;\n  lo = (lo + Math.imul(al5, bl7)) | 0;\n  mid = (mid + Math.imul(al5, bh7)) | 0;\n  mid = (mid + Math.imul(ah5, bl7)) | 0;\n  hi = (hi + Math.imul(ah5, bh7)) | 0;\n  lo = (lo + Math.imul(al4, bl8)) | 0;\n  mid = (mid + Math.imul(al4, bh8)) | 0;\n  mid = (mid + Math.imul(ah4, bl8)) | 0;\n  hi = (hi + Math.imul(ah4, bh8)) | 0;\n  lo = (lo + Math.imul(al3, bl9)) | 0;\n  mid = (mid + Math.imul(al3, bh9)) | 0;\n  mid = (mid + Math.imul(ah3, bl9)) | 0;\n  hi = (hi + Math.imul(ah3, bh9)) | 0;\n\n  let w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n  w12 &= 0x3ffffff;\n\n  /* k = 13 */\n  lo = Math.imul(al9, bl4);\n  mid = Math.imul(al9, bh4);\n  mid = (mid + Math.imul(ah9, bl4)) | 0;\n  hi = Math.imul(ah9, bh4);\n  lo = (lo + Math.imul(al8, bl5)) | 0;\n  mid = (mid + Math.imul(al8, bh5)) | 0;\n  mid = (mid + Math.imul(ah8, bl5)) | 0;\n  hi = (hi + Math.imul(ah8, bh5)) | 0;\n  lo = (lo + Math.imul(al7, bl6)) | 0;\n  mid = (mid + Math.imul(al7, bh6)) | 0;\n  mid = (mid + Math.imul(ah7, bl6)) | 0;\n  hi = (hi + Math.imul(ah7, bh6)) | 0;\n  lo = (lo + Math.imul(al6, bl7)) | 0;\n  mid = (mid + Math.imul(al6, bh7)) | 0;\n  mid = (mid + Math.imul(ah6, bl7)) | 0;\n  hi = (hi + Math.imul(ah6, bh7)) | 0;\n  lo = (lo + Math.imul(al5, bl8)) | 0;\n  mid = (mid + Math.imul(al5, bh8)) | 0;\n  mid = (mid + Math.imul(ah5, bl8)) | 0;\n  hi = (hi + Math.imul(ah5, bh8)) | 0;\n  lo = (lo + Math.imul(al4, bl9)) | 0;\n  mid = (mid + Math.imul(al4, bh9)) | 0;\n  mid = (mid + Math.imul(ah4, bl9)) | 0;\n  hi = (hi + Math.imul(ah4, bh9)) | 0;\n\n  let w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n  w13 &= 0x3ffffff;\n\n  /* k = 14 */\n  lo = Math.imul(al9, bl5);\n  mid = Math.imul(al9, bh5);\n  mid = (mid + Math.imul(ah9, bl5)) | 0;\n  hi = Math.imul(ah9, bh5);\n  lo = (lo + Math.imul(al8, bl6)) | 0;\n  mid = (mid + Math.imul(al8, bh6)) | 0;\n  mid = (mid + Math.imul(ah8, bl6)) | 0;\n  hi = (hi + Math.imul(ah8, bh6)) | 0;\n  lo = (lo + Math.imul(al7, bl7)) | 0;\n  mid = (mid + Math.imul(al7, bh7)) | 0;\n  mid = (mid + Math.imul(ah7, bl7)) | 0;\n  hi = (hi + Math.imul(ah7, bh7)) | 0;\n  lo = (lo + Math.imul(al6, bl8)) | 0;\n  mid = (mid + Math.imul(al6, bh8)) | 0;\n  mid = (mid + Math.imul(ah6, bl8)) | 0;\n  hi = (hi + Math.imul(ah6, bh8)) | 0;\n  lo = (lo + Math.imul(al5, bl9)) | 0;\n  mid = (mid + Math.imul(al5, bh9)) | 0;\n  mid = (mid + Math.imul(ah5, bl9)) | 0;\n  hi = (hi + Math.imul(ah5, bh9)) | 0;\n\n  let w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n  w14 &= 0x3ffffff;\n\n  /* k = 15 */\n  lo = Math.imul(al9, bl6);\n  mid = Math.imul(al9, bh6);\n  mid = (mid + Math.imul(ah9, bl6)) | 0;\n  hi = Math.imul(ah9, bh6);\n  lo = (lo + Math.imul(al8, bl7)) | 0;\n  mid = (mid + Math.imul(al8, bh7)) | 0;\n  mid = (mid + Math.imul(ah8, bl7)) | 0;\n  hi = (hi + Math.imul(ah8, bh7)) | 0;\n  lo = (lo + Math.imul(al7, bl8)) | 0;\n  mid = (mid + Math.imul(al7, bh8)) | 0;\n  mid = (mid + Math.imul(ah7, bl8)) | 0;\n  hi = (hi + Math.imul(ah7, bh8)) | 0;\n  lo = (lo + Math.imul(al6, bl9)) | 0;\n  mid = (mid + Math.imul(al6, bh9)) | 0;\n  mid = (mid + Math.imul(ah6, bl9)) | 0;\n  hi = (hi + Math.imul(ah6, bh9)) | 0;\n\n  let w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n  w15 &= 0x3ffffff;\n\n  /* k = 16 */\n  lo = Math.imul(al9, bl7);\n  mid = Math.imul(al9, bh7);\n  mid = (mid + Math.imul(ah9, bl7)) | 0;\n  hi = Math.imul(ah9, bh7);\n  lo = (lo + Math.imul(al8, bl8)) | 0;\n  mid = (mid + Math.imul(al8, bh8)) | 0;\n  mid = (mid + Math.imul(ah8, bl8)) | 0;\n  hi = (hi + Math.imul(ah8, bh8)) | 0;\n  lo = (lo + Math.imul(al7, bl9)) | 0;\n  mid = (mid + Math.imul(al7, bh9)) | 0;\n  mid = (mid + Math.imul(ah7, bl9)) | 0;\n  hi = (hi + Math.imul(ah7, bh9)) | 0;\n\n  let w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n  w16 &= 0x3ffffff;\n\n  /* k = 17 */\n  lo = Math.imul(al9, bl8);\n  mid = Math.imul(al9, bh8);\n  mid = (mid + Math.imul(ah9, bl8)) | 0;\n  hi = Math.imul(ah9, bh8);\n  lo = (lo + Math.imul(al8, bl9)) | 0;\n  mid = (mid + Math.imul(al8, bh9)) | 0;\n  mid = (mid + Math.imul(ah8, bl9)) | 0;\n  hi = (hi + Math.imul(ah8, bh9)) | 0;\n\n  let w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n  w17 &= 0x3ffffff;\n\n  /* k = 18 */\n  lo = Math.imul(al9, bl9);\n  mid = Math.imul(al9, bh9);\n  mid = (mid + Math.imul(ah9, bl9)) | 0;\n  hi = Math.imul(ah9, bh9);\n\n  let w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n  w18 &= 0x3ffffff;\n\n  o[0] = w0;\n  o[1] = w1;\n  o[2] = w2;\n  o[3] = w3;\n  o[4] = w4;\n  o[5] = w5;\n  o[6] = w6;\n  o[7] = w7;\n  o[8] = w8;\n  o[9] = w9;\n  o[10] = w10;\n  o[11] = w11;\n  o[12] = w12;\n  o[13] = w13;\n  o[14] = w14;\n  o[15] = w15;\n  o[16] = w16;\n  o[17] = w17;\n  o[18] = w18;\n\n  if (c !== 0) {\n    o[19] = c;\n    out.length += 1;\n  }\n\n  // Note: we shouldn't need to strip here.\n  return out;\n}\n\n// Polyfill comb.\nif (!Math.imul)\n  comb10MulTo = smallMulTo;\n\n/*\n * Expose\n */\n\nBN.Red = Red;\n\nmodule.exports = BN;","/*!\n * network.js - bitcoin networks for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * Copyright (c) 2019-2020, Jonathan Gonzalez (MIT License).\n * https://github.com/cash-org/cashnode\n */\n\n'use strict';\n\n/**\n * @module protocol/networks\n */\n\nconst BN = require('../bcrypto/bn.js');\n\nconst network = exports;\n\n/*\n * Helpers\n */\n\nfunction b(hash) {\n  return Buffer.from(hash, 'hex');\n}\n\n/**\n * Network type list.\n * @memberof module:protocol/networks\n * @const {String[]}\n * @default\n */\n\nnetwork.types = ['main', 'testnet', 'regtest', 'simnet'];\n\n/**\n * Mainnet\n * @static\n * @lends module:protocol/networks\n * @type {Object}\n */\n\nconst main = {};\n\n/**\n * Symbolic network type.\n * @const {String}\n * @default\n */\n\nmain.type = 'main';\n\n/**\n * Default DNS seeds.\n * @const {String[]}\n * @default\n */\n\nmain.seeds = [\n  'seed.flowee.cash',\n  'seed-bch.bitcoinforks.org',\n  'btccash-seeder.bitcoinunlimited.info',\n  'seed.bchd.cash',\n  'seed.bch.loping.net',\n  'dnsseed.electroncash.de'\n];\n\n/**\n * Packet magic number.\n * @const {Number}\n * @default\n */\n\nmain.magic = 0xe8f3e1e3;\n\n/**\n * Default network port.\n * @const {Number}\n * @default\n */\n\nmain.port = 8333;\n\n/**\n * Checkpoint block list.\n * @const {Object}\n */\n\nmain.checkpointMap = {\n  11111: b('1d7c6eb2fd42f55925e92efad68b61edd22fba29fde8783df744e26900000000'),\n  33333: b('a6d0b5df7d0df069ceb1e736a216ad187a50b07aaa4e78748a58d52d00000000'),\n  74000: b('201a66b853f9e7814a820e2af5f5dc79c07144e31ce4c9a39339570000000000'),\n  105000: b('97dc6b1d15fbeef373a744fee0b254b0d2c820a3ae7f0228ce91020000000000'),\n  134444: b('feb0d2420d4a18914c81ac30f494a5d4ff34cd15d34cfd2fb105000000000000'),\n  168000: b('63b703835cb735cb9a89d733cbe66f212f63795e0172ea619e09000000000000'),\n  193000: b('17138bca83bdc3e6f60f01177c3877a98266de40735f2a459f05000000000000'),\n  210000: b('2e3471a19b8e22b7f939c63663076603cf692f19837e34958b04000000000000'),\n  216116: b('4edf231bf170234e6a811460f95c94af9464e41ee833b4f4b401000000000000'),\n  225430: b('32595730b165f097e7b806a679cf7f3e439040f750433808c101000000000000'),\n  250000: b('14d2f24d29bed75354f3f88a5fb50022fc064b02291fdf873800000000000000'),\n  279000: b('407ebde958e44190fa9e810ea1fc3a7ef601c3b0a0728cae0100000000000000'),\n  295000: b('83a93246c67003105af33ae0b29dd66f689d0f0ff54e9b4d0000000000000000'),\n  300255: b('b2f3a0f0de4120c1089d5f5280a263059f9b6e7c520428160000000000000000'),\n  319400: b('3bf115fd057391587ca39a531c5d4989e1adec9b2e05c6210000000000000000'),\n  343185: b('548536d48e7678fcfa034202dd45d4a76b1ad061f38b2b070000000000000000'),\n  352940: b('ffc9520143e41c94b6e03c2fa3e62bb76b55ba2df45d75100000000000000000'),\n  382320: b('b28afdde92b0899715e40362f56afdb20e3d135bedc68d0a0000000000000000'),\n  401465: b('eed16cb3e893ed9366f27c39a9ecd95465d02e3ef40e45010000000000000000'),\n  420000: b('a1ff746b2d42b834cb7d6b8981b09c265c2cabc016e8cc020000000000000000'),\n  440000: b('9bf296b8de5f834f7635d5e258a434ad51b4dbbcf7c08c030000000000000000'),\n  450000: b('0ba2070c62cd9da1f8cef88a0648c661a411d33e728340010000000000000000'),\n  460000: b('8c25fc7e414d3e868d6ce0ec473c30ad44e7e8bc1b75ef000000000000000000'),\n  470000: b('89756d1ed75901437300af10d5ab69070a282e729c536c000000000000000000'),\n  // UAHF fork block:\n  478559: b('ec5e1a193601f25ff1d94b421ddead0dbefcb99cf91e65000000000000000000'),\n  480000: b('f93408ffca92d88a6e46d3b90046f97bde6be0c08e7ed40c0000000000000000'),\n  490000: b('d1c65d766c6dc270b8ff4f1edb052fb71dc2b4750ede8a010000000000000000'),\n  500000: b('01b2328355f4a4dc9efa5c610687304507b7df9f3f4de1050000000000000000'),\n  // DAA fork block\n  504031: b('9cabb6ee1b1a4c3b659d70be75810be83d0a0db665bf1e010000000000000000'),\n  510000: b('040e6b1f2f4cb198a5780d366bf81e591de257642b9267030000000000000000'),\n  525000: b('c994fba2bf168333fd969bcfa64f03ca1b62074f9a8f1b010000000000000000'),\n  // Monolith Activation\n  530359: b('0391c40195cf8ae3436f3955f1a8444f07468fd08bda1a010000000000000000'),\n  // Magnetic Anomaly Activation:\n  556767: b('6cd5e644acccee5743ce2e93c541d34169933b6eff2646000000000000000000'),\n  // Great Wall Activation:\n  582680: b('18cc7d8c39ca16dc749acb7278a471964f7dec6ae3b8b4010000000000000000'),\n  // Graviton Activation:\n  609136: b('b1c55b4f69aa2e3209c91ae413c355c65aacfa07b28bb4000000000000000000'),\n  // Phonon Activation:\n  635259: b('f73075b2c598f49b3a19558c070b52d5a5d6c21fefdf33000000000000000000'),\n  // Axion Activation:\n  661648: b('7d7510f907bdc9bd2907e56beceaef31f78f2c8b9d4c28040000000000000000'),\n  664198: b('60824622a1d2b689fbb234ce2c5939ff92e8ed8c57902f0c0000000000000000'),\n  680140: b('0b7c2ff6c3658cb3f846aa092145c44a1d45638b56482c230000000000000000'),\n  // Tachyon Activation\n  686621: b('45b7e5be980bd6e98a22f895fcdc80546d9f0a57f7e68f3c0000000000000000'),\n  // Selectron Activation\n  713661: b('8defaaea383ab73c75ceea3f08190f3ab5ccc70743f876060000000000000000'),\n  // Gluon activation\n  739536: b('617bfc596bce59b129242fe67b5afe0509560946cd04db060000000000000000'),\n  // Jefferson activation\n  766195: b('94e0246db72955957dedb431eb1096de9a5b715348c92b100000000000000000')\n};\n\n/**\n * Last checkpoint height.\n * @const {Number}\n * @default\n */\n\nmain.lastCheckpoint = 525000;\n\n/**\n * @const {Number}\n * @default\n */\n\nmain.halvingInterval = 210000;\n\n/**\n * Genesis block header.\n * @const {Object}\n */\n\nmain.genesis = {\n  version: 1,\n  hash: b('6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000'),\n  prevBlock:\n    b('0000000000000000000000000000000000000000000000000000000000000000'),\n  merkleRoot:\n    b('3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a'),\n  time: 1231006505,\n  bits: 486604799,\n  nonce: 2083236893,\n  height: 0\n};\n\n/**\n * The network's genesis block in a hex string.\n * @const {String}\n */\n\nmain.genesisBlock =\n  '0100000000000000000000000000000000000000000000000000000000000000000000'\n  + '003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a29ab'\n  + '5f49ffff001d1dac2b7c01010000000100000000000000000000000000000000000000'\n  + '00000000000000000000000000ffffffff4d04ffff001d0104455468652054696d6573'\n  + '2030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66'\n  + '207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01'\n  + '000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f'\n  + '61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f'\n  + 'ac00000000';\n\n/**\n * POW-related constants.\n * @enum {Number}\n * @default\n */\n\nmain.pow = {\n  /**\n   * Default target.\n   * @const {BN}\n   */\n\n  limit: new BN(\n    '00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n    'hex'\n  ),\n\n  /**\n   * Compact pow limit.\n   * @const {Number}\n   * @default\n   */\n\n  bits: 486604799,\n\n  /**\n   * Half Life value used in DAA.\n   * Represents the value of two days in seconds\n   * @const {Number}\n   * @default\n   */\n\n  halfLife: 172800,\n\n  /**\n   * Minimum chainwork for best chain.\n   * @const {BN}\n   */\n\n  chainwork: new BN(\n    '0000000000000000000000000000000000000000013c95e14d4d9db91d671020',\n    'hex'\n  ),\n\n  /**\n   * Desired retarget period in seconds.\n   * @const {Number}\n   * @default\n   */\n\n  targetTimespan: 14 * 24 * 60 * 60,\n\n  /**\n   * Average block time.\n   * @const {Number}\n   * @default\n   */\n\n  targetSpacing: 10 * 60,\n\n  /**\n   * Retarget interval in blocks.\n   * @const {Number}\n   * @default\n   */\n\n  retargetInterval: 2016,\n\n  /**\n   * Whether to reset target if a block\n   * has not been mined recently.\n   * @const {Boolean}\n   * @default\n   */\n\n  targetReset: false,\n\n  /**\n   * Do not allow retargetting.\n   * @const {Boolean}\n   * @default\n   */\n\n  noRetargeting: false\n};\n\n/**\n * Block constants.\n * @enum {Number}\n * @default\n */\n\nmain.block = {\n  /**\n   * Height at which bip34 was activated.\n   * Used for avoiding bip30 checks.\n   */\n\n  bip34height: 227931,\n\n  /**\n   * Hash of the block that activated bip34.\n   */\n\n  bip34hash:\n    b('b808089c756add1591b1d17bab44bba3fed9e02f942ab4894b02000000000000'),\n\n  /**\n   * Height at which bip65 was activated.\n   */\n\n  bip65height: 388381,\n\n  /**\n   * Hash of the block that activated bip65.\n   */\n\n  bip65hash:\n    b('f035476cfaeb9f677c2cdad00fd908c556775ded24b6c2040000000000000000'),\n\n  /**\n   * Height at which bip66 was activated.\n   */\n\n  bip66height: 363725,\n\n  /**\n   * Hash of the block that activated bip66.\n   */\n\n  bip66hash:\n    b('3109b588941188a9f1c2576aae462d729b8cce9da1ea79030000000000000000'),\n\n  /**\n   * Height at which UAHF was activated.\n   */\n\n  uahfHeight: 478558,\n\n  /**\n   * Hash of the block that activated UAHF.\n   */\n\n  uahfHash:\n    b('432d350741fbf28f2e1486eabe2c4e143bfe2241af6518010000000000000000'),\n\n  /**\n   * Height at which DAA was activated.\n   * November 13, 2017 hard fork\n   */\n\n  daaHeight: 504031,\n\n  /**\n   * Hash of the block that activated DAA\n   */\n\n  daaHash:\n    b('9cabb6ee1b1a4c3b659d70be75810be83d0a0db665bf1e010000000000000000'),\n\n  /**\n   * Height at which Magnetic Anomaly was activated.\n   * Nov 15, 2018 hard fork\n   */\n\n  magneticAnomalyHeight: 556767,\n\n  /**\n   * Hash of the block that activatd Magnetic Anomaly.\n   * November 15, 2018\n   */\n\n  maaHash:\n    b('6cd5e644acccee5743ce2e93c541d34169933b6eff2646000000000000000000'),\n\n  /**\n   * Height at which Great Wall was activated.\n   * Wed, 15 May 2019 hard fork\n   */\n\n  greatWallActivationHeight: 582680,\n\n  /**\n   * Hash of the block that activated Great Wall.\n   * May 15, 2019\n   */\n\n  gwaHash:\n    b('18cc7d8c39ca16dc749acb7278a471964f7dec6ae3b8b4010000000000000000'),\n\n  /**\n   * Graviton Hard Fork activation time.\n   * Nov 15, 2019 12:00:00 UTC\n   */\n\n  gravitonActivationTime: 1573819200,\n\n  /**\n   * Height at which Graviton was activated.\n   * Friday, 15 November 2019 hard fork\n   */\n\n  gravitonHeight: 609136,\n\n  /**\n   * Hash of the block that activated Graviton.\n   * November 15th, 2019\n   */\n\n  gravitonHash:\n    b('b1c55b4f69aa2e3209c91ae413c355c65aacfa07b28bb4000000000000000000'),\n\n  /**\n   * Time at which Phonon was activated.\n   * May 15, 2020 12:00:00 UTC\n   */\n\n  phononActivationTime: 1589544000,\n\n  /**\n  * Height at which Phonon Activation occured.\n  * May 15, 2020\n  */\n\n  phononHeight: 635259,\n\n  /**\n  * Hash of the block that activated Phonon.\n  * May 15th 2020\n  */\n\n  phononHash:\n    b('f73075b2c598f49b3a19558c070b52d5a5d6c21fefdf33000000000000000000'),\n\n  /**\n   * Time at which Asert3d-2i was activated.\n   * November 15, 2020 12:00:00 UTC\n   */\n\n  asertActivationTime: 1605441600,\n\n  /**\n   * Time at which Axion was activated.\n   * November 15, 2020 12:00:00 UTC\n   */\n\n  axionActivationTime: 1605441600,\n\n  /**\n  * Height at which Axion Activation occured.\n  * November 15, 2020\n  */\n\n  axionHeight: 661648,\n\n  /**\n  * Hash of the block that activated Axion.\n  * November 15th 2020\n  */\n\n   axionHash:\n   b('7d7510f907bdc9bd2907e56beceaef31f78f2c8b9d4c28040000000000000000'),\n\n  /**\n   * Time at which Tachyon was activated.\n   * May 15, 2021 12:00:00 UTC\n   */\n\n  tachyonActivationTime: 1621080000,\n\n  /**\n  * Height at which Tachyon Activation occured.\n  * May 15, 2021 12:00:00 UTC\n  */\n\n  tachyonHeight: 686621,\n\n  /**\n  * Hash of the block that activated Tachyon.\n  * May 15, 2021 12:00:00 UTC\n  */\n\n  tachyonHash:\n  b('45b7e5be980bd6e98a22f895fcdc80546d9f0a57f7e68f3c0000000000000000'),\n\n  /**\n   * Time at which Selectron was activated.\n   * November 15, 2021 12:00:00 UTC\n   */\n\n  selectronActivationTime: 1636977600,\n\n  /**\n  * Height at which Selectron Activation occured.\n  *  November 15, 2021 12:00:00 UTC\n  */\n\n  selectronHeight: 713661,\n\n  /**\n  * Hash of the block that activated Selectron.\n  * November 15, 2021 12:00:00 UTC\n  */\n\n  selectronHash:\n  b('8defaaea383ab73c75ceea3f08190f3ab5ccc70743f876060000000000000000'),\n\n  /**\n   * Time at which Gluon was activated.\n   * May 15, 2022 12:00:00 UTC\n   */\n\n  gluonActivationTime: 1652572800,\n\n  /**\n  * Height at which Gluon activation occured.\n  *  May 15, 2022 12:00:00 UTC\n  */\n\n  gluonHeight: 739536,\n\n  /**\n  * Hash of the block that activated Gluon.\n  * May 15, 2022 12:00:00 UTC\n  */\n\n  gluonHash:\n  b('617bfc596bce59b129242fe67b5afe0509560946cd04db060000000000000000'), \n\n  /**\n   * Time at which Jefferson was activated.\n   * November 15, 2022 12:00:00 UTC\n   */\n\n  jeffersonActivationTime: 1668470400,\n\n  /**\n  * Height at which Gluon activation occured.\n  *  November 15, 2022 12:00:00 UTC\n  */\n\n  jeffersonHeight: 766195,\n\n  /**\n  * Hash of the block that activated Gluon.\n  * November 15, 2022 12:00:00 UTC\n  */\n\n  jeffersonHash:\n  b('94e0246db72955957dedb431eb1096de9a5b715348c92b100000000000000000'), \n\n  /**\n   * Time at which Wellington was activated.\n   * May 15, 2023 12:00:00 UTC\n   */\n\n  wellingtonActivationTime: 1684108800,\n\n  /**\n   * Safe height to start pruning.\n   */\n\n  pruneAfterHeight: 1000,\n\n  /**\n   * Safe number of blocks to keep.\n   */\n\n  keepBlocks: 288,\n\n  /**\n   * Age used for the time delta to\n   * determine whether the chain is synced.\n   */\n\n  maxTipAge: 24 * 60 * 60,\n\n  /**\n   * Height at which block processing is\n   * slow enough that we can output\n   * logs without spamming.\n   */\n\n  slowHeight: 325000\n};\n\n/**\n * Map of historical blocks which create duplicate transactions hashes.\n * @see https://github.com/bitcoin/bips/blob/master/bip-0030.mediawiki\n * @const {Object}\n * @default\n */\n\nmain.bip30 = {\n  91842: b('eccae000e3c8e4e093936360431f3b7603c563c1ff6181390a4d0a0000000000'),\n  91880: b('21d77ccb4c08386a04ac0196ae10f6a1d2c2a377558ca190f143070000000000')\n};\n\n/**\n * For versionbits.\n * @const {Number}\n * @default\n */\n\nmain.activationThreshold = 1916; // 95% of 2016\n\n/**\n * Confirmation window for versionbits.\n * @const {Number}\n * @default\n */\n\nmain.minerWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n\n/**\n * Deployments for versionbits.\n * @const {Object}\n * @default\n */\n\nmain.deployments = {\n  csv: {\n    name: 'csv',\n    bit: 0,\n    startTime: 1462060800, // May 1st, 2016\n    timeout: 1493596800, // May 1st, 2017\n    threshold: -1,\n    window: -1,\n    required: false,\n    force: true\n  },\n  testdummy: {\n    name: 'testdummy',\n    bit: 28,\n    startTime: 1199145601, // January 1, 2008\n    timeout: 1230767999, // December 31, 2008\n    threshold: -1,\n    window: -1,\n    required: false,\n    force: true\n  }\n};\n\n/**\n * Deployments for versionbits (array form, sorted).\n * @const {Array}\n * @default\n */\n\nmain.deploys = [\n  main.deployments.csv,\n  main.deployments.testdummy\n];\n\n/**\n * Key prefixes.\n * @enum {Number}\n * @default\n */\n\nmain.keyPrefix = {\n  privkey: 0x80,\n  xpubkey: 0x0488b21e,\n  xprivkey: 0x0488ade4,\n  xpubkey58: 'xpub',\n  xprivkey58: 'xprv',\n  coinType: 0\n};\n\n/**\n * {@link Address} prefixes.\n * @enum {Number}\n */\n\nmain.addressPrefix = {\n  pubkeyhash: 0x00,\n  scripthash: 0x05,\n  cashaddr: 'ecash'\n};\n\n/**\n * Default value for whether the mempool\n * accepts non-standard transactions.\n * @const {Boolean}\n * @default\n */\n\nmain.requireStandard = true;\n\n/**\n * Default http port.\n * @const {Number}\n * @default\n */\n\nmain.rpcPort = 8332;\n\n/**\n * Default wallet port.\n * @const {Number}\n * @default\n */\n\nmain.walletPort = 8334;\n\n/**\n * Default min relay rate.\n * @const {Rate}\n * @default\n */\n\nmain.minRelay = 1000;\n\n/**\n * Default normal relay rate.\n * @const {Rate}\n * @default\n */\n\nmain.feeRate = 100000;\n\n/**\n * Maximum normal relay rate.\n * @const {Rate}\n * @default\n */\n\nmain.maxFeeRate = 400000;\n\n/**\n * Whether to allow self-connection.\n * @const {Boolean}\n */\n\nmain.selfConnect = false;\n\n/**\n * Whether to request mempool on sync.\n * @const {Boolean}\n */\n\nmain.requestMempool = false;\n\n/*\n * Testnet (v3)\n * https://en.bitcoin.it/wiki/Testnet\n */\n\nconst testnet = {};\n\ntestnet.type = 'testnet';\n\ntestnet.seeds = [\n  'testnet-seed.bitcoinabc.org', // Bitcoin ABC seeder\n  'testnet-seed-abc.bitcoinforks.org', // bitcoinforks seeders\n  'testnet-seed.deadalnix.me', // Amaury SÉCHET\n  'testnet-seed.bchd.cash'\n];\n\ntestnet.magic = 0xf4f3e5f4;\n\ntestnet.port = 18333;\n\ntestnet.checkpointMap = {\n  546: b('70cb6af7ebbcb1315d3414029c556c55f3e2fc353c4c9063a76c932a00000000'),\n  10000: b('02a1b43f52591e53b660069173ac83b675798e12599dbb0442b7580000000000'),\n  50000: b('0c6ceabe803cec55ba2831e445956d0a43ba9521743a802cddac7e0700000000'),\n  90000: b('cafc21e17faf90461a5905aa03302c394912651ed9475ae711723e0d00000000'),\n  100000: b('1e0a16bbadccde1d80c66597b1939e45f91b570d29f95fc158299e0000000000'),\n  140000: b('92c0877b54c556889b72175ccbe0c91a1208f6ef7efb2c006101062300000000'),\n  170000: b('508125560d202b89757889bb0e49c712477be20440058f05db4f0e0000000000'),\n  210000: b('32365454b5f29a826bff8ad9b0448cad0072fc73d50e482d91a3dece00000000'),\n  230000: b('b11a447e62643e0b27406eb0fc270cb8126d7b5b70822fb642d9513400000000'),\n  270000: b('1c42b811cf9c163932f6e95ec55bf9b5e2cb5324e7e93001572e000000000000'),\n  300000: b('a141bf3972424853f04367b47995e220e0b5a2706e5618766f22000000000000'),\n  340000: b('67edd4d92e405608109164b15f92b193377d49325b0ed036739c010000000000'),\n  350000: b('592b44bc0f7a4286cf07ead8497114c6952c1c7dea7305193deacf8e00000000'),\n  390000: b('f217e183484fb6d695609cc71fa2ae24c3020943407e0150b298030000000000'),\n  420000: b('de9e73a3b91fbb014e036e8583a17d6b638a699aeb2de8573d12580800000000'),\n  460000: b('2e8baaffc107f15c87aebe01664b63d07476afa53bcbada1281a030000000000'),\n  500000: b('06f60922a2aab2757317820fc6ffaf6a470e2cbb0f63a2aac0a7010000000000'),\n  540000: b('8dd0bebfbc4878f5af09d3e848dcc57827d2c1cebea8ec5d8cbe420500000000'),\n  570000: b('87acbd4cd3c40ec9bd648f8698ed226b31187274c06cc7a9af79030000000000'),\n  600000: b('169a05b3bb04b7d13ad628915630900a5ed2e89f3a9dc6064f62000000000000'),\n  630000: b('bbbe117035432a6a4effcb297207a02b031735b43e0d19a9217c000000000000'),\n  670000: b('080bfe75caed8624fcfdfbc65973c8f962d7bdc495a891f5d16b7d0000000000'),\n  700000: b('c14d3f6a1e7c7d66fd940951e44f3c3be1273bea4d2ab1786140000000000000'),\n  740000: b('b3b423f0462fd78a01e4f1a59a2737a0525b5dbb9bba0b4634f9000000000000'),\n  780000: b('0381582e34c3755964dc2813e2b33e521e5596367144e1670851050000000000'),\n  800000: b('03b5f8ab257e02903f509f5ff2935220eec2e77b1819651d099b200000000000'),\n  840000: b('dac1648107bd4394e57e4083c86d42b548b1cfb119665f179ea80a0000000000'),\n  880000: b('ff90b4bb07eded8e96715bf595c09c7d21dd8c61b8306ff48705d60000000000'),\n  900000: b('9bd8ac418beeb1a2cf5d68c8b5c6ebaa947a5b766e5524898d6f350000000000'),\n  940000: b('c98f1651a475b00d12f8c25eb166ee843affaa90610e36a19d68030000000000'),\n  980000: b('cc8e9774542d044a9698ca2336ae02d5987157e676f1c76aa3877c0000000000'),\n  1010000:\n    b('9d9fb11abc2712d80368229e97b8d827b2a07d27eb5335e5c924000000000000'),\n  1050000:\n    b('d8190cf0af7f08e179cab51d67db0b44b87951a78f7fdc31b4a01a0000000000'),\n  1090000:\n    b('41f83c47e02a8852d033ac884df7cca877726b384a461fb9e802000000000000'),\n  1130000:\n    b('b8d63c3830e3c5685d3f7d2c2271fdb2ce3315619a473c324ea1a4ce00000000'),\n  // UAHF fork block.\n  1155875:\n    b('38f1ae7f0ea8c1b589884c5fbd0b83721e3ab6759a4b897206857cf100000000'),\n  // DAA fork block.\n  1188697:\n    b('fb47e0ab0d2448f71192a09fe61bc9c46cd3b4e7bd778091d00e170000000000'),\n  // GWA fork block.\n  1303885:\n    b('d323ee8d7ede5bef62f84db98f93cc8c47fae4f02e8938914700000000000000'),\n  // Graviton fork block\n  1341712:\n    b('5ba3af2992073940ed9e5a9d9eef9194bbfba905d92b202eea44fcff00000000'),\n  // Phonon fork block.\n  1378461:\n    b('d715e9fab7bbdf301081eeadbe6e931db282cf6b92b1365f9b50f59900000000')\n\n};\n\ntestnet.lastCheckpoint = 1341712;\n\ntestnet.halvingInterval = 210000;\n\ntestnet.genesis = {\n  version: 1,\n  hash: b('43497fd7f826957108f4a30fd9cec3aeba79972084e90ead01ea330900000000'),\n  prevBlock:\n    b('0000000000000000000000000000000000000000000000000000000000000000'),\n  merkleRoot:\n    b('3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a'),\n  time: 1296688602,\n  bits: 486604799,\n  nonce: 414098458,\n  height: 0\n};\n\ntestnet.genesisBlock =\n  '0100000000000000000000000000000000000000000000000000000000000000000000'\n  + '003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4adae5'\n  + '494dffff001d1aa4ae1801010000000100000000000000000000000000000000000000'\n  + '00000000000000000000000000ffffffff4d04ffff001d0104455468652054696d6573'\n  + '2030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66'\n  + '207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01'\n  + '000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f'\n  + '61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f'\n  + 'ac00000000';\n\ntestnet.pow = {\n  limit: new BN(\n    '00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n    'hex'\n  ),\n  bits: 486604799,\n  chainwork: new BN(\n    '00000000000000000000000000000000000000000000006956e7298fb096a1cc',\n    'hex'\n  ),\n  halfLife: 172800,\n  targetTimespan: 14 * 24 * 60 * 60,\n  targetSpacing: 10 * 60,\n  retargetInterval: 2016,\n  targetReset: true,\n  noRetargeting: false\n};\n\ntestnet.block = {\n  bip34height: 21111,\n  bip34hash:\n    b('f88ecd9912d00d3f5c2a8e0f50417d3e415c75b3abe584346da9b32300000000'),\n  bip65height: 581885,\n  bip65hash:\n    b('b61e864fbec41dfaf09da05d1d76dc068b0dd82ee7982ff255667f0000000000'),\n  bip66height: 330776,\n  bip66hash:\n    b('82a14b9e5ea81d4832b8e2cd3c2a6092b5a3853285a8995ec4c8042100000000'),\n\n  uahfHeight: 1155875,\n  uahfHash:\n    b('38f1ae7f0ea8c1b589884c5fbd0b83721e3ab6759a4b897206857cf100000000'),\n\n  daaHeight: 1188697,\n  daaHash:\n    b('fb47e0ab0d2448f71192a09fe61bc9c46cd3b4e7bd778091d00e170000000000'),\n\n  magneticAnomalyHeight: 1267996,\n  maaHash:\n    b('244b485f4871816d3ca060f6f363abe81c6fa1bed45c09e0fa01000000000000'),\n\n  greatWallActivationHeight: 1303885,\n  gwaHash:\n    b('d323ee8d7ede5bef62f84db98f93cc8c47fae4f02e8938914700000000000000'),\n\n  gravitonActivationTime: 1573819200,\n\n  gravitonHeight: 1341712,\n  gravitonHash:\n    b('5ba3af2992073940ed9e5a9d9eef9194bbfba905d92b202eea44fcff00000000'),\n\n  phononActivationTime: 1589544000,\n  asertActivationTime: 1605441600,\n  pruneAfterHeight: 1000,\n  keepBlocks: 10000,\n  maxTipAge: 24 * 60 * 60,\n  slowHeight: 950000\n};\n\ntestnet.bip30 = {};\n\ntestnet.activationThreshold = 1512; // 75% for testchains\n\ntestnet.minerWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n\ntestnet.deployments = {\n  csv: {\n    name: 'csv',\n    bit: 0,\n    startTime: 1456790400, // March 1st, 2016\n    timeout: 1493596800, // May 1st, 2017\n    threshold: -1,\n    window: -1,\n    required: false,\n    force: true\n  },\n  testdummy: {\n    name: 'testdummy',\n    bit: 28,\n    startTime: 1199145601, // January 1, 2008\n    timeout: 1230767999, // December 31, 2008\n    threshold: -1,\n    window: -1,\n    required: false,\n    force: true\n  }\n};\n\ntestnet.deploys = [\n  testnet.deployments.csv,\n  testnet.deployments.testdummy\n];\n\ntestnet.keyPrefix = {\n  privkey: 0xef,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  xpubkey58: 'tpub',\n  xprivkey58: 'tprv',\n  coinType: 1\n};\n\ntestnet.addressPrefix = {\n  pubkeyhash: 0x6f,\n  scripthash: 0xc4,\n  cashaddr: 'xectest'\n};\n\ntestnet.requireStandard = false;\n\ntestnet.rpcPort = 18332;\n\ntestnet.walletPort = 18334;\n\ntestnet.minRelay = 1000;\n\ntestnet.feeRate = 20000;\n\ntestnet.maxFeeRate = 60000;\n\ntestnet.selfConnect = false;\n\ntestnet.requestMempool = false;\n\n/*\n * Regtest\n */\n\nconst regtest = {};\n\nregtest.type = 'regtest';\n\nregtest.seeds = [\n  '127.0.0.1'\n];\n\nregtest.magic = 0xfabfb5da;\n\nregtest.port = 48444;\n\nregtest.checkpointMap = {};\nregtest.lastCheckpoint = 0;\n\nregtest.halvingInterval = 150;\n\nregtest.genesis = {\n  version: 1,\n  hash: b('06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f'),\n  prevBlock:\n    b('0000000000000000000000000000000000000000000000000000000000000000'),\n  merkleRoot:\n    b('3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a'),\n  time: 1296688602,\n  bits: 545259519,\n  nonce: 2,\n  height: 0\n};\n\nregtest.genesisBlock =\n  '0100000000000000000000000000000000000000000000000000000000000000000000'\n  + '003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4adae5'\n  + '494dffff7f200200000001010000000100000000000000000000000000000000000000'\n  + '00000000000000000000000000ffffffff4d04ffff001d0104455468652054696d6573'\n  + '2030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66'\n  + '207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01'\n  + '000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f'\n  + '61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f'\n  + 'ac00000000';\n\nregtest.pow = {\n  limit: new BN(\n    '7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n    'hex'\n  ),\n  bits: 545259519,\n  chainwork: new BN(\n    '0000000000000000000000000000000000000000000000000000000000000002',\n    'hex'\n  ),\n  halfLife: 172800,\n  targetTimespan: 14 * 24 * 60 * 60,\n  targetSpacing: 10 * 60,\n  retargetInterval: 2016,\n  targetReset: true,\n  noRetargeting: true\n};\n\nregtest.block = {\n  bip34height: 100000000,\n  bip34hash: null,\n  bip65height: 1351,\n  bip65hash: null,\n  bip66height: 1251,\n  bip66hash: null,\n  uahfHeight: 0,\n  uahfHash: null,\n  daaHeight: 0,\n  daaHash: null,\n  magneticAnomalyHeight: 0,\n  maaHash: null,\n  greatWallActivationHeight: 0,\n  gwaHash: null,\n  gravitonHeight: 0,\n  gravitonHash: null,\n  phononActivationTime: 0,\n  asertActivationTime: 0,\n  pruneAfterHeight: 1000,\n  keepBlocks: 10000,\n  maxTipAge: 0xffffffff,\n  slowHeight: 0\n};\n\nregtest.bip30 = {};\n\nregtest.activationThreshold = 108; // 75% for testchains\n\nregtest.minerWindow = 144; // Faster than normal for regtest\n\nregtest.deployments = {\n  csv: {\n    name: 'csv',\n    bit: 0,\n    startTime: 0,\n    timeout: 0xffffffff,\n    threshold: -1,\n    window: -1,\n    required: false,\n    force: true\n  },\n  testdummy: {\n    name: 'testdummy',\n    bit: 28,\n    startTime: 0,\n    timeout: 0xffffffff,\n    threshold: -1,\n    window: -1,\n    required: false,\n    force: true\n  }\n};\n\nregtest.deploys = [\n  regtest.deployments.csv,\n  regtest.deployments.testdummy\n];\n\nregtest.keyPrefix = {\n  privkey: 0x5a,\n  xpubkey: 0xeab4fa05,\n  xprivkey: 0xeab404c7,\n  xpubkey58: 'rpub',\n  xprivkey58: 'rprv',\n  coinType: 1\n};\n\nregtest.addressPrefix = {\n  pubkeyhash: 0x3c,\n  scripthash: 0x26,\n  cashaddr: 'xecreg'\n};\n\nregtest.requireStandard = false;\n\nregtest.rpcPort = 48332;\n\nregtest.walletPort = 48334;\n\nregtest.minRelay = 1000;\n\nregtest.feeRate = 20000;\n\nregtest.maxFeeRate = 60000;\n\nregtest.selfConnect = true;\n\nregtest.requestMempool = true;\n\n/*\n * Simnet (btcd)\n */\n\nconst simnet = {};\n\nsimnet.type = 'simnet';\n\nsimnet.seeds = [\n  '127.0.0.1'\n];\n\nsimnet.magic = 0xf2faede4;\n\nsimnet.port = 18555;\n\nsimnet.checkpointMap = {};\n\nsimnet.lastCheckpoint = 0;\n\nsimnet.halvingInterval = 210000;\n\nsimnet.genesis = {\n  version: 1,\n  hash:\n    b('f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68'),\n  prevBlock:\n    b('0000000000000000000000000000000000000000000000000000000000000000'),\n  merkleRoot:\n    b('3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a'),\n  time: 1401292357,\n  bits: 545259519,\n  nonce: 2,\n  height: 0\n};\n\nsimnet.genesisBlock =\n  '0100000000000000000000000000000000000000000000000000000000000000000000'\n  + '003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a4506'\n  + '8653ffff7f200200000001010000000100000000000000000000000000000000000000'\n  + '00000000000000000000000000ffffffff4d04ffff001d0104455468652054696d6573'\n  + '2030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66'\n  + '207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01'\n  + '000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f'\n  + '61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f'\n  + 'ac00000000';\n\nsimnet.pow = {\n  limit: new BN(\n    // High target of 0x207fffff (545259519)\n    '7fffff0000000000000000000000000000000000000000000000000000000000',\n    'hex'\n  ),\n  bits: 545259519,\n  chainwork: new BN(\n    '0000000000000000000000000000000000000000000000000000000000000002',\n    'hex'\n  ),\n  halfLife: 172800,\n  targetTimespan: 14 * 24 * 60 * 60,\n  targetSpacing: 10 * 60,\n  retargetInterval: 2016,\n  targetReset: true,\n  noRetargeting: false\n};\n\nsimnet.block = {\n  bip34height: 0,\n  bip34hash:\n    b('f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68'),\n  bip65height: 0,\n  bip65hash:\n    b('f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68'),\n  bip66height: 0,\n  bip66hash:\n    b('f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68'),\n  uahfHeight: 0,\n  uahfHash: null,\n  daaHeight: 0,\n  daaHash: null,\n  magneticAnomalyActivationTime: 1542300000,\n  greatWallActivationTime: 1557921600,\n  pruneAfterHeight: 1000,\n  keepBlocks: 10000,\n  maxTipAge: 0xffffffff,\n  slowHeight: 0\n};\n\nsimnet.bip30 = {};\n\nsimnet.activationThreshold = 75; // 75% for testchains\n\nsimnet.minerWindow = 100; // nPowTargetTimespan / nPowTargetSpacing\n\nsimnet.deployments = {\n  csv: {\n    name: 'csv',\n    bit: 0,\n    startTime: 0, // March 1st, 2016\n    timeout: 0xffffffff, // May 1st, 2017\n    threshold: -1,\n    window: -1,\n    required: false,\n    force: true\n  },\n  testdummy: {\n    name: 'testdummy',\n    bit: 28,\n    startTime: 1199145601, // January 1, 2008\n    timeout: 1230767999, // December 31, 2008\n    threshold: -1,\n    window: -1,\n    required: false,\n    force: true\n  }\n};\n\nsimnet.deploys = [\n  simnet.deployments.csv,\n  simnet.deployments.testdummy\n];\n\nsimnet.keyPrefix = {\n  privkey: 0x64,\n  xpubkey: 0x0420bd3a,\n  xprivkey: 0x0420b900,\n  xpubkey58: 'spub',\n  xprivkey58: 'sprv',\n  coinType: 115\n};\n\nsimnet.addressPrefix = {\n  pubkeyhash: 0x3f,\n  scripthash: 0x7b,\n  cashaddr: 'xecsim'\n};\n\nsimnet.requireStandard = false;\n\nsimnet.rpcPort = 18556;\n\nsimnet.walletPort = 18558;\n\nsimnet.minRelay = 1000;\n\nsimnet.feeRate = 20000;\n\nsimnet.maxFeeRate = 60000;\n\nsimnet.selfConnect = false;\n\nsimnet.requestMempool = false;\n\n/*\n * Expose\n */\n\nnetwork.main = main;\n  network.testnet = testnet;\n  network.regtest = regtest;\n  network.simnet = simnet;\n","/*!\n * consensus.js - consensus constants and helpers for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * @module protocol/consensus\n */\n\nconst assert = require('bsert');\nconst BN = require('../bcrypto/bn.js');\n\n/**\n * One bitcoin in satoshis.\n * @const {Amount}\n * @default\n */\n\nexports.COIN = 100000000;\n\n/**\n * Maximum amount of money in satoshis:\n * `21million * 1btc` (consensus).\n * @const {Amount}\n * @default\n */\n\nexports.MAX_MONEY = 21000000 * exports.COIN;\n\n/**\n * Base block subsidy (consensus).\n * Note to shitcoin implementors: if you\n * increase this to anything greater than\n * 33 bits, getReward will have to be\n * modified to handle the shifts.\n * @const {Amount}\n * @default\n */\n\nexports.BASE_REWARD = 50 * exports.COIN;\n\n/**\n * Half base block subsidy. Required to\n * calculate the reward properly (with\n * only 32 bit shifts available).\n * @const {Amount}\n * @default\n */\n\nexports.HALF_REWARD = Math.floor(exports.BASE_REWARD / 2);\n\n/**\n * Maximum block base size (consensus).\n * @const {Number}\n * @default\n */\n\nexports.MAX_BLOCK_SIZE = 1000000;\n\n/**\n * Maximum block base size (consensus).\n * @const {Number}\n * @default\n */\n\nexports.MAX_FORK_BLOCK_SIZE = 32000000;\n\n/**\n * Maximum transaction version (consensus).\n * @const {Number}\n * @default\n */\n\nexports.MAX_TX_VERSION = 2;\n\n/**\n * Maximum transaction size (consensus).\n * @const {Number}\n * @default\n */\n\nexports.MAX_TX_SIZE = 1000000;\n\n/**\n * Maximum sigcheck operations per transaction.\n * @const {Number\n * @default\n */\n\nexports.MAX_TX_SIGCHECKS = 3000;\n\n/**\n * Ratio between the allowable block-size / sigchecks during sigcheck\n * operations in a block. (Network rule)\n * @const {Number}\n * @default\n */\n\nexports.MAX_BLOCK_SIGCHECKS_RATIO = 141;\n\n/**\n * Minimum transaction size (consensus)\n * @const {Number}\n * @see https://bitslog.wordpress.com/2018/06/09/leaf-node-weakness-in-bitcoin-merkle-tree-design/\n * @default\n */\n\nexports.MIN_TX_SIZE = 100;\n\n/**\n * Maximum block serialization size (protocol).\n * @const {Number}\n * @default\n */\n\nexports.MAX_RAW_BLOCK_SIZE = 32000000;\n\n/**\n * Maximum block sigops per mb (consensus).\n * @const {Number}\n * @default\n */\n\nexports.MAX_BLOCK_SIGOPS_PER_MB = 20000;\n\n/**\n * Maximum transaction sigops\n * @const {Number}\n * @default\n */\n\nexports.MAX_TX_SIGOPS = 20000;\n\n/**\n * Maximum block sigops cost (consensus).\n * @const {Number}\n * @default\n */\n\nexports.MAX_BLOCK_SIGOPS_COST = 80000;\n\n/**\n * Maximum size for coinbase script sig\n * @const {Number}\n * @default\n */\nexports.MAX_COINBASE_SCRIPTSIG_SIZE = 100;\n\n/**\n * Address for Coinbase Rule (8% of block reward+fees goes to this address)\n * @const {String}\n * @default\n */\n exports.COINBASE_RULE_ADDR = [\n   'ecash:pqnqv9lt7e5vjyp0w88zf2af0l92l8rxdg2jj94l5j',\n   'ecash:prfhcnyqnl5cgrnmlfmms675w93ld7mvvqd0y8lz07'\n  ];\n\n/**\n * Size of set to pick median time from.\n * @const {Number}\n * @default\n */\n\nexports.MEDIAN_TIMESPAN = 11;\n\n/**\n * What bits to set in version\n * for versionbits blocks.\n * @const {Number}\n * @default\n */\n\nexports.VERSION_TOP_BITS = 0x20000000;\n\n/**\n * What bitmask determines whether\n * versionbits is in use.\n * @const {Number}\n * @default\n */\n\nexports.VERSION_TOP_MASK = 0xe0000000;\n\n/**\n * Number of blocks before a coinbase\n * spend can occur (consensus).\n * @const {Number}\n * @default\n */\n\nexports.COINBASE_MATURITY = 100;\n\n/**\n * nLockTime threshold for differentiating\n * between height and time (consensus).\n * Tue Nov 5 00:53:20 1985 UTC\n * @const {Number}\n * @default\n */\n\nexports.LOCKTIME_THRESHOLD = 500000000;\n\n/**\n * Highest nSequence bit -- disables\n * sequence locktimes (consensus).\n * @const {Number}\n */\n\nexports.SEQUENCE_DISABLE_FLAG = (1 << 31) >>> 0;\n\n/**\n * Sequence time: height or time (consensus).\n * @const {Number}\n * @default\n */\n\nexports.SEQUENCE_TYPE_FLAG = 1 << 22;\n\n/**\n * Sequence granularity for time (consensus).\n * @const {Number}\n * @default\n */\n\nexports.SEQUENCE_GRANULARITY = 9;\n\n/**\n * Sequence mask (consensus).\n * @const {Number}\n * @default\n */\n\nexports.SEQUENCE_MASK = 0x0000ffff;\n\n/**\n * Max serialized script size (consensus).\n * @const {Number}\n * @default\n */\n\nexports.MAX_SCRIPT_SIZE = 10000;\n\n/**\n * Max stack size during execution (consensus).\n * @const {Number}\n * @default\n */\n\nexports.MAX_SCRIPT_STACK = 1000;\n\n/**\n * Max script element size (consensus).\n * @const {Number}\n * @default\n */\n\nexports.MAX_SCRIPT_PUSH = 520;\n\n/**\n * Max opcodes executed (consensus).\n * @const {Number}\n * @default\n */\n\nexports.MAX_SCRIPT_OPS = 201;\n\n/**\n * Max `n` value for multisig (consensus).\n * @const {Number}\n * @default\n */\n\nexports.MAX_MULTISIG_PUBKEYS = 20;\n\n/**\n * The date bip16 (p2sh) was activated (consensus).\n * @const {Number}\n * @default\n */\n\nexports.BIP16_TIME = 1333238400;\n\n/**\n * A hash of all zeroes.\n * @const {Buffer}\n * @default\n */\n\nexports.ZERO_HASH = Buffer.alloc(32, 0x00);\n\n/**\n * A hash of all zeroes.\n * @const {String}\n * @default\n */\n\nexports.NULL_HASH =\n  '0000000000000000000000000000000000000000000000000000000000000000';\n\n/**\n * Anti replay commitment.\n * @const {String}\n * @default\n */\n\nexports.ANTI_REPLAY_COMMITMENT =\n  'Bitcoin: A Peer-to-Peer Electronic Cash System';\n\n/**\n * Convert a compact number to a big number.\n * Used for `block.bits` -> `target` conversion.\n * @param {Number} compact\n * @returns {BN}\n */\n\nexports.fromCompact = function fromCompact(compact) {\n  if (compact === 0)\n    return new BN(0);\n\n  const exponent = compact >>> 24;\n  const negative = (compact >>> 23) & 1;\n\n  let mantissa = compact & 0x7fffff;\n  let num;\n\n  if (exponent <= 3) {\n    mantissa >>>= 8 * (3 - exponent);\n    num = new BN(mantissa);\n  } else {\n    num = new BN(mantissa);\n    num.iushln(8 * (exponent - 3));\n  }\n\n  if (negative)\n    num.ineg();\n\n  return num;\n};\n\n/**\n * Convert a big number to a compact number.\n * Used for `target` -> `block.bits` conversion.\n * @param {BN} num\n * @returns {Number}\n */\n\nexports.toCompact = function toCompact(num) {\n  if (num.isZero())\n    return 0;\n\n  let exponent = num.byteLength();\n  let mantissa;\n\n  if (exponent <= 3) {\n    mantissa = num.toNumber();\n    mantissa <<= 8 * (3 - exponent);\n  } else {\n    mantissa = num.ushrn(8 * (exponent - 3)).toNumber();\n  }\n\n  if (mantissa & 0x800000) {\n    mantissa >>= 8;\n    exponent++;\n  }\n\n  let compact = (exponent << 24) | mantissa;\n\n  if (num.isNeg())\n    compact |= 0x800000;\n\n  compact >>>= 0;\n\n  return compact;\n};\n\n/**\n * Verify proof-of-work.\n * @param {Hash} hash\n * @param {Number} bits\n * @returns {Boolean}\n */\n\nexports.verifyPOW = function verifyPOW(hash, bits) {\n  const target = exports.fromCompact(bits);\n\n  if (target.isNeg() || target.isZero())\n    return false;\n\n  if (target.bitLength() > 256)\n    return false;\n\n  const num = new BN(hash, 'le');\n\n  if (num.gt(target))\n    return false;\n\n  return true;\n};\n\n/**\n * Calculate block subsidy.\n * @param {Number} height - Reward era by height.\n * @returns {Amount}\n */\n\nexports.getReward = function getReward(height, interval) {\n  assert(height >= 0, 'Bad height for reward.');\n\n  const halvings = Math.floor(height / interval);\n\n  // BIP 42 (well, our own version of it,\n  // since we can only handle 32 bit shifts).\n  // https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki\n  if (halvings >= 33)\n    return 0;\n\n  // We need to shift right by `halvings`,\n  // but 50 btc is a 33 bit number, so we\n  // cheat. We only start halving once the\n  // halvings are at least 1.\n  if (halvings === 0)\n    return exports.BASE_REWARD;\n\n  return exports.HALF_REWARD >>> (halvings - 1);\n};\n\n/**\n * Test version bit.\n * @param {Number} version\n * @param {Number} bit\n * @returns {Boolean}\n */\n\nexports.hasBit = function hasBit(version, bit) {\n  const TOP_MASK = exports.VERSION_TOP_MASK;\n  const TOP_BITS = exports.VERSION_TOP_BITS;\n  const bits = (version & TOP_MASK) >>> 0;\n  const mask = 1 << bit;\n  return bits === TOP_BITS && (version & mask) !== 0;\n};\n\n/**\n * Calculate max block sigops.\n * @param {Number} size\n * @returns {Number}\n */\n\nexports.maxBlockSigops = function maxBlockSigops(size) {\n  const mb = 1 + ((size - 1) / 1e6 | 0);\n  return mb * exports.MAX_BLOCK_SIGOPS_PER_MB;\n};\n\n/**\n * Calculate maximum block sigchecks.\n * @param {Number} size \n * @returns {Number}\n */\n\nexports.maxBlockSigchecks = function maxBlockSigchecks(size) {\n  return size / exports.MAX_BLOCK_SIGCHECKS_RATIO;\n};\n","/*!\n * util.js - utils for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\n\n/**\n * @exports utils/util\n */\n\nconst util = exports;\n\n/**\n * Return hrtime (shim for browser).\n * @param {Array} time\n * @returns {Array} [seconds, nanoseconds]\n */\n\nutil.bench = function bench(time) {\n  if (!process.hrtime) {\n    const now = Date.now();\n\n    if (time) {\n      const [hi, lo] = time;\n      const start = hi * 1000 + lo / 1e6;\n      return now - start;\n    }\n\n    const ms = now % 1000;\n\n    // Seconds\n    const hi = (now - ms) / 1000;\n\n    // Nanoseconds\n    const lo = ms * 1e6;\n\n    return [hi, lo];\n  }\n\n  if (time) {\n    const [hi, lo] = process.hrtime(time);\n    return hi * 1000 + lo / 1e6;\n  }\n\n  return process.hrtime();\n};\n\n/**\n * Get current time in unix time (seconds).\n * @returns {Number}\n */\n\nutil.now = function now() {\n  return Math.floor(Date.now() / 1000);\n};\n\n/**\n * Get current time in unix time (milliseconds).\n * @returns {Number}\n */\n\nutil.ms = function ms() {\n  return Date.now();\n};\n\n/**\n * Create a Date ISO string from time in unix time (seconds).\n * @param {Number?} time - Seconds in unix time.\n * @returns {String}\n */\n\nutil.date = function date(time) {\n  if (time == null)\n    time = util.now();\n\n  return new Date(time * 1000).toISOString().slice(0, -5) + 'Z';\n};\n\n/**\n * Get unix seconds from a Date string.\n * @param {String?} date - Date ISO String.\n * @returns {Number}\n */\n\nutil.time = function time(date) {\n  if (date == null)\n    return util.now();\n\n  return new Date(date) / 1000 | 0;\n};\n\n/**\n * Reverse a hex-string.\n * @param {Buffer}\n * @returns {String} Reversed hex string.\n */\n\nutil.revHex = function revHex(buf) {\n  assert(Buffer.isBuffer(buf));\n\n  return Buffer.from(buf).reverse().toString('hex');\n};\n\nutil.fromRev = function fromRev(str) {\n  assert(typeof str === 'string');\n  assert((str.length & 1) === 0);\n\n  return Buffer.from(str, 'hex').reverse();\n};\n","/*!\n * timedata.js - time management for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst util = require('../utils/util');\nconst binary = require('../utils/binary');\n\n/**\n * Time Data\n * An object which handles \"adjusted time\". This may not\n * look it, but this is actually a semi-consensus-critical\n * piece of code. It handles version packets from peers\n * and calculates what to offset our system clock's time by.\n * @alias module:protocol.TimeData\n * @extends EventEmitter\n * @property {Array} samples\n * @property {Object} known\n * @property {Number} limit\n * @property {Number} offset\n */\n\nclass TimeData extends EventEmitter {\n  /**\n   * Create time data.\n   * @constructor\n   * @param {Number} [limit=200]\n   */\n\n  constructor(limit) {\n    super();\n\n    if (limit == null)\n      limit = 200;\n\n    this.samples = [];\n    this.known = new Map();\n    this.limit = limit;\n    this.offset = 0;\n    this.checked = false;\n  }\n\n  /**\n   * Add time data.\n   * @param {String} id\n   * @param {Number} time\n   */\n\n  add(id, time) {\n    if (this.samples.length >= this.limit)\n      return;\n\n    if (this.known.has(id))\n      return;\n\n    const sample = time - util.now();\n\n    this.known.set(id, sample);\n\n    binary.insert(this.samples, sample, compare);\n\n    this.emit('sample', sample, this.samples.length);\n\n    if (this.samples.length >= 5 && this.samples.length % 2 === 1) {\n      let median = this.samples[this.samples.length >>> 1];\n\n      if (Math.abs(median) >= 70 * 60) {\n        if (!this.checked) {\n          let match = false;\n\n          for (const offset of this.samples) {\n            if (offset !== 0 && Math.abs(offset) < 5 * 60) {\n              match = true;\n              break;\n            }\n          }\n\n          if (!match) {\n            this.checked = true;\n            this.emit('mismatch');\n          }\n        }\n\n        median = 0;\n      }\n\n      this.offset = median;\n      this.emit('offset', this.offset);\n    }\n  }\n\n  /**\n   * Get the current adjusted time.\n   * @returns {Number} Adjusted Time.\n   */\n\n  now() {\n    return util.now() + this.offset;\n  }\n\n  /**\n   * Adjust a timestamp.\n   * @param {Number} time\n   * @returns {Number} Adjusted Time.\n   */\n\n  adjust(time) {\n    return time + this.offset;\n  }\n\n  /**\n   * Unadjust a timestamp.\n   * @param {Number} time\n   * @returns {Number} Local Time.\n   */\n\n  local(time) {\n    return time - this.offset;\n  }\n\n  /**\n   * Get the current adjusted time in milliseconds.\n   * @returns {Number} Adjusted Time.\n   */\n\n  ms() {\n    return Date.now() + this.offset * 1000;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction compare(a, b) {\n  return a - b;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = TimeData;\n","/*!\n * network.js - network object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst binary = require('../utils/binary');\nconst networks = require('./networks');\nconst consensus = require('./consensus');\nconst TimeData = require('./timedata');\n\n/**\n * Network\n * Represents a network.\n * @alias module:protocol.Network\n */\n\nclass Network {\n  /**\n   * Create a network.\n   * @constructor\n   * @param {Object} options\n   */\n\n  constructor(options) {\n    assert(!Network[options.type], 'Cannot create two networks.');\n\n    this.type = options.type;\n    this.seeds = options.seeds;\n    this.magic = options.magic;\n    this.port = options.port;\n    this.checkpointMap = options.checkpointMap;\n    this.lastCheckpoint = options.lastCheckpoint;\n    this.checkpoints = [];\n    this.halvingInterval = options.halvingInterval;\n    this.genesis = options.genesis;\n    this.genesisBlock = options.genesisBlock;\n    this.pow = options.pow;\n    this.block = options.block;\n    this.bip30 = options.bip30;\n    this.activationThreshold = options.activationThreshold;\n    this.minerWindow = options.minerWindow;\n    this.deployments = options.deployments;\n    this.deploys = options.deploys;\n    this.unknownBits = ~consensus.VERSION_TOP_MASK;\n    this.keyPrefix = options.keyPrefix;\n    this.addressPrefix = options.addressPrefix;\n    this.requireStandard = options.requireStandard;\n    this.rpcPort = options.rpcPort;\n    this.walletPort = options.walletPort;\n    this.minRelay = options.minRelay;\n    this.feeRate = options.feeRate;\n    this.maxFeeRate = options.maxFeeRate;\n    this.selfConnect = options.selfConnect;\n    this.requestMempool = options.requestMempool;\n    this.time = new TimeData();\n\n    this.init();\n  }\n\n  /**\n   * Get a deployment by bit index.\n   * @param {Number} bit\n   * @returns {Object}\n   */\n\n  init() {\n    let bits = 0;\n\n    for (const deployment of this.deploys)\n      bits |= 1 << deployment.bit;\n\n    bits |= consensus.VERSION_TOP_MASK;\n\n    this.unknownBits = ~bits >>> 0;\n\n    for (const key of Object.keys(this.checkpointMap)) {\n      const hash = this.checkpointMap[key];\n      const height = Number(key);\n\n      this.checkpoints.push({ hash, height });\n    }\n\n    this.checkpoints.sort(cmpNode);\n  }\n\n  /**\n   * Get a deployment by bit index.\n   * @param {Number} bit\n   * @returns {Object}\n   */\n\n  byBit(bit) {\n    const index = binary.search(this.deploys, bit, cmpBit);\n\n    if (index === -1)\n      return null;\n\n    return this.deploys[index];\n  }\n\n  /**\n   * Get network adjusted time.\n   * @returns {Number}\n   */\n\n  now() {\n    return this.time.now();\n  }\n\n  /**\n   * Get network adjusted time in milliseconds.\n   * @returns {Number}\n   */\n\n  ms() {\n    return this.time.ms();\n  }\n\n  /**\n   * Create a network. Get existing network if possible.\n   * @param {NetworkType|Object} options\n   * @returns {Network}\n   */\n\n  static create(options) {\n    if (typeof options === 'string')\n      options = networks[options];\n\n    assert(options, 'Unknown network.');\n\n    if (Network[options.type])\n      return Network[options.type];\n\n    const network = new Network(options);\n\n    Network[network.type] = network;\n\n    if (!Network.primary)\n      Network.primary = network;\n\n    return network;\n  }\n\n  /**\n   * Set the default network. This network will be used\n   * if nothing is passed as the `network` option for\n   * certain objects.\n   * @param {NetworkType} type - Network type.\n   * @returns {Network}\n   */\n\n  static set(type) {\n    assert(typeof type === 'string', 'Bad network.');\n    Network.primary = Network.get(type);\n    Network.type = type;\n    return Network.primary;\n  }\n\n  /**\n   * Get a network with a string or a Network object.\n   * @param {NetworkType|Network} type - Network type.\n   * @returns {Network}\n   */\n\n  static get(type) {\n    if (!type) {\n      assert(Network.primary, 'No default network.');\n      return Network.primary;\n    }\n\n    if (type instanceof Network)\n      return type;\n\n    if (typeof type === 'string')\n      return Network.create(type);\n\n    throw new Error('Unknown network.');\n  }\n\n  /**\n   * Get a network with a string or a Network object.\n   * @param {NetworkType|Network} type - Network type.\n   * @returns {Network}\n   */\n\n  static ensure(type) {\n    if (!type) {\n      assert(Network.primary, 'No default network.');\n      return Network.primary;\n    }\n\n    if (type instanceof Network)\n      return type;\n\n    if (typeof type === 'string') {\n      if (networks[type])\n        return Network.create(type);\n    }\n\n    assert(Network.primary, 'No default network.');\n\n    return Network.primary;\n  }\n\n  /**\n   * Get a network by an associated comparator.\n   * @private\n   * @param {Object} value\n   * @param {Function} compare\n   * @param {Network|null} network\n   * @param {String} name\n   * @returns {Network}\n   */\n\n  static by(value, compare, network, name) {\n    if (network) {\n      network = Network.get(network);\n      if (compare(network, value))\n        return network;\n      throw new Error(`Network mismatch for ${name}.`);\n    }\n\n    for (const type of networks.types) {\n      network = networks[type];\n      if (compare(network, value))\n        return Network.get(type);\n    }\n\n    throw new Error(`Network not found for ${name}.`);\n  }\n\n  /**\n   * Get a network by its magic number.\n   * @param {Number} value\n   * @param {Network?} network\n   * @returns {Network}\n   */\n\n  static fromMagic(value, network) {\n    return Network.by(value, cmpMagic, network, 'magic number');\n  }\n\n  /**\n   * Get a network by its WIF prefix.\n   * @param {Number} value\n   * @param {Network?} network\n   * @returns {Network}\n   */\n\n  static fromWIF(prefix, network) {\n    return Network.by(prefix, cmpWIF, network, 'WIF');\n  }\n\n  /**\n   * Get a network by its xpubkey prefix.\n   * @param {Number} value\n   * @param {Network?} network\n   * @returns {Network}\n   */\n\n  static fromPublic(prefix, network) {\n    return Network.by(prefix, cmpPub, network, 'xpubkey');\n  }\n\n  /**\n   * Get a network by its xprivkey prefix.\n   * @param {Number} value\n   * @param {Network?} network\n   * @returns {Network}\n   */\n\n  static fromPrivate(prefix, network) {\n    return Network.by(prefix, cmpPriv, network, 'xprivkey');\n  }\n\n  /**\n   * Get a network by its xpubkey base58 prefix.\n   * @param {String} prefix\n   * @param {Network?} network\n   * @returns {Network}\n   */\n\n  static fromPublic58(prefix, network) {\n    return Network.by(prefix, cmpPub58, network, 'xpubkey');\n  }\n\n  /**\n   * Get a network by its xprivkey base58 prefix.\n   * @param {String} prefix\n   * @param {Network?} network\n   * @returns {Network}\n   */\n\n  static fromPrivate58(prefix, network) {\n    return Network.by(prefix, cmpPriv58, network, 'xprivkey');\n  }\n\n  /**\n   * Get a network by its base58 address prefix.\n   * @param {Number} value\n   * @param {Network?} network\n   * @returns {Network}\n   */\n\n  static fromAddress(prefix, network) {\n    return Network.by(prefix, cmpAddress, network, 'base58 address');\n  }\n\n  /**\n   * Get a network by its cashaddr address prefix.\n   * @param {String} hrp\n   * @param {Network?} network\n   * @returns {Network}\n   */\n\n  static fromCashAddr(prefix, network) {\n    return Network.by(prefix, cmpCashAddr, network, 'cashaddr address');\n  }\n\n  /**\n   * Convert the network to a string.\n   * @returns {String}\n   */\n\n  toString() {\n    return this.type;\n  }\n\n  /**\n   * Inspect the network.\n   * @returns {String}\n   */\n\n  inspect() {\n    return `<Network: ${this.type}>`;\n  }\n\n  /**\n   * Test an object to see if it is a Network.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isNetwork(obj) {\n    return obj instanceof Network;\n  }\n}\n\n/**\n * Default network.\n * @type {Network}\n */\n\nNetwork.primary = null;\n\n/**\n * Default network type.\n * @type {String}\n */\n\nNetwork.type = null;\n\n/*\n * Networks (to avoid hash table mode).\n */\n\nNetwork.main = null;\nNetwork.testnet = null;\nNetwork.regtest = null;\nNetwork.segnet4 = null;\nNetwork.simnet = null;\n\n/*\n * Set initial network.\n */\n\nNetwork.set(process.env.BCASH_NETWORK || 'main');\n\n/*\n * Helpers\n */\n\nfunction cmpBit(a, b) {\n  return a.bit - b;\n}\n\nfunction cmpNode(a, b) {\n  return a.height - b.height;\n}\n\nfunction cmpMagic(network, magic) {\n  return network.magic === magic;\n}\n\nfunction cmpWIF(network, prefix) {\n  return network.keyPrefix.privkey === prefix;\n}\n\nfunction cmpPub(network, prefix) {\n  return network.keyPrefix.xpubkey === prefix;\n}\n\nfunction cmpPriv(network, prefix) {\n  return network.keyPrefix.xprivkey === prefix;\n}\n\nfunction cmpPub58(network, prefix) {\n  return network.keyPrefix.xpubkey58 === prefix;\n}\n\nfunction cmpPriv58(network, prefix) {\n  return network.keyPrefix.xprivkey58 === prefix;\n}\n\nfunction cmpAddress(network, prefix) {\n  const prefixes = network.addressPrefix;\n\n  switch (prefix) {\n    case prefixes.pubkeyhash:\n    case prefixes.scripthash:\n      return true;\n  }\n\n  return false;\n}\n\nfunction cmpCashAddr(network, prefix) {\n  return network.addressPrefix.cashaddr === prefix;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Network;\n","/*!\n * random.js - random number generator for bcrypto\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://wiki.openssl.org/index.php/Random_Numbers\n *   https://csrc.nist.gov/projects/random-bit-generation/\n *   http://www.pcg-random.org/posts/bounded-rands.html\n *   https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\n\n/*\n * Constants\n */\n\nconst crypto = global.crypto || global.msCrypto;\nconst HAS_CRYPTO = crypto && typeof crypto.getRandomValues === 'function';\nconst randomValues = HAS_CRYPTO ? crypto.getRandomValues.bind(crypto) : null;\nconst pool = new Uint32Array(16);\nconst MAX_BYTES = 65536;\n\nlet poolPos = 0;\n\n/**\n * Generate pseudo-random bytes.\n * @param {Number} size\n * @returns {Buffer}\n */\n\nfunction randomBytes(size) {\n  assert((size >>> 0) === size);\n\n  const data = Buffer.alloc(size);\n\n  randomFillSync(data, 0, size);\n\n  return data;\n}\n\n/**\n * Generate pseudo-random bytes.\n * @param {Buffer} data\n * @param {Number} [off=0]\n * @param {Number} [size=data.length-off]\n * @returns {Buffer}\n */\n\nfunction randomFill(data, off, size) {\n  assert(Buffer.isBuffer(data));\n\n  if (off == null)\n    off = 0;\n\n  assert((off >>> 0) === off);\n\n  if (size == null)\n    size = data.length - off;\n\n  assert((size >>> 0) === size);\n  assert(off + size <= data.length);\n\n  randomFillSync(data, off, size);\n\n  return data;\n}\n\n/**\n * Generate a random uint32.\n * @returns {Number}\n */\n\nfunction randomInt() {\n  if ((poolPos & 15) === 0) {\n    getRandomValues(pool);\n    poolPos = 0;\n  }\n\n  return pool[poolPos++];\n}\n\n/**\n * Generate a random uint32 within a range.\n * @param {Number} min - Inclusive.\n * @param {Number} max - Exclusive.\n * @returns {Number}\n */\n\nfunction randomRange(min, max) {\n  assert((min >>> 0) === min);\n  assert((max >>> 0) === max);\n  assert(max >= min);\n\n  const space = max - min;\n\n  if (space === 0)\n    return min;\n\n  const top = -space >>> 0;\n\n  let x, r;\n\n  do {\n    x = randomInt();\n    r = x % space;\n  } while (x - r > top);\n\n  return r + min;\n}\n\n/*\n * Helpers\n */\n\nfunction getRandomValues(array) {\n  if (!HAS_CRYPTO)\n    throw new Error('Entropy source not available.');\n\n  return randomValues(array);\n}\n\nfunction randomFillSync(data, off, size) {\n  assert(Buffer.isBuffer(data));\n  assert(data.buffer instanceof ArrayBuffer);\n  assert((data.byteOffset >>> 0) === data.byteOffset);\n  assert((data.byteLength >>> 0) === data.byteLength);\n  assert((off >>> 0) === off);\n  assert((size >>> 0) === size);\n  assert(off + size <= data.byteLength);\n\n  if (size > 2 ** 31 - 1)\n    throw new RangeError('The value \"size\" is out of range.');\n\n  const offset = data.byteOffset + off;\n  const array = new Uint8Array(data.buffer, offset, size);\n\n  if (array.length > MAX_BYTES) {\n    for (let i = 0; i < array.length; i += MAX_BYTES) {\n      let j = i + MAX_BYTES;\n\n      if (j > array.length)\n        j = array.length;\n\n      getRandomValues(array.subarray(i, j));\n    }\n  } else {\n    if (array.length > 0)\n      getRandomValues(array);\n  }\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.randomBytes = randomBytes;\nexports.randomFill = randomFill;\nexports.randomInt = randomInt;\nexports.randomRange = randomRange;\n","/*!\n * asn1.js - asn1 parsing for bcrypto\n * Copyright (c) 2020, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst assert = require('assert');\nconst BN = require('../bn');\n\n/*\n * ASN1\n */\n\nfunction readSize(data, pos, strict) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert(typeof strict === 'boolean');\n\n  if (pos >= data.length)\n    throw new Error('Invalid size.');\n\n  const field = data[pos];\n  const bytes = field & 0x7f;\n\n  pos += 1;\n\n  // Definite form.\n  if ((field & 0x80) === 0) {\n    // Short form.\n    return [bytes, pos];\n  }\n\n  // Indefinite form.\n  if (strict && bytes === 0)\n    throw new Error('Indefinite length.');\n\n  // Long form.\n  let size = 0;\n\n  for (let i = 0; i < bytes; i++) {\n    assert(pos < data.length);\n\n    const ch = data[pos];\n\n    pos += 1;\n\n    if (size >= (1 << 24))\n      throw new Error('Length too large.');\n\n    size *= 0x100;\n    size += ch;\n\n    if (strict && size === 0)\n      throw new Error('Unexpected leading zeroes.');\n  }\n\n  if (strict && size < 0x80)\n    throw new Error('Non-minimal length.');\n\n  return [size, pos];\n}\n\nfunction readSeq(data, pos, strict = true) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert(typeof strict === 'boolean');\n\n  if (pos >= data.length || data[pos] !== 0x30)\n    throw new Error('Invalid sequence tag.');\n\n  pos += 1;\n\n  let size;\n  [size, pos] = readSize(data, pos, strict);\n\n  if (strict && pos + size !== data.length)\n    throw new Error('Trailing bytes.');\n\n  return pos;\n}\n\nfunction readInt(data, pos, strict = true) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert(typeof strict === 'boolean');\n\n  if (pos >= data.length || data[pos] !== 0x02)\n    throw new Error('Invalid integer tag.');\n\n  pos += 1;\n\n  let size;\n  [size, pos] = readSize(data, pos, strict);\n\n  if (pos + size > data.length)\n    throw new Error('Integer body out of bounds.');\n\n  if (strict) {\n    // Zero length integer.\n    if (size === 0)\n      throw new Error('Zero length integer.');\n\n    // No negatives.\n    if (data[pos] & 0x80)\n      throw new Error('Integers must be positive.');\n\n    // Allow zero only if it prefixes a high bit.\n    if (size > 1) {\n      if (data[pos] === 0x00 && (data[pos + 1] & 0x80) === 0x00)\n        throw new Error('Unexpected leading zeroes.');\n    }\n  }\n\n  // Eat leading zeroes.\n  while (size > 0 && data[pos] === 0x00) {\n    pos += 1;\n    size -= 1;\n  }\n\n  // No reason to have an integer larger than this.\n  if (size > 2048)\n    throw new Error('Invalid integer size.');\n\n  const num = BN.decode(data.slice(pos, pos + size));\n\n  pos += size;\n\n  return [num, pos];\n}\n\nfunction readVersion(data, pos, version, strict = true) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert((version & 0xff) === version);\n  assert(typeof strict === 'boolean');\n\n  let num;\n  [num, pos] = readInt(data, pos, strict);\n\n  if (num.cmpn(version) !== 0)\n    throw new Error('Invalid version.');\n\n  return pos;\n}\n\nfunction sizeSize(size) {\n  assert((size >>> 0) === size);\n\n  if (size <= 0x7f) // [size]\n    return 1;\n\n  if (size <= 0xff) // 0x81 [size]\n    return 2;\n\n  assert(size <= 0xffff);\n\n  return 3; // 0x82 [size-hi] [size-lo]\n}\n\nfunction sizeSeq(size) {\n  return 1 + sizeSize(size) + size;\n}\n\nfunction sizeInt(num) {\n  assert(num instanceof BN);\n\n  // 0x02 [size] [0x00?] [int]\n  const bits = num.bitLength();\n\n  let size = (bits + 7) >>> 3;\n\n  if (bits > 0 && (bits & 7) === 0)\n    size += num.testn(bits - 1);\n\n  if (bits === 0)\n    size = 1;\n\n  return 1 + sizeSize(size) + size;\n}\n\nfunction sizeVersion(version) {\n  assert((version & 0xff) === version);\n  return 3;\n}\n\nfunction writeSize(data, pos, size) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert((size >>> 0) === size);\n\n  if (size <= 0x7f)  {\n    // [size]\n    data[pos++] = size;\n  } else if (size <= 0xff) {\n    // 0x81 [size]\n    data[pos++] = 0x81;\n    data[pos++] = size;\n  } else {\n    // 0x82 [size-hi] [size-lo]\n    assert(size <= 0xffff);\n    data[pos++] = 0x82;\n    data[pos++] = size >> 8;\n    data[pos++] = size & 0xff;\n  }\n\n  assert(pos <= data.length);\n\n  return pos;\n}\n\nfunction writeSeq(data, pos, size) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n\n  data[pos++] = 0x30;\n\n  return writeSize(data, pos, size);\n}\n\nfunction writeInt(data, pos, num) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert(num instanceof BN);\n\n  // 0x02 [size] [0x00?] [int]\n  const bits = num.bitLength();\n\n  let size = (bits + 7) >>> 3;\n  let pad = 0;\n\n  if (bits > 0 && (bits & 7) === 0)\n    pad = num.testn(bits - 1);\n\n  if (bits === 0)\n    size = 1;\n\n  data[pos++] = 0x02;\n\n  pos = writeSize(data, pos, pad + size);\n\n  if (pad)\n    data[pos++] = 0x00;\n\n  if (bits !== 0)\n    num.encode().copy(data, pos);\n  else\n    data[pos] = 0x00;\n\n  pos += size;\n\n  assert(pos <= data.length);\n\n  return pos;\n}\n\nfunction writeVersion(data, pos, version) {\n  assert(Buffer.isBuffer(data));\n  assert((pos >>> 0) === pos);\n  assert((version & 0xff) === version);\n  assert(pos + 3 <= data.length);\n\n  data[pos++] = 0x02;\n  data[pos++] = 0x01;\n  data[pos++] = version;\n\n  return pos;\n}\n\n/*\n * Expose\n */\n\nexports.readSize = readSize;\nexports.readSeq = readSeq;\nexports.readInt = readInt;\nexports.readVersion = readVersion;\nexports.sizeSize = sizeSize;\nexports.sizeSeq = sizeSeq;\nexports.sizeInt = sizeInt;\nexports.sizeVersion = sizeVersion;\nexports.writeSize = writeSize;\nexports.writeSeq = writeSeq;\nexports.writeInt = writeInt;\nexports.writeVersion = writeVersion;\n","/*!\n * chacha20.js - chacha20 for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources\n *   https://en.wikipedia.org/wiki/Chacha20\n *   https://tools.ietf.org/html/rfc7539#section-2\n *   https://cr.yp.to/chacha.html\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\n\n/*\n * Constants\n */\n\nconst BIG_ENDIAN = new Int8Array(new Int16Array([1]).buffer)[0] === 0;\n\n/**\n * ChaCha20\n */\n\nclass ChaCha20 {\n  /**\n   * Create a ChaCha20 context.\n   * @constructor\n   */\n\n  constructor() {\n    this.state = new Uint32Array(16);\n    this.stream = new Uint32Array(16);\n    this.bytes = new Uint8Array(this.stream.buffer);\n    this.pos = -1;\n\n    if (BIG_ENDIAN)\n      this.bytes = Buffer.alloc(64);\n  }\n\n  /**\n   * Initialize chacha20 with a key, nonce, and counter.\n   * @param {Buffer} key\n   * @param {Buffer} nonce\n   * @param {Number} counter\n   */\n\n  init(key, nonce, counter) {\n    if (counter == null)\n      counter = 0;\n\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(nonce));\n    assert(Number.isSafeInteger(counter));\n\n    if (key.length !== 16 && key.length !== 32)\n      throw new RangeError('Invalid key size.');\n\n    if (nonce.length >= 24) {\n      key = ChaCha20.derive(key, nonce.slice(0, 16));\n      nonce = nonce.slice(16);\n    }\n\n    this.state[0] = 0x61707865;\n    this.state[1] = key.length < 32 ? 0x3120646e : 0x3320646e;\n    this.state[2] = key.length < 32 ? 0x79622d36 : 0x79622d32;\n    this.state[3] = 0x6b206574;\n    this.state[4] = readU32(key, 0);\n    this.state[5] = readU32(key, 4);\n    this.state[6] = readU32(key, 8);\n    this.state[7] = readU32(key, 12);\n    this.state[8] = readU32(key, 16 % key.length);\n    this.state[9] = readU32(key, 20 % key.length);\n    this.state[10] = readU32(key, 24 % key.length);\n    this.state[11] = readU32(key, 28 % key.length);\n    this.state[12] = counter >>> 0;\n\n    if (nonce.length === 8) {\n      this.state[13] = (counter / 0x100000000) >>> 0;\n      this.state[14] = readU32(nonce, 0);\n      this.state[15] = readU32(nonce, 4);\n    } else if (nonce.length === 12) {\n      this.state[13] = readU32(nonce, 0);\n      this.state[14] = readU32(nonce, 4);\n      this.state[15] = readU32(nonce, 8);\n    } else if (nonce.length === 16) {\n      this.state[12] = readU32(nonce, 0);\n      this.state[13] = readU32(nonce, 4);\n      this.state[14] = readU32(nonce, 8);\n      this.state[15] = readU32(nonce, 12);\n    } else {\n      throw new RangeError('Invalid nonce size.');\n    }\n\n    this.pos = 0;\n\n    return this;\n  }\n\n  /**\n   * Encrypt/decrypt data.\n   * @param {Buffer} data - Will be mutated.\n   * @returns {Buffer}\n   */\n\n  encrypt(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.pos === -1)\n      throw new Error('Context is not initialized.');\n\n    for (let i = 0; i < data.length; i++) {\n      if ((this.pos & 63) === 0) {\n        this._block();\n        this.pos = 0;\n      }\n\n      data[i] ^= this.bytes[this.pos++];\n    }\n\n    return data;\n  }\n\n  /**\n   * Stir the stream.\n   */\n\n  _block() {\n    for (let i = 0; i < 16; i++)\n      this.stream[i] = this.state[i];\n\n    for (let i = 0; i < 10; i++) {\n      qround(this.stream, 0, 4, 8, 12);\n      qround(this.stream, 1, 5, 9, 13);\n      qround(this.stream, 2, 6, 10, 14);\n      qround(this.stream, 3, 7, 11, 15);\n      qround(this.stream, 0, 5, 10, 15);\n      qround(this.stream, 1, 6, 11, 12);\n      qround(this.stream, 2, 7, 8, 13);\n      qround(this.stream, 3, 4, 9, 14);\n    }\n\n    for (let i = 0; i < 16; i++)\n      this.stream[i] += this.state[i];\n\n    if (BIG_ENDIAN) {\n      for (let i = 0; i < 16; i++)\n        writeU32(this.bytes, this.stream[i], i * 4);\n    }\n\n    this.state[12] += 1;\n\n    if (this.state[12] === 0)\n      this.state[13] += 1;\n  }\n\n  /**\n   * Destroy context.\n   */\n\n  destroy() {\n    for (let i = 0; i < 16; i++) {\n      this.state[i] = 0;\n      this.stream[i] = 0;\n    }\n\n    if (BIG_ENDIAN) {\n      for (let i = 0; i < 64; i++)\n        this.bytes[i] = 0;\n    }\n\n    this.pos = -1;\n\n    return this;\n  }\n\n  /**\n   * Derive key with XChaCha20.\n   * @param {Buffer} key\n   * @param {Buffer} nonce\n   * @returns {Buffer}\n   */\n\n  static derive(key, nonce) {\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(nonce));\n\n    if (key.length !== 16 && key.length !== 32)\n      throw new RangeError('Invalid key size.');\n\n    if (nonce.length !== 16)\n      throw new RangeError('Invalid nonce size.');\n\n    const state = new Uint32Array(16);\n\n    state[0] = 0x61707865;\n    state[1] = key.length < 32 ? 0x3120646e : 0x3320646e;\n    state[2] = key.length < 32 ? 0x79622d36 : 0x79622d32;\n    state[3] = 0x6b206574;\n    state[4] = readU32(key, 0);\n    state[5] = readU32(key, 4);\n    state[6] = readU32(key, 8);\n    state[7] = readU32(key, 12);\n    state[8] = readU32(key, 16 % key.length);\n    state[9] = readU32(key, 20 % key.length);\n    state[10] = readU32(key, 24 % key.length);\n    state[11] = readU32(key, 28 % key.length);\n    state[12] = readU32(nonce, 0);\n    state[13] = readU32(nonce, 4);\n    state[14] = readU32(nonce, 8);\n    state[15] = readU32(nonce, 12);\n\n    for (let i = 0; i < 10; i++) {\n      qround(state, 0, 4, 8, 12);\n      qround(state, 1, 5, 9, 13);\n      qround(state, 2, 6, 10, 14);\n      qround(state, 3, 7, 11, 15);\n      qround(state, 0, 5, 10, 15);\n      qround(state, 1, 6, 11, 12);\n      qround(state, 2, 7, 8, 13);\n      qround(state, 3, 4, 9, 14);\n    }\n\n    const out = Buffer.alloc(32);\n\n    writeU32(out, state[0], 0);\n    writeU32(out, state[1], 4);\n    writeU32(out, state[2], 8);\n    writeU32(out, state[3], 12);\n    writeU32(out, state[12], 16);\n    writeU32(out, state[13], 20);\n    writeU32(out, state[14], 24);\n    writeU32(out, state[15], 28);\n\n    return out;\n  }\n}\n\n/*\n * Static\n */\n\nChaCha20.native = 0;\n\n/*\n * Helpers\n */\n\nfunction qround(x, a, b, c, d) {\n  x[a] += x[b];\n  x[d] = rotl32(x[d] ^ x[a], 16);\n\n  x[c] += x[d];\n  x[b] = rotl32(x[b] ^ x[c], 12);\n\n  x[a] += x[b];\n  x[d] = rotl32(x[d] ^ x[a], 8);\n\n  x[c] += x[d];\n  x[b] = rotl32(x[b] ^ x[c], 7);\n}\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = ChaCha20;","/*!\n * batch-rng.js - batch rng for bcrypto\n * Copyright (c) 2019-2020, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on ElementsProject/secp256k1-zkp:\n *   Copyright (c) 2013, Pieter Wuille.\n *   https://github.com/ElementsProject/secp256k1-zkp\n *\n * Resources:\n *   https://github.com/ElementsProject/secp256k1-zkp/blob/11af701/src/modules/schnorrsig/main_impl.h#L166\n *   https://github.com/ElementsProject/secp256k1-zkp/blob/11af701/src/scalar_4x64_impl.h#L972\n *   https://github.com/ElementsProject/secp256k1-zkp/blob/11af701/src/scalar_8x32_impl.h#L747\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst BN = require('./bn');\nconst ChaCha20 = require('./chacha20');\nconst SHA256 = require('./sha256');\n\n/**\n * BatchRNG\n */\n\nclass BatchRNG {\n  constructor(curve, encode = key => key) {\n    this.curve = curve;\n    this.encode = encode;\n    this.hash = new SHA256();\n    this.chacha = new ChaCha20();\n    this.key = Buffer.alloc(32, 0x00);\n    this.iv = Buffer.alloc(8, 0x00);\n    this.cache = [new BN(1), new BN(1)];\n  }\n\n  init(batch) {\n    assert(Array.isArray(batch));\n\n    this.hash.init();\n\n    for (const [msg, sig, key] of batch) {\n      this.hash.update(SHA256.digest(msg));\n      this.hash.update(sig);\n      this.hash.update(this.encode(key));\n    }\n\n    this.key = this.hash.final();\n    this.cache[0] = new BN(1);\n    this.cache[1] = new BN(1);\n\n    return this;\n  }\n\n  encrypt(counter) {\n    const size = this.curve.scalarSize * 2;\n    const data = Buffer.alloc(size, 0x00);\n    const left = data.slice(0, this.curve.scalarSize);\n    const right = data.slice(this.curve.scalarSize);\n\n    this.chacha.init(this.key, this.iv, counter);\n    this.chacha.encrypt(data);\n\n    return [\n      this.curve.decodeScalar(left),\n      this.curve.decodeScalar(right)\n    ];\n  }\n\n  refresh(counter) {\n    let overflow = 0;\n\n    for (;;) {\n      // First word is always zero.\n      this.iv[4] = overflow;\n      this.iv[5] = overflow >>> 8;\n      this.iv[6] = overflow >>> 16;\n      this.iv[7] = overflow >>> 24;\n\n      overflow += 1;\n\n      const [s1, s2] = this.encrypt(counter);\n\n      if (s1.isZero() || s1.cmp(this.curve.n) >= 0)\n        continue;\n\n      if (s2.isZero() || s2.cmp(this.curve.n) >= 0)\n        continue;\n\n      this.cache[0] = s1;\n      this.cache[1] = s2;\n\n      break;\n    }\n  }\n\n  generate(index) {\n    assert((index >>> 0) === index);\n\n    if (index & 1)\n      this.refresh(index >>> 1);\n\n    return this.cache[index & 1];\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = BatchRNG;","/*!\n * schnorr-legacy.js - bip-schnorr for bcrypto\n * Copyright (c) 2019-2020, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on sipa/bip-schnorr:\n *   Copyright (c) 2018-2019, Pieter Wuille (2-clause BSD License).\n *   https://github.com/sipa/bips/blob/d194620/bip-schnorr/reference.py\n *\n * Parts of this software are based on ElementsProject/secp256k1-zkp:\n *   Copyright (c) 2013, Pieter Wuille.\n *   https://github.com/ElementsProject/secp256k1-zkp\n *\n * Resources:\n *   https://github.com/sipa/bips/blob/d194620/bip-schnorr.mediawiki\n *   https://github.com/sipa/bips/blob/d194620/bip-schnorr/reference.py\n *   https://github.com/sipa/bips/blob/d194620/bip-schnorr/test-vectors.csv\n *   https://github.com/ElementsProject/secp256k1-zkp/tree/11af701/src/modules/schnorrsig\n *   https://github.com/bitcoincashorg/bitcoincash.org/blob/master/spec/2019-05-15-schnorr.md\n *\n * References:\n *\n *   [SCHNORR] Schnorr Signatures for secp256k1\n *     Pieter Wuille\n *     https://github.com/sipa/bips/blob/d194620/bip-schnorr.mediawiki\n *\n *   [CASH] Schnorr Signature specification\n *     Mark B. Lundeberg\n *     https://github.com/bitcoincashorg/bitcoincash.org/blob/master/spec/2019-05-15-schnorr.md\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst BatchRNG = require('./batch-rng');\nconst BN = require('./bn');\n\n/**\n * Schnorr\n */\n\nclass Schnorr {\n  constructor(curve, hash) {\n    this.curve = curve;\n    this.hash = hash;\n    this.rng = new BatchRNG(this.curve, this.encode.bind(this));\n  }\n\n  check() {\n    // [SCHNORR] \"Footnotes\".\n    // Must be congruent to 3 mod 4.\n    if (this.curve.p.andln(3) !== 3)\n      throw new Error(`Schnorr is not supported for ${this.curve.id}.`);\n  }\n\n  encode(key) {\n    // Extra speedy key reserialization.\n    assert(Buffer.isBuffer(key));\n\n    const {fieldSize} = this.curve;\n\n    if (key.length === 1 + fieldSize)\n      return key;\n\n    if (key.length !== 1 + fieldSize * 2)\n      throw new Error('Invalid point.');\n\n    const out = Buffer.alloc(1 + fieldSize);\n\n    out[0] = 0x02 | (key[key.length - 1] & 1);\n    key.copy(out, 1, 1, 1 + fieldSize);\n\n    return out;\n  }\n\n  hashInt(...items) {\n    // [SCHNORR] \"Specification\".\n    // eslint-disable-next-line\n    const h = new this.hash();\n\n    h.init();\n\n    for (const item of items)\n      h.update(item);\n\n    let hash = h.final(this.curve.scalarSize);\n\n    if (hash.length > this.curve.scalarSize)\n      hash = hash.slice(0, this.curve.scalarSize);\n\n    const num = BN.decode(hash, this.curve.endian);\n\n    num.iumaskn(this.curve.scalarBits);\n\n    return num.imod(this.curve.n);\n  }\n\n  hashNonce(a, m) {\n    return this.hashInt(a, m);\n  }\n\n  hashChallenge(R, A, m) {\n    return this.hashInt(R, this.encode(A), m);\n  }\n\n  sign(msg, key) {\n    assert(Buffer.isBuffer(msg));\n\n    this.check();\n\n    return this._sign(msg, key);\n  }\n\n  _sign(msg, key) {\n    // Schnorr Signing.\n    //\n    // [SCHNORR] \"Signing\".\n    // [CASH] \"Recommended practices for secure signature generation\".\n    //\n    // Assumptions:\n    //\n    //   - Let `H` be a cryptographic hash function.\n    //   - Let `m` be a 32-byte array.\n    //   - Let `a` be a secret non-zero scalar.\n    //   - k != 0.\n    //\n    // Computation:\n    //\n    //   A = G * a\n    //   k = H(a, m) mod n\n    //   R = G * k\n    //   k = -k mod n, if y(R) is not square\n    //   r = x(R)\n    //   e = H(r, A, m) mod n\n    //   s = (k + e * a) mod n\n    //   S = (r, s)\n    //\n    // Note that `k` must remain secret,\n    // otherwise an attacker can compute:\n    //\n    //   a = (s - k) / e mod n\n    const {n} = this.curve;\n    const G = this.curve.g;\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const A = G.mulBlind(a);\n    const k = this.hashNonce(key, msg);\n\n    if (k.isZero())\n      throw new Error('Signing failed (k\\' = 0).');\n\n    const R = G.mulBlind(k);\n\n    if (!R.isSquare())\n      k.ineg().imod(n);\n\n    const Rraw = R.encodeX();\n    const Araw = A.encode();\n    const e = this.hashChallenge(Rraw, Araw, msg);\n    const s = k.add(e.mul(a)).imod(n);\n\n    return Buffer.concat([Rraw, this.curve.encodeScalar(s)]);\n  }\n\n  verify(msg, sig, key) {\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(sig));\n    assert(Buffer.isBuffer(key));\n\n    this.check();\n\n    if (sig.length !== this.curve.fieldSize + this.curve.scalarSize)\n      return false;\n\n    try {\n      return this._verify(msg, sig, key);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  _verify(msg, sig, key) {\n    // Schnorr Verification.\n    //\n    // [SCHNORR] \"Verification\".\n    // [CASH] \"Signature verification algorithm\".\n    //\n    // Assumptions:\n    //\n    //   - Let `H` be a cryptographic hash function.\n    //   - Let `m` be a 32-byte array.\n    //   - Let `r` and `s` be signature elements.\n    //   - Let `A` be a valid group element.\n    //   - r^3 + a * r + b is square in F(p).\n    //   - sqrt(r^3 + a * r + b) is square in F(p).\n    //   - r < p, s < n.\n    //   - R != O.\n    //\n    // Computation:\n    //\n    //   R = (r, sqrt(r^3 + a * r + b))\n    //   e = H(r, A, m) mod n\n    //   R == G * s - A * e\n    //\n    // We can skip a square root with:\n    //\n    //   e = H(r, A, m) mod n\n    //   R = G * s - A * e\n    //   y(R) is square\n    //   x(R) == r\n    //\n    // We can also avoid affinization by\n    // replacing the two assertions with:\n    //\n    //   (y(R) * z(R) mod p) is square\n    //   x(R) == r * z(R)^2 mod p\n    //\n    // Furthermore, squareness can be calculated\n    // with a variable time Jacobi symbol algorithm.\n    const {p, n} = this.curve;\n    const G = this.curve.g;\n    const Rraw = sig.slice(0, this.curve.fieldSize);\n    const sraw = sig.slice(this.curve.fieldSize);\n    const r = this.curve.decodeField(Rraw);\n    const s = this.curve.decodeScalar(sraw);\n    const A = this.curve.decodePoint(key);\n\n    if (r.cmp(p) >= 0 || s.cmp(n) >= 0)\n      return false;\n\n    const e = this.hashChallenge(Rraw, key, msg);\n    const R = G.jmulAdd(s, A, e.ineg().imod(n));\n\n    if (!R.isSquare())\n      return false;\n\n    if (!R.eqX(r))\n      return false;\n\n    return true;\n  }\n\n  verifyBatch(batch) {\n    assert(Array.isArray(batch));\n\n    this.check();\n\n    for (const item of batch) {\n      assert(Array.isArray(item) && item.length === 3);\n\n      const [msg, sig, key] = item;\n\n      assert(Buffer.isBuffer(msg));\n      assert(Buffer.isBuffer(sig));\n      assert(Buffer.isBuffer(key));\n\n      if (sig.length !== this.curve.fieldSize + this.curve.scalarSize)\n        return false;\n    }\n\n    try {\n      return this._verifyBatch(batch);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  _verifyBatch(batch) {\n    // Schnorr Batch Verification.\n    //\n    // [SCHNORR] \"Batch Verification\".\n    //\n    // Assumptions:\n    //\n    //   - Let `H` be a cryptographic hash function.\n    //   - Let `m` be a 32-byte array.\n    //   - Let `r` and `s` be signature elements.\n    //   - Let `A` be a valid group element.\n    //   - Let `i` be the batch item index.\n    //   - r^3 + a * r + b is square in F(p).\n    //   - sqrt(r^3 + a * r + b) is square in F(p).\n    //   - r < p, s < n.\n    //   - a1 = 1 mod n.\n    //\n    // Computation:\n    //\n    //   Ri = (ri, sqrt(ri^3 + a * ri + b))\n    //   ei = H(ri, Ai, mi) mod n\n    //   ai = random integer in [1,n-1]\n    //   lhs = si * ai + ... mod n\n    //   rhs = Ri * ai + Ai * (ei * ai mod n) + ...\n    //   G * -lhs + rhs == O\n    const {n} = this.curve;\n    const G = this.curve.g;\n    const points = new Array(1 + batch.length * 2);\n    const coeffs = new Array(1 + batch.length * 2);\n    const sum = new BN(0);\n\n    this.rng.init(batch);\n\n    points[0] = G;\n    coeffs[0] = sum;\n\n    for (let i = 0; i < batch.length; i++) {\n      const [msg, sig, key] = batch[i];\n      const Rraw = sig.slice(0, this.curve.fieldSize);\n      const sraw = sig.slice(this.curve.fieldSize);\n      const R = this.curve.decodeSquare(Rraw);\n      const s = this.curve.decodeScalar(sraw);\n      const A = this.curve.decodePoint(key);\n\n      if (s.cmp(n) >= 0)\n        return false;\n\n      const e = this.hashChallenge(Rraw, key, msg);\n      const a = this.rng.generate(i);\n      const ea = e.mul(a).imod(n);\n\n      sum.iadd(s.mul(a)).imod(n);\n\n      points[1 + i * 2 + 0] = R;\n      coeffs[1 + i * 2 + 0] = a;\n      points[1 + i * 2 + 1] = A;\n      coeffs[1 + i * 2 + 1] = ea;\n    }\n\n    sum.ineg().imod(n);\n\n    return this.curve.jmulAll(points, coeffs).isInfinity();\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Schnorr;","/*!\n * hmac-drbg.js - hmac-drbg implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hmac-drbg:\n *   Copyright Fedor Indutny, 2017.\n *   https://github.com/indutny/hmac-drbg\n *\n * Resources:\n *   https://tools.ietf.org/html/rfc6979\n *   https://csrc.nist.gov/publications/detail/sp/800-90a/archive/2012-01-23\n *   https://github.com/indutny/hmac-drbg/blob/master/lib/hmac-drbg.js\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\n\n/*\n * Constants\n */\n\nconst RESEED_INTERVAL = 0x1000000000000;\nconst ZERO = Buffer.from([0x00]);\nconst ONE = Buffer.from([0x01]);\n\n/**\n * HmacDRBG\n */\n\nclass HmacDRBG {\n  constructor(hash, entropy, nonce, pers) {\n    assert(hash && typeof hash.id === 'string');\n\n    this.hash = hash;\n    this.minEntropy = hash.id === 'SHA1' ? 10 : 24;\n\n    this.K = Buffer.alloc(hash.size);\n    this.V = Buffer.alloc(hash.size);\n    this.rounds = 0;\n\n    if (entropy)\n      this.init(entropy, nonce, pers);\n  }\n\n  init(entropy, nonce, pers) {\n    if (nonce == null)\n      nonce = Buffer.alloc(0);\n\n    if (pers == null)\n      pers = Buffer.alloc(0);\n\n    assert(Buffer.isBuffer(entropy));\n    assert(Buffer.isBuffer(nonce));\n    assert(Buffer.isBuffer(pers));\n\n    for (let i = 0; i < this.V.length; i++) {\n      this.K[i] = 0x00;\n      this.V[i] = 0x01;\n    }\n\n    const seed = Buffer.concat([entropy, nonce, pers]);\n\n    if (seed.length < this.minEntropy)\n      throw new Error('Not enough entropy.');\n\n    this.update(seed);\n    this.rounds = 1;\n\n    return this;\n  }\n\n  reseed(entropy, add) {\n    if (add == null)\n      add = Buffer.alloc(0);\n\n    assert(Buffer.isBuffer(entropy));\n    assert(Buffer.isBuffer(add));\n\n    if (this.rounds === 0)\n      throw new Error('DRBG not initialized.');\n\n    const seed = Buffer.concat([entropy, add]);\n\n    if (seed.length < this.minEntropy)\n     throw new Error('Not enough entropy.');\n\n    this.update(seed);\n    this.rounds = 1;\n\n    return this;\n  }\n\n  generate(len, add) {\n    assert((len >>> 0) === len);\n    assert(add == null || Buffer.isBuffer(add));\n\n    if (this.rounds === 0)\n      throw new Error('DRBG not initialized.');\n\n    if (this.rounds > RESEED_INTERVAL)\n      throw new Error('Reseed is required.');\n\n    if (add && add.length > 0)\n      this.update(add);\n\n    const blocks = Math.ceil(len / this.hash.size);\n    const out = Buffer.alloc(blocks * this.hash.size);\n\n    for (let i = 0; i < blocks; i++) {\n      this.V = this.mac(this.V);\n      this.V.copy(out, i * this.hash.size);\n    }\n\n    this.update(add);\n    this.rounds += 1;\n\n    return out.slice(0, len);\n  }\n\n  randomBytes(size) {\n    return this.generate(size);\n  }\n\n  /*\n   * Helpers\n   */\n\n  mac(data) {\n    return this.hash.mac(data, this.K);\n  }\n\n  hmac() {\n    return this.hash.hmac().init(this.K);\n  }\n\n  update(seed) {\n    assert(seed == null || Buffer.isBuffer(seed));\n\n    const kmac = this.hmac();\n\n    kmac.update(this.V);\n    kmac.update(ZERO);\n\n    if (seed)\n      kmac.update(seed);\n\n    this.K = kmac.final();\n    this.V = this.mac(this.V);\n\n    if (seed && seed.length > 0) {\n      const kmac = this.hmac();\n\n      kmac.update(this.V);\n      kmac.update(ONE);\n      kmac.update(seed);\n\n      this.K = kmac.final();\n      this.V = this.mac(this.V);\n    }\n\n    return this;\n  }\n}\n\n/*\n * Static\n */\n\nHmacDRBG.native = 0;\n\n/*\n * Expose\n */\n\nmodule.exports = HmacDRBG;","/*!\n * elliptic.js - elliptic curves for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/elliptic:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/elliptic\n *\n * Formulas from DJB and Tanja Lange [EFD].\n *\n * References:\n *\n *   [GECC] Guide to Elliptic Curve Cryptography\n *     D. Hankerson, A. Menezes, and S. Vanstone\n *     https://tinyurl.com/guide-to-ecc\n *\n *   [GLV] Faster Point Multiplication on Elliptic Curves\n *     R. Gallant, R. Lambert, and S. Vanstone\n *     https://link.springer.com/content/pdf/10.1007/3-540-44647-8_11.pdf\n *\n *   [MONT1] Montgomery curves and the Montgomery ladder\n *     Daniel J. Bernstein, Tanja Lange\n *     https://eprint.iacr.org/2017/293.pdf\n *\n *   [SQUARED] Elligator Squared\n *     Mehdi Tibouchi\n *     https://eprint.iacr.org/2014/043.pdf\n *\n *   [SEC1] SEC 1 - Standards for Efficient Cryptography Group\n *     Certicom Research\n *     https://www.secg.org/sec1-v2.pdf\n *\n *   [SEC2] SEC 2: Recommended Elliptic Curve Domain Parameters\n *     Certicom Research\n *     https://www.secg.org/sec2-v2.pdf\n *\n *   [SIDE1] Elliptic Curves and Side-Channel Attacks\n *     Marc Joye\n *     https://pdfs.semanticscholar.org/8d69/9645033e25d74fcfd4cbf07a770d2e943e14.pdf\n *\n *   [BLIND] Side-Channel Analysis on Blinding Regular Scalar Multiplications\n *     B. Feix, M. Roussellet, A. Venelli\n *     https://eprint.iacr.org/2014/191.pdf\n *\n *   [ALT] Alternative Elliptic Curve Representations\n *     R. Struik\n *     https://tools.ietf.org/id/draft-ietf-lwig-curve-representations-02.html\n *\n *   [ARITH1] Arithmetic of Elliptic Curves\n *     Christophe Doche, Tanja Lange\n *     Handbook of Elliptic and Hyperelliptic Curve Cryptography\n *     Page 267, Section 13 (978-1-58488-518-4)\n *     https://hyperelliptic.org/HEHCC/index.html\n *\n *   [ARITH2] The Arithmetic of Elliptic Curves, 2nd Edition\n *     Joseph H. Silverman\n *     http://www.pdmi.ras.ru/~lowdimma/BSD/Silverman-Arithmetic_of_EC.pdf\n *\n *   [EFD] Explicit-Formulas Database\n *     Daniel J. Bernstein, Tanja Lange\n *     https://hyperelliptic.org/EFD/index.html\n *\n *   [SAFE] SafeCurves: choosing safe curves for elliptic-curve cryptography\n *     Daniel J. Bernstein\n *     https://safecurves.cr.yp.to/\n *\n *   [4GLV] Refinement of the Four-Dimensional GLV Method on Elliptic Curves\n *     Hairong Yi, Yuqing Zhu, and Dongdai Lin\n *     http://www.site.uottawa.ca/~cadams/papers/prepro/paper_19_slides.pdf\n *\n *   [SSWU1] Efficient Indifferentiable Hashing into Ordinary Elliptic Curves\n *     E. Brier, J. Coron, T. Icart, D. Madore, H. Randriam, M. Tibouchi\n *     https://eprint.iacr.org/2009/340.pdf\n *\n *   [SSWU2] Rational points on certain hyperelliptic curves over finite fields\n *     Maciej Ulas\n *     https://arxiv.org/abs/0706.1448\n *\n *   [H2EC] Hashing to Elliptic Curves\n *     A. Faz-Hernandez, S. Scott, N. Sullivan, R. S. Wahby, C. A. Wood\n *     https://git.io/JeWz6\n *     https://github.com/cfrg/draft-irtf-cfrg-hash-to-curve\n *\n *   [SVDW1] Construction of Rational Points on Elliptic Curves\n *     A. Shallue, C. E. van de Woestijne\n *     https://works.bepress.com/andrew_shallue/1/download/\n *\n *   [SVDW2] Indifferentiable Hashing to Barreto-Naehrig Curves\n *     Pierre-Alain Fouque, Mehdi Tibouchi\n *     https://www.di.ens.fr/~fouque/pub/latincrypt12.pdf\n *\n *   [SVDW3] Covert ECDH over secp256k1\n *     Pieter Wuille\n *     https://gist.github.com/sipa/29118d3fcfac69f9930d57433316c039\n *\n *   [MONT2] Montgomery Curve (wikipedia)\n *     https://en.wikipedia.org/wiki/Montgomery_curve\n *\n *   [MONT3] Montgomery Curves and their arithmetic\n *     C. Costello, B. Smith\n *     https://eprint.iacr.org/2017/212.pdf\n *\n *   [ELL2] Elliptic-curve points indistinguishable from uniform random strings\n *     D. Bernstein, M. Hamburg, A. Krasnova, T. Lange\n *     https://elligator.cr.yp.to/elligator-20130828.pdf\n *\n *   [RFC7748] Elliptic Curves for Security\n *     A. Langley, M. Hamburg, S. Turner\n *     https://tools.ietf.org/html/rfc7748\n *\n *   [TWISTED] Twisted Edwards Curves\n *     D. Bernstein, P. Birkner, M. Joye, T. Lange, C. Peters\n *     https://eprint.iacr.org/2008/013.pdf\n *\n *   [ELL1] Injective Encodings to Elliptic Curves\n *     P. Fouque, A. Joux, M. Tibouchi\n *     https://eprint.iacr.org/2013/373.pdf\n *\n *   [ISOGENY] Twisting Edwards curves with isogenies\n *     Mike Hamburg\n *     https://www.shiftleft.org/papers/isogeny/isogeny.pdf\n *\n *   [RFC8032] Edwards-Curve Digital Signature Algorithm (EdDSA)\n *     S. Josefsson, SJD AB, I. Liusvaara\n *     https://tools.ietf.org/html/rfc8032\n *\n *   [SCHNORR] Schnorr Signatures for secp256k1\n *     Pieter Wuille\n *     https://github.com/sipa/bips/blob/d194620/bip-schnorr.mediawiki\n *\n *   [BIP340] Schnorr Signatures for secp256k1\n *     Pieter Wuille, Jonas Nick, Tim Ruffing\n *     https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n *\n *   [JCEN12] Efficient Software Implementation of Public-Key Cryptography\n *            on Sensor Networks Using the MSP430X Microcontroller\n *     C. P. L. Gouvea, L. B. Oliveira, J. Lopez\n *     http://conradoplg.cryptoland.net/files/2010/12/jcen12.pdf\n *\n *   [FIPS186] Federal Information Processing Standards Publication\n *     National Institute of Standards and Technology\n *     https://tinyurl.com/fips-186-3\n *\n *   [RFC5639] Elliptic Curve Cryptography (ECC) Brainpool\n *             Standard Curves and Curve Generation\n *     M. Lochter, BSI, J. Merkle\n *     https://tools.ietf.org/html/rfc5639\n *\n *   [TWISTEQ] Twisted Edwards & Short Weierstrass Equivalence\n *     Christopher Jeffrey\n *     https://gist.github.com/chjj/16ba7fa08d64e8dda269a9fe5b2a8bbc\n *\n *   [ECPM] Elliptic Curve Point Multiplication (wikipedia)\n *     https://en.wikipedia.org/wiki/Elliptic_curve_point_multiplication\n */\n\n'use strict';\n\nconst {custom} = require('./internal/custom');\nconst BN = require('./bn');\n\n/*\n * Constants\n */\n\nconst types = {\n  AFFINE: 0,\n  JACOBIAN: 1,\n  PROJECTIVE: 2,\n  EXTENDED: 3\n};\n\nconst jsfIndex = [\n  -3, // -1 -1\n  -1, // -1 0\n  -5, // -1 1\n  -7, // 0 -1\n  0, // 0 0\n  7, // 0 1\n  5, // 1 -1\n  1, // 1 0\n  3  // 1 1\n];\n\nconst USE_FIXED = false;\n\nlet uid = 0;\n\n/**\n * Curve\n */\n\nclass Curve {\n  constructor(Point, type, conf) {\n    this.Point = null;\n    this.id = null;\n    this.uid = uid++;\n    this.ossl = null;\n    this.type = 'base';\n    this.endian = 'be';\n    this.hash = null;\n    this.prefix = null;\n    this.context = false;\n    this.prime = null;\n    this.p = null;\n    this.red = null;\n    this.fieldSize = 0;\n    this.fieldBits = 0;\n    this.adjustedSize = 0;\n    this.signBit = 0;\n    this.mask = 0;\n    this.n = null;\n    this.h = null;\n    this.q = null;\n    this.z = null;\n    this.g = null;\n    this.nh = null;\n    this.scalarSize = 0;\n    this.scalarBits = 0;\n    this.zero = null;\n    this.one = null;\n    this.two = null;\n    this.three = null;\n    this.four = null;\n    this.i2 = null;\n    this.i3 = null;\n    this.i4 = null;\n    this.i6 = null;\n    this.torsion = null;\n    this.endo = null;\n    this.hi = null;\n    this._init(Point, type, conf);\n  }\n\n  _init(Point, type, conf) {\n    assert(typeof Point === 'function');\n    assert(typeof type === 'string');\n    assert(conf && typeof conf === 'object');\n    assert(conf.red == null || (conf.red instanceof BN.Red));\n    assert(conf.p != null, 'Must pass a prime.');\n    assert(conf.id == null || typeof conf.id === 'string');\n    assert(conf.ossl == null || typeof conf.ossl === 'string');\n    assert(conf.endian == null || typeof conf.endian === 'string');\n    assert(conf.hash == null || typeof conf.hash === 'string');\n    assert(conf.prefix == null || typeof conf.prefix === 'string');\n    assert(conf.context == null || typeof conf.context === 'boolean');\n    assert(conf.prime == null || typeof conf.prime === 'string');\n    assert(conf.torsion == null || Array.isArray(conf.torsion));\n\n    // Point class.\n    this.Point = Point;\n\n    // Meta.\n    this.id = conf.id || null;\n    this.ossl = conf.ossl || null;\n    this.type = type;\n    this.endian = conf.endian || (type === 'short' ? 'be' : 'le');\n    this.hash = conf.hash || null;\n    this.prefix = conf.prefix ? Buffer.from(conf.prefix, 'binary') : null;\n    this.context = conf.context || false;\n    this.prime = conf.prime || null;\n\n    // Prime.\n    this.p = BN.fromJSON(conf.p);\n\n    // Reduction.\n    if (conf.red) {\n      this.red = conf.red;\n    } else {\n      // Use Montgomery when there is no fast reduction for the prime.\n      this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n      this.red.precompute();\n    }\n\n    // Precalculate encoding length.\n    this.fieldSize = this.p.byteLength();\n    this.fieldBits = this.p.bitLength();\n    this.adjustedSize = this.fieldSize + ((this.fieldBits & 7) === 0);\n    this.signBit = this.adjustedSize * 8 - 1;\n    this.mask = 0xff;\n\n    if ((this.fieldBits & 7) !== 0)\n      this.mask = (1 << (this.fieldBits & 7)) - 1;\n\n    // Curve configuration, optional.\n    this.n = BN.fromJSON(conf.n || '0');\n    this.h = BN.fromJSON(conf.h || '1');\n    this.q = this.n.mul(this.h);\n    this.z = BN.fromJSON(conf.z || '0').toRed(this.red);\n    this.g = null;\n    this.nh = this.n.ushrn(1);\n    this.scalarSize = this.n.byteLength();\n    this.scalarBits = this.n.bitLength();\n\n    // Useful for many curves.\n    this.zero = new BN(0).toRed(this.red);\n    this.one = new BN(1).toRed(this.red);\n    this.two = new BN(2).toRed(this.red);\n    this.three = new BN(3).toRed(this.red);\n    this.four = new BN(4).toRed(this.red);\n\n    // Inverses.\n    this.i2 = this.two.redInvert();\n    this.i3 = this.three.redInvert();\n    this.i4 = this.i2.redSqr();\n    this.i6 = this.i2.redMul(this.i3);\n\n    // Torsion.\n    this.torsion = new Array(this.h.word(0));\n\n    for (let i = 0; i < this.torsion.length; i++)\n      this.torsion[i] = this.point();\n\n    // Endomorphism.\n    this.endo = null;\n\n    // Cache.\n    this.hi = null;\n\n    // Memoize.\n    this._scale = memoize(this._scale, this);\n    this.isIsomorphic = memoize(this.isIsomorphic, this);\n    this.isIsogenous = memoize(this.isIsogenous, this);\n\n    // Sanity checks.\n    assert(this.p.sign() > 0 && this.p.isOdd());\n    assert(this.n.sign() >= 0);\n    assert(this.h.sign() > 0 && this.h.cmpn(255) <= 0);\n    assert(this.endian === 'be' || this.endian === 'le');\n\n    return this;\n  }\n\n  _finalize(conf) {\n    assert(conf && typeof conf === 'object');\n\n    // Create base point.\n    this.g = conf.g ? this.pointFromJSON(conf.g) : this.point();\n\n    // Parse small order points.\n    if (conf.torsion) {\n      assert(conf.torsion.length === this.torsion.length);\n\n      for (let i = 0; i < this.torsion.length; i++)\n        this.torsion[i] = this.pointFromJSON(conf.torsion[i]);\n    }\n\n    return this;\n  }\n\n  _findTorsion() {\n    // Find all torsion points by grinding.\n    assert(!this.n.isZero());\n\n    const h = this.h.word(0);\n    const x = this.one.redNeg();\n    const out = [this.point()];\n    const set = new Set();\n\n    let len = h;\n\n    while (out.length < len) {\n      let p;\n\n      x.redIAdd(this.one);\n\n      try {\n        p = this.pointFromX(x.clone());\n      } catch (e) {\n        continue;\n      }\n\n      try {\n        p = p.mul(this.n);\n      } catch (e) {\n        len = 2;\n        continue;\n      }\n\n      if (p.isInfinity())\n        continue;\n\n      p.normalize();\n\n      for (const point of [p, p.neg()]) {\n        const key = point.key();\n\n        if (!set.has(key)) {\n          out.push(point);\n          set.add(key);\n        }\n      }\n    }\n\n    out.sort((a, b) => a.cmp(b));\n\n    while (out.length < h)\n      out.push(this.point());\n\n    return out;\n  }\n\n  _fixedMul(p, k) {\n    // Fixed-base method for point multiplication.\n    //\n    // [ECPM] \"Windowed method\".\n    // [GECC] Page 95, Section 3.3.\n    //\n    // Windows are appropriately shifted to avoid any\n    // doublings. This reduces a 256 bit multiplication\n    // down to 64 additions with a window size of 4.\n    assert(p instanceof Point);\n    assert(k instanceof BN);\n    assert(p.pre && p.pre.windows);\n\n    // Get precomputed windows.\n    const {width, points} = p._getWindows(0, 0);\n\n    // Recompute window size.\n    const size = 1 << width;\n\n    // Recompute steps.\n    const bits = k.bitLength();\n    const steps = ((bits + width - 1) / width) >>> 0;\n\n    // Multiply.\n    let acc = this.jpoint();\n\n    for (let i = 0; i < steps; i++) {\n      const bits = k.bits(i * width, width);\n\n      acc = acc.add(points[i * size + bits]);\n    }\n\n    // Adjust sign.\n    if (k.isNeg())\n      acc = acc.neg();\n\n    return acc;\n  }\n\n  _fixedNafMul(p, k) {\n    // Fixed-base NAF windowing method for point multiplication.\n    //\n    // [GECC] Algorithm 3.42, Page 105, Section 3.3.\n    assert(p instanceof Point);\n    assert(k instanceof BN);\n    assert(p.pre && p.pre.doubles);\n\n    // Get precomputed doubles.\n    const {step, points} = p._getDoubles(0, 0);\n\n    // Get fixed NAF (in a more windowed form).\n    const naf = getFixedNAF(k, 2, k.bitLength() + 1, step);\n\n    // Compute steps.\n    const I = ((1 << (step + 1)) - (step % 2 === 0 ? 2 : 1)) / 3;\n\n    // Multiply.\n    let a = this.jpoint();\n    let b = this.jpoint();\n\n    for (let i = I; i > 0; i--) {\n      for (let j = 0; j < naf.length; j++) {\n        const nafW = naf[j];\n\n        if (nafW === i)\n          b = b.add(points[j]);\n        else if (nafW === -i)\n          b = b.sub(points[j]);\n      }\n\n      a = a.add(b);\n    }\n\n    return a;\n  }\n\n  _wnafMul(w, p, k) {\n    // Window NAF method for point multiplication.\n    //\n    // [GECC] Algorithm 3.36, Page 100, Section 3.3.\n    assert(p instanceof Point);\n    assert(k instanceof BN);\n\n    // Precompute window.\n    const {width, points} = p._safeNAF(w);\n\n    // Get NAF form.\n    const naf = getNAF(k, width, k.bitLength() + 1);\n\n    // Add `this`*(N+1) for every w-NAF index.\n    let acc = this.jpoint();\n\n    for (let i = naf.length - 1; i >= 0; i--) {\n      const z = naf[i];\n\n      if (i !== naf.length - 1)\n        acc = acc.dbl();\n\n      if (z > 0)\n        acc = acc.add(points[(z - 1) >> 1]);\n      else if (z < 0)\n        acc = acc.sub(points[(-z - 1) >> 1]);\n    }\n\n    return acc;\n  }\n\n  _wnafMulAdd(w, points, coeffs) {\n    // Multiple point multiplication, also known\n    // as \"Shamir's trick\" (with interleaved NAFs).\n    //\n    // [GECC] Algorithm 3.48, Page 109, Section 3.3.3.\n    //        Algorithm 3.51, Page 112, Section 3.3.\n    //\n    // This is particularly useful for signature\n    // verifications and mutiplications after an\n    // endomorphism split.\n    assert((w >>> 0) === w);\n    assert(Array.isArray(points));\n    assert(Array.isArray(coeffs));\n    assert(points.length === coeffs.length);\n\n    const length = points.length;\n    const wnd = new Array(length);\n    const naf = new Array(length);\n\n    // Check arrays and calculate size.\n    let max = 0;\n\n    for (let i = 0; i < length; i++) {\n      const point = points[i];\n      const coeff = coeffs[i];\n\n      assert(point instanceof Point);\n      assert(coeff instanceof BN);\n\n      if (i > 0 && point.type !== points[i - 1].type)\n        throw new Error('Cannot mix points.');\n\n      // Avoid sparse arrays.\n      wnd[i] = null;\n      naf[i] = null;\n\n      // Compute max scalar size.\n      max = Math.max(max, coeff.bitLength() + 1);\n    }\n\n    // Compute NAFs.\n    let ppoint = null;\n    let pcoeff = null;\n    let len = 0;\n\n    for (let i = 0; i < length; i++) {\n      const point = points[i];\n      const coeff = coeffs[i];\n      const pre = point._getNAF(0);\n\n      // Use precomputation if available.\n      if (pre) {\n        wnd[len] = pre.points;\n        naf[len] = getNAF(coeff, pre.width, max);\n        len += 1;\n        continue;\n      }\n\n      // Save last non-precomputed point.\n      if (!ppoint) {\n        ppoint = point;\n        pcoeff = coeff;\n        continue;\n      }\n\n      // Compute JSF in NAF form.\n      wnd[len] = ppoint._getJNAF(point);\n      naf[len] = getJNAF(pcoeff, coeff, max);\n\n      ppoint = null;\n      pcoeff = null;\n\n      len += 1;\n    }\n\n    // Regular NAF for odd points.\n    if (ppoint) {\n      const nafw = ppoint._safeNAF(w);\n\n      wnd[len] = nafw.points;\n      naf[len] = getNAF(pcoeff, nafw.width, max);\n\n      len += 1;\n    }\n\n    // Multiply and add.\n    let acc = this.jpoint();\n\n    for (let i = max - 1; i >= 0; i--) {\n      if (i !== max - 1)\n        acc = acc.dbl();\n\n      for (let j = 0; j < len; j++) {\n        const z = naf[j][i];\n\n        if (z > 0)\n          acc = acc.add(wnd[j][(z - 1) >> 1]);\n        else if (z < 0)\n          acc = acc.sub(wnd[j][(-z - 1) >> 1]);\n      }\n    }\n\n    return acc;\n  }\n\n  _endoWnafMulAdd(points, coeffs) {\n    throw new Error('Not implemented.');\n  }\n\n  _scale(curve, invert) {\n    assert(curve instanceof Curve);\n    assert(curve.p.eq(this.p));\n\n    switch (curve.type) {\n      case 'short':\n        return this._scaleShort(curve, invert);\n      case 'mont':\n        return this._scaleMont(curve, invert);\n      case 'edwards':\n        return this._scaleEdwards(curve, invert);\n      default:\n        throw new Error('Not implemented.');\n    }\n  }\n\n  _scaleShort(curve, invert) {\n    throw new Error('Not implemented.');\n  }\n\n  _scaleMont(curve, invert) {\n    throw new Error('Not implemented.');\n  }\n\n  _scaleEdwards(curve, invert) {\n    throw new Error('Not implemented.');\n  }\n\n  isElliptic() {\n    throw new Error('Not implemented.');\n  }\n\n  jinv() {\n    throw new Error('Not implemented.');\n  }\n\n  isComplete() {\n    return false;\n  }\n\n  precompute(rng) {\n    assert(!this.g.isInfinity(), 'Must have base point.');\n    assert(!this.n.isZero(), 'Must have order.');\n\n    this.g.precompute(this.n.bitLength(), rng);\n\n    return this;\n  }\n\n  scalar(num, base, endian) {\n    const k = new BN(num, base, endian);\n\n    assert(!k.red);\n\n    if (this.n.isZero())\n      return k;\n\n    return k.imod(this.n);\n  }\n\n  field(num, base, endian) {\n    const x = BN.cast(num, base, endian);\n\n    if (x.red)\n      return x.forceRed(this.red);\n\n    return x.toRed(this.red);\n  }\n\n  point(x, y) {\n    throw new Error('Not implemented.');\n  }\n\n  jpoint(x, y, z) {\n    throw new Error('Not implemented.');\n  }\n\n  xpoint(x, z) {\n    throw new Error('Not implemented.');\n  }\n\n  cpoint(xx, xz, yy, yz) {\n    assert(xx instanceof BN);\n    assert(xz instanceof BN);\n    assert(yy instanceof BN);\n    assert(yz instanceof BN);\n\n    if (xz.isZero() || yz.isZero())\n      return this.point();\n\n    const z = xz.redMul(yz).redInvert();\n    const x = xx.redMul(yz).redMul(z);\n    const y = yy.redMul(xz).redMul(z);\n\n    return this.point(x, y);\n  }\n\n  solveX2(y) {\n    throw new Error('Not implemented.');\n  }\n\n  solveX(y) {\n    return this.solveX2(y).redSqrt();\n  }\n\n  solveY2(x) {\n    throw new Error('Not implemented.');\n  }\n\n  solveY(x) {\n    return this.solveY2(x).redSqrt();\n  }\n\n  validate(point) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromX(x, sign) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromY(y, sign) {\n    throw new Error('Not implemented.');\n  }\n\n  isIsomorphic(curve) {\n    throw new Error('Not implemented.');\n  }\n\n  isIsogenous(curve) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromShort(point) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromMont(point, sign) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromEdwards(point) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromUniform(u) {\n    throw new Error('Not implemented.');\n  }\n\n  pointToUniform(p) {\n    throw new Error('Not implemented.');\n  }\n\n  pointFromHash(bytes, pake = false) {\n    // [H2EC] \"Roadmap\".\n    assert(Buffer.isBuffer(bytes));\n    assert(typeof pake === 'boolean');\n\n    if (bytes.length !== this.fieldSize * 2)\n      throw new Error('Invalid hash size.');\n\n    // Random oracle encoding.\n    // Ensure a proper distribution.\n    const s1 = bytes.slice(0, this.fieldSize);\n    const s2 = bytes.slice(this.fieldSize);\n    const u1 = this.decodeUniform(s1);\n    const u2 = this.decodeUniform(s2);\n    const p1 = this.pointFromUniform(u1);\n    const p2 = this.pointFromUniform(u2);\n    const p3 = p1.add(p2);\n\n    return pake ? p3.mulH() : p3;\n  }\n\n  pointToHash(p, subgroup, rng) {\n    // [SQUARED] Algorithm 1, Page 8, Section 3.3.\n    assert(p instanceof this.Point);\n    assert((subgroup >>> 0) === subgroup);\n\n    // Add a random torsion component.\n    const i = subgroup % this.torsion.length;\n    const p0 = p.add(this.torsion[i]);\n\n    // Average Cost (R = sqrt):\n    //\n    //   SSWU (~4 iterations) => 8I + 16R\n    //   SVDW (~4 iterations) => 12I + 28R\n    //   Elligator 1 (~2 iterations) => 6I + 10R\n    //   Elligator 2 (~2 iterations) => 4I + 6R\n    //   Ristretto (~1 iteration) => 1I + 2R + h*1R\n    for (;;) {\n      const u1 = this.randomField(rng);\n      const p1 = this.pointFromUniform(u1);\n\n      // Avoid 2-torsion points:\n      //   Short Weierstrass: ((A / 3) / B, 0)\n      //   Montgomery: (0, 0)\n      //   Twisted Edwards: (0, -1)\n      if (p1.neg().eq(p1))\n        continue;\n\n      const p2 = p0.sub(p1);\n      const hint = randomInt(rng);\n\n      let u2;\n      try {\n        u2 = this.pointToUniform(p2, hint & 15);\n      } catch (e) {\n        if (e.message === 'Invalid point.')\n          continue;\n        throw e;\n      }\n\n      const s1 = this.encodeUniform(u1, hint >>> 8);\n      const s2 = this.encodeUniform(u2, hint >>> 16);\n\n      return Buffer.concat([s1, s2]);\n    }\n  }\n\n  randomScalar(rng) {\n    const max = this.n.isZero() ? this.p : this.n;\n    return BN.random(rng, 1, max);\n  }\n\n  randomField(rng) {\n    return BN.random(rng, 1, this.p).toRed(this.red);\n  }\n\n  randomPoint(rng) {\n    let p;\n\n    for (;;) {\n      const x = this.randomField(rng);\n      const sign = (randomInt(rng) & 1) !== 0;\n\n      try {\n        p = this.pointFromX(x, sign);\n      } catch (e) {\n        continue;\n      }\n\n      assert(p.validate());\n\n      return p.mulH();\n    }\n  }\n\n  mulAll(points, coeffs) {\n    return this.jmulAll(points, coeffs);\n  }\n\n  jmulAll(points, coeffs) {\n    assert(Array.isArray(points));\n    assert(points.length === 0 || (points[0] instanceof Point));\n\n    // Multiply with endomorphism if we're using affine points.\n    if (this.endo && points.length > 0 && points[0].type === types.AFFINE)\n      return this._endoWnafMulAdd(points, coeffs);\n\n    // Otherwise, a regular Shamir's trick.\n    return this._wnafMulAdd(5, points, coeffs);\n  }\n\n  mulH(k) {\n    assert(k instanceof BN);\n    return this.imulH(k.clone());\n  }\n\n  imulH(k) {\n    assert(k instanceof BN);\n    assert(!k.red);\n\n    const word = this.h.word(0);\n\n    // Optimize for powers of two.\n    if ((word & (word - 1)) === 0) {\n      const bits = this.h.bitLength();\n      return k.iushln(bits - 1).imod(this.n);\n    }\n\n    return k.imuln(word).imod(this.n);\n  }\n\n  normalizeAll(points) {\n    assert(Array.isArray(points));\n\n    const len = points.length;\n    const z = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      const p = points[i];\n\n      assert(p instanceof Point);\n      assert(p.curve === this);\n\n      if (p.type === types.AFFINE) {\n        z[i] = this.one;\n        continue;\n      }\n\n      z[i] = p.z;\n    }\n\n    const zi = this.red.invertAll(z);\n    const out = new Array(len);\n\n    for (let i = 0; i < len; i++)\n      out[i] = points[i].scale(zi[i]);\n\n    return out;\n  }\n\n  affinizeAll(points) {\n    return this.normalizeAll(points);\n  }\n\n  clamp(scalar) {\n    // [RFC7748] Page 8, Section 5.\n    // [RFC8032] Section 5.1.5 & 5.2.5.\n    assert(Buffer.isBuffer(scalar));\n    assert(scalar.length === this.scalarSize);\n    assert(this.scalarSize <= this.fieldSize);\n\n    let top = (this.fieldBits & 7) || 8;\n    let lsb = 0;\n    let msb = this.scalarSize - 1;\n\n    // Swap endianness.\n    if (this.endian === 'be')\n      [lsb, msb] = [msb, lsb];\n\n    // Adjust for low order.\n    if (this.scalarSize < this.fieldSize)\n      top = 8;\n\n    // Ensure a multiple of the cofactor.\n    scalar[lsb] &= -this.h.word(0) & 0xff;\n\n    // Clamp to the prime.\n    scalar[msb] &= (1 << top) - 1;\n\n    // Set the high bit.\n    scalar[msb] |= 1 << (top - 1);\n\n    return scalar;\n  }\n\n  splitHash(bytes) {\n    // [RFC8032] Section 5.1.6 & 5.2.6.\n    assert(Buffer.isBuffer(bytes));\n    assert(bytes.length === this.adjustedSize * 2);\n    assert(this.scalarSize <= this.adjustedSize);\n\n    let off = 0;\n\n    if (this.endian === 'be')\n      off = this.adjustedSize - this.scalarSize;\n\n    const scalar = bytes.slice(off, off + this.scalarSize);\n    const prefix = bytes.slice(this.adjustedSize);\n\n    this.clamp(scalar);\n\n    return [scalar, prefix];\n  }\n\n  encodeField(x) {\n    // [SEC1] Page 12, Section 2.3.5.\n    assert(x instanceof BN);\n    assert(!x.red);\n\n    return x.encode(this.endian, this.fieldSize);\n  }\n\n  decodeField(bytes) {\n    // [SEC1] Page 13, Section 2.3.6.\n    assert(Buffer.isBuffer(bytes));\n\n    if (bytes.length !== this.fieldSize)\n      throw new Error('Invalid field element size.');\n\n    return BN.decode(bytes, this.endian);\n  }\n\n  encodeAdjusted(x) {\n    assert(x instanceof BN);\n    assert(!x.red);\n\n    return x.encode(this.endian, this.adjustedSize);\n  }\n\n  decodeAdjusted(bytes) {\n    assert(Buffer.isBuffer(bytes));\n\n    if (bytes.length !== this.adjustedSize)\n      throw new Error('Invalid field element size.');\n\n    return BN.decode(bytes, this.endian);\n  }\n\n  encodeScalar(k) {\n    // [SEC1] Page 13, Section 2.3.7.\n    assert(k instanceof BN);\n    assert(!k.red);\n\n    return k.encode(this.endian, this.scalarSize);\n  }\n\n  decodeScalar(bytes) {\n    // [SEC1] Page 14, Section 2.3.8.\n    assert(Buffer.isBuffer(bytes));\n\n    if (bytes.length !== this.scalarSize)\n      throw new Error('Invalid scalar size.');\n\n    return BN.decode(bytes, this.endian);\n  }\n\n  encodeClamped(k) {\n    // [RFC7748] Page 8, Section 5.\n    // [RFC8032] Section 5.1.5 & 5.2.5.\n    return this.clamp(this.encodeScalar(k));\n  }\n\n  decodeClamped(bytes) {\n    // [RFC7748] Page 8, Section 5.\n    // [RFC8032] Section 5.1.5 & 5.2.5.\n    assert(Buffer.isBuffer(bytes));\n\n    if (bytes.length !== this.scalarSize)\n      throw new Error('Invalid scalar size.');\n\n    const clamped = this.clamp(Buffer.from(bytes));\n\n    return BN.decode(clamped, this.endian);\n  }\n\n  encodeUniform(x, bits) {\n    assert(x instanceof BN);\n    assert((bits >>> 0) === bits);\n\n    const msb = this.endian === 'le' ? this.fieldSize - 1 : 0;\n    const bytes = x.fromRed().encode(this.endian, this.fieldSize);\n\n    bytes[msb] |= (bits & ~this.mask) & 0xff;\n\n    return bytes;\n  }\n\n  decodeUniform(bytes) {\n    assert(Buffer.isBuffer(bytes));\n\n    if (bytes.length !== this.fieldSize)\n      throw new Error('Invalid field size.');\n\n    const x = BN.decode(bytes, this.endian);\n\n    x.iumaskn(this.fieldBits);\n\n    return x.toRed(this.red);\n  }\n\n  encodePoint(point, compact) {\n    assert(point instanceof Point);\n    return point.encode(compact);\n  }\n\n  decodePoint(bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  encodeX(point) {\n    throw new Error('Not implemented.');\n  }\n\n  decodeX(bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  decodeEven(bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  decodeSquare(bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  toShort() {\n    throw new Error('Not implemented.');\n  }\n\n  toMont(b0) {\n    throw new Error('Not implemented.');\n  }\n\n  toEdwards(a0) {\n    throw new Error('Not implemented.');\n  }\n\n  pointToJSON(point, pre) {\n    assert(point instanceof Point);\n    return point.toJSON(pre);\n  }\n\n  pointFromJSON(json) {\n    throw new Error('Not implemented.');\n  }\n\n  toJSON(pre) {\n    let prefix, context;\n    let n, z, endo;\n\n    if (this.type === 'edwards') {\n      prefix = this.prefix ? this.prefix.toString() : null;\n      context = this.context;\n    }\n\n    if (!this.n.isZero())\n      n = this.n.toJSON();\n\n    if (!this.z.isZero()) {\n      z = this.z.fromRed();\n\n      if (this.z.redIsHigh())\n        z.isub(this.p);\n\n      z = z.toString(16);\n    }\n\n    if (this.endo)\n      endo = this.endo.toJSON();\n\n    return {\n      id: this.id,\n      ossl: this.ossl,\n      type: this.type,\n      endian: this.endian,\n      hash: this.hash,\n      prefix,\n      context,\n      prime: this.prime,\n      p: this.p.toJSON(),\n      a: undefined,\n      b: undefined,\n      d: undefined,\n      n,\n      h: this.h.toString(16),\n      s: undefined,\n      z,\n      c: undefined,\n      g: this.g.toJSON(pre),\n      endo\n    };\n  }\n\n  static fromJSON(json) {\n    return new this(json);\n  }\n}\n\n/**\n * Point\n */\n\nclass Point {\n  constructor(curve, type) {\n    assert(curve instanceof Curve);\n    assert((type >>> 0) === type);\n\n    this.curve = curve;\n    this.type = type;\n    this.pre = null;\n  }\n\n  _init() {\n    throw new Error('Not implemented.');\n  }\n\n  _safeNAF(width) {\n    assert((width >>> 0) === width);\n\n    if (this.pre && this.pre.naf)\n      return this.pre.naf;\n\n    if (width === 0)\n      return null;\n\n    const size = 1 << (width - 2);\n    const points = new Array(size);\n    const p = this.toJ();\n    const dbl = size === 1 ? null : p.dbl();\n\n    points[0] = p;\n\n    for (let i = 1; i < size; i++)\n      points[i] = points[i - 1].add(dbl);\n\n    return new NAF(width, points);\n  }\n\n  _getNAF(width) {\n    assert((width >>> 0) === width);\n\n    if (this.pre && this.pre.naf)\n      return this.pre.naf;\n\n    if (width === 0)\n      return null;\n\n    const odds = this._safeNAF(width).points;\n    const points = this.curve.affinizeAll(odds);\n\n    return new NAF(width, points);\n  }\n\n  _getWindows(width, bits) {\n    assert((width >>> 0) === width);\n    assert((bits >>> 0) === bits);\n\n    if (this.pre && this.pre.windows)\n      return this.pre.windows;\n\n    if (width === 0)\n      return null;\n\n    const size = 1 << width;\n    const steps = ((bits + width - 1) / width) >>> 0;\n    const wnds = new Array(steps * size);\n\n    let g = this.toJ();\n\n    for (let i = 0; i < steps; i++) {\n      wnds[i * size] = this.curve.jpoint();\n\n      for (let j = 1; j < size; j++)\n        wnds[i * size + j] = wnds[i * size + j - 1].add(g);\n\n      g = g.dblp(width);\n    }\n\n    const points = this.curve.affinizeAll(wnds);\n\n    return new Windows(width, bits, points);\n  }\n\n  _getDoubles(step, power) {\n    assert((step >>> 0) === step);\n    assert((power >>> 0) === power);\n\n    if (this.pre && this.pre.doubles)\n      return this.pre.doubles;\n\n    if (step === 0)\n      return null;\n\n    const len = Math.ceil(power / step) + 1;\n    const dbls = new Array(len);\n\n    let acc = this.toJ();\n    let k = 0;\n\n    dbls[k++] = acc;\n\n    for (let i = 0; i < power; i += step) {\n      for (let j = 0; j < step; j++)\n        acc = acc.dbl();\n\n      dbls[k++] = acc;\n    }\n\n    assert(k === len);\n\n    const points = this.curve.affinizeAll(dbls);\n\n    return new Doubles(step, points);\n  }\n\n  _getBeta() {\n    return null;\n  }\n\n  _getBlinding(rng) {\n    if (this.pre && this.pre.blinding)\n      return this.pre.blinding;\n\n    if (!rng)\n      return null;\n\n    if (this.curve.n.isZero())\n      return null;\n\n    // Pregenerate a random blinding value:\n    //\n    //   blind = random integer in [1,n-1]\n    //   unblind = G * blind\n    //\n    // We intend to subtract the blinding value\n    // from scalars before multiplication. We\n    // can add the unblinding point once the\n    // multiplication is complete.\n    const blind = this.curve.randomScalar(rng);\n    const unblind = this.mul(blind);\n\n    return new Blinding(blind, unblind);\n  }\n\n  _hasWindows(k) {\n    assert(k instanceof BN);\n\n    if (!this.pre || !this.pre.windows)\n      return false;\n\n    const {width, bits} = this.pre.windows;\n    const steps = ((bits + width - 1) / width) >>> 0;\n\n    return k.bitLength() <= steps * width;\n  }\n\n  _hasDoubles(k) {\n    assert(k instanceof BN);\n\n    if (!this.pre || !this.pre.doubles)\n      return false;\n\n    const {step, points} = this.pre.doubles;\n    const power = k.bitLength() + 1;\n\n    return points.length >= Math.ceil(power / step) + 1;\n  }\n\n  _getJNAF(point) {\n    assert(point instanceof Point);\n    assert(point.type === this.type);\n\n    // Create comb for JSF.\n    return [\n      this, // 1\n      this.add(point), // 3\n      this.sub(point), // 5\n      point // 7\n    ];\n  }\n\n  _blind(k, rng) {\n    // [SIDE1] Page 5, Section 4.\n    // [BLIND] Page 20, Section 7.\n    assert(k instanceof BN);\n    assert(!k.red);\n\n    // Scalar splitting (requires precomputation).\n    //\n    // Blind a multiplication by first subtracting\n    // a blinding value from the scalar. Example:\n    //\n    //   b = random integer in [1,n-1]\n    //   B = P * b (precomputed)\n    //   Q = P * (k - b) + B\n    //\n    // Note that Joye describes a different method\n    // (multiplier randomization) which computes:\n    //\n    //   B = random point in E\n    //   Q = (P + B) * k - B * k\n    //\n    // Our method is more similar to the \"scalar\n    // splitting\" technique described in the\n    // second source above.\n    //\n    // The blinding value and its corresponding\n    // point are randomly generated and computed\n    // on boot. As long as an attacker is not\n    // able to observe the boot, this should give\n    // a decent bit of protection against various\n    // channel attacks.\n    if (this.pre && this.pre.blinding) {\n      const {blind, unblind} = this.pre.blinding;\n      const t = k.sub(blind);\n\n      return [this, t, unblind];\n    }\n\n    // Randomization is not possible without\n    // an RNG. Do a normal multiplication.\n    if (!rng)\n      return [this, k, null];\n\n    // If we have no precomputed blinding\n    // factor, there are two possibilities\n    // for randomization:\n    //\n    // 1. Randomize the multiplier by adding\n    //    a random multiple of `n`.\n    //\n    // 2. Re-scale the point itself by a\n    //    random factor.\n    //\n    // The first option can be accomplished\n    // with some like:\n    //\n    //   a = random integer in [1,n-1]\n    //   r = a * n\n    //   Q = P * (k + r)\n    //\n    // The second is accomplished with:\n    //\n    //   a = random element in F(p)\n    //   R = (x * a^2, y * a^3, z * a)\n    //   Q = R * k\n    //\n    // If we have precomputed doubles / naf\n    // points, we opt for the first method\n    // to avoid randomizing everything.\n    if (this.pre) {\n      if (this.curve.n.isZero())\n        return [this, k, null];\n\n      const a = this.curve.randomScalar(rng);\n      const r = a.mul(this.curve.n);\n      const t = r.iadd(k);\n\n      return [this, t, null];\n    }\n\n    // If there is no precomputation _at all_,\n    // we opt for the second method.\n    const p = this.randomize(rng);\n\n    return [p, k, null];\n  }\n\n  clone() {\n    throw new Error('Not implemented.');\n  }\n\n  precompute(bits, rng) {\n    assert((bits >>> 0) === bits);\n\n    if (!this.pre)\n      this.pre = new Precomp();\n\n    if (!this.pre.naf)\n      this.pre.naf = this._getNAF(9);\n\n    if (USE_FIXED && !this.pre.windows)\n      this.pre.windows = this._getWindows(4, bits);\n\n    if (!this.pre.doubles)\n      this.pre.doubles = this._getDoubles(4, bits + 1);\n\n    if (!this.pre.beta)\n      this.pre.beta = this._getBeta();\n\n    if (!this.pre.blinding)\n      this.pre.blinding = this._getBlinding(rng);\n\n    return this;\n  }\n\n  validate() {\n    return this.curve.validate(this);\n  }\n\n  normalize() {\n    return this;\n  }\n\n  scale(a) {\n    throw new Error('Not implemented.');\n  }\n\n  randomize(rng) {\n    const z = this.curve.randomField(rng);\n    return this.scale(z);\n  }\n\n  neg() {\n    throw new Error('Not implemented.');\n  }\n\n  add(point) {\n    throw new Error('Not implemented.');\n  }\n\n  sub(point) {\n    assert(point instanceof Point);\n    return this.add(point.neg());\n  }\n\n  dbl() {\n    throw new Error('Not implemented.');\n  }\n\n  dblp(pow) {\n    // Repeated doubling. This can\n    // be optimized by child classes.\n    assert((pow >>> 0) === pow);\n\n    let r = this;\n\n    for (let i = 0; i < pow; i++)\n      r = r.dbl();\n\n    return r;\n  }\n\n  diffAddDbl(p, q) {\n    throw new Error('Not implemented.');\n  }\n\n  getX() {\n    throw new Error('Not implemented.');\n  }\n\n  getY() {\n    throw new Error('Not implemented.');\n  }\n\n  eq(point) {\n    throw new Error('Not implemented.');\n  }\n\n  cmp(point) {\n    throw new Error('Not implemented.');\n  }\n\n  isInfinity() {\n    throw new Error('Not implemented.');\n  }\n\n  isOrder2() {\n    throw new Error('Not implemented.');\n  }\n\n  isOdd() {\n    throw new Error('Not implemented.');\n  }\n\n  isEven() {\n    throw new Error('Not implemented.');\n  }\n\n  isSquare() {\n    throw new Error('Not implemented.');\n  }\n\n  eqX(x) {\n    throw new Error('Not implemented.');\n  }\n\n  eqR(x) {\n    throw new Error('Not implemented.');\n  }\n\n  isSmall() {\n    // Test whether the point is of small order.\n    if (this.isInfinity())\n      return false;\n\n    // P * h = O\n    return this.jmulH().isInfinity();\n  }\n\n  hasTorsion() {\n    // Test whether the point is in another subgroup.\n    if (this.isInfinity())\n      return false;\n\n    // P * n != O\n    return !this.jmul(this.curve.n).isInfinity();\n  }\n\n  order() {\n    // Calculate point order.\n    const {h, n} = this.curve;\n\n    let p = this.toJ();\n    let q = new BN(1);\n\n    while (!p.isInfinity()) {\n      q.iaddn(1);\n\n      if (q.cmp(h) > 0) {\n        q = n.clone();\n        break;\n      }\n\n      p = p.add(this);\n    }\n\n    return q;\n  }\n\n  mul(k) {\n    return this.jmul(k);\n  }\n\n  muln(k) {\n    return this.jmuln(k);\n  }\n\n  mulBlind(k, rng) {\n    return this.jmulBlind(k, rng);\n  }\n\n  mulAdd(k1, p2, k2) {\n    return this.jmulAdd(k1, p2, k2);\n  }\n\n  mulH() {\n    return this.jmulH();\n  }\n\n  div(k) {\n    return this.jdiv(k);\n  }\n\n  divn(k) {\n    return this.jdivn(k);\n  }\n\n  divH() {\n    return this.jdivH();\n  }\n\n  jmul(k) {\n    if (USE_FIXED && this._hasWindows(k))\n      return this.curve._fixedMul(this, k);\n\n    if (this._hasDoubles(k))\n      return this.curve._fixedNafMul(this, k);\n\n    if (this.curve.endo && this.type === types.AFFINE)\n      return this.curve._endoWnafMulAdd([this], [k]);\n\n    return this.curve._wnafMul(5, this, k);\n  }\n\n  jmuln(k) {\n    assert((k | 0) === k);\n    return this.jmul(new BN(k));\n  }\n\n  jmulBlind(k, rng = null) {\n    const [p, t, unblind] = this._blind(k, rng);\n    const q = p.jmul(t);\n\n    if (unblind)\n      return q.add(unblind);\n\n    return q;\n  }\n\n  jmulAdd(k1, p2, k2) {\n    if (this.curve.endo && this.type === types.AFFINE)\n      return this.curve._endoWnafMulAdd([this, p2], [k1, k2]);\n\n    return this.curve._wnafMulAdd(5, [this, p2], [k1, k2]);\n  }\n\n  jmulH() {\n    const word = this.curve.h.word(0);\n\n    // Optimize for powers of two.\n    if ((word & (word - 1)) === 0) {\n      const bits = this.curve.h.bitLength();\n      return this.toJ().dblp(bits - 1);\n    }\n\n    return this.jmul(this.curve.h);\n  }\n\n  jdiv(k) {\n    assert(k instanceof BN);\n    assert(!k.red);\n\n    return this.jmul(k.invert(this.curve.n));\n  }\n\n  jdivn(k) {\n    assert(!this.curve.n.isZero());\n\n    if (this.curve.h.cmpn(k) === 0)\n      return this.jdivH();\n\n    return this.jdiv(new BN(k));\n  }\n\n  jdivH() {\n    if (this.curve.n.isZero())\n      return this.toJ();\n\n    if (this.curve.h.cmpn(1) === 0)\n      return this.toJ();\n\n    if (this.curve.hi === null)\n      this.curve.hi = this.curve.h.invert(this.curve.n);\n\n    return this.jmul(this.curve.hi);\n  }\n\n  toP() {\n    return this.normalize();\n  }\n\n  toJ() {\n    return this;\n  }\n\n  toX() {\n    return this;\n  }\n\n  key() {\n    if (this.isInfinity())\n      return `${this.curve.uid}:oo`;\n\n    this.normalize();\n\n    const x = this.getX().toString(16);\n    const y = this.getY().toString(16);\n\n    return `${this.curve.uid}:${x},${y}`;\n  }\n\n  encode(compact) {\n    throw new Error('Not implemented.');\n  }\n\n  static decode(curve, bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  encodeX() {\n    throw new Error('Not implemented.');\n  }\n\n  static decodeX(curve, bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  static decodeEven(curve, bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  static decodeSquare(curve, bytes) {\n    throw new Error('Not implemented.');\n  }\n\n  toJSON(pre) {\n    throw new Error('Not implemented.');\n  }\n\n  static fromJSON(curve, json) {\n    throw new Error('Not implemented.');\n  }\n\n  [custom]() {\n    return '<Point>';\n  }\n}\n\n/**\n * ShortCurve\n */\n\nclass ShortCurve extends Curve {\n  constructor(conf) {\n    super(ShortPoint, 'short', conf);\n\n    this.a = BN.fromJSON(conf.a).toRed(this.red);\n    this.b = BN.fromJSON(conf.b).toRed(this.red);\n    this.c = BN.fromJSON(conf.c || '0').toRed(this.red);\n    this.ai = this.a.isZero() ? this.zero : this.a.redInvert();\n    this.zi = this.z.isZero() ? this.zero : this.z.redInvert();\n\n    this.zeroA = this.a.isZero();\n    this.threeA = this.a.eq(this.three.redNeg());\n    this.redN = this.n.toRed(this.red);\n    this.pmodn = this.p.clone();\n    this.highOrder = this.n.cmp(this.p) >= 0;\n    this.smallGap = false;\n\n    this._finalize(conf);\n  }\n\n  _finalize(conf) {\n    super._finalize(conf);\n\n    // Precalculate endomorphism.\n    if (conf.endo != null)\n      this.endo = Endo.fromJSON(this, conf.endo);\n    else\n      this.endo = this._getEndomorphism();\n\n    if (!this.n.isZero()) {\n      this.pmodn = this.p.mod(this.n);\n\n      // Check for Maxwell's trick (see eqR).\n      this.smallGap = this.p.div(this.n).cmpn(1) <= 0;\n    }\n\n    return this;\n  }\n\n  static _isomorphism(curveA, curveB, custom, odd) {\n    // Short Weierstrass Isomorphism.\n    //\n    // [GECC] Page 84, Section 3.1.5.\n    // [ARITH1] Page 274, Section 13.1.5.\n    // [ALT] Appendix F.3 (Isomorphic Mapping between Weierstrass Curves).\n    //\n    // Find `u` such that `a * u^4 = a'` and `b * u^6 = b'`.\n    //\n    // Transformation:\n    //\n    //   u4 = a' / a\n    //   u2 = +-sqrt(u4)\n    //   u6 = u4 * u2\n    //   a' = a * u4\n    //   b' = b * u6\n    //\n    // Where `u2` is any root that is square.\n    //\n    // If a = 0, we can do:\n    //\n    //   a' = 0\n    //   b' = b'\n    //\n    // Where (b' / b)^(1 / 3) is square.\n    //\n    // If b = 0, we can do:\n    //\n    //   a' = a'\n    //   b' = 0\n    //\n    // Where sqrt(a' / a) is square.\n    assert(curveA instanceof BN);\n    assert(curveB instanceof BN);\n    assert(custom instanceof BN);\n    assert(odd == null || typeof odd === 'boolean');\n    assert(!curveA.isZero() || !curveB.isZero());\n\n    if (custom.isZero())\n      throw new Error('Invalid coefficient.');\n\n    if (curveA.isZero()) {\n      const customB = custom;\n      const u6 = customB.redDiv(curveB);\n      // Todo: allow index flag.\n      const u2 = uncube(u6);\n\n      // Already checked in uncube().\n      assert(u2.redJacobi() === 1);\n\n      return [curveA.clone(), customB.clone()];\n    }\n\n    if (curveB.isZero()) {\n      const customA = custom;\n      const u4 = customA.redDiv(curveA);\n      const u2 = u4.redSqrt();\n\n      // Todo: allow odd flag.\n      if (u2.redJacobi() !== 1)\n        u2.redINeg();\n\n      if (u2.redJacobi() !== 1)\n        throw new Error('Invalid `a` coefficient.');\n\n      return [customA.clone(), curveB.clone()];\n    }\n\n    const customA = custom;\n    const u4 = customA.redDiv(curveA);\n    const u2 = u4.redSqrt();\n\n    if (odd != null) {\n      if (u2.redIsOdd() !== odd)\n        u2.redINeg();\n    } else {\n      if (u2.redJacobi() !== 1)\n        u2.redINeg();\n    }\n\n    if (u2.redJacobi() !== 1)\n      throw new Error('Invalid `a` coefficient.');\n\n    const u6 = u4.redMul(u2);\n    const a = curveA.redMul(u4);\n    const b = curveB.redMul(u6);\n\n    assert(a.eq(customA));\n\n    return [a, b];\n  }\n\n  _short(a0, odd) {\n    return ShortCurve._isomorphism(this.a, this.b, a0, odd);\n  }\n\n  _mont(b0, odd) {\n    // Short Weierstrass->Montgomery Equivalence.\n    //\n    // [ARITH1] Page 286, Section 13.2.3.c.\n    // [SAFE] \"Ladders\".\n    //\n    // Transformation:\n    //\n    //   r = A / (3 * B)\n    //   s = +-sqrt(3 * r^2 + a)\n    //   A = 3 * r / s\n    //   B = 1 / s\n    const [r, s] = this._findRS(odd);\n    const b = s.redInvert();\n    const a = r.redMuln(3).redMul(b);\n\n    if (b0 != null)\n      return MontCurve._isomorphism(a, b, b0);\n\n    return [a, b];\n  }\n\n  _edwards(a0, odd) {\n    // Short Weierstrass->Twisted Edwards Equivalence.\n    //\n    // [TWISTEQ] Section 1.\n    //\n    // Transformation:\n    //\n    //   r = (a' + d') / 6\n    //   s = +-sqrt(3 * r^2 + a)\n    //   a' = 3 * r + 2 * s\n    //   d' = 3 * r - 2 * s\n    const [r, s] = this._findRS(odd);\n    const r3 = r.redMuln(3);\n    const s2 = s.redMuln(2);\n    const a = r3.redAdd(s2);\n    const d = r3.redSub(s2);\n\n    if (a0 != null)\n      return EdwardsCurve._isomorphism(a, d, a0);\n\n    return [a, d];\n  }\n\n  _findRS(sign) {\n    // Find `r` and `s` for equivalence.\n    //\n    // [ARITH1] Page 286, Section 13.2.3.c.\n    // [SAFE] \"Ladders\".\n    //\n    // Computation:\n    //\n    //   r = solve(r^3 + a * r + b == 0, r)\n    //   s = +-sqrt(3 * r^2 + a)\n    //\n    // Computing `r` is non-trivial. We need\n    // to solve `r^3 + a * r + b = 0`, but we\n    // don't have a polynomial solver, so we\n    // loop over random points until we find\n    // one with 2-torsion. Multiplying by the\n    // subgroup order should yield a point of\n    // ((A / 3) / B, 0) which is a solution.\n    assert(sign == null || typeof sign === 'boolean');\n    assert(this.h.word(0) >= 4);\n    assert(!this.n.isZero());\n\n    const x = this.one.redNeg();\n\n    let p;\n\n    for (;;) {\n      x.redIAdd(this.one);\n\n      try {\n        p = this.pointFromX(x.clone());\n      } catch (e) {\n        continue;\n      }\n\n      p = p.mul(this.n);\n\n      if (p.isInfinity())\n        continue;\n\n      if (!p.y.isZero())\n        continue;\n\n      break;\n    }\n\n    const r = p.x;\n    const r2 = r.redSqr();\n    const s = r2.redMuln(3).redIAdd(this.a).redSqrt();\n\n    if (sign != null) {\n      if (s.redIsOdd() !== sign)\n        s.redINeg();\n    }\n\n    return [r, s];\n  }\n\n  _scale0(a, b) {\n    // We can extract the isomorphism factors with:\n    //\n    //   u4 = a' / a\n    //   u6 = b' / b\n    //   u2 = +-sqrt(u4)\n    //   u = +-sqrt(u2)\n    //   u3 = u2 * u\n    //\n    // `u2` should be picked such that `u4 * u2 = u6`.\n    //\n    // If a = 0, we can do:\n    //\n    //   u6 = b' / b\n    //   u2 = u6^(1 / 3)\n    //   u = +-sqrt(u2)\n    //   u3 = u2 * u\n    //\n    // Where `u2` is any root that is square.\n    //\n    // If b = 0, we can do:\n    //\n    //   u4 = a' / a\n    //   u2 = +-sqrt(u4)\n    //   u = +-sqrt(u2)\n    //   u3 = u2 * u\n    //\n    // Where `u2` is any root that is square.\n    assert(this.a.isZero() === a.isZero());\n    assert(this.b.isZero() === b.isZero());\n\n    if (this.a.isZero()) {\n      const u6 = this.b.redDiv(this.field(b));\n      // Todo: figure out how to check index.\n      const u2 = uncube(u6);\n      const u = u2.redSqrt();\n      const u3 = u2.redMul(u);\n\n      assert(u3.redSqr().eq(u6));\n      assert(!u.isZero());\n\n      return [u2, u3];\n    }\n\n    if (this.b.isZero()) {\n      const u4 = this.a.redDiv(this.field(a));\n      const u2 = u4.redSqrt();\n\n      // Todo: figure out how to check oddness.\n      if (u2.redJacobi() !== 1)\n        u2.redINeg();\n\n      const u = u2.redSqrt();\n      const u3 = u2.redMul(u);\n\n      assert(u3.redMul(u).eq(u4));\n      assert(!u.isZero());\n\n      return [u2, u3];\n    }\n\n    const u4 = this.a.redDiv(this.field(a));\n    const u6 = this.b.redDiv(this.field(b));\n    const u2 = u4.redSqrt();\n\n    if (!u4.redMul(u2).eq(u6))\n      u2.redINeg();\n\n    assert(u4.redMul(u2).eq(u6));\n\n    const u = u2.redSqrt();\n    const u3 = u2.redMul(u);\n\n    assert(!u.isZero());\n\n    return [u2, u3];\n  }\n\n  _scale1(x, y) {\n    // If base points are available, it is much\n    // easier, with:\n    //\n    //   u2 = x' / x\n    //   u3 = y' / y\n    //   u = +-sqrt(u2)\n    //\n    // `u` should be picked such that `u2 * u = u3`.\n    const u2 = this.g.x.redDiv(this.field(x));\n    const u3 = this.g.y.redDiv(this.field(y));\n    const u = u2.redSqrt();\n\n    if (!u2.redMul(u).eq(u3))\n      u.redINeg();\n\n    assert(u2.redMul(u).eq(u3));\n    assert(!u.isZero());\n\n    return [u2, u3];\n  }\n\n  _scaleShort(curve) {\n    assert(curve instanceof ShortCurve);\n\n    if (this.g.isInfinity() || curve.g.isInfinity())\n      return this._scale0(curve.a, curve.b);\n\n    return this._scale1(curve.g.x, curve.g.y);\n  }\n\n  _scaleMont(curve) {\n    assert(curve instanceof MontCurve);\n\n    if (this.g.isInfinity() || curve.g.isInfinity()) {\n      const [a, b] = curve._short();\n      return this._scale0(a, b);\n    }\n\n    const {x, y} = curve.g;\n    const nx = x.redAdd(curve.a3).redMul(curve.bi);\n    const ny = y.redMul(curve.bi);\n\n    return this._scale1(nx, ny);\n  }\n\n  _scaleEdwards(curve) {\n    assert(curve instanceof EdwardsCurve);\n\n    if (this.g.isInfinity() || curve.g.isInfinity()) {\n      const [a, b] = curve._short();\n      return this._scale0(a, b);\n    }\n\n    const {x, y, z} = curve.g;\n    const a5 = curve.a.redMuln(5);\n    const d5 = curve.d.redMuln(5);\n    const dma = curve.d.redSub(curve.a);\n    const d5a = d5.redSub(curve.a);\n    const da5 = curve.d.redSub(a5);\n    const ypz = y.redAdd(z);\n    const ymz = y.redSub(z);\n    const xx = d5a.redMul(y).redIAdd(da5.redMul(z));\n    const xz = ymz.redMuln(12);\n    const yy = dma.redMul(ypz).redMul(z);\n    const yz = ymz.redMul(x).redIMuln(4);\n    const zi = xz.redMul(yz).redInvert();\n    const nx = xx.redMul(yz).redMul(zi);\n    const ny = yy.redMul(xz).redMul(zi);\n\n    return this._scale1(nx, ny);\n  }\n\n  _getEndomorphism(index = 0) {\n    // Compute endomorphism.\n    //\n    // [GECC] Example 3.76, Page 128, Section 3.5.\n\n    // No curve params.\n    if (this.n.isZero() || this.g.isInfinity())\n      return null;\n\n    // No efficient endomorphism.\n    if (!this.zeroA || this.p.modrn(3) !== 1 || this.n.modrn(3) !== 1)\n      return null;\n\n    // Solve beta^3 mod p = 1.\n    const [b1, b2] = this._getEndoRoots(this.p);\n\n    // Choose the smallest beta by default.\n    const beta = [b1, b2][index & 1].toRed(this.red);\n\n    // Solve lambda^3 mod n = 1.\n    const [l1, l2] = this._getEndoRoots(this.n);\n\n    // Choose the lambda matching selected beta.\n    // Note that P * lambda = (x * beta, y).\n    const p = this.point(this.g.x.redMul(beta), this.g.y);\n\n    let lambda;\n\n    if (this.g.mul(l1).eq(p)) {\n      lambda = l1;\n    } else {\n      assert(this.g.mul(l2).eq(p));\n      lambda = l2;\n    }\n\n    // Get basis vectors.\n    const basis = this._getEndoBasis(lambda);\n\n    // Precompute `g1` and `g2`.\n    const pre = this._getEndoPrecomp(basis);\n\n    return new Endo(beta, lambda, basis, pre);\n  }\n\n  _getEndoRoots(num) {\n    // Find roots for x^2 + x + 1 in F.\n    //\n    // [GECC] Example 3.76, Page 128, Section 3.5.\n    // [GLV] Page 192, Section 2 (Endomorphisms).\n    //\n    // The above document doesn't fully explain how\n    // to derive these and only \"hints\" at it, as\n    // mentioned by Hal Finney[1], but we're basically\n    // computing two possible cube roots of 1 here.\n    //\n    // Note that we could also compute[2]:\n    //\n    //   beta = 2^((p - 1) / 3) mod p\n    //   lambda = 3^((n - 1) / 3) mod n\n    //\n    // As an extension of Fermat's little theorem:\n    //\n    //   g^(p - 1) mod p == 1\n    //\n    // It is suspected[3] this is how Hal Finney[4]\n    // computed his original endomorphism roots.\n    //\n    // @indutny's method for computing cube roots\n    // of unity[5] appears to be the method described\n    // on wikipedia[6][7].\n    //\n    // Sage produces the same solution:\n    //\n    //   sage: solve(x^2 + x + 1 == 0, x)\n    //   [x == -1/2*I*sqrt(3) - 1/2, x == 1/2*I*sqrt(3) - 1/2]\n    //\n    // This can be reduced to:\n    //\n    //   x = (+-sqrt(-3) - 1) / 2\n    //\n    // [1] https://bitcointalk.org/index.php?topic=3238.msg45565#msg45565\n    // [2] https://crypto.stackexchange.com/a/22739\n    // [3] https://bitcoin.stackexchange.com/a/35872\n    // [4] https://github.com/halfinney/bitcoin/commit/dc411b5\n    // [5] https://en.wikipedia.org/wiki/Cube_root_of_unity\n    // [6] https://en.wikipedia.org/wiki/Splitting_field#Cubic_example\n    // [7] http://mathworld.wolfram.com/SplittingField.html\n    const red = num === this.p ? this.red : BN.mont(num);\n    const two = new BN(2).toRed(red);\n    const three = new BN(3).toRed(red);\n    const i2 = two.redInvert();\n\n    // S1 = sqrt(-3) / 2\n    const s1 = three.redNeg().redSqrt().redMul(i2);\n\n    // S2 = -S1\n    const s2 = s1.redNeg();\n\n    // R1 = S1 - 1 / 2\n    const r1 = s1.redSub(i2).fromRed();\n\n    // R2 = S2 - 1 / 2\n    const r2 = s2.redSub(i2).fromRed();\n\n    return [r1, r2].sort(BN.cmp);\n  }\n\n  _getEndoBasis(lambda) {\n    // Compute endomorphic basis.\n    //\n    // This essentially computes Cornacchia's algorithm\n    // for solving x^2 + d * y^2 = m (d = lambda, m = order).\n    //\n    // https://en.wikipedia.org/wiki/Cornacchia%27s_algorithm\n    //\n    // [GECC] Algorithm 3.74, Page 127, Section 3.5.\n    // [GLV] Page 196, Section 4 (Decomposing K).\n    //\n    // Balanced length-two representation of a multiplier.\n    //\n    // 1. Run the extended euclidean algorithm with inputs n\n    //    and lambda. The algorithm produces a sequence of\n    //    equations si*n + ti*lam = ri where s0=1, t0=0,\n    //    r0=n, s1=0, t1=1, r1=lam, and the remainders ri\n    //    and are non-negative and strictly decreasing. Let\n    //    l be the greatest index for which rl >= sqrt(n).\n    const [rl, tl, rl1, tl1, rl2, tl2] = this._egcdSqrt(lambda);\n\n    // 2. Set (a1, b1) <- (rl+1, -tl+1).\n    const a1 = rl1;\n    const b1 = tl1.neg();\n\n    // 3. If (rl^2 + tl^2) <= (rl+2^2 + tl+2^2)\n    //    then set (a2, b2) <- (rl, -tl).\n    //    else set (a2, b2) <- (rl+2, -tl+2).\n    const lhs = rl.sqr().iadd(tl.sqr());\n    const rhs = rl2.sqr().iadd(tl2.sqr());\n\n    let a2, b2;\n\n    if (lhs.cmp(rhs) <= 0) {\n      a2 = rl;\n      b2 = tl.neg();\n    } else {\n      a2 = rl2;\n      b2 = tl2.neg();\n    }\n\n    return [\n      new Vector(a1, b1),\n      new Vector(a2, b2)\n    ];\n  }\n\n  _egcdSqrt(lambda) {\n    // Extended Euclidean algorithm for integers.\n    //\n    // [GECC] Algorithm 2.19, Page 40, Section 2.2.\n    // [GLV] Page 196, Section 4 (Decomposing K).\n    assert(lambda instanceof BN);\n    assert(!lambda.red);\n    assert(lambda.sign() > 0);\n    assert(this.n.sign() > 0);\n\n    // Note that we insert the approximate square\n    // root checks as described in algorithm 3.74.\n    //\n    // Algorithm 2.19 is defined as:\n    //\n    // 1. u <- a\n    //    v <- b\n    //\n    // 2. x1 <- 1\n    //    y1 <- 0\n    //    x2 <- 0\n    //    y2 <- 1\n    //\n    // 3. while u != 0 do\n    //\n    // 3.1. q <- floor(v / u)\n    //      r <- v - q * u\n    //      x <- x2 - q * x1\n    //      y <- y2 - q * y1\n    //\n    // 3.2. v <- u\n    //      u <- r\n    //      x2 <- x1\n    //      x1 <- x\n    //      y2 <- y1\n    //      y1 <- y\n    //\n    // 4. d <- v\n    //    x <- x2\n    //    y <- y2\n    //\n    // 5. Return (d, x, y).\n\n    // Start with an approximate square root of n.\n    const sqrtn = this.n.ushrn(this.n.bitLength() >>> 1);\n\n    let u = lambda; // r1\n    let v = this.n.clone(); // r0\n    let x1 = new BN(1); // t1\n    let y1 = new BN(0); // t0\n    let x2 = new BN(0); // s1\n    let y2 = new BN(1); // s0\n\n    // All vectors are roots of: a + b * lambda = 0 (mod n).\n    let rl, tl;\n\n    // First vector.\n    let rl1, tl1;\n\n    // Inner.\n    let i = 0;\n    let j = 0;\n    let p;\n\n    // Compute EGCD.\n    while (!u.isZero() && i < 2) {\n      const q = v.quo(u);\n      const r = v.sub(q.mul(u));\n      const x = x2.sub(q.mul(x1));\n      const y = y2.sub(q.mul(y1));\n\n      // Check for r < sqrt(n).\n      if (j === 0 && r.cmp(sqrtn) < 0) {\n        rl = p;\n        tl = x1;\n        rl1 = r;\n        tl1 = x;\n        j = 1; // 1 more round.\n      }\n\n      p = r;\n      v = u;\n      u = r;\n      x2 = x1;\n      x1 = x;\n      y2 = y1;\n      y1 = y;\n\n      i += j;\n    }\n\n    // Should never happen.\n    assert(j !== 0, 'Could not find r < sqrt(n).');\n\n    // Second vector.\n    const rl2 = x2;\n    const tl2 = x1;\n\n    return [\n      rl,\n      tl,\n      rl1,\n      tl1,\n      rl2,\n      tl2\n    ];\n  }\n\n  _getEndoPrecomp(basis) {\n    // Precompute `g1` and `g2` to avoid round division.\n    //\n    // [JCEN12] Page 5, Section 4.3.\n    //\n    // Computation:\n    //\n    //   d = a1 * b2 - b1 * a2\n    //   t = ceil(log2(d+1)) + p\n    //   g1 = round((2^t * b2) / d)\n    //   g2 = round((2^t * b1) / d)\n    //\n    // Where:\n    //\n    //   `p` is the number of precision bits.\n    //   `d` is equal to `n` (the curve order).\n    //\n    // The paper above uses 2 as the value of `p`,\n    // whereas libsecp256k1 uses 128 (total=384).\n    //\n    // We pick precision for `g1` and `g2` such that:\n    //\n    //   abs(g1) < n\n    //   abs(g2) < n\n    //\n    // This ensures maximum precision for the constants\n    // while also ensuring they fit into a fixed number\n    // of scalar limbs in more optimized implementations.\n    //\n    // Furthermore, we attempt to align to a limb width\n    // of 64 bits. This allows us to optimize the shift,\n    // a la libsecp256k1[1].\n    //\n    // [1] https://github.com/bitcoin-core/secp256k1/pull/822\n    assert(Array.isArray(basis));\n    assert(basis.length === 2);\n    assert(basis[0] instanceof Vector);\n    assert(basis[1] instanceof Vector);\n\n    const [v1, v2] = basis;\n    const d = v1.a.mul(v2.b).isub(v1.b.mul(v2.a));\n    const bits = d.bitLength();\n    const align = bits >= 160;\n\n    assert(d.eq(this.n));\n\n    // Start with a rough estimate.\n    let shift = bits + Math.ceil(bits / 2) + 1;\n    let g1, g2;\n\n    if (align)\n      shift -= shift & 63;\n\n    while (shift > bits) {\n      g1 = v2.b.ushln(shift).divRound(d);\n      g2 = v1.b.ushln(shift).divRound(d);\n\n      if (g1.ucmp(d) < 0 && g2.ucmp(d) < 0)\n        break;\n\n      if (align)\n        shift -= 64;\n      else\n        shift -= 1;\n    }\n\n    if (shift <= bits)\n      throw new Error('Could not calculate g1 and g2.');\n\n    return [shift, g1, g2];\n  }\n\n  _endoSplit(k) {\n    // Balanced length-two representation of a multiplier.\n    //\n    // [GECC] Algorithm 3.74, Page 127, Section 3.5.\n    //\n    // Also note that it is possible to precompute[1]\n    // values in order to avoid the division[2][3][4].\n    //\n    // This involves precomputing `g1` and `g2 (see\n    // above). `c1` and `c2` can then be computed as\n    // follows:\n    //\n    //   t = ceil(log2(n+1)) + p\n    //   c1 = (k * g1) >> t\n    //   c2 = -((k * g2) >> t)\n    //\n    // Where `>>` is an _unsigned_ right shift. Also\n    // note that the last bit discarded in the shift\n    // must be stored. If it is 1, then add 1 to the\n    // scalar (absolute addition).\n    //\n    // It's worth noting that libsecp256k1 uses a\n    // different calculation along the lines of:\n    //\n    //   t = ceil(log2(n+1)) + p\n    //   c1 = ((k * g1) >> t) * -b1\n    //   c2 = ((k * -g2) >> t) * -b2\n    //   k2 = c1 + c2\n    //   k1 = k2 * -lambda + k\n    //\n    // So, in the future, we can consider changing\n    // step 4 to:\n    //\n    //   4. Compute c1 = (k * g1) >> t\n    //          and c2 = -((k * g2) >> t).\n    //\n    //   const [shift, g1, g2] = this.endo.pre;\n    //   const c1 = k.mulShift(g1, shift);\n    //   const c2 = k.mulShift(g2, shift).ineg();\n    //\n    // Once we're brave enough, that is.\n    //\n    // [1] [JCEN12] Page 5, Section 4.3.\n    // [2] https://github.com/bitcoin-core/secp256k1/blob/0b70241/src/scalar_impl.h#L259\n    // [3] https://github.com/bitcoin-core/secp256k1/pull/21\n    // [4] https://github.com/bitcoin-core/secp256k1/pull/127\n    assert(k instanceof BN);\n    assert(!k.red);\n    assert(!this.n.isZero());\n\n    const [v1, v2] = this.endo.basis;\n\n    // 4. Compute c1 = round(b2 * k / n)\n    //        and c2 = round(-b1 * k / n).\n    const c1 = v2.b.mul(k).divRound(this.n);\n    const c2 = v1.b.neg().mul(k).divRound(this.n);\n\n    // 5. Compute k1 = k - c1 * a1 - c2 * a2\n    //        and k2 = -c1 * b1 - c2 * b2.\n    const p1 = c1.mul(v1.a);\n    const p2 = c2.mul(v2.a);\n    const q1 = c1.ineg().mul(v1.b);\n    const q2 = c2.mul(v2.b);\n\n    // Calculate answer.\n    const k1 = k.sub(p1).isub(p2);\n    const k2 = q1.isub(q2);\n\n    // 6. Return (k1, k2).\n    return [k1, k2];\n  }\n\n  _endoBeta(point) {\n    assert(point instanceof ShortPoint);\n    return [point, point._getBeta()];\n  }\n\n  _endoWnafMulAdd(points, coeffs) {\n    // Point multiplication with efficiently computable endomorphisms.\n    //\n    // [GECC] Algorithm 3.77, Page 129, Section 3.5.\n    // [GLV] Page 193, Section 3 (Using Efficient Endomorphisms).\n    //\n    // Note it may be possible to do this 4-dimensionally [4GLV].\n    assert(Array.isArray(points));\n    assert(Array.isArray(coeffs));\n    assert(points.length === coeffs.length);\n    assert(this.endo != null);\n\n    const len = points.length;\n    const npoints = new Array(len * 2);\n    const ncoeffs = new Array(len * 2);\n\n    for (let i = 0; i < len; i++) {\n      const [p1, p2] = this._endoBeta(points[i]);\n      const [k1, k2] = this._endoSplit(coeffs[i]);\n\n      npoints[i * 2 + 0] = p1;\n      ncoeffs[i * 2 + 0] = k1;\n      npoints[i * 2 + 1] = p2;\n      ncoeffs[i * 2 + 1] = k2;\n    }\n\n    return this._wnafMulAdd(5, npoints, ncoeffs);\n  }\n\n  _sswu(u) {\n    // Simplified Shallue-Woestijne-Ulas Method.\n    //\n    // Distribution: 3/8.\n    //\n    // [SSWU1] Page 15-16, Section 7. Appendix G.\n    // [SSWU2] Page 5, Theorem 2.3.\n    // [H2EC] \"Simplified Shallue-van de Woestijne-Ulas Method\".\n    //\n    // Assumptions:\n    //\n    //   - a != 0, b != 0.\n    //   - Let z be a non-square in F(p).\n    //   - z != -1.\n    //   - The polynomial g(x) - z is irreducible over F(p).\n    //   - g(b / (z * a)) is square in F(p).\n    //   - u != 0, u != +-sqrt(-1 / z).\n    //\n    // Map:\n    //\n    //   g(x) = x^3 + a * x + b\n    //   t1 = 1 / (z^2 * u^4 + z * u^2)\n    //   x1 = (-b / a) * (1 + t1)\n    //   x1 = b / (z * a), if t1 = 0\n    //   x2 = z * u^2 * x1\n    //   x = x1, if g(x1) is square\n    //     = x2, otherwise\n    //   y = sign(u) * abs(sqrt(g(x)))\n    const {b, z, ai, zi, one} = this;\n    const z2 = z.redSqr();\n    const ba = b.redNeg().redMul(ai);\n    const bza = b.redMul(zi).redMul(ai);\n    const u2 = u.redSqr();\n    const u4 = u2.redSqr();\n    const t0 = z2.redMul(u4).redIAdd(z.redMul(u2));\n    const t1 = t0.isZero() ? t0 : t0.redInvert();\n    const x1 = t1.isZero() ? bza : ba.redMul(one.redAdd(t1));\n    const x2 = z.redMul(u2).redMul(x1);\n    const y1 = this.solveY2(x1);\n    const y2 = this.solveY2(x2);\n    const alpha = y1.redIsSquare() | 0;\n    const x = [x1, x2][alpha ^ 1];\n    const y = [y1, y2][alpha ^ 1].redSqrt();\n\n    if (y.redIsOdd() !== u.redIsOdd())\n      y.redINeg();\n\n    return this.point(x, y);\n  }\n\n  _sswui(p, hint) {\n    // Inverting the Map (Simplified Shallue-Woestijne-Ulas).\n    //\n    // Assumptions:\n    //\n    //   - a^2 * x^2 - 2 * a * b * x - 3 * b^2 is square in F(p).\n    //   - If r < 3 then x != -b / a.\n    //\n    // Unlike SVDW, the preimages here are evenly\n    // distributed (more or less). SSWU covers ~3/8\n    // of the curve points. Each preimage has a 1/2\n    // chance of mapping to either x1 or x2.\n    //\n    // Assuming the point is within that set, each\n    // point has a 1/4 chance of inverting to any\n    // of the preimages. This means we can simply\n    // randomly select a preimage if one exists.\n    //\n    // However, the [SVDW2] sampling method seems\n    // slighly faster in practice for [SQUARED].\n    //\n    // Map:\n    //\n    //   c = sqrt(a^2 * x^2 - 2 * a * b * x - 3 * b^2)\n    //   u1 = -(a * x + b - c) / (2 * (a * x + b) * z)\n    //   u2 = -(a * x + b + c) / (2 * (a * x + b) * z)\n    //   u3 = -(a * x + b - c) / (2 * b * z)\n    //   u4 = -(a * x + b + c) / (2 * b * z)\n    //   r = random integer in [1,4]\n    //   u = sign(y) * abs(sqrt(ur))\n    const {a, b, z} = this;\n    const {x, y} = p;\n    const r = hint & 3;\n    const a2x2 = a.redSqr().redMul(x.redSqr());\n    const abx2 = a.redMul(b).redMul(x).redIMuln(2);\n    const b23 = b.redSqr().redMuln(3);\n    const axb = a.redMul(x).redIAdd(b);\n    const c = a2x2.redISub(abx2).redISub(b23).redSqrt();\n    const n0 = axb.redSub(c).redINeg();\n    const n1 = axb.redAdd(c).redINeg();\n    const d0 = axb.redMul(z).redIMuln(2);\n    const d1 = b.redMul(z).redIMuln(2);\n    const n = [n0, n1][r & 1]; // r = 1 or 3\n    const d = [d0, d1][r >>> 1]; // r = 2 or 3\n    const u = n.redDivSqrt(d);\n\n    if (u.redIsOdd() !== y.redIsOdd())\n      u.redINeg();\n\n    return u;\n  }\n\n  _svdwf(u) {\n    // Shallue-van de Woestijne Method.\n    //\n    // Distribution: 9/16.\n    //\n    // [SVDW1] Section 5.\n    // [SVDW2] Page 8, Section 3.\n    //         Page 15, Section 6, Algorithm 1.\n    // [H2EC] \"Shallue-van de Woestijne Method\".\n    //\n    // Assumptions:\n    //\n    //   - p = 1 (mod 3).\n    //   - a = 0, b != 0.\n    //   - Let z be a unique element in F(p).\n    //   - g((sqrt(-3 * z^2) - z) / 2) is square in F(p).\n    //   - u != 0, u != +-sqrt(-g(z)).\n    //\n    // Map:\n    //\n    //   g(x) = x^3 + b\n    //   c = sqrt(-3 * z^2)\n    //   t1 = u^2 + g(z)\n    //   t2 = 1 / (u^2 * t1)\n    //   t3 = u^4 * t2 * c\n    //   x1 = (c - z) / 2 - t3\n    //   x2 = t3 - (c + z) / 2\n    //   x3 = z - t1^3 * t2 / (3 * z^2)\n    //   x = x1, if g(x1) is square\n    //     = x2, if g(x2) is square\n    //     = x3, otherwise\n    //   y = sign(u) * abs(sqrt(g(x)))\n    const {c, z, zi, i2, i3} = this;\n    const gz = this.solveY2(z);\n    const z3 = i3.redMul(zi.redSqr());\n    const u2 = u.redSqr();\n    const u4 = u2.redSqr();\n    const t1 = u2.redAdd(gz);\n    const u2t1 = u2.redMul(t1);\n    const t2 = u2t1.isZero() ? u2t1 : u2t1.redInvert();\n    const t3 = u4.redMul(t2).redMul(c);\n    const t4 = t1.redSqr().redMul(t1);\n    const x1 = c.redSub(z).redMul(i2).redISub(t3);\n    const x2 = t3.redSub(c.redAdd(z).redMul(i2));\n    const x3 = z.redSub(t4.redMul(t2).redMul(z3));\n    const y1 = this.solveY2(x1);\n    const y2 = this.solveY2(x2);\n    const y3 = this.solveY2(x3);\n    const alpha = y1.redJacobi() | 1;\n    const beta = y2.redJacobi() | 1;\n    const i = mod((alpha - 1) * beta, 3);\n    const x = [x1, x2, x3][i];\n    const y = [y1, y2, y3][i];\n\n    return [x, y];\n  }\n\n  _svdw(u) {\n    const [x, yy] = this._svdwf(u);\n    const y = yy.redSqrt();\n\n    if (y.redIsOdd() !== u.redIsOdd())\n      y.redINeg();\n\n    return this.point(x, y);\n  }\n\n  _svdwi(p, hint) {\n    // Inverting the Map (Shallue-van de Woestijne).\n    //\n    // [SQUARED] Algorithm 1, Page 8, Section 3.3.\n    // [SVDW2] Page 12, Section 5.\n    // [SVDW3] \"Inverting the map\".\n    //\n    // Assumptions:\n    //\n    //   - If r = 1 then x != -(c + z) / 2.\n    //   - If r = 2 then x != (c - z) / 2.\n    //   - If r > 2 then (t0 - t1 + t2) is square in F(p).\n    //   - f(f^-1(x)) = x where f is the map function.\n    //\n    // We use the sampling method from [SVDW2],\n    // _not_ [SQUARED]. This seems to have a\n    // better distribution in practice.\n    //\n    // Note that [SVDW3] also appears to be\n    // incorrect in terms of distribution.\n    //\n    // The distribution of f(u), assuming u is\n    // random, is (1/2, 1/4, 1/4).\n    //\n    // To mirror this, f^-1(x) should simply\n    // pick (1/2, 1/4, 1/8, 1/8).\n    //\n    // To anyone running the forward map, our\n    // strings will appear to be random.\n    //\n    // Map:\n    //\n    //   g(x) = x^3 + b\n    //   c = sqrt(-3 * z^2)\n    //   t0 = 9 * (x^2 * z^2 + z^4)\n    //   t1 = 18 * x * z^3\n    //   t2 = 12 * g(z) * (x - z)\n    //   t3 = sqrt(t0 - t1 + t2)\n    //   t4 = t3 * z\n    //   u1 = g(z) * (c - 2 * x - z) / (c + 2 * x + z)\n    //   u2 = g(z) * (c + 2 * x + z) / (c - 2 * x - z)\n    //   u3 = (3 * (z^3 - x * z^2) - 2 * g(z) + t4) / 2\n    //   u4 = (3 * (z^3 - x * z^2) - 2 * g(z) - t4) / 2\n    //   r = random integer in [1,4]\n    //   u = sign(y) * abs(sqrt(ur))\n    const {b, c, z, zero, two} = this;\n    const {x, y} = p;\n    const r = hint & 3;\n    const z2 = z.redSqr();\n    const z3 = z2.redMul(z);\n    const z4 = z2.redSqr();\n    const gz = z3.redAdd(b);\n    const gz2 = gz.redMuln(2);\n    const xx = x.redSqr();\n    const x2z = x.redMuln(2).redIAdd(z);\n    const xz2 = x.redMul(z2);\n    const c0 = c.redSub(x2z);\n    const c1 = c.redAdd(x2z);\n    const t0 = xx.redMul(z2).redIAdd(z4).redIMuln(9);\n    const t1 = x.redMul(z3).redIMuln(18);\n    const t2 = gz.redMul(x.redSub(z)).redIMuln(12);\n    const t3 = r >= 2 ? t0.redISub(t1).redIAdd(t2).redSqrt() : zero;\n    const t4 = t3.redMul(z);\n    const t5 = z3.redISub(xz2).redIMuln(3).redISub(gz2);\n    const n0 = gz.redMul(c0);\n    const n1 = gz.redMul(c1);\n    const n2 = t5.redAdd(t4);\n    const n3 = t5.redSub(t4);\n    const d2 = two;\n    const n = [n0, n1, n2, n3][r];\n    const d = [c1, c0, d2, d2][r];\n    const u = n.redDivSqrt(d);\n    const [x0] = this._svdwf(u);\n\n    if (!x0.eq(x))\n      throw new Error('Invalid point.');\n\n    if (u.redIsOdd() !== y.redIsOdd())\n      u.redINeg();\n\n    return u;\n  }\n\n  isElliptic() {\n    const {a, b} = this;\n    const a2 = a.redSqr();\n    const a3 = a2.redMul(a);\n    const b2 = b.redSqr();\n    const d = b2.redMuln(27).redIAdd(a3.redMuln(4));\n\n    // 4 * a^3 + 27 * b^2 != 0\n    return !d.isZero();\n  }\n\n  jinv() {\n    // [ARITH1] Page 71, Section 4.4.\n    // http://mathworld.wolfram.com/j-Invariant.html\n    const {a, b} = this;\n    const a2 = a.redSqr();\n    const a3 = a2.redMul(a);\n    const b2 = b.redSqr();\n    const t0 = a3.redMuln(4);\n    const lhs = t0.redMuln(1728);\n    const rhs = b2.redMuln(27).redIAdd(t0);\n\n    if (rhs.isZero())\n      throw new Error('Curve is not elliptic.');\n\n    // (1728 * 4 * a^3) / (4 * a^3 + 27 * b^2)\n    return lhs.redDiv(rhs).fromRed();\n  }\n\n  point(x, y) {\n    return new ShortPoint(this, x, y);\n  }\n\n  jpoint(x, y, z) {\n    return new JPoint(this, x, y, z);\n  }\n\n  solveX(y) {\n    assert(y instanceof BN);\n\n    if (!this.a.isZero())\n      throw new Error('Not implemented.');\n\n    // x^3 = y^2 - b\n    const y2 = y.redSqr();\n    const x3 = y2.redSub(this.b);\n\n    return cubeRoots(x3);\n  }\n\n  solveY2(x) {\n    // [GECC] Page 89, Section 3.2.2.\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw.html\n    assert(x instanceof BN);\n\n    // y^2 = x^3 + a * x + b\n    const x3 = x.redSqr().redMul(x);\n    const y2 = x3.redIAdd(this.b);\n\n    if (!this.zeroA) {\n      // Save some cycles for a = -3.\n      if (this.threeA)\n        y2.redIAdd(x.redMuln(-3));\n      else\n        y2.redIAdd(this.a.redMul(x));\n    }\n\n    return y2;\n  }\n\n  validate(point) {\n    assert(point instanceof ShortPoint);\n\n    if (point.inf)\n      return true;\n\n    const {x, y} = point;\n    const y2 = this.solveY2(x);\n\n    return y.redSqr().eq(y2);\n  }\n\n  pointFromX(x, sign = null) {\n    assert(x instanceof BN);\n    assert(sign == null || typeof sign === 'boolean');\n\n    if (!x.red)\n      x = x.toRed(this.red);\n\n    const y = this.solveY(x);\n\n    if (sign != null) {\n      if (this.h.cmpn(1) > 0) {\n        if (y.isZero() && sign)\n          throw new Error('Invalid point.');\n      }\n\n      if (y.redIsOdd() !== sign)\n        y.redINeg();\n    }\n\n    return this.point(x, y);\n  }\n\n  pointFromY(y, index = 0) {\n    assert(y instanceof BN);\n    assert((index >>> 0) === index);\n\n    if (!y.red)\n      y = y.toRed(this.red);\n\n    const coords = this.solveX(y);\n\n    if (index >= coords.length)\n      throw new Error('Invalid X coordinate index.');\n\n    const x = coords[index];\n\n    return this.point(x, y);\n  }\n\n  isIsomorphic(curve) {\n    // [GECC] Page 84, Section 3.1.5.\n    // [ARITH1] Page 286, Section 13.2.3.c.\n    assert(curve instanceof Curve);\n\n    if (!curve.p.eq(this.p))\n      return false;\n\n    let u2, u3;\n    try {\n      [u2, u3] = this._scale(curve);\n    } catch (e) {\n      return false;\n    }\n\n    // E(a,b) <-> E(au^4,bu^6)\n    if (curve.type === 'short') {\n      // a' = a * u^4, b' = b * u^6\n      const a = this.field(curve.a).redMul(u2.redSqr());\n      const b = this.field(curve.b).redMul(u3.redSqr());\n\n      return this.a.eq(a) && this.b.eq(b);\n    }\n\n    // E(a,b) <-> M(A,B)\n    if (curve.type === 'mont') {\n      // (A / (3 * B))^3 + a * (A / (3 * B)) + b = 0\n      const {a3, bi} = curve;\n      const x = this.field(a3.redMul(bi)).redMul(u2);\n      const y2 = this.solveY2(x);\n\n      return y2.isZero();\n    }\n\n    // E(a,b) <-> E(a,d)\n    if (curve.type === 'edwards') {\n      // ((a' + d') / 6)^3 + a * ((a' + d') / 6) + b = 0\n      const x = this.field(curve.ad6).redMul(u2);\n      const y2 = this.solveY2(x);\n\n      return y2.isZero();\n    }\n\n    return false;\n  }\n\n  isIsogenous(curve) {\n    assert(curve instanceof Curve);\n    return false;\n  }\n\n  pointFromShort(point) {\n    // [GECC] Page 84, Section 3.1.5.\n    // [ALT] Appendix F.3 (Isomorphic Mapping between Weierstrass Curves).\n    assert(point instanceof ShortPoint);\n\n    if (this.isIsomorphic(point.curve)) {\n      // Isomorphic maps for E(a,b)<->E(au^4,bu^6):\n      //\n      //   x' = x * u^2\n      //   y' = y * u^3\n      //\n      // Where a * u^4 = a' and b * u^6 = b'.\n      if (point.isInfinity())\n        return this.point();\n\n      const [u2, u3] = this._scale(point.curve);\n      const x = this.field(point.x);\n      const y = this.field(point.y);\n      const nx = x.redMul(u2);\n      const ny = y.redMul(u3);\n\n      return this.point(nx, ny);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromMont(point) {\n    // [ALT] Appendix E.2 (Switching between Alternative Representations).\n    // [MONT2] \"Equivalence with Weierstrass curves\"\n    assert(point instanceof MontPoint);\n\n    if (this.isIsomorphic(point.curve)) {\n      // Equivalence for M(A,B)->E(a,b):\n      //\n      //   x = (u + A / 3) / B\n      //   y = v / B\n      //\n      // Undefined if ((u^3 + A * u^2 + u) / B) is not square.\n      if (point.isInfinity())\n        return this.point();\n\n      const {a3, bi} = point.curve;\n      const [u2, u3] = this._scale(point.curve);\n      const nx = point.x.redAdd(a3).redMul(bi);\n      const ny = point.y.redMul(bi);\n\n      return this.point(this.field(nx).redMul(u2),\n                        this.field(ny).redMul(u3));\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromEdwards(point) {\n    // [TWISTEQ] Section 2.\n    assert(point instanceof EdwardsPoint);\n\n    if (this.isIsomorphic(point.curve)) {\n      // Equivalence for E(a,d)->E(a',b'):\n      //\n      //   x' = ((5 * d - a) * y + d - 5 * a) / (12 * (y - 1))\n      //   y' = (d - a) * (y + 1) / (4 * x * (y - 1))\n      //\n      // Undefined for x = 0 or y = 1.\n      //\n      // Exceptional Cases:\n      //   - (0, 1) -> O\n      //   - (0, -1) -> ((a + d) / 6, 0)\n      //\n      // Unexceptional Cases:\n      //   - (sqrt(1 / a), 0) -> ((5 * a - d) / 12, (a - d) / 4 * sqrt(a))\n      const {a, d, ad6} = point.curve;\n      const [u2, u3] = this._scale(point.curve);\n\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero()) {\n        const x = this.field(ad6).redMul(u2);\n        return this.point(x, this.zero);\n      }\n\n      const {x, y, z} = point;\n      const a5 = a.redMuln(5);\n      const d5 = d.redMuln(5);\n      const dma = d.redSub(a);\n      const d5a = d5.redSub(a);\n      const da5 = d.redSub(a5);\n      const ypz = y.redAdd(z);\n      const ymz = y.redSub(z);\n      const xx = d5a.redMul(y).redIAdd(da5.redMul(z));\n      const xz = ymz.redMuln(12);\n      const yy = dma.redMul(ypz).redMul(z);\n      const yz = ymz.redMul(x).redIMuln(4);\n\n      return this.cpoint(this.field(xx).redMul(u2),\n                         this.field(xz),\n                         this.field(yy).redMul(u3),\n                         this.field(yz));\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromUniform(u) {\n    assert(u instanceof BN);\n\n    // z = 0 or b = 0\n    if (this.z.isZero() || this.b.isZero())\n      throw new Error('Not implemented.');\n\n    // a != 0, b != 0\n    if (!this.a.isZero())\n      return this._sswu(u);\n\n    // p = 1 mod 3, a = 0, b != 0\n    if (!this.c.isZero())\n      return this._svdw(u);\n\n    throw new Error('Not implemented.');\n  }\n\n  pointToUniform(p, hint) {\n    // Convert a short weierstrass point to a field\n    // element by inverting either the SSWU or SVDW\n    // map.\n    //\n    // Hint Layout:\n    //\n    //   [00000000] [0000] [0000]\n    //        |        |      |\n    //        |        |      +-- preimage index\n    //        |        +--- subgroup\n    //        +-- bits to OR with uniform bytes\n    assert(p instanceof ShortPoint);\n    assert((hint >>> 0) === hint);\n\n    // z = 0 or b = 0\n    if (this.z.isZero() || this.b.isZero())\n      throw new Error('Not implemented.');\n\n    // P = O\n    if (p.isInfinity())\n      throw new Error('Invalid point.');\n\n    // Add a random torsion component.\n    const i = ((hint >>> 4) & 15) % this.torsion.length;\n    const q = p.add(this.torsion[i]);\n\n    return wrapErrors(() => {\n      // a != 0, b != 0\n      if (!this.a.isZero())\n        return this._sswui(q, hint);\n\n      // p = 1 mod 3, a = 0, b != 0\n      if (!this.c.isZero())\n        return this._svdwi(q, hint);\n\n      throw new Error('Not implemented.');\n    });\n  }\n\n  mulAll(points, coeffs) {\n    return super.mulAll(points, coeffs).toP();\n  }\n\n  affinizeAll(points) {\n    const out = this.normalizeAll(points);\n\n    for (let i = 0; i < out.length; i++)\n      out[i] = out[i].toP();\n\n    return out;\n  }\n\n  decodePoint(bytes) {\n    return ShortPoint.decode(this, bytes);\n  }\n\n  encodeX(point) {\n    assert(point instanceof Point);\n    return point.encodeX();\n  }\n\n  decodeEven(bytes) {\n    return ShortPoint.decodeEven(this, bytes);\n  }\n\n  decodeSquare(bytes) {\n    return ShortPoint.decodeSquare(this, bytes);\n  }\n\n  toShort(a0, odd, sign = null) {\n    const [a, b] = this._short(a0, odd);\n\n    const curve = new ShortCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      b: b,\n      n: this.n,\n      h: this.h\n    });\n\n    if (sign != null) {\n      const [, u3] = curve._scale(this);\n\n      if (u3.redIsOdd() !== sign)\n        u3.redINeg();\n    }\n\n    if (!this.g.isInfinity())\n      curve.g = curve.pointFromShort(this.g);\n\n    for (let i = 0; i < this.h.word(0); i++)\n      curve.torsion[i] = curve.pointFromShort(this.torsion[i]);\n\n    return curve;\n  }\n\n  toMont(b0, odd, sign = null) {\n    const [a, b] = this._mont(b0, odd);\n\n    const curve = new MontCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      b: b,\n      n: this.n,\n      h: this.h\n    });\n\n    if (sign != null) {\n      const [, u3] = this._scale(curve);\n\n      if (u3.redIsOdd() !== sign)\n        u3.redINeg();\n    }\n\n    if (!this.g.isInfinity())\n      curve.g = curve.pointFromShort(this.g);\n\n    for (let i = 0; i < this.h.word(0); i++)\n      curve.torsion[i] = curve.pointFromShort(this.torsion[i]);\n\n    return curve;\n  }\n\n  toEdwards(a0, odd, sign = null) {\n    const [a, d] = this._edwards(a0, odd);\n\n    const curve = new EdwardsCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      d: d,\n      n: this.n,\n      h: this.h\n    });\n\n    if (sign != null) {\n      const [, u3] = this._scale(curve);\n\n      if (u3.redIsOdd() !== sign)\n        u3.redINeg();\n    }\n\n    if (!this.g.isInfinity()) {\n      curve.g = curve.pointFromShort(this.g);\n      curve.g.normalize();\n    }\n\n    if (curve.isComplete()) {\n      for (let i = 0; i < this.h.word(0); i++) {\n        curve.torsion[i] = curve.pointFromShort(this.torsion[i]);\n        curve.torsion[i].normalize();\n      }\n    }\n\n    return curve;\n  }\n\n  pointFromJSON(json) {\n    return ShortPoint.fromJSON(this, json);\n  }\n\n  toJSON(pre) {\n    const json = super.toJSON(pre);\n\n    json.a = this.a.fromRed().toJSON();\n    json.b = this.b.fromRed().toJSON();\n\n    if (!this.c.isZero())\n      json.c = this.c.fromRed().toJSON();\n\n    return json;\n  }\n}\n\n/**\n * ShortPoint\n */\n\nclass ShortPoint extends Point {\n  constructor(curve, x, y) {\n    assert(curve instanceof ShortCurve);\n\n    super(curve, types.AFFINE);\n\n    this.x = this.curve.zero;\n    this.y = this.curve.zero;\n    this.inf = true;\n\n    if (x != null)\n      this._init(x, y);\n  }\n\n  _init(x, y) {\n    assert(x instanceof BN);\n    assert(y instanceof BN);\n\n    this.x = x;\n    this.y = y;\n\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n\n    this.inf = false;\n  }\n\n  _getBeta() {\n    if (!this.curve.endo)\n      return null;\n\n    if (this.pre && this.pre.beta)\n      return this.pre.beta;\n\n    // Augment the point with our beta value.\n    // This is the counterpart to `k2` after\n    // the endomorphism split of `k`.\n    //\n    // Note that if we have precomputation,\n    // we have to clone and update all of the\n    // precomputed points below.\n    const xb = this.x.redMul(this.curve.endo.beta);\n    const beta = this.curve.point(xb, this.y);\n\n    if (this.pre) {\n      beta.pre = this.pre.map((point) => {\n        const xb = point.x.redMul(this.curve.endo.beta);\n        return this.curve.point(xb, point.y);\n      });\n\n      this.pre.beta = beta;\n    }\n\n    return beta;\n  }\n\n  _getJNAF(point) {\n    assert(point instanceof ShortPoint);\n\n    if (this.inf || point.inf)\n      return super._getJNAF(point);\n\n    // Create comb for JSF.\n    const comb = [\n      this, // 1\n      null, // 3\n      null, // 5\n      point // 7\n    ];\n\n    // Try to avoid Jacobian points, if possible.\n    if (this.y.eq(point.y)) {\n      comb[1] = this.add(point);\n      comb[2] = this.toJ().sub(point);\n    } else if (this.y.eq(point.y.redNeg())) {\n      comb[1] = this.toJ().add(point);\n      comb[2] = this.sub(point);\n    } else {\n      comb[1] = this.toJ().add(point);\n      comb[2] = this.toJ().sub(point);\n    }\n\n    return comb;\n  }\n\n  clone() {\n    if (this.inf)\n      return this.curve.point();\n\n    return this.curve.point(this.x, this.y);\n  }\n\n  scale(a) {\n    return this.toJ().scale(a);\n  }\n\n  neg() {\n    // P = O\n    if (this.inf)\n      return this;\n\n    // -(X1, Y1) = (X1, -Y1)\n    return this.curve.point(this.x, this.y.redNeg());\n  }\n\n  add(p) {\n    // [GECC] Page 80, Section 3.1.2.\n    //\n    // Addition Law:\n    //\n    //   l = (y1 - y2) / (x1 - x2)\n    //   x3 = l^2 - x1 - x2\n    //   y3 = l * (x1 - x3) - y1\n    //\n    // 1I + 2M + 1S + 6A\n    assert(p instanceof ShortPoint);\n\n    // O + P = P\n    if (this.inf)\n      return p;\n\n    // P + O = P\n    if (p.inf)\n      return this;\n\n    // P + P, P + -P\n    if (this.x.eq(p.x)) {\n      // P + -P = O\n      if (!this.y.eq(p.y))\n        return this.curve.point();\n\n      // P + P = 2P\n      return this.dbl();\n    }\n\n    // X1 != X2, Y1 = Y2\n    if (this.y.eq(p.y)) {\n      // X3 = -X1 - X2\n      const nx = this.x.redNeg().redISub(p.x);\n\n      // Y3 = -Y1\n      const ny = this.y.redNeg();\n\n      // Skip the inverse.\n      return this.curve.point(nx, ny);\n    }\n\n    // H = X1 - X2\n    const h = this.x.redSub(p.x);\n\n    // R = Y1 - Y2\n    const r = this.y.redSub(p.y);\n\n    // L = R / H\n    const l = r.redDiv(h);\n\n    // X3 = L^2 - X1 - X2\n    const nx = l.redSqr().redISub(this.x).redISub(p.x);\n\n    // Y3 = L * (X1 - X3) - Y1\n    const ny = l.redMul(this.x.redSub(nx)).redISub(this.y);\n\n    return this.curve.point(nx, ny);\n  }\n\n  dbl() {\n    // [GECC] Page 80, Section 3.1.2.\n    //\n    // Addition Law (doubling):\n    //\n    //   l = (3 * x1^2 + a) / (2 * y1)\n    //   x3 = l^2 - 2 * x1\n    //   y3 = l * (x1 - x3) - y1\n    //\n    // 1I + 2M + 2S + 3A + 2*2 + 1*3\n\n    // P = O\n    if (this.inf)\n      return this;\n\n    // Y1 = 0\n    if (this.y.isZero())\n      return this.curve.point();\n\n    // XX = X1^2\n    const xx = this.x.redSqr();\n\n    // M = 3 * XX + a\n    const m = xx.redIMuln(3).redIAdd(this.curve.a);\n\n    // Z = 2 * Y1\n    const z = this.y.redMuln(2);\n\n    // L = M / Z\n    const l = m.redDiv(z);\n\n    // X3 = L^2 - 2 * X1\n    const nx = l.redSqr().redISub(this.x).redISub(this.x);\n\n    // Y3 = L * (X1 - X3) - Y1\n    const ny = l.redMul(this.x.redSub(nx)).redISub(this.y);\n\n    return this.curve.point(nx, ny);\n  }\n\n  dblp(pow) {\n    return this.toJ().dblp(pow).toP();\n  }\n\n  getX() {\n    if (this.inf)\n      throw new Error('Invalid point.');\n\n    return this.x.fromRed();\n  }\n\n  getY() {\n    if (this.inf)\n      throw new Error('Invalid point.');\n\n    return this.y.fromRed();\n  }\n\n  eq(p) {\n    assert(p instanceof ShortPoint);\n\n    // P = Q\n    if (this === p)\n      return true;\n\n    // P = O\n    if (this.inf)\n      return p.inf;\n\n    // Q = O\n    if (p.inf)\n      return false;\n\n    // X1 = X2, Y1 = Y2\n    return this.x.eq(p.x)\n        && this.y.eq(p.y);\n  }\n\n  cmp(point) {\n    assert(point instanceof ShortPoint);\n\n    if (this.inf && !point.inf)\n      return -1;\n\n    if (!this.inf && point.inf)\n      return 1;\n\n    if (this.inf && point.inf)\n      return 0;\n\n    return this.order().cmp(point.order())\n        || this.getX().cmp(point.getX())\n        || this.getY().cmp(point.getY());\n  }\n\n  isInfinity() {\n    // Infinity cannot be represented in\n    // the affine space, except by a flag.\n    return this.inf;\n  }\n\n  isOrder2() {\n    if (this.inf)\n      return false;\n\n    return this.y.isZero();\n  }\n\n  isOdd() {\n    if (this.inf)\n      return false;\n\n    return this.y.redIsOdd();\n  }\n\n  isEven() {\n    if (this.inf)\n      return false;\n\n    return this.y.redIsEven();\n  }\n\n  isSquare() {\n    if (this.inf)\n      return false;\n\n    return this.y.redJacobi() !== -1;\n  }\n\n  eqX(x) {\n    assert(x instanceof BN);\n    assert(!x.red);\n\n    if (this.inf)\n      return false;\n\n    return this.getX().eq(x);\n  }\n\n  eqR(x) {\n    assert(x instanceof BN);\n    assert(!x.red);\n    assert(!this.curve.n.isZero());\n\n    if (this.inf)\n      return false;\n\n    return this.getX().imod(this.curve.n).eq(x);\n  }\n\n  mul(k) {\n    return super.mul(k).toP();\n  }\n\n  muln(k) {\n    return super.muln(k).toP();\n  }\n\n  mulBlind(k, rng) {\n    return super.mulBlind(k, rng).toP();\n  }\n\n  mulAdd(k1, p2, k2) {\n    return super.mulAdd(k1, p2, k2).toP();\n  }\n\n  mulH() {\n    return super.mulH().toP();\n  }\n\n  div(k) {\n    return super.div(k).toP();\n  }\n\n  divn(k) {\n    return super.divn(k).toP();\n  }\n\n  divH() {\n    return super.divH().toP();\n  }\n\n  toP() {\n    return this;\n  }\n\n  toJ() {\n    // (X3, Y3, Z3) = (1, 1, 0)\n    if (this.inf)\n      return this.curve.jpoint();\n\n    // (X3, Y3, Z3) = (X1, Y1, 1)\n    return this.curve.jpoint(this.x, this.y, this.curve.one);\n  }\n\n  encode(compact) {\n    // [SEC1] Page 10, Section 2.3.3.\n    if (compact == null)\n      compact = true;\n\n    assert(typeof compact === 'boolean');\n\n    const {fieldSize} = this.curve;\n\n    // We do not serialize points at infinity.\n    if (this.inf)\n      throw new Error('Invalid point.');\n\n    // Compressed form (0x02 = even, 0x03 = odd).\n    if (compact) {\n      const p = Buffer.alloc(1 + fieldSize);\n      const x = this.curve.encodeField(this.getX());\n\n      p[0] = 0x02 | this.y.redIsOdd();\n      x.copy(p, 1);\n\n      return p;\n    }\n\n    // Uncompressed form (0x04).\n    const p = Buffer.alloc(1 + fieldSize * 2);\n    const x = this.curve.encodeField(this.getX());\n    const y = this.curve.encodeField(this.getY());\n\n    p[0] = 0x04;\n    x.copy(p, 1);\n    y.copy(p, 1 + fieldSize);\n\n    return p;\n  }\n\n  static decode(curve, bytes) {\n    // [SEC1] Page 11, Section 2.3.4.\n    assert(curve instanceof ShortCurve);\n    assert(Buffer.isBuffer(bytes));\n\n    const len = curve.fieldSize;\n\n    if (bytes.length < 1 + len)\n      throw new Error('Not a point.');\n\n    // Point forms:\n    //\n    //   0x00 -> Infinity (openssl, unsupported)\n    //   0x02 -> Compressed Even\n    //   0x03 -> Compressed Odd\n    //   0x04 -> Uncompressed\n    //   0x06 -> Hybrid Even (openssl)\n    //   0x07 -> Hybrid Odd (openssl)\n    //\n    // Note that openssl supports serializing points\n    // at infinity as {0}. We choose not to support it\n    // because it's strange and not terribly useful.\n    const form = bytes[0];\n\n    switch (form) {\n      case 0x02:\n      case 0x03: {\n        if (bytes.length !== 1 + len)\n          throw new Error('Invalid point size for compressed.');\n\n        const x = curve.decodeField(bytes.slice(1, 1 + len));\n\n        if (x.cmp(curve.p) >= 0)\n          throw new Error('Invalid point.');\n\n        const p = curve.pointFromX(x, form === 0x03);\n\n        assert(!p.isInfinity());\n\n        return p;\n      }\n\n      case 0x04:\n      case 0x06:\n      case 0x07: {\n        if (bytes.length !== 1 + len * 2)\n          throw new Error('Invalid point size for uncompressed.');\n\n        const x = curve.decodeField(bytes.slice(1, 1 + len));\n        const y = curve.decodeField(bytes.slice(1 + len, 1 + 2 * len));\n\n        // [GECC] Algorithm 4.3, Page 180, Section 4.\n        if (x.cmp(curve.p) >= 0 || y.cmp(curve.p) >= 0)\n          throw new Error('Invalid point.');\n\n        // OpenSSL hybrid encoding.\n        if (form !== 0x04 && form !== (0x06 | y.isOdd()))\n          throw new Error('Invalid hybrid encoding.');\n\n        const p = curve.point(x, y);\n\n        if (!p.validate())\n          throw new Error('Invalid point.');\n\n        assert(!p.isInfinity());\n\n        return p;\n      }\n\n      default: {\n        throw new Error('Unknown point format.');\n      }\n    }\n  }\n\n  encodeX() {\n    // [SCHNORR] \"Specification\".\n    // [BIP340] \"Specification\".\n    return this.curve.encodeField(this.getX());\n  }\n\n  static decodeEven(curve, bytes) {\n    // [BIP340] \"Specification\".\n    assert(curve instanceof ShortCurve);\n\n    const x = curve.decodeField(bytes);\n\n    if (x.cmp(curve.p) >= 0)\n      throw new Error('Invalid point.');\n\n    return curve.pointFromX(x, false);\n  }\n\n  static decodeSquare(curve, bytes) {\n    // [SCHNORR] \"Specification\".\n    assert(curve instanceof ShortCurve);\n\n    const x = curve.decodeField(bytes);\n\n    if (x.cmp(curve.p) >= 0)\n      throw new Error('Invalid point.');\n\n    return curve.pointFromX(x);\n  }\n\n  toJSON(pre) {\n    if (this.inf)\n      return [];\n\n    const x = this.getX().toJSON();\n    const y = this.getY().toJSON();\n\n    if (pre === true && this.pre)\n      return [x, y, this.pre.toJSON()];\n\n    return [x, y];\n  }\n\n  toPretty() {\n    if (this.inf)\n      return [];\n\n    const size = this.curve.fieldSize * 2;\n    const x = toPretty(this.getX(), size);\n    const y = toPretty(this.getY(), size);\n\n    return [x, y];\n  }\n\n  static fromJSON(curve, json) {\n    assert(curve instanceof ShortCurve);\n    assert(Array.isArray(json));\n    assert(json.length === 0\n        || json.length === 2\n        || json.length === 3);\n\n    if (json.length === 0)\n      return curve.point();\n\n    const x = BN.fromJSON(json[0]);\n    const y = BN.fromJSON(json[1]);\n    const point = curve.point(x, y);\n\n    if (json.length > 2 && json[2] != null)\n      point.pre = Precomp.fromJSON(point, json[2]);\n\n    return point;\n  }\n\n  [custom]() {\n    if (this.inf)\n      return '<ShortPoint: Infinity>';\n\n    return '<ShortPoint:'\n         + ' x=' + this.x.fromRed().toString(16, 2)\n         + ' y=' + this.y.fromRed().toString(16, 2)\n         + '>';\n  }\n}\n\n/**\n * JPoint\n */\n\nclass JPoint extends Point {\n  constructor(curve, x, y, z) {\n    assert(curve instanceof ShortCurve);\n\n    super(curve, types.JACOBIAN);\n\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = this.curve.zero;\n    this.zOne = false;\n\n    if (x != null)\n      this._init(x, y, z);\n  }\n\n  _init(x, y, z) {\n    assert(x instanceof BN);\n    assert(y instanceof BN);\n    assert(z == null || (z instanceof BN));\n\n    this.x = x;\n    this.y = y;\n    this.z = z || this.curve.one;\n\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n\n    this.zOne = this.z.eq(this.curve.one);\n  }\n\n  clone() {\n    return this.curve.jpoint(this.x, this.y, this.z);\n  }\n\n  validate() {\n    // [GECC] Example 3.20, Page 88, Section 3.\n    const {a, b} = this.curve;\n\n    // P = O\n    if (this.isInfinity())\n      return true;\n\n    // Z1 = 1\n    if (this.zOne)\n      return this.curve.validate(this.toP());\n\n    // y^2 = x^3 + a * x * z^4 + b * z^6\n    const lhs = this.y.redSqr();\n    const x3 = this.x.redSqr().redMul(this.x);\n    const z2 = this.z.redSqr();\n    const z4 = z2.redSqr();\n    const z6 = z4.redMul(z2);\n    const rhs = x3.redIAdd(b.redMul(z6));\n\n    if (!this.curve.zeroA) {\n      // Save some cycles for a = -3.\n      if (this.curve.threeA)\n        rhs.redIAdd(z4.redIMuln(-3).redMul(this.x));\n      else\n        rhs.redIAdd(a.redMul(z4).redMul(this.x));\n    }\n\n    return lhs.eq(rhs);\n  }\n\n  normalize() {\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian.html#scaling-z\n    // 1I + 3M + 1S\n\n    // Z = 1\n    if (this.zOne)\n      return this;\n\n    // P = O\n    if (this.isInfinity())\n      return this;\n\n    // A = 1 / Z1\n    const a = this.z.redInvert();\n\n    // AA = A^2\n    const aa = a.redSqr();\n\n    // X3 = X1 * AA\n    this.x = this.x.redMul(aa);\n\n    // Y3 = Y1 * AA * A\n    this.y = this.y.redMul(aa).redMul(a);\n\n    // Z3 = 1\n    this.z = this.curve.one;\n    this.zOne = true;\n\n    return this;\n  }\n\n  scale(a) {\n    assert(a instanceof BN);\n\n    // P = O\n    if (this.isInfinity())\n      return this.curve.jpoint();\n\n    // AA = A^2\n    const aa = a.redSqr();\n\n    // X3 = X1 * AA\n    const nx = this.x.redMul(aa);\n\n    // Y3 = Y1 * AA * A\n    const ny = this.y.redMul(aa).redMul(a);\n\n    // Z3 = Z1 * A\n    const nz = this.z.redMul(a);\n\n    return this.curve.jpoint(nx, ny, nz);\n  }\n\n  neg() {\n    // -(X1, Y1, Z1) = (X1, -Y1, Z1)\n    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n  }\n\n  add(p) {\n    assert(p instanceof Point);\n\n    if (p.type === types.AFFINE)\n      return this._mixedAdd(p);\n\n    return this._add(p);\n  }\n\n  _add(p) {\n    assert(p instanceof JPoint);\n\n    // O + P = P\n    if (this.isInfinity())\n      return p;\n\n    // P + O = P\n    if (p.isInfinity())\n      return this;\n\n    // Z1 = 1\n    if (this.zOne)\n      return p._addJA(this);\n\n    // Z2 = 1\n    if (p.zOne)\n      return this._addJA(p);\n\n    return this._addJJ(p);\n  }\n\n  _mixedAdd(p) {\n    assert(p instanceof ShortPoint);\n\n    // O + P = P\n    if (this.isInfinity())\n      return p.toJ();\n\n    // P + O = P\n    if (p.isInfinity())\n      return this;\n\n    return this._addJA(p);\n  }\n\n  _addJJ(p) {\n    // No assumptions.\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian.html#addition-add-1998-cmo-2\n    // 12M + 4S + 6A + 1*2 (implemented as: 12M + 4S + 7A)\n\n    // Z1Z1 = Z1^2\n    const z1z1 = this.z.redSqr();\n\n    // Z2Z2 = Z2^2\n    const z2z2 = p.z.redSqr();\n\n    // U1 = X1 * Z2Z2\n    const u1 = this.x.redMul(z2z2);\n\n    // U2 = X2 * Z1Z1\n    const u2 = p.x.redMul(z1z1);\n\n    // S1 = Y1 * Z2 * Z2Z2\n    const s1 = this.y.redMul(p.z).redMul(z2z2);\n\n    // S2 = Y2 * Z1 * Z1Z1\n    const s2 = p.y.redMul(this.z).redMul(z1z1);\n\n    // H = U2 - U1\n    const h = u2.redISub(u1);\n\n    // r = S2 - S1\n    const r = s2.redISub(s1);\n\n    // H = 0\n    if (h.isZero()) {\n      if (!r.isZero())\n        return this.curve.jpoint();\n\n      return this.dbl();\n    }\n\n    // HH = H^2\n    const hh = h.redSqr();\n\n    // HHH = H * HH\n    const hhh = h.redMul(hh);\n\n    // V = U1 * HH\n    const v = u1.redMul(hh);\n\n    // X3 = r^2 - HHH - 2 * V\n    const nx = r.redSqr().redISub(hhh).redISub(v).redISub(v);\n\n    // Y3 = r * (V - X3) - S1 * HHH\n    const ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(hhh));\n\n    // Z3 = Z1 * Z2 * H\n    const nz = this.z.redMul(p.z).redMul(h);\n\n    return this.curve.jpoint(nx, ny, nz);\n  }\n\n  _addJA(p) {\n    // Assumes Z2 = 1.\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian.html#addition-madd\n    // 8M + 3S + 6A + 5*2 (implemented as: 8M + 3S + 7A + 4*2)\n\n    // Z1Z1 = Z1^2\n    const z1z1 = this.z.redSqr();\n\n    // U2 = X2 * Z1Z1\n    const u2 = p.x.redMul(z1z1);\n\n    // S2 = Y2 * Z1 * Z1Z1\n    const s2 = p.y.redMul(this.z).redMul(z1z1);\n\n    // H = U2 - X1\n    const h = u2.redISub(this.x);\n\n    // r = 2 * (S2 - Y1)\n    const r = s2.redISub(this.y).redIMuln(2);\n\n    // H = 0\n    if (h.isZero()) {\n      if (!r.isZero())\n        return this.curve.jpoint();\n\n      return this.dbl();\n    }\n\n    // I = (2 * H)^2\n    const i = h.redMuln(2).redSqr();\n\n    // J = H * I\n    const j = h.redMul(i);\n\n    // V = X1 * I\n    const v = this.x.redMul(i);\n\n    // X3 = r^2 - J - 2 * V\n    const nx = r.redSqr().redISub(j).redISub(v).redISub(v);\n\n    // Y3 = r * (V - X3) - 2 * Y1 * J\n    const ny = r.redMul(v.redISub(nx)).redISub(this.y.redMul(j).redIMuln(2));\n\n    // Z3 = 2 * Z1 * H\n    const nz = this.z.redMul(h).redIMuln(2);\n\n    return this.curve.jpoint(nx, ny, nz);\n  }\n\n  dbl() {\n    // P = O\n    if (this.isInfinity())\n      return this;\n\n    // Y1 = 0\n    if (this.y.isZero())\n      return this.curve.jpoint();\n\n    // a = 0\n    if (this.curve.zeroA)\n      return this._dbl0();\n\n    // a = -3\n    if (this.curve.threeA)\n      return this._dbl3();\n\n    return this._dblJ();\n  }\n\n  _dblJ() {\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian.html#doubling-dbl-1998-cmo-2\n    // 3M + 6S + 4A + 1*a + 2*2 + 1*3 + 1*4 + 1*8\n    // (implemented as: 3M + 6S + 5A + 1*a + 1*2 + 1*3 + 1*4 + 1*8)\n\n    // XX = X1^2\n    const xx = this.x.redSqr();\n\n    // YY = Y1^2\n    const yy = this.y.redSqr();\n\n    // ZZ = Z1^2\n    const zz = this.z.redSqr();\n\n    // S = 4 * X1 * YY\n    const s = this.x.redMul(yy).redIMuln(4);\n\n    // M = 3 * XX + a * ZZ^2\n    const m = xx.redIMuln(3).redIAdd(this.curve.a.redMul(zz.redSqr()));\n\n    // T = M^2 - 2 * S\n    const t = m.redSqr().redISub(s).redISub(s);\n\n    // X3 = T\n    const nx = t;\n\n    // Y3 = M * (S - T) - 8 * YY^2\n    const ny = m.redMul(s.redISub(t)).redISub(yy.redSqr().redIMuln(8));\n\n    // Z3 = 2 * Y1 * Z1\n    const nz = this.y.redMul(this.z).redIMuln(2);\n\n    return this.curve.jpoint(nx, ny, nz);\n  }\n\n  _dbl0() {\n    // Assumes a = 0.\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#doubling-dbl-2009-l\n    // 2M + 5S + 6A + 3*2 + 1*3 + 1*8\n    // (implemented as: 2M + 5S + 7A + 2*2 + 1*3 + 1*8)\n\n    // A = X1^2\n    const a = this.x.redSqr();\n\n    // B = Y1^2\n    const b = this.y.redSqr();\n\n    // C = B^2\n    const c = b.redSqr();\n\n    // + XB2 = (X1 + B)^2\n    const xb2 = b.redIAdd(this.x).redSqr();\n\n    // D = 2 * ((X1 + B)^2 - A - C)\n    const d = xb2.redISub(a).redISub(c).redIMuln(2);\n\n    // E = 3 * A\n    const e = a.redIMuln(3);\n\n    // F = E^2\n    const f = e.redSqr();\n\n    // X3 = F - 2 * D\n    const nx = f.redISub(d).redISub(d);\n\n    // Y3 = E * (D - X3) - 8 * C\n    const ny = e.redMul(d.redISub(nx)).redISub(c.redIMuln(8));\n\n    // Z3 = 2 * Y1 * Z1\n    const nz = this.y.redMul(this.z).redIMuln(2);\n\n    return this.curve.jpoint(nx, ny, nz);\n  }\n\n  _dbl3() {\n    // Assumes a = -3.\n    // https://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S + 8A + 1*3 + 1*4 + 2*8\n    // (implemented as: 3M + 5S + 8A + 1*2 + 1*3 + 1*4 + 1*8)\n\n    // delta = Z1^2\n    const delta = this.z.redSqr();\n\n    // gamma = Y1^2\n    const gamma = this.y.redSqr();\n\n    // beta = X1 * gamma\n    const beta = this.x.redMul(gamma);\n\n    // + xmdelta = X1 - delta\n    const xmdelta = this.x.redSub(delta);\n\n    // + xpdelta = X1 + delta\n    const xpdelta = this.x.redAdd(delta);\n\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    const alpha = xmdelta.redMul(xpdelta).redIMuln(3);\n\n    // + beta4 = 4 * beta\n    const beta4 = beta.redIMuln(4);\n\n    // + beta8 = 2 * beta4\n    const beta8 = beta4.redMuln(2);\n\n    // + gamma28 = 8 * gamma^2\n    const gamma28 = gamma.redSqr().redIMuln(8);\n\n    // X3 = alpha^2 - 8 * beta\n    const nx = alpha.redSqr().redISub(beta8);\n\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    const nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    const ny = alpha.redMul(beta4.redISub(nx)).redISub(gamma28);\n\n    return this.curve.jpoint(nx, ny, nz);\n  }\n\n  getX() {\n    if (this.isInfinity())\n      throw new Error('Invalid point.');\n\n    this.normalize();\n\n    return this.x.fromRed();\n  }\n\n  getY() {\n    if (this.isInfinity())\n      throw new Error('Invalid point.');\n\n    this.normalize();\n\n    return this.y.fromRed();\n  }\n\n  eq(p) {\n    assert(p instanceof JPoint);\n\n    // P = Q\n    if (this === p)\n      return true;\n\n    // P = O\n    if (this.isInfinity())\n      return p.isInfinity();\n\n    // Q = O\n    if (p.isInfinity())\n      return false;\n\n    // Z1 = Z2\n    if (this.z.eq(p.z)) {\n      return this.x.eq(p.x)\n          && this.y.eq(p.y);\n    }\n\n    // X1 * Z2^2 = X2 * Z1^2\n    const zz1 = this.z.redSqr();\n    const zz2 = p.z.redSqr();\n    const x1 = this.x.redMul(zz2);\n    const x2 = p.x.redMul(zz1);\n\n    if (!x1.eq(x2))\n      return false;\n\n    // Y1 * Z2^3 = Y2 * Z1^3\n    const zzz1 = zz1.redMul(this.z);\n    const zzz2 = zz2.redMul(p.z);\n    const y1 = this.y.redMul(zzz2);\n    const y2 = p.y.redMul(zzz1);\n\n    return y1.eq(y2);\n  }\n\n  cmp(point) {\n    assert(point instanceof JPoint);\n\n    const inf1 = this.isInfinity();\n    const inf2 = point.isInfinity();\n\n    if (inf1 && !inf2)\n      return -1;\n\n    if (!inf1 && inf2)\n      return 1;\n\n    if (inf1 && inf2)\n      return 0;\n\n    return this.order().cmp(point.order())\n        || this.getX().cmp(point.getX())\n        || this.getY().cmp(point.getY());\n  }\n\n  isInfinity() {\n    // Z1 = 0\n    return this.z.isZero();\n  }\n\n  isOrder2() {\n    if (this.isInfinity())\n      return false;\n\n    return this.y.isZero();\n  }\n\n  isOdd() {\n    if (this.isInfinity())\n      return false;\n\n    this.normalize();\n\n    return this.y.redIsOdd();\n  }\n\n  isEven() {\n    if (this.isInfinity())\n      return false;\n\n    this.normalize();\n\n    return this.y.redIsEven();\n  }\n\n  isSquare() {\n    if (this.isInfinity())\n      return false;\n\n    return this.y.redMul(this.z).redJacobi() !== -1;\n  }\n\n  eqX(x) {\n    // Verify that integer `x` is equal to field\n    // element `x` by scaling it by our z coordinate.\n    // This optimization is mentioned in and used for\n    // bip-schnorr[1]. This avoids having to affinize\n    // the resulting point during verification.\n    //\n    // [1] [SCHNORR] \"Optimizations\".\n    assert(x instanceof BN);\n    assert(!x.red);\n\n    if (this.isInfinity())\n      return false;\n\n    const zz = this.z.redSqr();\n    const rx = x.toRed(this.curve.red).redMul(zz);\n\n    return this.x.eq(rx);\n  }\n\n  eqR(x) {\n    // Similar to the optimization above, this\n    // optimization, suggested by Maxwell[1],\n    // compares an integer to an X coordinate\n    // by scaling it.\n    //\n    // Since a signature's R value is modulo N\n    // in ECDSA, we may be dealing with an R\n    // value greater than N in actuality.\n    //\n    // If the equality check fails, we can\n    // scale N itself by Z and add it to the\n    // X field element.\n    //\n    // [1] https://github.com/bitcoin-core/secp256k1/commit/ce7eb6f\n    assert(x instanceof BN);\n    assert(!x.red);\n\n    if (!this.curve.smallGap)\n      return this.toP().eqR(x);\n\n    if (this.isInfinity())\n      return false;\n\n    if (x.cmp(this.curve.p) >= 0)\n      return false;\n\n    const zz = this.z.redSqr();\n    const rx = x.toRed(this.curve.red).redMul(zz);\n\n    if (this.x.eq(rx))\n      return true;\n\n    if (this.curve.highOrder)\n      return false;\n\n    if (x.cmp(this.curve.pmodn) >= 0)\n      return false;\n\n    const rn = this.curve.redN.redMul(zz);\n\n    rx.redIAdd(rn);\n\n    return this.x.eq(rx);\n  }\n\n  toP() {\n    // P = O\n    if (this.isInfinity())\n      return this.curve.point();\n\n    this.normalize();\n\n    // (X3, Y3) = (X1 / Z1^2, Y1 / Z1^3)\n    return this.curve.point(this.x, this.y);\n  }\n\n  toJ() {\n    return this;\n  }\n\n  encode(compact) {\n    return this.toP().encode(compact);\n  }\n\n  static decode(curve, bytes) {\n    return ShortPoint.decode(curve, bytes).toJ();\n  }\n\n  encodeX() {\n    return this.toP().encodeX();\n  }\n\n  static decodeEven(curve, bytes) {\n    return ShortPoint.decodeEven(curve, bytes).toJ();\n  }\n\n  static decodeSquare(curve, bytes) {\n    return ShortPoint.decodeSquare(curve, bytes).toJ();\n  }\n\n  toJSON(pre) {\n    return this.toP().toJSON(pre);\n  }\n\n  toPretty() {\n    return this.toP().toPretty();\n  }\n\n  static fromJSON(curve, json) {\n    return ShortPoint.fromJSON(curve, json).toJ();\n  }\n\n  [custom]() {\n    if (this.isInfinity())\n      return '<JPoint: Infinity>';\n\n    return '<JPoint:'\n         + ' x=' + this.x.fromRed().toString(16, 2)\n         + ' y=' + this.y.fromRed().toString(16, 2)\n         + ' z=' + this.z.fromRed().toString(16, 2)\n         + '>';\n  }\n}\n\n/**\n * MontCurve\n */\n\nclass MontCurve extends Curve {\n  constructor(conf) {\n    super(MontPoint, 'mont', conf);\n\n    this.a = BN.fromJSON(conf.a).toRed(this.red);\n    this.b = BN.fromJSON(conf.b).toRed(this.red);\n\n    this.bi = this.b.redInvert();\n    this.a2 = this.a.redAdd(this.two);\n    this.a24 = this.a2.redMul(this.i4);\n    this.a3 = this.a.redMul(this.i3);\n    this.a0 = this.a.redMul(this.bi);\n    this.b0 = this.bi.redSqr();\n\n    this._finalize(conf);\n  }\n\n  static _isomorphism(curveA, curveB, customB) {\n    // Montgomery Isomorphism.\n    //\n    // [MONT3] Page 3, Section 2.1.\n    //\n    // Transformation:\n    //\n    //   A' = A\n    //   B' = B'\n    //\n    // Where (B / B') is square.\n    assert(curveA instanceof BN);\n    assert(curveB instanceof BN);\n    assert(customB instanceof BN);\n\n    const a = curveA.clone();\n    const b = customB.clone();\n    const c = curveB.redDiv(customB);\n\n    if (c.redJacobi() !== 1)\n      throw new Error('Invalid `b` coefficient.');\n\n    return [a, b];\n  }\n\n  _short(a0, odd) {\n    // Montgomery->Short Weierstrass Equivalence.\n    //\n    // [MONT2] \"Equivalence with Weierstrass curves\".\n    //\n    // Transformation:\n    //\n    //   a = (3 - A^2) / (3 * B^2)\n    //   b = (2 * A^3 - 9 * A) / (27 * B^3)\n    const {a, b, three} = this;\n    const a2 = a.redSqr();\n    const a3 = a2.redMul(a);\n    const b2 = b.redSqr();\n    const b3 = b2.redMul(b);\n    const n0 = three.redSub(a2);\n    const d0 = b2.redMuln(3);\n    const n1 = a3.redMuln(2).redISub(a.redMuln(9));\n    const d1 = b3.redMuln(27);\n    const wa = n0.redDiv(d0);\n    const wb = n1.redDiv(d1);\n\n    if (a0 != null)\n      return ShortCurve._isomorphism(wa, wb, a0, odd);\n\n    return [wa, wb];\n  }\n\n  _mont(b0) {\n    return MontCurve._isomorphism(this.a, this.b, b0);\n  }\n\n  _edwards(a0, invert = false) {\n    // Montgomery->Twisted Edwards Transformation.\n    //\n    // [MONT1] Page 11, Section 4.3.5.\n    // [TWISTED] Theorem 3.2, Page 4, Section 3.\n    //\n    // Equivalence:\n    //\n    //   a = (A + 2) / B\n    //   d = (A - 2) / B\n    //\n    // Isomorphism:\n    //\n    //   a = a'\n    //   d = a' * (A - 2) / (A + 2)\n    //\n    // Where ((A + 2) / (B * a')) is square.\n    //\n    // If `d` is square, we can usually find\n    // a complete curve by using the `invert`\n    // option. This will create an isomorphism\n    // chain of: M(A,B)->E(a,d)->E(d,a).\n    //\n    // The equivalence between E(a,d) and\n    // E(d,a) is:\n    //\n    //   (x, y) = (x, 1 / y)\n    //\n    // Meaning our map to E(d,a) is:\n    //\n    //   x = u / v\n    //   y = 1 / ((u - 1) / (u + 1))\n    //     = (u + 1) / (u - 1)\n    assert(typeof invert === 'boolean');\n\n    const {two, bi} = this;\n    const a = this.a.redAdd(two).redMul(bi);\n    const d = this.a.redSub(two).redMul(bi);\n\n    if (invert)\n      a.swap(d);\n\n    if (a0 != null)\n      return EdwardsCurve._isomorphism(a, d, a0);\n\n    return [a, d];\n  }\n\n  _scaleShort(curve) {\n    assert(curve instanceof ShortCurve);\n\n    const [u2, u3] = curve._scale(this);\n\n    return [this.field(u2.redInvert()),\n            this.field(u3.redInvert())];\n  }\n\n  _scaleMont(curve) {\n    // We can extract the isomorphism factor with:\n    //\n    //   c = +-sqrt(B / B')\n    //\n    // If base points are available, we can do:\n    //\n    //   c = v' / v\n    assert(curve instanceof MontCurve);\n\n    if (this.g.isInfinity() || curve.g.isInfinity())\n      return this.field(curve.b).redDivSqrt(this.b);\n\n    return this.g.y.redDiv(this.field(curve.g.y));\n  }\n\n  _scaleEdwards(curve, invert) {\n    // We _could_ do something like:\n    //\n    //   B = 4 / (a - d)\n    //   c = +-sqrt(B / B')\n    //\n    // Which can be reduced to:\n    //\n    //   c = +-sqrt(4 / ((a - d) * B'))\n    //\n    // If base points are available:\n    //\n    //   v = u' / x\n    //   c = v' / v\n    //\n    // Which can be reduced to:\n    //\n    //   c = v' * x / u'\n    //\n    // However, the way our maps are\n    // written, we can re-use the Edwards\n    // isomorphism factor when going the\n    // other direction.\n    assert(curve instanceof EdwardsCurve);\n\n    const c = curve._scale(this, invert);\n\n    return this.field(c);\n  }\n\n  _solveY0(x) {\n    assert(x instanceof BN);\n\n    // y^2 = x^3 + A * x^2 + B * x\n    const a = this.a0;\n    const b = this.b0;\n    const x2 = x.redSqr();\n    const x3 = x2.redMul(x);\n    const y2 = x3.redIAdd(a.redMul(x2)).redIAdd(b.redMul(x));\n\n    return y2;\n  }\n\n  _elligator2(u) {\n    // Elligator 2.\n    //\n    // Distribution: 1/2.\n    //\n    // [ELL2] Page 11, Section 5.2.\n    // [H2EC] \"Elligator 2 Method\".\n    //        \"Mappings for Montgomery curves\".\n    // [SAFE] \"Indistinguishability from uniform random strings\".\n    //\n    // Assumptions:\n    //\n    //   - y^2 = x^3 + A * x^2 + B * x.\n    //   - A != 0, B != 0.\n    //   - A^2 - 4 * B is non-zero and non-square in F(p).\n    //   - Let z be a non-square in F(p).\n    //   - u != +-sqrt(-1 / z).\n    //\n    // Note that Elligator 2 is defined over the form:\n    //\n    //   y'^2 = x'^3 + A' * x'^2 + B' * x'\n    //\n    // Instead of:\n    //\n    //   B * y^2 = x^3 + A * x^2 + x\n    //\n    // Where:\n    //\n    //   A' = A / B\n    //   B' = 1 / B^2\n    //   x' = x / B\n    //   y' = y / B\n    //\n    // And:\n    //\n    //   x = B * x'\n    //   y = B * y'\n    //\n    // This is presumably the result of Elligator 2\n    // being designed in long Weierstrass form. If\n    // we want to support B != 1, we need to do the\n    // conversion.\n    //\n    // Map:\n    //\n    //   g(x) = x^3 + A * x^2 + B * x\n    //   x1 = -A / (1 + z * u^2)\n    //   x1 = -A, if x1 = 0\n    //   x2 = -x1 - A\n    //   x = x1, if g(x1) is square\n    //     = x2, otherwise\n    //   y = sign(u) * abs(sqrt(g(x)))\n    const lhs = this.a0.redNeg();\n    const rhs = this.one.redAdd(this.z.redMul(u.redSqr()));\n\n    if (rhs.isZero())\n      rhs.inject(this.one);\n\n    const x1 = lhs.redMul(rhs.redInvert());\n    const x2 = x1.redNeg().redISub(this.a0);\n    const y1 = this._solveY0(x1);\n    const y2 = this._solveY0(x2);\n    const alpha = y1.redIsSquare() | 0;\n    const x0 = [x1, x2][alpha ^ 1];\n    const y0 = [y1, y2][alpha ^ 1].redSqrt();\n\n    if (y0.redIsOdd() !== u.redIsOdd())\n      y0.redINeg();\n\n    const x = this.b.redMul(x0);\n    const y = this.b.redMul(y0);\n\n    return this.point(x, y);\n  }\n\n  _invert2(p, hint) {\n    // Inverting the Map (Elligator 2).\n    //\n    // [ELL2] Page 12, Section 5.3.\n    //\n    // Assumptions:\n    //\n    //   - -z * x * (x + A) is square in F(p).\n    //   - If r = 1 then x != 0.\n    //   - If r = 2 then x != -A.\n    //\n    // Map:\n    //\n    //   u1 = -(x + A) / (x * z)\n    //   u2 = -x / ((x + A) * z)\n    //   r = random integer in [1,2]\n    //   u = sign(y) * abs(sqrt(ur))\n    //\n    // Note that `0 / 0` can only occur if A = 0\n    // (this violates the assumptions of Elligator 2).\n    const {x, y} = p;\n    const r = hint & 1;\n    const x0 = x.redMul(this.bi);\n    const y0 = y.redMul(this.bi);\n    const n = x0.redAdd(this.a0);\n    const d = x0;\n    const lhs = [n, d][r].redINeg();\n    const rhs = [d, n][r].redMul(this.z);\n    const u = lhs.redDivSqrt(rhs);\n\n    if (u.redIsOdd() !== y0.redIsOdd())\n      u.redINeg();\n\n    return u;\n  }\n\n  isElliptic() {\n    const a2 = this.a.redSqr();\n    const d = this.b.redMul(a2.redSub(this.four));\n\n    // B * (A^2 - 4) != 0\n    return !d.isZero();\n  }\n\n  jinv() {\n    // [MONT3] Page 3, Section 2.\n    const {a, three, four} = this;\n    const a2 = a.redSqr();\n    const t0 = a2.redSub(three);\n    const lhs = t0.redPown(3).redIMuln(256);\n    const rhs = a2.redSub(four);\n\n    if (rhs.isZero())\n      throw new Error('Curve is not elliptic.');\n\n    // (256 * (A^2 - 3)^3) / (A^2 - 4)\n    return lhs.redDiv(rhs).fromRed();\n  }\n\n  point(x, y) {\n    return new MontPoint(this, x, y);\n  }\n\n  jpoint(x, y, z) {\n    assert(x == null && y == null && z == null);\n    return this.point();\n  }\n\n  xpoint(x, z) {\n    return new XPoint(this, x, z);\n  }\n\n  solveY2(x) {\n    // [MONT3] Page 3, Section 2.\n    // https://hyperelliptic.org/EFD/g1p/auto-montgom.html\n    assert(x instanceof BN);\n\n    // B * y^2 = x^3 + A * x^2 + x\n    const x2 = x.redSqr();\n    const x3 = x2.redMul(x);\n    const by2 = x3.redIAdd(this.a.redMul(x2)).redIAdd(x);\n    const y2 = by2.redMul(this.bi);\n\n    return y2;\n  }\n\n  validate(point) {\n    assert(point instanceof MontPoint);\n\n    if (point.isInfinity())\n      return true;\n\n    const {x, y} = point;\n    const y2 = this.solveY2(x);\n\n    return y.redSqr().eq(y2);\n  }\n\n  pointFromX(x, sign = null) {\n    assert(x instanceof BN);\n    assert(sign == null || typeof sign === 'boolean');\n\n    if (!x.red)\n      x = x.toRed(this.red);\n\n    const y = this.solveY(x);\n\n    if (sign != null) {\n      if (y.isZero() && sign)\n        throw new Error('Invalid point.');\n\n      if (y.redIsOdd() !== sign)\n        y.redINeg();\n    }\n\n    return this.point(x, y);\n  }\n\n  isIsomorphic(curve, invert) {\n    // [MONT3] Page 3, Section 2.1.\n    assert(curve instanceof Curve);\n\n    if (!curve.p.eq(this.p))\n      return false;\n\n    // M(A,B) <-> M(A,B')\n    if (curve.type === 'mont') {\n      const a = this.field(curve.a);\n      const b = this.field(curve.b);\n\n      // A' = A\n      if (!this.a.eq(a))\n        return false;\n\n      // B' != 0\n      if (this.b.isZero())\n        return false;\n\n      // jacobi(B / B') = 1\n      const c = b.redDiv(this.b);\n\n      return c.redJacobi() === 1;\n    }\n\n    return curve.isIsomorphic(this, invert);\n  }\n\n  isIsogenous(curve) {\n    assert(curve instanceof Curve);\n\n    if (curve.type === 'mont')\n      return false;\n\n    return curve.isIsogenous(this);\n  }\n\n  pointFromShort(point) {\n    // [ALT] Appendix E.2 (Switching between Alternative Representations).\n    // [MONT2] \"Equivalence with Weierstrass curves\"\n    assert(point instanceof ShortPoint);\n\n    if (this.isIsomorphic(point.curve)) {\n      // Equivalence for E(a,b)->M(A,B):\n      //\n      //   u = B * x - A / 3\n      //   v = B * y\n      //\n      // Undefined if ((u^3 + A * u^2 + u) / B) is not square.\n      if (point.isInfinity())\n        return this.point();\n\n      const {a3, b} = this;\n      const [u2, u3] = this._scale(point.curve);\n      const x = this.field(point.x).redMul(u2);\n      const y = this.field(point.y).redMul(u3);\n      const u = b.redMul(x).redISub(a3);\n      const v = b.redMul(y);\n\n      return this.point(u, v);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromMont(point) {\n    // [MONT3] Page 3, Section 2.1.\n    assert(point instanceof MontPoint);\n\n    if (this.isIsomorphic(point.curve)) {\n      // Isomorphic maps for M(A,B)<->M(A,B'):\n      //\n      //   u' = u\n      //   v' = +-sqrt(B / B') * v\n      //\n      // Undefined if (B / B') is not square.\n      if (point.isInfinity())\n        return this.point();\n\n      const c = this._scale(point.curve);\n      const u = this.field(point.x);\n      const v = this.field(point.y);\n      const nu = u;\n      const nv = c.redMul(v);\n\n      return this.point(nu, nv);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromEdwards(point) {\n    // [RFC7748] Section 4.1 & 4.2.\n    // [MONT3] Page 6, Section 2.5.\n    // [TWISTED] Theorem 3.2, Page 4, Section 3.\n    assert(point instanceof EdwardsPoint);\n    assert(point.curve.p.eq(this.p));\n\n    // Edwards `x`, `y`, `z`.\n    const x = this.field(point.x);\n    const y = this.field(point.y);\n    const z = this.field(point.z);\n\n    if (this.isIsogenous(point.curve)) {\n      // 4-isogeny maps for E(1,d)->M(2-4d,1):\n      //\n      //   u = y^2 / x^2\n      //   v = (2 - x^2 - y^2) * y / x^3\n      //\n      // Undefined for x = 0.\n      //\n      // Exceptional Cases:\n      //   - (0, 1) -> O\n      //   - (0, -1) -> (0, 0)\n      //\n      // Unexceptional Cases:\n      //   - (+-1, 0) -> (0, 0)\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero())\n        return this.point(this.zero, this.zero);\n\n      const c = z.redSqr().redIMuln(2);\n      const uu = y.redSqr();\n      const uz = x.redSqr();\n      const vv = c.redISub(uz).redISub(uu).redMul(y);\n      const vz = uz.redMul(x);\n\n      return this.cpoint(uu, uz, vv, vz);\n    }\n\n    if (this.isIsomorphic(point.curve, true)) {\n      // Isomorphic maps for E(d,a)->M(A,B):\n      //\n      //   u = (y + 1) / (y - 1)\n      //   v = +-sqrt((A - 2) / (B * a)) * u / x\n      //\n      // Undefined for x = 0 or y = 1.\n      //\n      // Exceptional Cases:\n      //   - (0, 1) -> O\n      //   - (0, -1) -> (0, 0)\n      //\n      // Unexceptional Cases:\n      //   - (+-sqrt(1 / a), 0) -> (-1, +-sqrt((A - 2) / B))\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero())\n        return this.point(this.zero, this.zero);\n\n      const c = this._scale(point.curve, true);\n      const uu = y.redAdd(z);\n      const uz = y.redSub(z);\n      const vv = c.redMul(z).redMul(uu);\n      const vz = x.redMul(uz);\n\n      return this.cpoint(uu, uz, vv, vz);\n    }\n\n    if (this.isIsomorphic(point.curve, false)) {\n      // Isomorphic maps for E(a,d)->M(A,B):\n      //\n      //   u = (1 + y) / (1 - y)\n      //   v = +-sqrt((A + 2) / (B * a)) * u / x\n      //\n      // Undefined for x = 0 or y = 1.\n      //\n      // Exceptional Cases:\n      //   - (0, 1) -> O\n      //   - (0, -1) -> (0, 0)\n      //\n      // Unexceptional Cases:\n      //   - (+-sqrt(1 / a), 0) -> (1, +-sqrt((A + 2) / B))\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero())\n        return this.point(this.zero, this.zero);\n\n      const c = this._scale(point.curve, false);\n      const uu = z.redAdd(y);\n      const uz = z.redSub(y);\n      const vv = c.redMul(z).redMul(uu);\n      const vz = x.redMul(uz);\n\n      return this.cpoint(uu, uz, vv, vz);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromUniform(u) {\n    assert(u instanceof BN);\n\n    // z = 0 or A = 0\n    if (this.z.isZero() || this.a.isZero())\n      throw new Error('Not implemented.');\n\n    return this._elligator2(u);\n  }\n\n  pointToUniform(p, hint) {\n    // Convert a montgomery point to a field\n    // element by inverting the elligator2 map.\n    //\n    // Hint Layout:\n    //\n    //   [00000000] [0000] [0000]\n    //        |        |      |\n    //        |        |      +-- preimage index\n    //        |        +--- subgroup\n    //        +-- bits to OR with uniform bytes\n    assert(p instanceof MontPoint);\n    assert((hint >>> 0) === hint);\n\n    // z = 0 or A = 0\n    if (this.z.isZero() || this.a.isZero())\n      throw new Error('Not implemented.');\n\n    // P = O\n    if (p.isInfinity())\n      throw new Error('Invalid point.');\n\n    // Add a random torsion component.\n    const i = ((hint >>> 4) & 15) % this.torsion.length;\n    const q = p.add(this.torsion[i]);\n\n    return wrapErrors(() => {\n      return this._invert2(q, hint);\n    });\n  }\n\n  decodePoint(bytes, sign) {\n    return MontPoint.decode(this, bytes, sign);\n  }\n\n  encodeX(point) {\n    assert(point instanceof XPoint);\n    return point.encode();\n  }\n\n  decodeX(bytes) {\n    return XPoint.decode(this, bytes);\n  }\n\n  toShort(a0, odd, sign = null) {\n    const [a, b] = this._short(a0, odd);\n\n    const curve = new ShortCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      b: b,\n      n: this.n,\n      h: this.h\n    });\n\n    if (sign != null) {\n      const [, u3] = curve._scale(this);\n\n      if (u3.redIsOdd() !== sign)\n        u3.redINeg();\n    }\n\n    if (!this.g.isInfinity())\n      curve.g = curve.pointFromMont(this.g);\n\n    for (let i = 0; i < this.h.word(0); i++)\n      curve.torsion[i] = curve.pointFromMont(this.torsion[i]);\n\n    return curve;\n  }\n\n  toMont(b0, sign = null) {\n    const [a, b] = this._mont(b0);\n\n    const curve = new MontCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      b: b,\n      n: this.n,\n      h: this.h,\n      z: this.z\n    });\n\n    if (sign != null) {\n      const c = curve._scale(this);\n\n      if (c.redIsOdd() !== sign)\n        c.redINeg();\n    }\n\n    if (!this.g.isInfinity())\n      curve.g = curve.pointFromMont(this.g);\n\n    for (let i = 0; i < this.h.word(0); i++)\n      curve.torsion[i] = curve.pointFromMont(this.torsion[i]);\n\n    return curve;\n  }\n\n  toEdwards(a0, invert, sign = null) {\n    const [a, d] = this._edwards(a0, invert);\n\n    const curve = new EdwardsCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      d: d,\n      n: this.n,\n      h: this.h,\n      z: this.z\n    });\n\n    if (sign != null) {\n      const c = curve._scale(this, invert);\n\n      if (c.redIsOdd() !== sign)\n        c.redINeg();\n    }\n\n    if (!this.g.isInfinity()) {\n      curve.g = curve.pointFromMont(this.g);\n      curve.g.normalize();\n    }\n\n    if (curve.isComplete()) {\n      for (let i = 0; i < this.h.word(0); i++) {\n        curve.torsion[i] = curve.pointFromMont(this.torsion[i]);\n        curve.torsion[i].normalize();\n      }\n    }\n\n    return curve;\n  }\n\n  pointFromJSON(json) {\n    return MontPoint.fromJSON(this, json);\n  }\n\n  toJSON(pre) {\n    const json = super.toJSON(pre);\n    json.a = this.a.fromRed().toJSON();\n    json.b = this.b.fromRed().toJSON();\n    return json;\n  }\n}\n\n/**\n * MontPoint\n */\n\nclass MontPoint extends Point {\n  constructor(curve, x, y) {\n    assert(curve instanceof MontCurve);\n\n    super(curve, types.AFFINE);\n\n    this.x = this.curve.zero;\n    this.y = this.curve.zero;\n    this.inf = true;\n\n    if (x != null)\n      this._init(x, y);\n  }\n\n  _init(x, y) {\n    assert(x instanceof BN);\n    assert(y instanceof BN);\n\n    this.x = x;\n    this.y = y;\n\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n\n    this.inf = false;\n  }\n\n  clone() {\n    if (this.inf)\n      return this.curve.point();\n\n    return this.curve.point(this.x, this.y);\n  }\n\n  scale(a) {\n    return this.clone();\n  }\n\n  randomize(rng) {\n    return this.clone();\n  }\n\n  neg() {\n    // P = O\n    if (this.inf)\n      return this;\n\n    // -(X1, Y1) = (X1, -Y1)\n    return this.curve.point(this.x, this.y.redNeg());\n  }\n\n  add(p) {\n    // [MONT1] Page 8, Section 4.3.2.\n    //\n    // Addition Law:\n    //\n    //   l = (y2 - y1) / (x2 - x1)\n    //   x3 = b * l^2 - a - x1 - x2\n    //   y3 = l * (x1 - x3) - y1\n    //\n    // 1I + 2M + 1S + 7A + 1*b\n    assert(p instanceof MontPoint);\n\n    // O + P = P\n    if (this.inf)\n      return p;\n\n    // P + O = P\n    if (p.inf)\n      return this;\n\n    // P + P, P + -P\n    if (this.x.eq(p.x)) {\n      // P + -P = O\n      if (!this.y.eq(p.y))\n        return this.curve.point();\n\n      // P + P = 2P\n      return this.dbl();\n    }\n\n    // H = X2 - X1\n    const h = p.x.redSub(this.x);\n\n    // R = Y2 - Y1\n    const r = p.y.redSub(this.y);\n\n    // L = R / H\n    const l = r.redDiv(h);\n\n    // K = b * L^2\n    const k = this.curve.b.redMul(l.redSqr());\n\n    // X3 = K - a - X1 - X2\n    const nx = k.redISub(this.curve.a).redISub(this.x).redISub(p.x);\n\n    // Y3 = L * (X1 - X3) - Y1\n    const ny = l.redMul(this.x.redSub(nx)).redISub(this.y);\n\n    return this.curve.point(nx, ny);\n  }\n\n  dbl() {\n    // [MONT1] Page 8, Section 4.3.2.\n    //\n    // Addition Law (doubling):\n    //\n    //   l = (3 * x1^2 + 2 * a * x1 + 1) / (2 * b * y1)\n    //   x3 = b * l^2 - a - 2 * x1\n    //   y3 = l * (x1 - x3) - y1\n    //\n    // 1I + 3M + 2S + 7A + 1*a + 1*b + 1*b + 2*2 + 1*3\n\n    // P = O\n    if (this.inf)\n      return this;\n\n    // Y1 = 0\n    if (this.y.isZero())\n      return this.curve.point();\n\n    // M1 = 3 * X1^2\n    const m1 = this.x.redSqr().redIMuln(3);\n\n    // M2 = 2 * a * X1\n    const m2 = this.curve.a.redMul(this.x).redIMuln(2);\n\n    // M = M1 + M2 + 1\n    const m = m1.redIAdd(m2).redIAdd(this.curve.one);\n\n    // Z = 2 * b * Y1\n    const z = this.curve.b.redMul(this.y).redIMuln(2);\n\n    // L = M / Z\n    const l = m.redDiv(z);\n\n    // K = b * L^2\n    const k = this.curve.b.redMul(l.redSqr());\n\n    // X3 = K - a - 2 * X1\n    const nx = k.redISub(this.curve.a).redISub(this.x).redISub(this.x);\n\n    // Y3 = L * (X1 - X3) - Y1\n    const ny = l.redMul(this.x.redSub(nx)).redISub(this.y);\n\n    return this.curve.point(nx, ny);\n  }\n\n  getX() {\n    if (this.inf)\n      throw new Error('Invalid point.');\n\n    return this.x.fromRed();\n  }\n\n  getY() {\n    if (this.inf)\n      throw new Error('Invalid point.');\n\n    return this.y.fromRed();\n  }\n\n  eq(p) {\n    assert(p instanceof MontPoint);\n\n    // P = Q\n    if (this === p)\n      return true;\n\n    // P = O\n    if (this.inf)\n      return p.inf;\n\n    // Q = O\n    if (p.inf)\n      return false;\n\n    // X1 = X2, Y1 = Y2\n    return this.x.eq(p.x)\n        && this.y.eq(p.y);\n  }\n\n  cmp(point) {\n    assert(point instanceof MontPoint);\n\n    if (this.inf && !point.inf)\n      return -1;\n\n    if (!this.inf && point.inf)\n      return 1;\n\n    if (this.inf && point.inf)\n      return 0;\n\n    return this.order().cmp(point.order())\n        || this.getX().cmp(point.getX())\n        || this.getY().cmp(point.getY());\n  }\n\n  isInfinity() {\n    // Infinity cannot be represented in\n    // the affine space, except by a flag.\n    return this.inf;\n  }\n\n  isOrder2() {\n    if (this.inf)\n      return false;\n\n    return this.y.isZero();\n  }\n\n  isOdd() {\n    if (this.inf)\n      return false;\n\n    return this.y.redIsOdd();\n  }\n\n  isEven() {\n    if (this.inf)\n      return false;\n\n    return this.y.redIsEven();\n  }\n\n  toP() {\n    return this;\n  }\n\n  toJ() {\n    return this;\n  }\n\n  toX() {\n    // (X3, Z3) = (1, 0)\n    if (this.inf)\n      return this.curve.xpoint();\n\n    // (X3, Z3) = (X1, 1)\n    return this.curve.xpoint(this.x, this.curve.one);\n  }\n\n  encode() {\n    return this.toX().encode();\n  }\n\n  static decode(curve, bytes, sign) {\n    assert(curve instanceof MontCurve);\n    return curve.decodeX(bytes).toP(sign);\n  }\n\n  toJSON(pre) {\n    if (this.inf)\n      return [];\n\n    const x = this.getX().toJSON();\n    const y = this.getY().toJSON();\n\n    return [x, y];\n  }\n\n  toPretty() {\n    if (this.inf)\n      return [];\n\n    const size = this.curve.fieldSize * 2;\n    const x = toPretty(this.getX(), size);\n    const y = toPretty(this.getY(), size);\n\n    return [x, y];\n  }\n\n  static fromJSON(curve, json) {\n    assert(curve instanceof MontCurve);\n    assert(Array.isArray(json));\n    assert(json.length === 0\n        || json.length === 2\n        || json.length === 3);\n\n    if (json.length === 0)\n      return curve.point();\n\n    const x = BN.fromJSON(json[0]);\n    const y = BN.fromJSON(json[1]);\n\n    return curve.point(x, y);\n  }\n\n  [custom]() {\n    if (this.inf)\n      return '<MontPoint: Infinity>';\n\n    return '<MontPoint:'\n         + ' x=' + this.x.fromRed().toString(16, 2)\n         + ' y=' + this.y.fromRed().toString(16, 2)\n         + '>';\n  }\n}\n\n/**\n * XPoint\n */\n\nclass XPoint extends Point {\n  constructor(curve, x, z) {\n    assert(curve instanceof MontCurve);\n\n    super(curve, types.PROJECTIVE);\n\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n\n    if (x != null)\n      this._init(x, z);\n  }\n\n  _init(x, z) {\n    assert(x instanceof BN);\n    assert(z == null || (z instanceof BN));\n\n    this.x = x;\n    this.z = z || this.curve.one;\n\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n\n  clone() {\n    return this.curve.xpoint(this.x, this.z);\n  }\n\n  precompute(power, rng) {\n    // No-op.\n    return this;\n  }\n\n  validate() {\n    if (this.isInfinity())\n      return true;\n\n    // B * y^2 * z = x^3 + A * x^2 * z + x * z^2\n    const {x, z} = this;\n    const x2 = x.redSqr();\n    const x3 = x2.redMul(x);\n    const z2 = z.redSqr();\n    const ax2 = this.curve.a.redMul(x2).redMul(z);\n    const by2 = x3.redIAdd(ax2).redIAdd(x.redMul(z2));\n    const y2 = by2.redMul(this.curve.bi);\n\n    // sqrt(y^2 * z^4) = y * z^2\n    return y2.redMul(z).redJacobi() !== -1;\n  }\n\n  normalize() {\n    // https://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#scaling-scale\n    // 1I + 1M\n\n    // P = O\n    if (this.isInfinity())\n      return this;\n\n    // Z1 = 1\n    if (this.z.eq(this.curve.one))\n      return this;\n\n    // X3 = X1 / Z1\n    this.x = this.x.redDiv(this.z);\n\n    // Z3 = 1\n    this.z = this.curve.one;\n\n    return this;\n  }\n\n  scale(a) {\n    assert(a instanceof BN);\n\n    // P = O\n    if (this.isInfinity())\n      return this.curve.xpoint();\n\n    // X3 = X1 * A\n    const nx = this.x.redMul(a);\n\n    // Y3 = Y1 * A\n    const nz = this.z.redMul(a);\n\n    return this.curve.xpoint(nx, nz);\n  }\n\n  neg() {\n    // -(X1, Z1) = (X1, Z1)\n    return this;\n  }\n\n  dbl() {\n    // https://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n    // 2M + 2S + 4A + 1*a24\n\n    // A = X1 + Z1\n    const a = this.x.redAdd(this.z);\n\n    // AA = A^2\n    const aa = a.redSqr();\n\n    // B = X1 - Z1\n    const b = this.x.redSub(this.z);\n\n    // BB = B^2\n    const bb = b.redSqr();\n\n    // C = AA - BB\n    const c = aa.redSub(bb);\n\n    // X3 = AA * BB\n    const nx = aa.redMul(bb);\n\n    // Z3 = C * (BB + a24 * C)\n    const nz = c.redMul(bb.redIAdd(this.curve.a24.redMul(c)));\n\n    return this.curve.xpoint(nx, nz);\n  }\n\n  diffAddDbl(p2, p3) {\n    // https://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#ladder-ladd-1987-m-3\n    // 6M + 4S + 8A + 1*a24\n    assert(p2 instanceof XPoint);\n    assert(p3 instanceof XPoint);\n\n    // A = X2 + Z2\n    const a = p2.x.redAdd(p2.z);\n\n    // AA = A^2\n    const aa = a.redSqr();\n\n    // B = X2 - Z2\n    const b = p2.x.redSub(p2.z);\n\n    // BB = B^2\n    const bb = b.redSqr();\n\n    // E = AA - BB\n    const e = aa.redSub(bb);\n\n    // C = X3 + Z3\n    const c = p3.x.redAdd(p3.z);\n\n    // D = X3 - Z3\n    const d = p3.x.redSub(p3.z);\n\n    // DA = D * A\n    const da = d.redMul(a);\n\n    // CB = C * B\n    const cb = c.redMul(b);\n\n    // X5 = Z1 * (DA + CB)^2\n    const x5 = this.z.redMul(da.redAdd(cb).redSqr());\n\n    // Z5 = X1 * (DA - CB)^2\n    const z5 = this.x.redMul(da.redISub(cb).redSqr());\n\n    // X4 = AA * BB\n    const x4 = aa.redMul(bb);\n\n    // Z4 = E * (BB + a24 * E)\n    const z4 = e.redMul(bb.redIAdd(this.curve.a24.redMul(e)));\n\n    return [\n      this.curve.xpoint(x4, z4),\n      this.curve.xpoint(x5, z5)\n    ];\n  }\n\n  getX() {\n    if (this.isInfinity())\n      throw new Error('Invalid point.');\n\n    this.normalize();\n\n    return this.x.fromRed();\n  }\n\n  getY(sign) {\n    return this.toP(sign).getY();\n  }\n\n  eq(p) {\n    assert(p instanceof XPoint);\n\n    // P = Q\n    if (this === p)\n      return true;\n\n    // P = O\n    if (this.isInfinity())\n      return p.isInfinity();\n\n    // Q = O\n    if (p.isInfinity())\n      return false;\n\n    // Z1 = Z2\n    if (this.z.eq(p.z))\n      return this.x.eq(p.x);\n\n    // X1 * Z2 = X2 * Z1\n    const x1 = this.x.redMul(p.z);\n    const x2 = p.x.redMul(this.z);\n\n    return x1.eq(x2);\n  }\n\n  cmp(point) {\n    assert(point instanceof XPoint);\n\n    const inf1 = this.isInfinity();\n    const inf2 = point.isInfinity();\n\n    if (inf1 && !inf2)\n      return -1;\n\n    if (!inf1 && inf2)\n      return 1;\n\n    if (inf1 && inf2)\n      return 0;\n\n    return this.order().cmp(point.order())\n        || this.getX().cmp(point.getX());\n  }\n\n  isInfinity() {\n    // Z1 = 0\n    return this.z.isZero();\n  }\n\n  isOrder2() {\n    if (this.isInfinity())\n      return false;\n\n    return this.x.isZero();\n  }\n\n  isOdd() {\n    return false;\n  }\n\n  isEven() {\n    return false;\n  }\n\n  hasTorsion() {\n    if (this.isInfinity())\n      return false;\n\n    // X1 = 0, Z1 != 0 (edge case)\n    if (this.x.isZero())\n      return true;\n\n    return super.hasTorsion();\n  }\n\n  order() {\n    try {\n      return this.toP().order();\n    } catch (e) {\n      return new BN(1);\n    }\n  }\n\n  jmul(k) {\n    // Multiply with the Montgomery Ladder.\n    //\n    // [MONT3] Algorithm 4, Page 12, Section 4.2.\n    //\n    // Note that any clamping is meant to\n    // be done _outside_ of this function.\n    assert(k instanceof BN);\n    assert(!k.red);\n\n    const bits = k.bitLength();\n\n    let a = this.curve.xpoint();\n    let b = this;\n\n    for (let i = bits - 1; i >= 0; i--) {\n      const bit = k.bit(i);\n\n      if (bit === 0)\n        [a, b] = this.diffAddDbl(a, b);\n      else\n        [b, a] = this.diffAddDbl(b, a);\n    }\n\n    return a;\n  }\n\n  jmulBlind(k, rng) {\n    if (!rng)\n      return this.jmul(k);\n\n    // Randomize if available.\n    return this.randomize(rng).jmul(k);\n  }\n\n  jmulAdd(k1, p2, k2) {\n    throw new Error('Not implemented.');\n  }\n\n  toP(sign = null) {\n    assert(sign == null || typeof sign === 'boolean');\n\n    if (this.isInfinity())\n      return this.curve.point();\n\n    this.normalize();\n\n    return this.curve.pointFromX(this.x, sign);\n  }\n\n  toJ() {\n    return this;\n  }\n\n  toX() {\n    return this;\n  }\n\n  key() {\n    if (this.isInfinity())\n      return `${this.curve.uid}:oo`;\n\n    this.normalize();\n\n    const x = this.getX().toString(16);\n\n    return `${this.curve.uid}:${x}`;\n  }\n\n  encode() {\n    // [RFC7748] Section 5.\n    return this.curve.encodeField(this.getX());\n  }\n\n  static decode(curve, bytes) {\n    assert(curve instanceof MontCurve);\n\n    // [RFC7748] Section 5.\n    const x = curve.decodeField(bytes);\n\n    // We're supposed to ignore the hi bit\n    // on montgomery points... I think. If\n    // we don't, the X25519 test vectors\n    // break, which is pretty convincing\n    // evidence. This is a no-op for X448.\n    x.iumaskn(curve.fieldBits);\n\n    // Note: montgomery points are meant to be\n    // reduced by the prime and do not have to\n    // be explicitly validated in order to do\n    // the montgomery ladder.\n    const p = curve.xpoint(x, curve.one);\n\n    assert(!p.isInfinity());\n\n    return p;\n  }\n\n  toJSON(pre) {\n    return this.toP().toJSON(pre);\n  }\n\n  toPretty() {\n    return this.toP().toPretty();\n  }\n\n  static fromJSON(curve, json) {\n    return MontPoint.fromJSON(curve, json).toX();\n  }\n\n  [custom]() {\n    if (this.isInfinity())\n      return '<XPoint: Infinity>';\n\n    return '<XPoint:'\n        + ' x=' + this.x.fromRed().toString(16, 2)\n        + ' z=' + this.z.fromRed().toString(16, 2)\n        + '>';\n  }\n}\n\n/**\n * EdwardsCurve\n */\n\nclass EdwardsCurve extends Curve {\n  constructor(conf) {\n    super(EdwardsPoint, 'edwards', conf);\n\n    this.a = BN.fromJSON(conf.a).toRed(this.red);\n    this.d = BN.fromJSON(conf.d).toRed(this.red);\n    this.s = BN.fromJSON(conf.s || '0').toRed(this.red);\n    this.si = this.s.isZero() ? this.zero : this.s.redInvert();\n\n    this.k = this.d.redMuln(2);\n    this.smi = -this.d.redNeg().word(0);\n    this.ad6 = this.a.redAdd(this.d).redMul(this.i6);\n\n    this.twisted = !this.a.eq(this.one);\n    this.oneA = this.a.eq(this.one);\n    this.mOneA = this.a.eq(this.one.redNeg());\n    this.smallD = this.prime != null && this.d.redNeg().length === 1;\n    this.alt = null;\n\n    this._finalize(conf);\n  }\n\n  static _isomorphism(curveA, curveD, customA) {\n    // Twisted Edwards Isomorphism.\n    //\n    // [TWISTED] Definition 2.1, Page 3, Section 2.\n    //\n    // Transformation:\n    //\n    //   a' = a'\n    //   d' = a' * d / a\n    //\n    // Where (a / a') is square.\n    assert(curveA instanceof BN);\n    assert(curveD instanceof BN);\n    assert(customA instanceof BN);\n\n    const a = customA.clone();\n    const d = customA.redMul(curveD).redDiv(curveA);\n    const c = curveA.redDiv(customA);\n\n    if (c.redJacobi() !== 1)\n      throw new Error('Invalid `a` coefficient.');\n\n    return [a, d];\n  }\n\n  _short(a0, odd) {\n    // Twisted Edwards->Short Weierstrass Equivalence.\n    //\n    // [TWISTEQ] Section 2.\n    //\n    // Transformation:\n    //\n    //   a' = -(a^2 + 14 * a * d + d^2) / 48\n    //   b' = (33 * (a^2 * d + a * d^2) - a^3 - d^3) / 864\n    const {a, d} = this;\n    const a2 = a.redSqr();\n    const a3 = a2.redMul(a);\n    const d2 = d.redSqr();\n    const d3 = d2.redMul(d);\n    const ad14 = a.redMul(d).redIMuln(14);\n    const a2d = a2.redMul(d);\n    const ad2 = a.redMul(d2);\n    const t0 = a2d.redIAdd(ad2).redIMuln(33);\n    const wa = a2.redAdd(ad14).redIAdd(d2).redDivn(-48);\n    const wb = t0.redISub(a3).redISub(d3).redDivn(864);\n\n    if (a0 != null)\n      return ShortCurve._isomorphism(wa, wb, a0, odd);\n\n    return [wa, wb];\n  }\n\n  _mont(b0, invert = false) {\n    // Twisted Edwards->Montgomery Transformation.\n    //\n    // [TWISTED] Theorem 3.2, Page 4, Section 3.\n    //\n    // Equivalence:\n    //\n    //   A = 2 * (a + d) / (a - d)\n    //   B = 4 / (a - d)\n    //\n    // Isomorphism:\n    //\n    //   A = 2 * (a + d) / (a - d)\n    //   B = B'\n    //\n    // Where ((4 / (a - d)) / B') is square.\n    //\n    // If `4 / (a - d)` is non-square, we can\n    // usually force B=1 by using the `invert`\n    // option. This will create an isomorphism\n    // chain of: E(a,d)->E(d,a)->M(-A,-B).\n    //\n    // The equivalence between E(a,d) and E(d,a)\n    // is:\n    //\n    //   (x, y) = (x, 1 / y)\n    //\n    // Meaning our map to M(-A,-B) is:\n    //\n    //   u = (1 + 1 / y) / (1 - 1 / y)\n    //     = (y + 1) / (y - 1)\n    //   v = u / x\n    assert(typeof invert === 'boolean');\n\n    let apd, amd;\n\n    if (invert) {\n      apd = this.d.redAdd(this.a);\n      amd = this.d.redSub(this.a);\n    } else {\n      apd = this.a.redAdd(this.d);\n      amd = this.a.redSub(this.d);\n    }\n\n    const z = amd.redInvert();\n    const a = apd.redMuln(2).redMul(z);\n    const b = z.redMuln(4);\n\n    if (b0 != null)\n      return MontCurve._isomorphism(a, b, b0);\n\n    return [a, b];\n  }\n\n  _edwards(a0) {\n    return EdwardsCurve._isomorphism(this.a, this.d, a0);\n  }\n\n  _scaleShort(curve) {\n    assert(curve instanceof ShortCurve);\n\n    const [u2, u3] = curve._scale(this);\n\n    return [this.field(u2.redInvert()),\n            this.field(u3.redInvert())];\n  }\n\n  _scaleMont(curve, invert = false) {\n    // Calculate isomorphism factor between\n    // Twisted Edwards and Montgomery with:\n    //\n    //   a = (A + 2) / B\n    //   c = +-sqrt(a / a')\n    //\n    // Which can be reduced to:\n    //\n    //   c = +-sqrt((A + 2) / (B * a'))\n    //\n    // If base points are available, we can do:\n    //\n    //   x = u / v\n    //   c = x' / x\n    //\n    // Which can be reduced to:\n    //\n    //   c = v * x' / u\n    //\n    // We can now calculate the Edwards `x` with:\n    //\n    //   x' = c * u / v\n    //\n    // And likewise, the Montgomery `v`:\n    //\n    //   v = c * u / x'\n    assert(curve instanceof MontCurve);\n    assert(typeof invert === 'boolean');\n\n    if (this.g.isInfinity() || curve.g.isInfinity()) {\n      const [a] = curve._edwards(null, invert);\n\n      return this.field(a).redDivSqrt(this.a);\n    }\n\n    const x = curve.g.x.redDiv(curve.g.y);\n\n    return this.g.x.redDiv(this.field(x));\n  }\n\n  _scaleEdwards(curve) {\n    // We can extract the isomorphism factor with:\n    //\n    //   c = +-sqrt(a / a')\n    //\n    // If base points are available, we can do:\n    //\n    //   c = x' / x\n    assert(curve instanceof EdwardsCurve);\n\n    if (this.g.isInfinity() || curve.g.isInfinity())\n      return this.field(curve.a).redDivSqrt(this.a);\n\n    return this.g.x.redDiv(this.field(curve.g.x));\n  }\n\n  _mulA(num) {\n    assert(num instanceof BN);\n\n    // n * a = n\n    if (this.oneA)\n      return num.clone();\n\n    // n * a = -n\n    if (this.mOneA)\n      return num.redNeg();\n\n    return this.a.redMul(num);\n  }\n\n  _mulD(num) {\n    assert(num instanceof BN);\n\n    // -d < 0x4000000\n    if (this.smallD)\n      return num.redMuln(this.smi);\n\n    return this.d.redMul(num);\n  }\n\n  _elligator1(t) {\n    // Elligator 1.\n    //\n    // Distribution: 1/2.\n    //\n    // [ELL1] Page 6, Section 3.\n    //        Page 15, Appendix A.\n    // [ELL2] Page 7, Section 3.2.\n    //\n    // Assumptions:\n    //\n    //   - Let p be a prime power congruent to 3 mod 4.\n    //   - Let s be a nonzero element of F(p).\n    //   - Let c = 2 / s^2.\n    //   - Let r = c + 1 / c.\n    //   - Let d = -(c + 1)^2 / (c - 1)^2.\n    //   - (s^2 - 2) * (s^2 + 2) != 0.\n    //   - c * (c - 1) * (c + 1) != 0.\n    //   - r != 0.\n    //   - d is not square.\n    //   - x^2 + y^2 = 1 + d * x^2 * y^2.\n    //   - u * v * X * Y * x * (Y + 1) != 0.\n    //   - Y^2 = X^5 + (r^2 - 2) * X^3 + X.\n    //\n    // Elligator 1, as devised by Fouque et al,\n    // takes place on the hyperelliptic curve of:\n    //\n    //   y^2 = x^5 + (r^2 - 2) * x^3 + x\n    //\n    // Not only must our Edwards curve be complete,\n    // with a prime congruent to 3 mod 4, and a = 1,\n    // our curve must be isomorphic to a hyperelliptic\n    // curve of the above form. Roughly one half of\n    // all Edwards curves are isomorphic to a curve\n    // of said form.\n    //\n    // We can derive the isomorphism with:\n    //\n    //   c = (d +- 2 * sqrt(-d) - 1) / (d + 1)\n    //   s = +-sqrt(2 / c)\n    //   r = c + 1 / c\n    //\n    // Note that even if your curve is an Elligator 1\n    // curve, Elligator 2 is probably still preferable,\n    // as it has nearly the same properties (i.e. the\n    // same distribution), and is much less complex.\n    //\n    // Map:\n    //\n    //   f(a) = a^((p - 1) / 2)\n    //   u = (1 - t) / (1 + t)\n    //   v = u^5 + (r^2 - 2) * u^3 + u\n    //   X = f(v) * u\n    //   Y = (f(v) * v)^((p + 1) / 4) * f(v) * f(u^2 + 1 / c^2)\n    //   Y = 1, if u = 0\n    //   x = (c - 1) * s * X * (1 + X) / Y\n    //   y = (r * X - (1 + X)^2) / (r * X + (1 + X)^2)\n    //\n    // When t = +-1, we create the hyperelliptic\n    // 2-torsion point of (0, 0). This needs to be\n    // mapped to (0, -1) in Edwards form, but the x\n    // denominator becomes zero. As far as I can\n    // tell, this is the only exceptional case.\n    //\n    // The only other exceptional case initially\n    // appears to be when the y denominator sums to\n    // zero (when t = sqrt(4 / r + 1)), however, the\n    // hyperelliptic `X` is negated by the sign of\n    // `v`, making this impossible.\n    const {s, si, i2, one, two} = this;\n    const c = si.redSqr().redIMuln(2);\n    const ci = s.redSqr().redMul(i2);\n    const ci2 = ci.redSqr();\n    const r = c.redAdd(ci);\n    const r2 = r.redSqr().redISub(two);\n    const cm1 = c.redSub(one);\n    const uu = one.redSub(t);\n    const uz = one.redAdd(t);\n    const u = uz.isZero() ? uz : uu.redDiv(uz);\n    const u2 = u.redSqr();\n    const u3 = u2.redMul(u);\n    const u5 = u3.redMul(u2);\n    const v = u5.redAdd(r2.redMul(u3)).redIAdd(u);\n    const f0 = this.field(v.redJacobi());\n    const f1 = this.field(u2.redAdd(ci2).redJacobi());\n    const f2 = f0.redMul(f1);\n    const X = f0.redMul(u);\n    const Y = f0.redMul(v).redSqrt().redMul(f2);\n    const X1 = one.redAdd(X);\n    const rX = r.redMul(X);\n    const X12 = X1.redSqr();\n    const xx = cm1.redMul(s).redMul(X).redMul(X1);\n    const xz = u.isZero() ? this.one : Y;\n    const yy = rX.redSub(X12);\n    const yz = rX.redAdd(X12);\n\n    return this.cpoint(xx, xz, yy, yz);\n  }\n\n  _invert1(p, hint) {\n    // Inverting the Map (Elligator 1).\n    //\n    // [ELL1] Page 6, Section 3.\n    //        Page 15, Appendix A.\n    // [ELL2] Page 7, Section 3.3.\n    //\n    // Assumptions:\n    //\n    //   - y + 1 != 0.\n    //   - (1 + n * r)^2 - 1 is square in F(p).\n    //   - If n * r = -2 then x = 2 * s * (c - 1) * f(c) / r.\n    //   - Y = (c - 1) * s * X * (1 + X) / x.\n    //\n    // Map:\n    //\n    //   f(a) = a^((p - 1) / 2)\n    //   n = (y - 1) / (2 * (y + 1))\n    //   X = -(1 + n * r) + ((1 + n * r)^2 - 1)^((p + 1) / 4)\n    //   z = f((c - 1) * s * X * (1 + X) * x * (X^2 + 1 / c^2))\n    //   u = z * X\n    //   t = (1 - u) / (1 + u)\n    const {s, si, i2, one} = this;\n    const {x, y, z} = p;\n    const sign = hint & 1;\n    const c = si.redSqr().redIMuln(2);\n    const ci = s.redSqr().redMul(i2);\n    const ci2 = ci.redSqr();\n    const r = c.redAdd(ci);\n    const cm1 = c.redSub(one);\n    const nn = y.redSub(z);\n    const nz = y.redAdd(z).redIMuln(2);\n    const n = nz.isZero() ? nz : nn.redDiv(nz);\n    const nr1 = one.redAdd(n.redMul(r));\n    const w2 = nr1.redSqr().redISub(one);\n    const w = w2.redSqrt();\n    const X = w.redSub(nr1);\n    const X1 = one.redAdd(X);\n    const YY = cm1.redMul(s).redMul(X).redMul(X1);\n    const Y = YY.redMul(x.redMul(z));\n    const X2 = X.redSqr().redIAdd(ci2);\n    const Z = this.field(Y.redMul(X2).redJacobi());\n    const u = Z.redMul(X);\n    const tt = one.redSub(u);\n    const tz = one.redAdd(u);\n    const t = tz.isZero() ? tz : tt.redDiv(tz);\n\n    if (t.redIsOdd() !== Boolean(sign))\n      t.redINeg();\n\n    return t;\n  }\n\n  _alt() {\n    if (!this.alt)\n      this.alt = this.toMont();\n\n    return this.alt;\n  }\n\n  isElliptic() {\n    const ad = this.a.redMul(this.d);\n    const amd = this.a.redSub(this.d);\n\n    // a * d * (a - d) != 0\n    return !ad.redMul(amd).isZero();\n  }\n\n  jinv() {\n    // [TWISTED] Definition 2.1, Page 3, Section 2.\n    const {a, d} = this;\n    const ad = a.redMul(d);\n    const amd4 = a.redSub(d).redPown(4);\n    const a2 = a.redSqr();\n    const d2 = d.redSqr();\n    const t0 = a2.redAdd(ad.redMuln(14)).redIAdd(d2);\n    const lhs = t0.redPown(3).redIMuln(16);\n    const rhs = ad.redMul(amd4);\n\n    if (rhs.isZero())\n      throw new Error('Curve is not elliptic.');\n\n    // 16 * (a^2 + 14 * a * d + d^2)^3 / (a * d * (a - d)^4)\n    return lhs.redDiv(rhs).fromRed();\n  }\n\n  isComplete() {\n    return this.a.redJacobi() === 1\n        && this.d.redJacobi() === -1;\n  }\n\n  point(x, y, z, t) {\n    return new EdwardsPoint(this, x, y, z, t);\n  }\n\n  jpoint(x, y, z) {\n    assert(x == null && y == null && z == null);\n    return this.point();\n  }\n\n  cpoint(xx, xz, yy, yz) {\n    assert(xx instanceof BN);\n    assert(xz instanceof BN);\n    assert(yy instanceof BN);\n    assert(yz instanceof BN);\n\n    const x = xx.redMul(yz);\n    const y = yy.redMul(xz);\n    const z = xz.redMul(yz);\n    const t = xx.redMul(yy);\n\n    return this.point(x, y, z, t);\n  }\n\n  solveX2(y) {\n    // [RFC8032] Section 5.1.3 & 5.2.3.\n    assert(y instanceof BN);\n\n    // x^2 = (y^2 - 1) / (d * y^2 - a)\n    const y2 = y.redSqr();\n    const rhs = this._mulD(y2).redISub(this.a);\n    const lhs = y2.redISub(this.one);\n    const x2 = lhs.redDiv(rhs);\n\n    return x2;\n  }\n\n  solveX(y) {\n    // Optimize with inverse square root trick.\n    //\n    // Note that `0 / 0` can only occur if\n    // `a == d` (i.e. the curve is singular).\n    const y2 = y.redSqr();\n    const rhs = this._mulD(y2).redISub(this.a);\n    const lhs = y2.redISub(this.one);\n\n    return lhs.redDivSqrt(rhs);\n  }\n\n  solveY2(x) {\n    assert(x instanceof BN);\n\n    // y^2 = (a * x^2 - 1) / (d * x^2 - 1)\n    const x2 = x.redSqr();\n    const lhs = this._mulA(x2).redISub(this.one);\n    const rhs = this._mulD(x2).redISub(this.one);\n    const y2 = lhs.redDiv(rhs);\n\n    return y2;\n  }\n\n  solveY(x) {\n    // Optimize with inverse square root trick.\n    //\n    // Note that `0 / 0` can only occur if\n    // `a == d` (i.e. the curve is singular).\n    const x2 = x.redSqr();\n    const lhs = this._mulA(x2).redISub(this.one);\n    const rhs = this._mulD(x2).redISub(this.one);\n\n    return lhs.redDivSqrt(rhs);\n  }\n\n  validate(point) {\n    // [TWISTED] Definition 2.1, Page 3, Section 2.\n    //           Page 11, Section 6.\n    assert(point instanceof EdwardsPoint);\n\n    // Z1 = 1\n    if (point.zOne) {\n      // a * x^2 + y^2 = 1 + d * x^2 * y^2\n      const x2 = point.x.redSqr();\n      const y2 = point.y.redSqr();\n      const dxy = this._mulD(x2).redMul(y2);\n      const lhs = this._mulA(x2).redIAdd(y2);\n      const rhs = this.one.redAdd(dxy);\n      const tz = point.t;\n      const xy = point.x.redMul(point.y);\n\n      return lhs.eq(rhs) && tz.eq(xy);\n    }\n\n    // (a * x^2 + y^2) * z^2 = z^4 + d * x^2 * y^2\n    const x2 = point.x.redSqr();\n    const y2 = point.y.redSqr();\n    const z2 = point.z.redSqr();\n    const z4 = z2.redSqr();\n    const dxy = this._mulD(x2).redMul(y2);\n    const lhs = this._mulA(x2).redIAdd(y2).redMul(z2);\n    const rhs = z4.redIAdd(dxy);\n    const tz = point.t.redMul(point.z);\n    const xy = point.x.redMul(point.y);\n\n    return lhs.eq(rhs) && tz.eq(xy);\n  }\n\n  pointFromX(x, sign = null) {\n    assert(x instanceof BN);\n    assert(sign == null || typeof sign === 'boolean');\n\n    if (!x.red)\n      x = x.toRed(this.red);\n\n    const y = this.solveY(x);\n\n    if (sign != null) {\n      if (y.isZero() && sign)\n        throw new Error('Invalid point.');\n\n      if (y.redIsOdd() !== sign)\n        y.redINeg();\n    }\n\n    return this.point(x, y);\n  }\n\n  pointFromY(y, sign = null) {\n    assert(y instanceof BN);\n    assert(sign == null || typeof sign === 'boolean');\n\n    if (!y.red)\n      y = y.toRed(this.red);\n\n    const x = this.solveX(y);\n\n    if (sign != null) {\n      if (x.isZero() && sign)\n        throw new Error('Invalid point.');\n\n      if (x.redIsOdd() !== sign)\n        x.redINeg();\n    }\n\n    return this.point(x, y);\n  }\n\n  isIsomorphic(curve, invert = false) {\n    // [TWISTED] Theorem 3.2, Page 4, Section 3.\n    //           Definition 2.1, Page 3, Section 2.\n    assert(curve instanceof Curve);\n    assert(typeof invert === 'boolean');\n\n    if (!curve.p.eq(this.p))\n      return false;\n\n    // E(a,d) <-> E(a,b)\n    if (curve.type === 'short')\n      return curve.isIsomorphic(this);\n\n    // E(a,d) <-> M(A,B)\n    // E(a,d) <-> M(-A,-B)\n    if (curve.type === 'mont') {\n      // A * (a - d) = 2 * (a + d)\n      const a = this.field(curve.a);\n\n      let apd, amd;\n\n      if (invert) {\n        apd = this.d.redAdd(this.a);\n        amd = this.d.redSub(this.a);\n      } else {\n        apd = this.a.redAdd(this.d);\n        amd = this.a.redSub(this.d);\n      }\n\n      return a.redMul(amd).eq(apd.redIMuln(2));\n    }\n\n    // E(a,d) <-> E(a',a'd/a)\n    if (curve.type === 'edwards') {\n      // a' * d = a * d'\n      const a = this.field(curve.a);\n      const d = this.field(curve.d);\n\n      return this.a.redMul(d).eq(a.redMul(this.d));\n    }\n\n    return false;\n  }\n\n  isIsogenous(curve) {\n    // Check for the 4-isogenies described by Hamburg:\n    // https://moderncrypto.org/mail-archive/curves/2016/000806.html\n    assert(curve instanceof Curve);\n\n    if (!curve.p.eq(this.p))\n      return false;\n\n    // E(1,d) <-> M(2-4d,1)\n    if (curve.type === 'mont') {\n      if (!this.a.eq(this.one))\n        return false;\n\n      const a = this.field(curve.a);\n      const b = this.field(curve.b);\n      const d24 = this.two.redSub(this.d.redMuln(4));\n\n      return a.eq(d24) && b.eq(this.one);\n    }\n\n    // E(a,d) <-> E(-a,d-a)\n    if (curve.type === 'edwards') {\n      const a = this.field(curve.a);\n      const d = this.field(curve.d);\n\n      return a.eq(this.a.redNeg())\n          && d.eq(this.d.redSub(this.a));\n    }\n\n    return false;\n  }\n\n  pointFromShort(point) {\n    // [TWISTEQ] Section 1.\n    assert(point instanceof ShortPoint);\n\n    if (this.isIsomorphic(point.curve)) {\n      // Equivalence for E(a,b)->E(a',d'):\n      //\n      //   x' = (6 * x - a' - d') / (6 * y)\n      //   y' = (12 * x - 5 * a' + d') / (12 * x + a' - 5 * d')\n      //\n      // Undefined for x = (5 * d' - a') / 12 or y = 0.\n      //\n      // Exceptional Cases:\n      //   - O -> (0, 1)\n      //   - ((a' + d') / 6, 0) -> (0, -1)\n      //   - ((5 * d' - a') / 12, (d' - a') / 4 * sqrt(d')) -> (sqrt(1/d'), oo)\n      //\n      // Unexceptional Cases:\n      //   - ((5 * a' - d') / 12, (a' - d') / 4 * sqrt(a')) -> (sqrt(1/a'), 0)\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.y.isZero())\n        return this.point(this.zero, this.one.redNeg());\n\n      const {a, d} = this;\n      const [u2, u3] = this._scale(point.curve);\n      const a5 = a.redMuln(5);\n      const d5 = d.redMuln(5);\n      const x = this.field(point.x).redMul(u2);\n      const y = this.field(point.y).redMul(u3);\n      const x6 = x.redMuln(6);\n      const x12 = x.redMuln(12);\n      const xx = x6.redSub(a).redISub(d);\n      const xz = y.redMuln(6);\n      const yy = x12.redSub(a5).redIAdd(d);\n      const yz = x12.redAdd(a).redISub(d5);\n\n      return this.cpoint(xx, xz, yy, yz);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromMont(point) {\n    // [RFC7748] Section 4.1 & 4.2.\n    // [MONT3] Page 6, Section 2.5.\n    // [TWISTED] Theorem 3.2, Page 4, Section 3.\n    assert(point instanceof MontPoint);\n    assert(point.curve.p.eq(this.p));\n\n    // Montgomery `u`, `v`.\n    const u = this.field(point.x);\n    const v = this.field(point.y);\n\n    if (this.isIsogenous(point.curve)) {\n      // 4-isogeny maps for M(2-4d,1)->E(1,d):\n      //\n      //   x = 4 * v * (u^2 - 1) / (u^4 - 2 * u^2 + 4 * v^2 + 1)\n      //   y = -(u^5 - 2 * u^3 - 4 * u * v^2 + u) /\n      //        (u^5 - 2 * u^2 * v^2 - 2 * u^3 - 2 * v^2 + u)\n      //\n      // Undefined for u = 0 and v = 0.\n      //\n      // Exceptional Cases:\n      //   - O -> (0, 1)\n      //   - (0, 0) -> (0, 1)\n      //\n      // Unexceptional Cases:\n      //   - (-1, +-sqrt(A - 2)) -> (0, 1)\n      //   - (1, +-sqrt(A + 2)) -> (0, -1)\n      //\n      // The point (1, v) is invalid on Curve448.\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero())\n        return this.point();\n\n      const u2 = u.redSqr();\n      const u3 = u2.redMul(u);\n      const u4 = u3.redMul(u);\n      const u5 = u4.redMul(u);\n      const v2 = v.redSqr();\n      const a = v.redMuln(4);\n      const b = u2.redSub(this.one);\n      const c = u2.redMuln(2);\n      const d = v2.redMuln(4);\n      const e = u3.redIMuln(2);\n      const f = u.redMul(v2).redIMuln(4);\n      const g = u2.redMul(v2).redIMuln(2);\n      const h = v2.redIMuln(2);\n      const xx = a.redMul(b);\n      const xz = u4.redISub(c).redIAdd(d).redIAdd(this.one);\n      const yy = u5.redSub(e).redISub(f).redIAdd(u).redINeg();\n      const yz = u5.redISub(g).redISub(e).redISub(h).redIAdd(u);\n\n      return this.cpoint(xx, xz, yy, yz).divn(4);\n    }\n\n    if (this.isIsomorphic(point.curve, true)) {\n      // Isomorphic maps for M(-A,-B)->E(a,d):\n      //\n      //   x = +-sqrt((A - 2) / (B * a)) * u / v\n      //   y = (u + 1) / (u - 1)\n      //\n      // Undefined for u = 1 or v = 0.\n      //\n      // Exceptional Cases:\n      //   - O -> (0, 1)\n      //   - (0, 0) -> (0, -1)\n      //   - (1, +-sqrt((A + 2) / B)) -> (+-sqrt(1 / d), oo)\n      //\n      // Unexceptional Cases:\n      //   - (-1, +-sqrt((A - 2) / B)) -> (+-sqrt(1 / a), 0)\n      //\n      // The point (1, v) is invalid on Curve448.\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero())\n        return this.point(this.zero, this.one.redNeg());\n\n      const c = this._scale(point.curve, true);\n      const xx = c.redMul(u);\n      const xz = v;\n      const yy = u.redAdd(this.one);\n      const yz = u.redSub(this.one);\n\n      return this.cpoint(xx, xz, yy, yz);\n    }\n\n    if (this.isIsomorphic(point.curve, false)) {\n      // Isomorphic maps for M(A,B)->E(a,d):\n      //\n      //   x = +-sqrt((A + 2) / (B * a)) * u / v\n      //   y = (u - 1) / (u + 1)\n      //\n      // Undefined for u = -1 or v = 0.\n      //\n      // Exceptional Cases:\n      //   - O -> (0, 1)\n      //   - (0, 0) -> (0, -1)\n      //   - (-1, +-sqrt((A - 2) / B)) -> (+-sqrt(1 / d), oo)\n      //\n      // Unexceptional Cases:\n      //   - (1, +-sqrt((A + 2) / B)) -> (+-sqrt(1 / a), 0)\n      //\n      // The point (-1, v) is invalid on Curve25519.\n      if (point.isInfinity())\n        return this.point();\n\n      if (point.x.isZero())\n        return this.point(this.zero, this.one.redNeg());\n\n      const c = this._scale(point.curve, false);\n      const xx = c.redMul(u);\n      const xz = v;\n      const yy = u.redSub(this.one);\n      const yz = u.redAdd(this.one);\n\n      return this.cpoint(xx, xz, yy, yz);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromEdwards(point) {\n    // [TWISTED] Definition 2.1, Page 3, Section 2.\n    // [ISOGENY] Page 2, Section 2.\n    assert(point instanceof EdwardsPoint);\n    assert(point.curve.p.eq(this.p));\n\n    // Edwards `x`, `y`, `z`, `t`.\n    const a = this.field(point.curve.a);\n    const x = this.field(point.x);\n    const y = this.field(point.y);\n    const z = this.field(point.z);\n    const t = this.field(point.t);\n\n    if (this.isIsogenous(point.curve)) {\n      // 4-isogeny maps for E(a,d)<->E(-a,d-a):\n      //\n      //   x' = (2 * x * y) / (y^2 - a * x^2)\n      //   y' = (y^2 + a * x^2) / (2 - y^2 - a * x^2)\n      //\n      // Undefined for y^2 - a * x^2 = 0\n      //            or y^2 + a * x^2 = 2.\n      const xy = x.redMul(y);\n      const x2 = x.redSqr();\n      const y2 = y.redSqr();\n      const z2 = z.redSqr();\n      const ax2 = a.redMul(x2);\n      const xx = xy.redIMuln(2);\n      const xz = y2.redSub(ax2);\n      const yy = y2.redAdd(ax2);\n      const yz = z2.redIMuln(2).redISub(yy);\n      const p = this.cpoint(xx, xz, yy, yz);\n\n      return !this.twisted ? p.divn(4) : p;\n    }\n\n    if (this.isIsomorphic(point.curve)) {\n      // Isomorphic maps for E(a,d)<->E(a',a'd/a):\n      //\n      //   x' = +-sqrt(a / a') * x\n      //   y' = y\n      //\n      // Undefined when (a / a') is not square.\n      const c = this._scale(point.curve);\n      const nx = c.redMul(x);\n      const ny = y;\n      const nz = z;\n      const nt = c.redMul(t);\n\n      return this.point(nx, ny, nz, nt);\n    }\n\n    throw new Error('Not implemented.');\n  }\n\n  pointFromUniform(u, curve = null) {\n    assert(u instanceof BN);\n    assert(u.red === this.red);\n    assert(curve == null || (curve instanceof MontCurve));\n\n    if (!curve)\n      curve = this._alt();\n\n    const u0 = curve.field(u);\n    const p0 = curve.pointFromUniform(u0);\n\n    return this.pointFromMont(p0);\n  }\n\n  pointToUniform(p, hint, curve = null) {\n    // Convert an edwards point to a field\n    // element by inverting the elligator2 map.\n    //\n    // Hint Layout:\n    //\n    //   [00000000] [0000] [0000]\n    //        |        |      |\n    //        |        |      +-- preimage index\n    //        |        +--- subgroup\n    //        +-- bits to OR with uniform bytes\n    assert(p instanceof EdwardsPoint);\n    assert((hint >>> 0) === hint);\n    assert(curve == null || (curve instanceof MontCurve));\n\n    if (!curve)\n      curve = this._alt();\n\n    // Add a random torsion component.\n    const i = ((hint >> 4) & 15) % this.torsion.length;\n    const q = p.add(this.torsion[i]);\n\n    // Convert and invert.\n    const p0 = curve.pointFromEdwards(q);\n    const u0 = curve.pointToUniform(p0, hint & 15);\n\n    return this.field(u0);\n  }\n\n  pointFromHash(bytes, pake, curve = null) {\n    assert(curve == null || (curve instanceof MontCurve));\n\n    if (!curve)\n      curve = this._alt();\n\n    const p0 = curve.pointFromHash(bytes, pake);\n\n    return this.pointFromMont(p0);\n  }\n\n  pointToHash(p, subgroup, rng, curve = null) {\n    assert(p instanceof EdwardsPoint);\n    assert((subgroup >>> 0) === subgroup);\n    assert(curve == null || (curve instanceof MontCurve));\n\n    if (!curve)\n      curve = this._alt();\n\n    // Add a random torsion component.\n    const i = subgroup % this.torsion.length;\n    const q = p.add(this.torsion[i]);\n\n    // Convert and invert.\n    const p0 = curve.pointFromEdwards(q);\n\n    return curve.pointToHash(p0, 0, rng);\n  }\n\n  decodePoint(bytes) {\n    return EdwardsPoint.decode(this, bytes);\n  }\n\n  toShort(a0, odd, sign = null) {\n    const [a, b] = this._short(a0, odd);\n\n    const curve = new ShortCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      b: b,\n      n: this.n,\n      h: this.h\n    });\n\n    if (sign != null) {\n      const [, u3] = curve._scale(this);\n\n      if (u3.redIsOdd() !== sign)\n        u3.redINeg();\n    }\n\n    if (!this.g.isInfinity())\n      curve.g = curve.pointFromEdwards(this.g);\n\n    for (let i = 0; i < this.h.word(0); i++)\n      curve.torsion[i] = curve.pointFromEdwards(this.torsion[i]);\n\n    return curve;\n  }\n\n  toMont(b0, invert, sign = null) {\n    const [a, b] = this._mont(b0, invert);\n\n    const curve = new MontCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      b: b,\n      n: this.n,\n      h: this.h,\n      z: this.z\n    });\n\n    if (sign != null) {\n      const c = this._scale(curve, invert);\n\n      if (c.redIsOdd() !== sign)\n        c.redINeg();\n    }\n\n    if (!this.g.isInfinity())\n      curve.g = curve.pointFromEdwards(this.g);\n\n    for (let i = 0; i < this.h.word(0); i++)\n      curve.torsion[i] = curve.pointFromEdwards(this.torsion[i]);\n\n    return curve;\n  }\n\n  toEdwards(a0, sign = null) {\n    const [a, d] = this._edwards(a0);\n\n    const curve = new EdwardsCurve({\n      red: this.red,\n      prime: this.prime,\n      p: this.p,\n      a: a,\n      d: d,\n      n: this.n,\n      h: this.h,\n      z: this.z\n    });\n\n    if (sign != null) {\n      const c = curve._scale(this);\n\n      if (c.redIsOdd() !== sign)\n        c.redINeg();\n    }\n\n    if (!this.g.isInfinity()) {\n      curve.g = curve.pointFromEdwards(this.g);\n      curve.g.normalize();\n    }\n\n    if (curve.isComplete()) {\n      for (let i = 0; i < this.h.word(0); i++) {\n        curve.torsion[i] = curve.pointFromEdwards(this.torsion[i]);\n        curve.torsion[i].normalize();\n      }\n    }\n\n    return curve;\n  }\n\n  pointFromJSON(json) {\n    return EdwardsPoint.fromJSON(this, json);\n  }\n\n  toJSON(pre) {\n    const json = super.toJSON(pre);\n\n    json.a = this.a.fromRed().toJSON();\n    json.d = this.d.fromRed().toJSON();\n\n    if (!this.s.isZero())\n      json.s = this.s.fromRed().toJSON();\n\n    return json;\n  }\n}\n\n/**\n * EdwardsPoint\n */\n\nclass EdwardsPoint extends Point {\n  constructor(curve, x, y, z, t) {\n    assert(curve instanceof EdwardsCurve);\n\n    super(curve, types.EXTENDED);\n\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n\n    if (x != null)\n      this._init(x, y, z, t);\n  }\n\n  _init(x, y, z, t) {\n    assert(x instanceof BN);\n    assert(y instanceof BN);\n    assert(z == null || (z instanceof BN));\n    assert(t == null || (t instanceof BN));\n\n    this.x = x;\n    this.y = y;\n    this.z = z || this.curve.one;\n    this.t = t || null;\n\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n\n    this.zOne = this.z.eq(this.curve.one);\n\n    this._check();\n\n    if (!this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redDiv(this.z);\n    }\n  }\n\n  _check() {\n    // In order to achieve complete\n    // addition formulas, `a` must\n    // be a square (always the case\n    // for a=1), and `d` must be a\n    // non-square.\n    //\n    // If this is not the case, the\n    // addition formulas may have\n    // exceptional cases where Z3=0.\n    //\n    // In particular, this can occur\n    // when: Q*h = -P*h and Q != -P.\n    //\n    // This is assuming 4-torsion is\n    // involved (the 4-torsion point\n    // is _not_ representable when\n    // `d` is square).\n    if (this.z.isZero())\n      throw new Error('Invalid point.');\n  }\n\n  clone() {\n    return this.curve.point(this.x, this.y, this.z, this.t);\n  }\n\n  normalize() {\n    // https://hyperelliptic.org/EFD/g1p/auto-edwards-projective.html#scaling-z\n    // 1I + 2M (+ 1M if extended)\n\n    // Z1 = 1\n    if (this.zOne)\n      return this;\n\n    // A = 1 / Z1\n    const a = this.z.redInvert();\n\n    // X3 = X1 * A\n    this.x = this.x.redMul(a);\n\n    // Y3 = Y1 * A\n    this.y = this.y.redMul(a);\n\n    // T3 = T1 * A\n    this.t = this.t.redMul(a);\n\n    // Z3 = 1\n    this.z = this.curve.one;\n    this.zOne = true;\n\n    return this;\n  }\n\n  scale(a) {\n    assert(a instanceof BN);\n\n    // X3 = X1 * A\n    const nx = this.x.redMul(a);\n\n    // Y3 = Y1 * A\n    const ny = this.y.redMul(a);\n\n    // Z3 = Z1 * A\n    const nz = this.z.redMul(a);\n\n    // T3 = T1 * A\n    const nt = this.t.redMul(a);\n\n    return this.curve.point(nx, ny, nz, nt);\n  }\n\n  neg() {\n    // -(X1, Y1, Z1, T1) = (-X1, Y1, Z1, -T1)\n    const nx = this.x.redNeg();\n    const ny = this.y;\n    const nz = this.z;\n    const nt = this.t.redNeg();\n\n    return this.curve.point(nx, ny, nz, nt);\n  }\n\n  add(p) {\n    assert(p instanceof EdwardsPoint);\n\n    // P = O\n    if (this.isInfinity())\n      return p;\n\n    // Q = O\n    if (p.isInfinity())\n      return this;\n\n    // Z1 = 1\n    if (this.zOne)\n      return p._add(this);\n\n    return this._add(p);\n  }\n\n  _add(p) {\n    // a = -1\n    if (this.curve.mOneA)\n      return this._addM1(p);\n\n    return this._addA(p);\n  }\n\n  _addM1(p) {\n    // Assumes a = -1.\n    //\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-3\n    // 8M + 8A + 1*k + 1*2\n    //\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-madd-2008-hwcd-3\n    // 7M + 8A + 1*k + 1*2\n\n    // A = (Y1 - X1) * (Y2 - X2)\n    const a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n\n    // B = (Y1 + X1) * (Y2 + X2)\n    const b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n\n    // C = T1 * k * T2\n    const c = this.t.redMul(this.curve.k).redMul(p.t);\n\n    // D = Z1 * 2 * Z2\n    const d = p.zOne ? this.z.redAdd(this.z) : this.z.redMul(p.z).redIMuln(2);\n\n    // E = B - A\n    const e = b.redSub(a);\n\n    // F = D - C\n    const f = d.redSub(c);\n\n    // G = D + C\n    const g = d.redIAdd(c);\n\n    // H = B + A\n    const h = b.redIAdd(a);\n\n    // X3 = E * F\n    const nx = e.redMul(f);\n\n    // Y3 = G * H\n    const ny = g.redMul(h);\n\n    // T3 = E * H\n    const nt = e.redMul(h);\n\n    // Z3 = F * G\n    const nz = f.redMul(g);\n\n    return this.curve.point(nx, ny, nz, nt);\n  }\n\n  _addA(p) {\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n    // 9M + 7A + 1*a + 1*d\n    //\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-madd-2008-hwcd\n    // 8M + 7A + 1*a + 1*d\n\n    // A = X1 * X2\n    const a = this.x.redMul(p.x);\n\n    // B = Y1 * Y2\n    const b = this.y.redMul(p.y);\n\n    // C = T1 * d * T2\n    const c = this.curve._mulD(this.t).redMul(p.t);\n\n    // D = Z1 * Z2\n    const d = p.zOne ? this.z.clone() : this.z.redMul(p.z);\n\n    // + XYXY = (X1 + Y1) * (X2 + Y2)\n    const xyxy = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y));\n\n    // E = (X1 + Y1) * (X2 + Y2) - A - B\n    const e = xyxy.redISub(a).redISub(b);\n\n    // F = D - C\n    const f = d.redSub(c);\n\n    // G = D + C\n    const g = d.redIAdd(c);\n\n    // H = B - a * A\n    const h = b.redISub(this.curve._mulA(a));\n\n    // X3 = E * F\n    const nx = e.redMul(f);\n\n    // Y3 = G * H\n    const ny = g.redMul(h);\n\n    // T3 = E * H\n    const nt = e.redMul(h);\n\n    // Z3 = F * G\n    const nz = f.redMul(g);\n\n    return this.curve.point(nx, ny, nz, nt);\n  }\n\n  dbl() {\n    // P = O\n    if (this.isInfinity())\n      return this;\n\n    return this._dbl();\n  }\n\n  _dbl() {\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n    // 4M + 4S + 6A + 1*a + 1*2\n    //\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-mdbl-2008-hwcd\n    // 3M + 4S + 7A + 1*a + 1*2\n\n    // A = X1^2\n    const a = this.x.redSqr();\n\n    // B = Y1^2\n    const b = this.y.redSqr();\n\n    // C = 2 * Z1^2\n    const c = this.zOne ? this.curve.two : this.z.redSqr().redIMuln(2);\n\n    // D = a * A\n    const d = this.curve._mulA(a);\n\n    // E = (X1 + Y1)^2 - A - B\n    const e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n\n    // G = D + B\n    const g = d.redAdd(b);\n\n    // F = G - C\n    const f = g.redSub(c);\n\n    // H = D - B\n    const h = d.redISub(b);\n\n    // X3 = E * F\n    const nx = e.redMul(f);\n\n    // Y3 = G * H\n    const ny = g.redMul(h);\n\n    // T3 = E * H\n    const nt = e.redMul(h);\n\n    // Z3 = F * G\n    const nz = f.redMul(g);\n\n    return this.curve.point(nx, ny, nz, nt);\n  }\n\n  getX() {\n    this.normalize();\n    return this.x.fromRed();\n  }\n\n  getY() {\n    this.normalize();\n    return this.y.fromRed();\n  }\n\n  eq(p) {\n    assert(p instanceof EdwardsPoint);\n    assert(!this.z.isZero());\n    assert(!p.z.isZero());\n\n    // P = Q\n    if (this === p)\n      return true;\n\n    // Z1 = Z2\n    if (this.z.eq(p.z)) {\n      return this.x.eq(p.x)\n          && this.y.eq(p.y);\n    }\n\n    // X1 * Z2 = X2 * Z1\n    const x1 = this.x.redMul(p.z);\n    const x2 = p.x.redMul(this.z);\n\n    if (!x1.eq(x2))\n      return false;\n\n    const y1 = this.y.redMul(p.z);\n    const y2 = p.y.redMul(this.z);\n\n    return y1.eq(y2);\n  }\n\n  cmp(point) {\n    assert(point instanceof EdwardsPoint);\n\n    return this.order().cmp(point.order())\n        || this.getY().cmp(point.getY())\n        || this.getX().cmp(point.getX());\n  }\n\n  isInfinity() {\n    assert(!this.z.isZero());\n\n    // X1 = 0\n    if (!this.x.isZero())\n      return false;\n\n    // Y1 = Z1\n    return this.y.eq(this.z);\n  }\n\n  isOrder2() {\n    if (this.isInfinity())\n      return false;\n\n    return this.x.isZero();\n  }\n\n  isOdd() {\n    this.normalize();\n    return this.x.redIsOdd();\n  }\n\n  isEven() {\n    this.normalize();\n    return this.x.redIsEven();\n  }\n\n  toP() {\n    return this.normalize();\n  }\n\n  toJ() {\n    return this;\n  }\n\n  encode() {\n    // [RFC8032] Section 5.1.2.\n    const y = this.getY();\n\n    // Note: `x` normalized from `getY()` call.\n    y.setn(this.curve.signBit, this.x.redIsOdd());\n\n    return this.curve.encodeAdjusted(y);\n  }\n\n  static decode(curve, bytes) {\n    // [RFC8032] Section 5.1.3.\n    assert(curve instanceof EdwardsCurve);\n\n    const y = curve.decodeAdjusted(bytes);\n    const sign = y.testn(curve.signBit) !== 0;\n\n    y.setn(curve.signBit, 0);\n\n    if (y.cmp(curve.p) >= 0)\n      throw new Error('Invalid point.');\n\n    return curve.pointFromY(y, sign);\n  }\n\n  toJSON(pre) {\n    if (this.isInfinity())\n      return [];\n\n    const x = this.getX().toJSON();\n    const y = this.getY().toJSON();\n\n    if (pre === true && this.pre)\n      return [x, y, this.pre.toJSON()];\n\n    return [x, y];\n  }\n\n  toPretty() {\n    const size = this.curve.fieldSize * 2;\n    const x = toPretty(this.getX(), size);\n    const y = toPretty(this.getY(), size);\n\n    return [x, y];\n  }\n\n  static fromJSON(curve, json) {\n    assert(curve instanceof EdwardsCurve);\n    assert(Array.isArray(json));\n    assert(json.length === 0\n        || json.length === 2\n        || json.length === 3);\n\n    if (json.length === 0)\n      return curve.point();\n\n    const x = BN.fromJSON(json[0]);\n    const y = BN.fromJSON(json[1]);\n    const point = curve.point(x, y);\n\n    if (json.length > 2 && json[2] != null)\n      point.pre = Precomp.fromJSON(point, json[2]);\n\n    return point;\n  }\n\n  [custom]() {\n    if (this.isInfinity())\n      return '<EdwardsPoint: Infinity>';\n\n    return '<EdwardsPoint:'\n        + ' x=' + this.x.fromRed().toString(16, 2)\n        + ' y=' + this.y.fromRed().toString(16, 2)\n        + ' z=' + this.z.fromRed().toString(16, 2)\n        + '>';\n  }\n}\n\n/**\n * Precomp\n */\n\nclass Precomp {\n  constructor() {\n    this.naf = null;\n    this.windows = null;\n    this.doubles = null;\n    this.blinding = null;\n    this.beta = null;\n  }\n\n  map(func) {\n    assert(typeof func === 'function');\n\n    const out = new this.constructor();\n\n    if (this.naf)\n      out.naf = this.naf.map(func);\n\n    if (this.doubles)\n      out.doubles = this.doubles.map(func);\n\n    return out;\n  }\n\n  toJSON() {\n    return {\n      naf: this.naf ? this.naf.toJSON() : null,\n      windows: this.windows ? this.windows.toJSON() : null,\n      doubles: this.doubles ? this.doubles.toJSON() : null,\n      blinding: this.blinding ? this.blinding.toJSON() : undefined\n    };\n  }\n\n  fromJSON(point, json) {\n    assert(point instanceof Point);\n    assert(json && typeof json === 'object');\n\n    if (json.naf != null)\n      this.naf = NAF.fromJSON(point, json.naf);\n\n    if (json.windows != null)\n      this.windows = Windows.fromJSON(point, json.windows);\n\n    if (json.doubles != null)\n      this.doubles = Doubles.fromJSON(point, json.doubles);\n\n    if (json.blinding != null)\n      this.blinding = Blinding.fromJSON(point, json.blinding);\n\n    return this;\n  }\n\n  static fromJSON(point, json) {\n    return new this().fromJSON(point, json);\n  }\n}\n\n/**\n * NAF\n */\n\nclass NAF {\n  constructor(width, points) {\n    this.width = width;\n    this.points = points;\n  }\n\n  map(func) {\n    assert(typeof func === 'function');\n\n    const {width} = this;\n    const points = [];\n\n    for (const point of this.points)\n      points.push(func(point));\n\n    return new this.constructor(width, points);\n  }\n\n  toJSON() {\n    return {\n      width: this.width,\n      points: this.points.slice(1).map((point) => {\n        return point.toJSON();\n      })\n    };\n  }\n\n  static fromJSON(point, json) {\n    assert(point instanceof Point);\n    assert(json && typeof json === 'object');\n    assert((json.width >>> 0) === json.width);\n    assert(Array.isArray(json.points));\n\n    const {curve} = point;\n    const {width} = json;\n    const points = [point];\n\n    for (const item of json.points)\n      points.push(curve.pointFromJSON(item));\n\n    return new this(width, points);\n  }\n}\n\n/**\n * Windows\n */\n\nclass Windows {\n  constructor(width, bits, points) {\n    this.width = width;\n    this.bits = bits;\n    this.points = points;\n  }\n\n  toJSON() {\n    return {\n      width: this.width,\n      bits: this.bits,\n      points: this.points.slice(1).map((point) => {\n        return point.toJSON();\n      })\n    };\n  }\n\n  static fromJSON(point, json) {\n    assert(point instanceof Point);\n    assert(json && typeof json === 'object');\n    assert((json.width >>> 0) === json.width);\n    assert((json.bits >>> 0) === json.bits);\n    assert(Array.isArray(json.points));\n\n    const {curve} = point;\n    const {width, bits} = json;\n    const points = [point];\n\n    for (const item of json.points)\n      points.push(curve.pointFromJSON(item));\n\n    return new this(width, bits, points);\n  }\n}\n\n/**\n * Doubles\n */\n\nclass Doubles {\n  constructor(step, points) {\n    this.step = step;\n    this.points = points;\n  }\n\n  map(func) {\n    assert(typeof func === 'function');\n\n    const {step} = this;\n    const points = [];\n\n    for (const point of this.points)\n      points.push(func(point));\n\n    return new this.constructor(step, points);\n  }\n\n  toJSON() {\n    return {\n      step: this.step,\n      points: this.points.slice(1).map((point) => {\n        return point.toJSON();\n      })\n    };\n  }\n\n  static fromJSON(point, json) {\n    assert(point instanceof Point);\n    assert(json && typeof json === 'object');\n    assert((json.step >>> 0) === json.step);\n    assert(Array.isArray(json.points));\n\n    const {curve} = point;\n    const {step} = json;\n    const points = [point];\n\n    for (const item of json.points)\n      points.push(curve.pointFromJSON(item));\n\n    return new this(step, points);\n  }\n}\n\n/**\n * Blinding\n */\n\nclass Blinding {\n  constructor(blind, unblind) {\n    this.blind = blind;\n    this.unblind = unblind;\n  }\n\n  toJSON() {\n    return {\n      blind: this.blind.toJSON(),\n      unblind: this.unblind.toJSON()\n    };\n  }\n\n  static fromJSON(point, json) {\n    assert(point instanceof Point);\n    assert(json && typeof json === 'object');\n\n    const {curve} = point;\n    const blind = BN.fromJSON(json.blind);\n    const unblind = curve.pointFromJSON(json.unblind);\n\n    return new this(blind, unblind);\n  }\n}\n\n/**\n * Endo\n */\n\nclass Endo {\n  constructor(beta, lambda, basis, pre) {\n    this.beta = beta;\n    this.lambda = lambda;\n    this.basis = basis;\n    this.pre = pre;\n  }\n\n  toJSON() {\n    return {\n      beta: this.beta.fromRed().toJSON(),\n      lambda: this.lambda.toJSON(),\n      basis: [\n        this.basis[0].toJSON(),\n        this.basis[1].toJSON()\n      ],\n      pre: [\n        this.pre[0],\n        this.pre[1].toJSON(),\n        this.pre[2].toJSON()\n      ]\n    };\n  }\n\n  static fromJSON(curve, json) {\n    assert(curve instanceof Curve);\n    assert(json && typeof json === 'object');\n    assert(Array.isArray(json.basis));\n    assert(Array.isArray(json.pre));\n    assert(json.basis.length === 2);\n    assert(json.pre.length === 3);\n    assert((json.pre[0] >>> 0) === json.pre[0]);\n\n    const beta = BN.fromJSON(json.beta).toRed(curve.red);\n    const lambda = BN.fromJSON(json.lambda);\n\n    const basis = [\n      Vector.fromJSON(json.basis[0]),\n      Vector.fromJSON(json.basis[1])\n    ];\n\n    const pre = [\n      json.pre[0],\n      BN.fromJSON(json.pre[1]),\n      BN.fromJSON(json.pre[2])\n    ];\n\n    return new this(beta, lambda, basis, pre);\n  }\n}\n\n/**\n * Vector\n */\n\nclass Vector {\n  constructor(a, b) {\n    this.a = a;\n    this.b = b;\n  }\n\n  toJSON() {\n    return {\n      a: this.a.toJSON(),\n      b: this.b.toJSON()\n    };\n  }\n\n  static fromJSON(json) {\n    assert(json && typeof json === 'object');\n\n    const a = BN.fromJSON(json.a);\n    const b = BN.fromJSON(json.b);\n\n    return new this(a, b);\n  }\n}\n\n/**\n * P192\n * https://tinyurl.com/fips-186-2 (page 29)\n * https://tinyurl.com/fips-186-3 (page 88)\n */\n\nclass P192 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'P192',\n      ossl: 'prime192v1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA256',\n      prime: 'p192',\n      // 2^192 - 2^64 - 1 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff fffffffe',\n          'ffffffff ffffffff'],\n      // -3 mod p\n      a: ['ffffffff ffffffff ffffffff fffffffe',\n          'ffffffff fffffffc'],\n      b: ['64210519 e59c80e7 0fa7e9ab 72243049',\n          'feb8deec c146b9b1'],\n      n: ['ffffffff ffffffff ffffffff 99def836',\n          '146bc9b1 b4d22831'],\n      h: '1',\n      // Icart\n      z: '-5',\n      g: [\n        ['188da80e b03090f6 7cbf20eb 43a18800',\n         'f4ff0afd 82ff1012'],\n        ['07192b95 ffc8da78 631011ed 6b24cdd5',\n         '73f977a1 1e794811'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * P224\n * https://tinyurl.com/fips-186-2 (page 30)\n * https://tinyurl.com/fips-186-3 (page 88)\n */\n\nclass P224 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'P224',\n      ossl: 'secp224r1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA256',\n      prime: 'p224',\n      // 2^224 - 2^96 + 1 (1 mod 16)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          '00000000 00000000 00000001'],\n      // -3 mod p\n      a: ['ffffffff ffffffff ffffffff fffffffe',\n          'ffffffff ffffffff fffffffe'],\n      b: ['b4050a85 0c04b3ab f5413256 5044b0b7',\n          'd7bfd8ba 270b3943 2355ffb4'],\n      n: ['ffffffff ffffffff ffffffff ffff16a2',\n          'e0b8f03e 13dd2945 5c5c2a3d'],\n      h: '1',\n      // SSWU\n      z: '1f',\n      g: [\n        ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3',\n         '56c21122 343280d6 115c1d21'],\n        ['bd376388 b5f723fb 4c22dfe6 cd4375a0',\n         '5a074764 44d58199 85007e34'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * P256\n * https://tinyurl.com/fips-186-2 (page 31)\n * https://tinyurl.com/fips-186-3 (page 89)\n */\n\nclass P256 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'P256',\n      ossl: 'prime256v1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA256',\n      prime: null,\n      // 2^256 - 2^224 + 2^192 + 2^96 - 1 (= 3 mod 4)\n      p: ['ffffffff 00000001 00000000 00000000',\n          '00000000 ffffffff ffffffff ffffffff'],\n      // -3 mod p\n      a: ['ffffffff 00000001 00000000 00000000',\n          '00000000 ffffffff ffffffff fffffffc'],\n      b: ['5ac635d8 aa3a93e7 b3ebbd55 769886bc',\n          '651d06b0 cc53b0f6 3bce3c3e 27d2604b'],\n      n: ['ffffffff 00000000 ffffffff ffffffff',\n          'bce6faad a7179e84 f3b9cac2 fc632551'],\n      h: '1',\n      // SSWU\n      z: '-a',\n      g: [\n        ['6b17d1f2 e12c4247 f8bce6e5 63a440f2',\n         '77037d81 2deb33a0 f4a13945 d898c296'],\n        ['4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16',\n         '2bce3357 6b315ece cbb64068 37bf51f5'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * P384\n * https://tinyurl.com/fips-186-2 (page 32)\n * https://tinyurl.com/fips-186-3 (page 89)\n */\n\nclass P384 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'P384',\n      ossl: 'secp384r1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA384',\n      prime: null,\n      // 2^384 - 2^128 - 2^96 + 2^32 - 1 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff fffffffe',\n          'ffffffff 00000000 00000000 ffffffff'],\n      // -3 mod p\n      a: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff fffffffe',\n          'ffffffff 00000000 00000000 fffffffc'],\n      b: ['b3312fa7 e23ee7e4 988e056b e3f82d19',\n          '181d9c6e fe814112 0314088f 5013875a',\n          'c656398d 8a2ed19d 2a85c8ed d3ec2aef'],\n      n: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff c7634d81 f4372ddf',\n          '581a0db2 48b0a77a ecec196a ccc52973'],\n      h: '1',\n      // Icart\n      z: '-c',\n      g: [\n        ['aa87ca22 be8b0537 8eb1c71e f320ad74',\n         '6e1d3b62 8ba79b98 59f741e0 82542a38',\n         '5502f25d bf55296c 3a545e38 72760ab7'],\n        ['3617de4a 96262c6f 5d9e98bf 9292dc29',\n         'f8f41dbd 289a147c e9da3113 b5f0b8c0',\n         '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * P521\n * https://tinyurl.com/fips-186-2 (page 33)\n * https://tinyurl.com/fips-186-3 (page 90)\n */\n\nclass P521 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'P521',\n      ossl: 'secp521r1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA512',\n      prime: 'p521',\n      // 2^521 - 1 (= 3 mod 4)\n      p: ['000001ff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff'],\n      // -3 mod p\n      a: ['000001ff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'fffffffc'],\n      b: ['00000051 953eb961 8e1c9a1f 929a21a0',\n          'b68540ee a2da725b 99b315f3 b8b48991',\n          '8ef109e1 56193951 ec7e937b 1652c0bd',\n          '3bb1bf07 3573df88 3d2c34f1 ef451fd4',\n          '6b503f00'],\n      n: ['000001ff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'fffffffa 51868783 bf2f966b 7fcc0148',\n          'f709a5d0 3bb5c9b8 899c47ae bb6fb71e',\n          '91386409'],\n      h: '1',\n      // SSWU\n      z: '-4',\n      g: [\n        ['000000c6 858e06b7 0404e9cd 9e3ecb66',\n         '2395b442 9c648139 053fb521 f828af60',\n         '6b4d3dba a14b5e77 efe75928 fe1dc127',\n         'a2ffa8de 3348b3c1 856a429b f97e7e31',\n         'c2e5bd66'],\n        ['00000118 39296a78 9a3bc004 5c8a5fb4',\n         '2c7d1bd9 98f54449 579b4468 17afbd17',\n         '273e662c 97ee7299 5ef42640 c550b901',\n         '3fad0761 353c7086 a272c240 88be9476',\n         '9fd16650'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * SECP256K1\n * https://www.secg.org/SEC2-Ver-1.0.pdf (page 15, section 2.7.1)\n * https://www.secg.org/sec2-v2.pdf (page 9, section 2.4.1)\n */\n\nclass SECP256K1 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'SECP256K1',\n      ossl: 'secp256k1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA256',\n      prime: 'k256',\n      // 2^256 - 2^32 - 977 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff fffffffe fffffc2f'],\n      a: '0',\n      b: '7',\n      n: ['ffffffff ffffffff ffffffff fffffffe',\n          'baaedce6 af48a03b bfd25e8c d0364141'],\n      h: '1',\n      // SVDW\n      z: '1',\n      // sqrt(-3)\n      c: ['0a2d2ba9 3507f1df 233770c2 a797962c',\n          'c61f6d15 da14ecd4 7d8d27ae 1cd5f852'],\n      g: [\n        ['79be667e f9dcbbac 55a06295 ce870b07',\n         '029bfcdb 2dce28d9 59f2815b 16f81798'],\n        ['483ada77 26a3c465 5da4fbfc 0e1108a8',\n         'fd17b448 a6855419 9c47d08f fb10d4b8'],\n        pre\n      ],\n      // Precomputed endomorphism.\n      endo: {\n        beta: ['7ae96a2b 657c0710 6e64479e ac3434e9',\n               '9cf04975 12f58995 c1396c28 719501ee'],\n        lambda: ['5363ad4c c05c30e0 a5261c02 8812645a',\n                 '122e22ea 20816678 df02967c 1b23bd72'],\n        basis: [\n          {\n            a: '3086d221a7d46bcde86c90e49284eb15',\n            b: '-e4437ed6010e88286f547fa90abfe4c3'\n          },\n          {\n            a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n            b: '3086d221a7d46bcde86c90e49284eb15'\n          }\n        ],\n        pre: [\n          384,\n          ['3086d221 a7d46bcd e86c90e4 9284eb15',\n           '3daa8a14 71e8ca7f e893209a 45dbb031'],\n          ['-',\n           'e4437ed6 010e8828 6f547fa9 0abfe4c4',\n           '221208ac 9df506c6 1571b4ae 8ac47f71']\n        ]\n      }\n    });\n  }\n}\n\n/**\n * BRAINPOOLP256\n * https://tools.ietf.org/html/rfc5639#section-3.4\n */\n\nclass BRAINPOOLP256 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'BRAINPOOLP256',\n      ossl: 'brainpoolP256r1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA256',\n      prime: null,\n      // (= 3 mod 4)\n      p: ['a9fb57db a1eea9bc 3e660a90 9d838d72',\n          '6e3bf623 d5262028 2013481d 1f6e5377'],\n      a: ['7d5a0975 fc2c3057 eef67530 417affe7',\n          'fb8055c1 26dc5c6c e94a4b44 f330b5d9'],\n      b: ['26dc5c6c e94a4b44 f330b5d9 bbd77cbf',\n          '95841629 5cf7e1ce 6bccdc18 ff8c07b6'],\n      n: ['a9fb57db a1eea9bc 3e660a90 9d838d71',\n          '8c397aa3 b561a6f7 901e0e82 974856a7'],\n      h: '1',\n      // Icart\n      z: '-2',\n      g: [\n        ['8bd2aeb9 cb7e57cb 2c4b482f fc81b7af',\n         'b9de27e1 e3bd23c2 3a4453bd 9ace3262'],\n        ['547ef835 c3dac4fd 97f8461a 14611dc9',\n         'c2774513 2ded8e54 5c1d54c7 2f046997'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * BRAINPOOLP384\n * https://tools.ietf.org/html/rfc5639#section-3.6\n */\n\nclass BRAINPOOLP384 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'BRAINPOOLP384',\n      ossl: 'brainpoolP384r1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA384',\n      prime: null,\n      // (= 3 mod 4)\n      p: ['8cb91e82 a3386d28 0f5d6f7e 50e641df',\n          '152f7109 ed5456b4 12b1da19 7fb71123',\n          'acd3a729 901d1a71 87470013 3107ec53'],\n      a: ['7bc382c6 3d8c150c 3c72080a ce05afa0',\n          'c2bea28e 4fb22787 139165ef ba91f90f',\n          '8aa5814a 503ad4eb 04a8c7dd 22ce2826'],\n      b: ['04a8c7dd 22ce2826 8b39b554 16f0447c',\n          '2fb77de1 07dcd2a6 2e880ea5 3eeb62d5',\n          '7cb43902 95dbc994 3ab78696 fa504c11'],\n      n: ['8cb91e82 a3386d28 0f5d6f7e 50e641df',\n          '152f7109 ed5456b3 1f166e6c ac0425a7',\n          'cf3ab6af 6b7fc310 3b883202 e9046565'],\n      h: '1',\n      // SSWU\n      z: '-5',\n      g: [\n        ['1d1c64f0 68cf45ff a2a63a81 b7c13f6b',\n         '8847a3e7 7ef14fe3 db7fcafe 0cbd10e8',\n         'e826e034 36d646aa ef87b2e2 47d4af1e'],\n        ['8abe1d75 20f9c2a4 5cb1eb8e 95cfd552',\n         '62b70b29 feec5864 e19c054f f9912928',\n         '0e464621 77918111 42820341 263c5315'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * BRAINPOOLP512\n * https://tools.ietf.org/html/rfc5639#section-3.7\n */\n\nclass BRAINPOOLP512 extends ShortCurve {\n  constructor(pre) {\n    super({\n      id: 'BRAINPOOLP512',\n      ossl: 'brainpoolP512r1',\n      type: 'short',\n      endian: 'be',\n      hash: 'SHA512',\n      prime: null,\n      // (= 3 mod 4)\n      p: ['aadd9db8 dbe9c48b 3fd4e6ae 33c9fc07',\n          'cb308db3 b3c9d20e d6639cca 70330871',\n          '7d4d9b00 9bc66842 aecda12a e6a380e6',\n          '2881ff2f 2d82c685 28aa6056 583a48f3'],\n      a: ['7830a331 8b603b89 e2327145 ac234cc5',\n          '94cbdd8d 3df91610 a83441ca ea9863bc',\n          '2ded5d5a a8253aa1 0a2ef1c9 8b9ac8b5',\n          '7f1117a7 2bf2c7b9 e7c1ac4d 77fc94ca'],\n      b: ['3df91610 a83441ca ea9863bc 2ded5d5a',\n          'a8253aa1 0a2ef1c9 8b9ac8b5 7f1117a7',\n          '2bf2c7b9 e7c1ac4d 77fc94ca dc083e67',\n          '984050b7 5ebae5dd 2809bd63 8016f723'],\n      n: ['aadd9db8 dbe9c48b 3fd4e6ae 33c9fc07',\n          'cb308db3 b3c9d20e d6639cca 70330870',\n          '553e5c41 4ca92619 41866119 7fac1047',\n          '1db1d381 085ddadd b5879682 9ca90069'],\n      h: '1',\n      // Icart\n      z: '7',\n      g: [\n        ['81aee4bd d82ed964 5a21322e 9c4c6a93',\n         '85ed9f70 b5d916c1 b43b62ee f4d0098e',\n         'ff3b1f78 e2d0d48d 50d1687b 93b97d5f',\n         '7c6d5047 406a5e68 8b352209 bcb9f822'],\n        ['7dde385d 566332ec c0eabfa9 cf7822fd',\n         'f209f700 24a57b1a a000c55b 881f8111',\n         'b2dcde49 4a5f485e 5bca4bd8 8a2763ae',\n         'd1ca2b2f a8f05406 78cd1e0f 3ad80892'],\n        pre\n      ]\n    });\n  }\n}\n\n/**\n * X25519\n * https://tools.ietf.org/html/rfc7748#section-4.1\n */\n\nclass X25519 extends MontCurve {\n  constructor() {\n    super({\n      id: 'X25519',\n      ossl: 'X25519',\n      type: 'mont',\n      endian: 'le',\n      hash: 'SHA512',\n      prime: 'p25519',\n      // 2^255 - 19 (= 5 mod 8)\n      p: ['7fffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffed'],\n      // 486662\n      a: '76d06',\n      b: '1',\n      n: ['10000000 00000000 00000000 00000000',\n          '14def9de a2f79cd6 5812631a 5cf5d3ed'],\n      h: '8',\n      // Elligator 2\n      z: '2',\n      g: [\n        ['00000000 00000000 00000000 00000000',\n         '00000000 00000000 00000000 00000009'],\n        // See: https://www.rfc-editor.org/errata/eid4730\n        ['5f51e65e 475f794b 1fe122d3 88b72eb3',\n         '6dc2b281 92839e4d d6163a5d 81312c14']\n      ],\n      torsion: [\n        [],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000001'],\n          ['6be4f497 f9a9c2af c21fa77a d7f4a6ef',\n           '635a11c7 284a9363 e9a248ef 9c884415']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000001'],\n          ['141b0b68 06563d50 3de05885 280b5910',\n           '9ca5ee38 d7b56c9c 165db710 6377bbd8']\n        ],\n        [\n          ['57119fd0 dd4e22d8 868e1c58 c45c4404',\n           '5bef839c 55b1d0b1 248c50a3 bc959c5f'],\n          ['68c59389 3d458e64 31c6ca00 45fb5015',\n           '20a44346 8eaa68dd 0f103842 048065b7']\n        ],\n        [\n          ['57119fd0 dd4e22d8 868e1c58 c45c4404',\n           '5bef839c 55b1d0b1 248c50a3 bc959c5f'],\n          ['173a6c76 c2ba719b ce3935ff ba04afea',\n           'df5bbcb9 71559722 f0efc7bd fb7f9a36']\n        ],\n        [\n          ['00b8495f 16056286 fdb1329c eb8d09da',\n           '6ac49ff1 fae35616 aeb8413b 7c7aebe0'],\n          ['3931c129 569e83a5 29482c14 e628b457',\n           '933bfc29 ed801b4d 68871483 92507b1a']\n        ],\n        [\n          ['00b8495f 16056286 fdb1329c eb8d09da',\n           '6ac49ff1 fae35616 aeb8413b 7c7aebe0'],\n          ['46ce3ed6 a9617c5a d6b7d3eb 19d74ba8',\n           '6cc403d6 127fe4b2 9778eb7c 6daf84d3']\n        ]\n      ]\n    });\n  }\n}\n\n/**\n * X448\n * https://tools.ietf.org/html/rfc7748#section-4.2\n */\n\nclass X448 extends MontCurve {\n  constructor() {\n    super({\n      id: 'X448',\n      ossl: 'X448',\n      type: 'mont',\n      endian: 'le',\n      hash: 'SHAKE256',\n      prime: 'p448',\n      // 2^448 - 2^224 - 1 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff fffffffe ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff'],\n      // 156326\n      a: '262a6',\n      b: '1',\n      n: ['3fffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff 7cca23e9',\n          'c44edb49 aed63690 216cc272 8dc58f55',\n          '2378c292 ab5844f3'],\n      h: '4',\n      // Elligator 2\n      z: '-1',\n      g: [\n        ['00000000 00000000 00000000 00000000',\n         '00000000 00000000 00000000 00000000',\n         '00000000 00000000 00000000 00000000',\n         '00000000 00000005'],\n        ['7d235d12 95f5b1f6 6c98ab6e 58326fce',\n         'cbae5d34 f55545d0 60f75dc2 8df3f6ed',\n         'b8027e23 46430d21 1312c4b1 50677af7',\n         '6fd7223d 457b5b1a']\n      ],\n      torsion: [\n        [],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000']\n        ],\n        [\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe'],\n          ['ba4d3a08 29b6112f 8812e51b a0bb2abe',\n           'bc1cb08e b48e5569 36ba50fd d2e7d68a',\n           'f8cb3216 0522425b 3f990812 abbe635a',\n           'd37a21e1 7551b193']\n        ],\n        [\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe'],\n          ['45b2c5f7 d649eed0 77ed1ae4 5f44d541',\n           '43e34f71 4b71aa96 c945af01 2d182975',\n           '0734cde9 faddbda4 c066f7ed 54419ca5',\n           '2c85de1e 8aae4e6c']\n        ]\n      ]\n    });\n  }\n}\n\n/**\n * MONT448\n * Isomorphic to Ed448-Goldilocks.\n */\n\nclass MONT448 extends MontCurve {\n  constructor() {\n    super({\n      id: 'MONT448',\n      ossl: null,\n      type: 'mont',\n      endian: 'le',\n      hash: 'SHAKE256',\n      prime: 'p448',\n      // 2^448 - 2^224 - 1 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff fffffffe ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff'],\n      // -78160 / -39082 mod p\n      a: ['b2cf97d2 d43459a9 31ed36b1 fc4e3cb5',\n          '5d93f8d2 22746997 60ccffc6 49961ed6',\n          'c5b05fca c24864ed 6fb59697 931b78da',\n          '84ddecd8 ca2b5cfb'],\n      b: '1',\n      n: ['3fffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff 7cca23e9',\n          'c44edb49 aed63690 216cc272 8dc58f55',\n          '2378c292 ab5844f3'],\n      h: '4',\n      // Elligator 2\n      z: '-1',\n      g: [\n        ['ac0d24cc c6c75cb0 eb71f81e 7a6edf51',\n         '48e88aee 009a2a24 e795687e c28e125a',\n         '3e6730a6 0d46367b aa7fe99d 152128dc',\n         '41321bc7 7817f059'],\n        ['5a4437f6 80c0d0db 9b061276 d5d0ffcc',\n         'e786ff33 b6a53d30 98746425 82e66f09',\n         '4433dae7 7244a6e2 6b11e905 7228f483',\n         '556c41a5 913f55fe']\n      ],\n      torsion: [\n        [],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000']\n        ],\n        [\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe'],\n          ['bec92fd0 6da2acf2 b4e261e8 7cef0d34',\n           '22e75c18 3c589857 b71924e5 73c2f9ce',\n           'e18da5f2 466e2f39 3c2eedf0 f105a60a',\n           'b40c717d 4f1e1fd7']\n        ],\n        [\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe'],\n          ['4136d02f 925d530d 4b1d9e17 8310f2cb',\n           'dd18a3e7 c3a767a8 48e6db19 8c3d0631',\n           '1e725a0d b991d0c6 c3d1120f 0efa59f5',\n           '4bf38e82 b0e1e028']\n        ]\n      ]\n    });\n  }\n}\n\n/**\n * ED25519\n * https://tools.ietf.org/html/rfc8032#section-5.1\n */\n\nclass ED25519 extends EdwardsCurve {\n  constructor(pre) {\n    super({\n      id: 'ED25519',\n      ossl: 'ED25519',\n      type: 'edwards',\n      endian: 'le',\n      hash: 'SHA512',\n      prefix: 'SigEd25519 no Ed25519 collisions',\n      context: false,\n      prime: 'p25519',\n      // 2^255 - 19 (= 5 mod 8)\n      p: ['7fffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff ffffffed'],\n      a: '-1',\n      // -121665 / 121666 mod p\n      d: ['52036cee 2b6ffe73 8cc74079 7779e898',\n          '00700a4d 4141d8ab 75eb4dca 135978a3'],\n      n: ['10000000 00000000 00000000 00000000',\n          '14def9de a2f79cd6 5812631a 5cf5d3ed'],\n      h: '8',\n      // Elligator 2\n      z: '2',\n      g: [\n        ['216936d3 cd6e53fe c0a4e231 fdd6dc5c',\n         '692cc760 9525a7b2 c9562d60 8f25d51a'],\n        // 4/5\n        ['66666666 66666666 66666666 66666666',\n         '66666666 66666666 66666666 66666658'],\n        pre\n      ],\n      torsion: [\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000001']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000'],\n          ['7fffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff ffffffff ffffffec']\n        ],\n        [\n          ['2b832480 4fc1df0b 2b4d0099 3dfbd7a7',\n           '2f431806 ad2fe478 c4ee1b27 4a0ea0b0'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000']\n        ],\n        [\n          ['547cdb7f b03e20f4 d4b2ff66 c2042858',\n           'd0bce7f9 52d01b87 3b11e4d8 b5f15f3d'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000']\n        ],\n        [\n          ['1fd5b9a0 06394a28 e9339932 38de4abb',\n           '5c193c70 13e5e238 dea14646 c545d14a'],\n          ['05fc536d 880238b1 3933c6d3 05acdfd5',\n           'f098eff2 89f4c345 b027b2c2 8f95e826']\n        ],\n        [\n          ['602a465f f9c6b5d7 16cc66cd c721b544',\n           'a3e6c38f ec1a1dc7 215eb9b9 3aba2ea3'],\n          ['05fc536d 880238b1 3933c6d3 05acdfd5',\n           'f098eff2 89f4c345 b027b2c2 8f95e826']\n        ],\n        [\n          ['1fd5b9a0 06394a28 e9339932 38de4abb',\n           '5c193c70 13e5e238 dea14646 c545d14a'],\n          ['7a03ac92 77fdc74e c6cc392c fa53202a',\n           '0f67100d 760b3cba 4fd84d3d 706a17c7']\n        ],\n        [\n          ['602a465f f9c6b5d7 16cc66cd c721b544',\n           'a3e6c38f ec1a1dc7 215eb9b9 3aba2ea3'],\n          ['7a03ac92 77fdc74e c6cc392c fa53202a',\n           '0f67100d 760b3cba 4fd84d3d 706a17c7']\n        ]\n      ]\n    });\n  }\n}\n\n/**\n * ISO448\n * https://tools.ietf.org/html/rfc7748#section-4.2\n * https://git.zx2c4.com/goldilocks/tree/_aux/ristretto/ristretto.sage#n658\n */\n\nclass ISO448 extends EdwardsCurve {\n  constructor(pre) {\n    super({\n      id: 'ISO448',\n      ossl: null,\n      type: 'edwards',\n      endian: 'le',\n      hash: 'SHAKE256',\n      prefix: 'SigEd448',\n      context: true,\n      prime: 'p448',\n      // 2^448 - 2^224 - 1 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff fffffffe ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff'],\n      a: '1',\n      // 39082 / 39081 mod p\n      d: ['d78b4bdc 7f0daf19 f24f38c2 9373a2cc',\n          'ad461572 42a50f37 809b1da3 412a12e7',\n          '9ccc9c81 264cfe9a d0809970 58fb61c4',\n          '243cc32d baa156b9'],\n      n: ['3fffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff 7cca23e9',\n          'c44edb49 aed63690 216cc272 8dc58f55',\n          '2378c292 ab5844f3'],\n      h: '4',\n      // Elligator 2\n      z: '-1',\n      g: [\n        ['79a70b2b 70400553 ae7c9df4 16c792c6',\n         '1128751a c9296924 0c25a07d 728bdc93',\n         'e21f7787 ed697224 9de732f3 8496cd11',\n         '69871309 3e9c04fc'],\n        // Note: the RFC has this wrong.\n        ['7fffffff ffffffff ffffffff ffffffff',\n         'ffffffff ffffffff ffffffff 80000000',\n         '00000000 00000000 00000000 00000000',\n         '00000000 00000001'],\n        pre\n      ],\n      torsion: [\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000001']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000'],\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000001'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000']\n        ],\n        [\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000']\n        ]\n      ]\n    });\n  }\n}\n\n/**\n * ED448\n * https://tools.ietf.org/html/rfc8032#section-5.2\n */\n\nclass ED448 extends EdwardsCurve {\n  constructor(pre) {\n    super({\n      id: 'ED448',\n      ossl: 'ED448',\n      type: 'edwards',\n      endian: 'le',\n      hash: 'SHAKE256',\n      prefix: 'SigEd448',\n      context: true,\n      prime: 'p448',\n      // 2^448 - 2^224 - 1 (= 3 mod 4)\n      p: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff fffffffe ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff'],\n      a: '1',\n      // -39081 mod p\n      d: ['ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff fffffffe ffffffff',\n          'ffffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffff6756'],\n      n: ['3fffffff ffffffff ffffffff ffffffff',\n          'ffffffff ffffffff ffffffff 7cca23e9',\n          'c44edb49 aed63690 216cc272 8dc58f55',\n          '2378c292 ab5844f3'],\n      h: '4',\n      // Elligator 2\n      z: '-1',\n      g: [\n        ['4f1970c6 6bed0ded 221d15a6 22bf36da',\n         '9e146570 470f1767 ea6de324 a3d3a464',\n         '12ae1af7 2ab66511 433b80e1 8b00938e',\n         '2626a82b c70cc05e'],\n        ['693f4671 6eb6bc24 88762037 56c9c762',\n         '4bea7373 6ca39840 87789c1e 05a0c2d7',\n         '3ad3ff1c e67c39c4 fdbd132c 4ed7c8ad',\n         '9808795b f230fa14'],\n        pre\n      ],\n      torsion: [\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000001']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000'],\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe']\n        ],\n        [\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000001'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000']\n        ],\n        [\n          ['ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff ffffffff fffffffe ffffffff',\n           'ffffffff ffffffff ffffffff ffffffff',\n           'ffffffff fffffffe'],\n          ['00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000 00000000 00000000',\n           '00000000 00000000']\n        ]\n      ]\n    });\n  }\n}\n\n/*\n * Curve Registry\n */\n\nconst curves = {\n  __proto__: null,\n  P192,\n  P224,\n  P256,\n  P384,\n  P521,\n  SECP256K1,\n  BRAINPOOLP256,\n  BRAINPOOLP384,\n  BRAINPOOLP512,\n  X25519,\n  X448,\n  MONT448,\n  ED25519,\n  ISO448,\n  ED448\n};\n\nconst cache = {\n  __proto__: null,\n  P192: null,\n  P224: null,\n  P256: null,\n  P384: null,\n  P521: null,\n  SECP256K1: null,\n  BRAINPOOLP256: null,\n  BRAINPOOLP384: null,\n  BRAINPOOLP512: null,\n  X25519: null,\n  X448: null,\n  MONT448: null,\n  ED25519: null,\n  ISO448: null,\n  ED448: null\n};\n\nfunction curve(name, ...args) {\n  assert(typeof name === 'string');\n\n  const key = name.toUpperCase();\n\n  let curve = cache[key];\n\n  if (!curve) {\n    const Curve = curves[key];\n\n    if (!Curve)\n      throw new Error(`Curve not found: \"${name}\".`);\n\n    curve = new Curve(...args);\n    cache[key] = curve;\n  }\n\n  return curve;\n}\n\nfunction register(name, Curve) {\n  assert(typeof name === 'string');\n  assert(typeof Curve === 'function');\n\n  const key = name.toUpperCase();\n\n  if (curves[key])\n    throw new Error(`Curve already registered: \"${name}\".`);\n\n  curves[key] = Curve;\n  cache[key] = null;\n}\n\n/*\n * Scalar Recoding\n */\n\nfunction getNAF(k, width, max) {\n  // Computing the width-w NAF of a positive integer.\n  //\n  // [GECC] Algorithm 3.35, Page 100, Section 3.3.\n  //\n  // The above document describes a rather abstract\n  // method of recoding. The more optimal method\n  // below was ported from libsecp256k1.\n  assert(k instanceof BN);\n  assert(!k.red);\n  assert((width >>> 0) === width);\n  assert((max >>> 0) === max);\n\n  const naf = new Array(max);\n  const bits = k.bitLength() + 1;\n  const sign = k.sign() | 1;\n\n  assert(bits <= max);\n\n  for (let i = 0; i < max; i++)\n    naf[i] = 0;\n\n  let i = 0;\n  let carry = 0;\n  let word;\n\n  while (i < bits) {\n    if (k.bit(i) === carry) {\n      i += 1;\n      continue;\n    }\n\n    word = k.bits(i, width) + carry;\n    carry = (word >> (width - 1)) & 1;\n    word -= carry << width;\n\n    naf[i] = sign * word;\n\n    i += width;\n  }\n\n  assert(carry === 0);\n\n  return naf;\n}\n\nfunction getFixedNAF(k, width, max, step) {\n  assert((step >>> 0) === step);\n\n  // Recode to NAF.\n  const naf = getNAF(k, width, max);\n\n  // Translate into more windowed form.\n  const len = Math.ceil(naf.length / step);\n  const repr = new Array(len);\n\n  let i = 0;\n\n  for (let j = 0; j < naf.length; j += step) {\n    let nafW = 0;\n\n    for (let k = j + step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n\n    repr[i++] = nafW;\n  }\n\n  assert(i === len);\n\n  return repr;\n}\n\nfunction getJSF(k1, k2, max) {\n  // Joint sparse form.\n  //\n  // [GECC] Algorithm 3.50, Page 111, Section 3.3.\n  assert(k1 instanceof BN);\n  assert(k2 instanceof BN);\n  assert(!k1.red);\n  assert(!k2.red);\n  assert((max >>> 0) === max);\n\n  const jsf = [new Array(max), new Array(max)];\n  const bits = Math.max(k1.bitLength(), k2.bitLength()) + 1;\n  const s1 = k1.sign() | 1;\n  const s2 = k2.sign() | 1;\n\n  assert(bits <= max);\n\n  let d1 = 0;\n  let d2 = 0;\n\n  for (let i = 0; i < bits; i++) {\n    const b1 = k1.bits(i, 3);\n    const b2 = k2.bits(i, 3);\n\n    // First phase.\n    let m14 = ((b1 & 3) + d1) & 3;\n    let m24 = ((b2 & 3) + d2) & 3;\n    let u1 = 0;\n    let u2 = 0;\n\n    if (m14 === 3)\n      m14 = -1;\n\n    if (m24 === 3)\n      m24 = -1;\n\n    if (m14 & 1) {\n      const m8 = ((b1 & 7) + d1) & 7;\n\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n\n    if (m24 & 1) {\n      const m8 = ((b2 & 7) + d2) & 7;\n\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n\n    jsf[0][i] = u1 * s1;\n    jsf[1][i] = u2 * s2;\n\n    // Second phase.\n    if (2 * d1 === 1 + u1)\n      d1 = 1 - d1;\n\n    if (2 * d2 === 1 + u2)\n      d2 = 1 - d2;\n  }\n\n  for (let i = bits; i < max; i++) {\n    jsf[0][i] = 0;\n    jsf[1][i] = 0;\n  }\n\n  return jsf;\n}\n\nfunction getJNAF(c1, c2, max) {\n  const jsf = getJSF(c1, c2, max);\n  const naf = new Array(max);\n\n  // JSF -> NAF conversion.\n  for (let i = 0; i < max; i++) {\n    const ja = jsf[0][i];\n    const jb = jsf[1][i];\n\n    naf[i] = jsfIndex[(ja + 1) * 3 + (jb + 1)];\n  }\n\n  return naf;\n}\n\n/*\n * Helpers\n */\n\nfunction assert(val, msg) {\n  if (!val) {\n    const err = new Error(msg || 'Assertion failed');\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(err, assert);\n\n    throw err;\n  }\n}\n\nfunction wrapErrors(fn) {\n  assert(typeof fn === 'function');\n\n  try {\n    return fn();\n  } catch (e) {\n    if (e.message === 'X is not a square mod P.'\n        || e.message === 'Not invertible.') {\n      throw new Error('Invalid point.');\n    }\n    throw e;\n  }\n}\n\nfunction mod(x, y) {\n  // Euclidean modulo.\n  let r = x % y;\n\n  if (r < 0) {\n    if (y < 0)\n      r -= y;\n    else\n      r += y;\n  }\n\n  return r;\n}\n\nfunction cubeRoot(x) {\n  assert(x instanceof BN);\n  assert(x.red);\n\n  const p = x.red.m;\n\n  if (p.cmpn(3) <= 0)\n    return x.clone();\n\n  // p = 2 mod 3\n  if (p.modrn(3) === 2) {\n    // e = (2 * p - 1) / 3\n    const e = p.ushln(1).isubn(1).idivn(3);\n    return x.redPow(e);\n  }\n\n  const mod9 = p.modrn(9);\n\n  // p = 4 mod 9\n  if (mod9 === 4) {\n    // e = (2 * p + 1) / 9\n    const e = p.ushln(1).iaddn(1).idivn(9);\n    const r = x.redPow(e);\n    const c = r.redSqr().redMul(r);\n\n    if (!c.eq(x))\n      throw new Error('X is not a cube mod P.');\n\n    return r;\n  }\n\n  // p = 7 mod 9\n  if (mod9 === 7) {\n    // e = (p + 2) / 9\n    const e = p.addn(2).idivn(9);\n    const r = x.redPow(e);\n    const c = r.redSqr().redMul(r);\n\n    if (!c.eq(x))\n      throw new Error('X is not a cube mod P.');\n\n    return r;\n  }\n\n  throw new Error('Not implemented.');\n}\n\nfunction cubeRoots(x) {\n  const r0 = cubeRoot(x);\n\n  // p = 1 mod 3\n  if (x.red.m.modrn(3) === 1) {\n    // Multiply by roots of unity to find other roots.\n    const two = new BN(2).toRed(x.red);\n    const three = new BN(3).toRed(x.red);\n    const i2 = two.redInvert();\n    const s1 = three.redNeg().redSqrt().redMul(i2);\n    const s2 = s1.redNeg();\n    const u1 = s1.redSub(i2);\n    const u2 = s2.redSub(i2);\n    const r1 = r0.redMul(u1);\n    const r2 = r0.redMul(u2);\n\n    return [r0, r1, r2];\n  }\n\n  // p = 2 mod 3 guarantees 1 cube root per element.\n  return [r0];\n}\n\nfunction uncube(x) {\n  // Find a cube root which is also a quadratic residue.\n  for (const root of cubeRoots(x)) {\n    if (root.redJacobi() >= 0)\n      return root;\n  }\n\n  throw new Error('X^(1/3) is not a square mod P.');\n}\n\nfunction randomInt(rng) {\n  return BN.randomBits(rng, 32).toNumber();\n}\n\nfunction memoize(method, self) {\n  const cache = new WeakMap();\n\n  return function memoized(curve, invert) {\n    const i = invert & 1;\n    const item = cache.get(curve);\n\n    if (item && item[i] !== null)\n      return item[i];\n\n    const result = method.call(self, curve, invert);\n\n    if (!cache.has(curve))\n      cache.set(curve, [null, null]);\n\n    cache.get(curve)[i] = result;\n\n    return result;\n  };\n}\n\nfunction toPretty(x, size) {\n  assert(x instanceof BN);\n  assert((size >>> 0) === size);\n\n  if (size & 7)\n    size += 8 - (size & 7);\n\n  const str = x.toString(16, size);\n  const chunks = [];\n  const out = [];\n\n  assert((str.length & 7) === 0);\n\n  for (let i = 0; i < str.length; i += 8)\n    chunks.push(str.slice(i, i + 8));\n\n  for (let i = 0; i < chunks.length; i += 4)\n    out.push(chunks.slice(i, i + 4).join(' '));\n\n  return out;\n}\n\n/*\n * Expose\n */\n\nexports.Curve = Curve;\nexports.Point = Point;\nexports.ShortCurve = ShortCurve;\nexports.ShortPoint = ShortPoint;\nexports.JPoint = JPoint;\nexports.MontCurve = MontCurve;\nexports.MontPoint = MontPoint;\nexports.XPoint = XPoint;\nexports.EdwardsCurve = EdwardsCurve;\nexports.EdwardsPoint = EdwardsPoint;\nexports.curves = curves;\nexports.curve = curve;\nexports.register = register;","/*!\n * ecdsa.js - ECDSA for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/elliptic:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/elliptic\n *\n * References:\n *\n *   [SEC1] SEC 1: Elliptic Curve Cryptography, Version 2.0\n *     Certicom Research\n *     http://www.secg.org/sec1-v2.pdf\n *\n *   [FIPS186] Suite B Implementer's Guide to FIPS 186-3 (ECDSA)\n *     https://tinyurl.com/fips186-guide\n *\n *   [GECC] Guide to Elliptic Curve Cryptography\n *     D. Hankerson, A. Menezes, and S. Vanstone\n *     https://tinyurl.com/guide-to-ecc\n *\n *   [RFC6979] Deterministic Usage of the Digital Signature\n *             Algorithm (DSA) and Elliptic Curve Digital\n *             Signature Algorithm (ECDSA)\n *     T. Pornin\n *     https://tools.ietf.org/html/rfc6979\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst BN = require('./bn');\nconst rng = require('./random');\nconst asn1 = require('./internal/asn1');\nconst Schnorr = require('./schnorr-legacy');\nconst HmacDRBG = require('./hmac-drbg');\nconst elliptic = require('./elliptic');\n\n/**\n * ECDSA\n */\n\nclass ECDSA {\n  constructor(name, hash, xof, pre) {\n    assert(typeof name === 'string');\n    assert(hash);\n    assert(xof);\n\n    this.id = name;\n    this.type = 'ecdsa';\n    this.hash = hash;\n    this.xof = xof;\n    this.native = 0;\n\n    this._pre = pre || null;\n    this._curve = null;\n    this._schnorr = null;\n  }\n\n  get curve() {\n    if (!this._curve) {\n      this._curve = elliptic.curve(this.id, this._pre);\n      this._curve.precompute(rng);\n      this._pre = null;\n    }\n    return this._curve;\n  }\n\n  get schnorr() {\n    if (!this._schnorr)\n      this._schnorr = new Schnorr(this.curve, this.xof);\n    return this._schnorr;\n  }\n\n  get size() {\n    return this.curve.fieldSize;\n  }\n\n  get bits() {\n    return this.curve.fieldBits;\n  }\n\n  privateKeyGenerate() {\n    const a = this.curve.randomScalar(rng);\n    return this.curve.encodeScalar(a);\n  }\n\n  privateKeyVerify(key) {\n    assert(Buffer.isBuffer(key));\n\n    let a;\n    try {\n      a = this.curve.decodeScalar(key);\n    } catch (e) {\n      return false;\n    }\n\n    return !a.isZero() && a.cmp(this.curve.n) < 0;\n  }\n\n  privateKeyExport(key) {\n    const pub = this.publicKeyCreate(key, false);\n    const {x, y} = this.publicKeyExport(pub);\n\n    return {\n      d: Buffer.from(key),\n      x,\n      y\n    };\n  }\n\n  privateKeyImport(json) {\n    assert(json && typeof json === 'object');\n\n    const a = BN.decode(json.d, this.curve.endian);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    return this.curve.encodeScalar(a);\n  }\n\n  privateKeyTweakAdd(key, tweak) {\n    const t = this.curve.decodeScalar(tweak);\n\n    if (t.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid scalar.');\n\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const k = a.add(t).imod(this.curve.n);\n\n    if (k.isZero())\n      throw new Error('Invalid private key.');\n\n    return this.curve.encodeScalar(k);\n  }\n\n  privateKeyTweakMul(key, tweak) {\n    const t = this.curve.decodeScalar(tweak);\n\n    if (t.isZero() || t.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid scalar.');\n\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const k = a.mul(t).imod(this.curve.n);\n\n    if (k.isZero())\n      throw new Error('Invalid private key.');\n\n    return this.curve.encodeScalar(k);\n  }\n\n  privateKeyNegate(key) {\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const k = a.neg().imod(this.curve.n);\n\n    return this.curve.encodeScalar(k);\n  }\n\n  privateKeyInvert(key) {\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const k = a.invert(this.curve.n);\n\n    return this.curve.encodeScalar(k);\n  }\n\n  publicKeyCreate(key, compress) {\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const A = this.curve.g.mulBlind(a);\n\n    return A.encode(compress);\n  }\n\n  publicKeyConvert(key, compress) {\n    const A = this.curve.decodePoint(key);\n    return A.encode(compress);\n  }\n\n  publicKeyFromUniform(bytes, compress) {\n    const u = this.curve.decodeUniform(bytes);\n    const A = this.curve.pointFromUniform(u);\n\n    return A.encode(compress);\n  }\n\n  publicKeyToUniform(key, hint = rng.randomInt()) {\n    const A = this.curve.decodePoint(key);\n    const u = this.curve.pointToUniform(A, hint);\n\n    return this.curve.encodeUniform(u, hint >>> 8);\n  }\n\n  publicKeyFromHash(bytes, compress) {\n    const A = this.curve.pointFromHash(bytes);\n    return A.encode(compress);\n  }\n\n  publicKeyToHash(key) {\n    const A = this.curve.decodePoint(key);\n    return this.curve.pointToHash(A, 0, rng);\n  }\n\n  publicKeyVerify(key) {\n    assert(Buffer.isBuffer(key));\n\n    try {\n      this.curve.decodePoint(key);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  publicKeyExport(key) {\n    const {x, y} = this.curve.decodePoint(key);\n\n    return {\n      x: this.curve.encodeField(x.fromRed()),\n      y: this.curve.encodeField(y.fromRed())\n    };\n  }\n\n  publicKeyImport(json, compress) {\n    assert(json && typeof json === 'object');\n\n    const x = BN.decode(json.x, this.curve.endian);\n\n    if (x.cmp(this.curve.p) >= 0)\n      throw new Error('Invalid point.');\n\n    if (json.y != null) {\n      const y = BN.decode(json.y, this.curve.endian);\n\n      if (y.cmp(this.curve.p) >= 0)\n        throw new Error('Invalid point.');\n\n      const A = this.curve.point(x, y);\n\n      if (!A.validate())\n        throw new Error('Invalid point.');\n\n      return A.encode(compress);\n    }\n\n    const A = this.curve.pointFromX(x, json.sign);\n\n    return A.encode(compress);\n  }\n\n  publicKeyTweakAdd(key, tweak, compress) {\n    const t = this.curve.decodeScalar(tweak);\n\n    if (t.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid scalar.');\n\n    const A = this.curve.decodePoint(key);\n    const T = this.curve.g.jmul(t);\n    const P = T.add(A);\n\n    return P.encode(compress);\n  }\n\n  publicKeyTweakMul(key, tweak, compress) {\n    const t = this.curve.decodeScalar(tweak);\n\n    if (t.isZero() || t.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid scalar.');\n\n    const A = this.curve.decodePoint(key);\n    const P = A.mul(t);\n\n    return P.encode(compress);\n  }\n\n  publicKeyCombine(keys, compress) {\n    assert(Array.isArray(keys));\n\n    let P = this.curve.jpoint();\n\n    for (const key of keys) {\n      const A = this.curve.decodePoint(key);\n\n      P = P.add(A);\n    }\n\n    return P.encode(compress);\n  }\n\n  publicKeyNegate(key, compress) {\n    const A = this.curve.decodePoint(key);\n    const P = A.neg();\n\n    return P.encode(compress);\n  }\n\n  signatureNormalize(sig) {\n    const [r, s] = this._decodeCompact(sig);\n\n    if (s.cmp(this.curve.nh) > 0)\n      s.ineg().imod(this.curve.n);\n\n    return this._encodeCompact(r, s);\n  }\n\n  signatureNormalizeDER(sig) {\n    const [r, s] = this._decodeDER(sig, false);\n\n    if (s.cmp(this.curve.nh) > 0)\n      s.ineg().imod(this.curve.n);\n\n    return this._encodeDER(r, s);\n  }\n\n  signatureExport(sig) {\n    const [r, s] = this._decodeCompact(sig);\n    return this._encodeDER(r, s);\n  }\n\n  signatureImport(sig) {\n    const [r, s] = this._decodeDER(sig, false);\n    return this._encodeCompact(r, s);\n  }\n\n  isLowS(sig) {\n    assert(Buffer.isBuffer(sig));\n\n    let s;\n    try {\n      [, s] = this._decodeCompact(sig);\n    } catch (e) {\n      return false;\n    }\n\n    return s.cmp(this.curve.nh) <= 0;\n  }\n\n  isLowDER(sig) {\n    assert(Buffer.isBuffer(sig));\n\n    let s;\n    try {\n      [, s] = this._decodeDER(sig, false);\n    } catch (e) {\n      return false;\n    }\n\n    return s.cmp(this.curve.nh) <= 0;\n  }\n\n  sign(msg, key) {\n    const [r, s] = this._sign(msg, key);\n    return this._encodeCompact(r, s);\n  }\n\n  signRecoverable(msg, key) {\n    const [r, s, param] = this._sign(msg, key);\n    return [this._encodeCompact(r, s), param];\n  }\n\n  signDER(msg, key) {\n    const [r, s] = this._sign(msg, key);\n    return this._encodeDER(r, s);\n  }\n\n  signRecoverableDER(msg, key) {\n    const [r, s, param] = this._sign(msg, key);\n    return [this._encodeDER(r, s), param];\n  }\n\n  _sign(msg, key) {\n    // ECDSA Signing.\n    //\n    // [SEC1] Page 44, Section 4.1.3.\n    // [GECC] Algorithm 4.29, Page 184, Section 4.4.1.\n    // [RFC6979] Page 9, Section 2.4.\n    // [RFC6979] Page 10, Section 3.2.\n    //\n    // Assumptions:\n    //\n    //   - Let `m` be an integer reduced from bytes.\n    //   - Let `a` be a secret non-zero scalar.\n    //   - Let `k` be a random non-zero scalar.\n    //   - R != O, r != 0, s != 0.\n    //\n    // Computation:\n    //\n    //   k = random integer in [1,n-1]\n    //   R = G * k\n    //   r = x(R) mod n\n    //   s = (r * a + m) / k mod n\n    //   s = -s mod n, if s > n / 2\n    //   S = (r, s)\n    //\n    // We can blind the scalar arithmetic\n    // with a random integer `b` like so:\n    //\n    //   b = random integer in [1,n-1]\n    //   s = (r * (a * b) + m * b) / (k * b) mod n\n    //\n    // Note that `k` must remain secret,\n    // otherwise an attacker can compute:\n    //\n    //   a = (s * k - m) / r mod n\n    //\n    // This means that if two signatures\n    // share the same `r` value, an attacker\n    // can compute:\n    //\n    //   k = (m1 - m2) / (+-s1 - +-s2) mod n\n    //   a = (s1 * k - m1) / r mod n\n    //\n    // Assuming:\n    //\n    //   s1 = (r * a + m1) / k mod n\n    //   s2 = (r * a + m2) / k mod n\n    //\n    // To mitigate this, `k` can be generated\n    // deterministically using the HMAC-DRBG\n    // construction described in [RFC6979].\n    const {n, nh} = this.curve;\n    const G = this.curve.g;\n    const a = this.curve.decodeScalar(key);\n\n    if (a.isZero() || a.cmp(n) >= 0)\n      throw new Error('Invalid private key.');\n\n    const m = this._reduce(msg);\n    const nonce = this.curve.encodeScalar(m);\n    const drbg = new HmacDRBG(this.hash, key, nonce);\n\n    for (;;) {\n      const bytes = drbg.generate(this.curve.scalarSize);\n      const k = this._truncate(bytes);\n\n      if (k.isZero() || k.cmp(n) >= 0)\n        continue;\n\n      const R = G.mulBlind(k);\n\n      if (R.isInfinity())\n        continue;\n\n      const x = R.getX();\n      const r = x.mod(n);\n\n      if (r.isZero())\n        continue;\n\n      const b = this.curve.randomScalar(rng);\n      const ki = k.mul(b).fermat(n);\n      const ba = a.mul(b).imod(n);\n      const bm = m.mul(b).imod(n);\n      const sk = r.mul(ba).iadd(bm).imod(n);\n      const s = sk.mul(ki).imod(n);\n\n      if (s.isZero())\n        continue;\n\n      let param = R.isOdd() | (!x.eq(r) << 1);\n\n      if (s.cmp(nh) > 0) {\n        s.ineg().imod(n);\n        param ^= 1;\n      }\n\n      return [r, s, param];\n    }\n  }\n\n  verify(msg, sig, key) {\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(sig));\n    assert(Buffer.isBuffer(key));\n\n    let r, s;\n    try {\n      [r, s] = this._decodeCompact(sig);\n    } catch (e) {\n      return false;\n    }\n\n    try {\n      return this._verify(msg, r, s, key);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  verifyDER(msg, sig, key) {\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(sig));\n    assert(Buffer.isBuffer(key));\n\n    let r, s;\n    try {\n      [r, s] = this._decodeDER(sig, false);\n    } catch (e) {\n      return false;\n    }\n\n    try {\n      return this._verify(msg, r, s, key);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  _verify(msg, r, s, key) {\n    // ECDSA Verification.\n    //\n    // [SEC1] Page 46, Section 4.1.4.\n    // [GECC] Algorithm 4.30, Page 184, Section 4.4.1.\n    //\n    // Assumptions:\n    //\n    //   - Let `m` be an integer reduced from bytes.\n    //   - Let `r` and `s` be signature elements.\n    //   - Let `A` be a valid group element.\n    //   - r != 0, r < n.\n    //   - s != 0, s < n.\n    //   - R != O.\n    //\n    // Computation:\n    //\n    //   u1 = m / s mod n\n    //   u2 = r / s mod n\n    //   R = G * u1 + A * u2\n    //   r == x(R) mod n\n    //\n    // Note that the signer can verify their\n    // own signatures more efficiently with:\n    //\n    //   R = G * ((u1 + u2 * a) mod n)\n    //\n    // Furthermore, we can avoid affinization\n    // of `R` by scaling `r` by `z^2` and\n    // repeatedly adding `n * z^2` to it up\n    // to a certain threshold.\n    const {n} = this.curve;\n    const G = this.curve.g;\n    const m = this._reduce(msg);\n    const A = this.curve.decodePoint(key);\n\n    if (r.isZero() || r.cmp(n) >= 0)\n      return false;\n\n    if (s.isZero() || s.cmp(n) >= 0)\n      return false;\n\n    const si = s.invert(n);\n    const u1 = m.mul(si).imod(n);\n    const u2 = r.mul(si).imod(n);\n    const R = G.jmulAdd(u1, A, u2);\n\n    return R.eqR(r);\n  }\n\n  recover(msg, sig, param, compress) {\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(sig));\n    assert((param >>> 0) === param);\n    assert((param & 3) === param, 'The recovery param is more than two bits.');\n\n    let r, s;\n    try {\n      [r, s] = this._decodeCompact(sig);\n    } catch (e) {\n      return null;\n    }\n\n    let A;\n    try {\n      A = this._recover(msg, r, s, param);\n    } catch (e) {\n      return null;\n    }\n\n    return A.encode(compress);\n  }\n\n  recoverDER(msg, sig, param, compress) {\n    assert(Buffer.isBuffer(msg));\n    assert(Buffer.isBuffer(sig));\n    assert((param >>> 0) === param);\n    assert((param & 3) === param, 'The recovery param is more than two bits.');\n\n    let r, s;\n    try {\n      [r, s] = this._decodeDER(sig, false);\n    } catch (e) {\n      return null;\n    }\n\n    let A;\n    try {\n      A = this._recover(msg, r, s, param);\n    } catch (e) {\n      return null;\n    }\n\n    return A.encode(compress);\n  }\n\n  _recover(msg, r, s, param) {\n    // ECDSA Public Key Recovery.\n    //\n    // [SEC1] Page 47, Section 4.1.6.\n    //\n    // Assumptions:\n    //\n    //   - Let `m` be an integer reduced from bytes.\n    //   - Let `r` and `s` be signature elements.\n    //   - Let `i` be an integer in [0,3].\n    //   - x^3 + a * x + b is square in F(p).\n    //   - If i > 1 then r < (p mod n).\n    //   - r != 0, r < n.\n    //   - s != 0, s < n.\n    //   - A != O.\n    //\n    // Computation:\n    //\n    //   x = r + n, if i > 1\n    //     = r, otherwise\n    //   R' = (x, sqrt(x^3 + a * x + b))\n    //   R = -R', if i mod 2 == 1\n    //     = +R', otherwise\n    //   s1 = m / r mod n\n    //   s2 = s / r mod n\n    //   A = R * s2 - G * s1\n    //\n    // Note that this implementation will have\n    // trouble on curves where `p / n > 1`.\n    const {n, pmodn} = this.curve;\n    const G = this.curve.g;\n    const m = this._reduce(msg);\n\n    if (r.isZero() || r.cmp(n) >= 0)\n      throw new Error('Invalid R value.');\n\n    if (s.isZero() || s.cmp(n) >= 0)\n      throw new Error('Invalid S value.');\n\n    const sign = (param & 1) !== 0;\n    const high = param >>> 1;\n\n    let x = r;\n\n    if (high) {\n      if (this.curve.highOrder)\n        throw new Error('Invalid high bit.');\n\n      if (x.cmp(pmodn) >= 0)\n        throw new Error('Invalid R value.');\n\n      x = x.add(n);\n    }\n\n    const R = this.curve.pointFromX(x, sign);\n    const ri = r.invert(n);\n    const s1 = m.mul(ri).ineg().imod(n);\n    const s2 = s.mul(ri).imod(n);\n    const A = G.mulAdd(s1, R, s2);\n\n    if (A.isInfinity())\n      throw new Error('Invalid point.');\n\n    return A;\n  }\n\n  derive(pub, priv, compress) {\n    const A = this.curve.decodePoint(pub);\n    const a = this.curve.decodeScalar(priv);\n\n    if (a.isZero() || a.cmp(this.curve.n) >= 0)\n      throw new Error('Invalid private key.');\n\n    if (this.curve.h.cmpn(1) > 0) {\n      if (A.isSmall())\n        throw new Error('Invalid point.');\n    }\n\n    const P = A.mulBlind(a, rng);\n\n    return P.encode(compress);\n  }\n\n  /*\n   * Schnorr\n   */\n\n  schnorrSign(msg, key) {\n    return this.schnorr.sign(msg, key);\n  }\n\n  schnorrVerify(msg, sig, key) {\n    return this.schnorr.verify(msg, sig, key);\n  }\n\n  schnorrVerifyBatch(batch) {\n    return this.schnorr.verifyBatch(batch);\n  }\n\n  /*\n   * Helpers\n   */\n\n  _encodeCompact(r, s) {\n    return Buffer.concat([\n      this.curve.encodeScalar(r),\n      this.curve.encodeScalar(s)\n    ]);\n  }\n\n  _decodeCompact(sig) {\n    assert(Buffer.isBuffer(sig));\n\n    const {n} = this.curve;\n    const size = this.curve.scalarSize;\n\n    if (sig.length !== size * 2)\n      throw new Error('Invalid signature size.');\n\n    const Rraw = sig.slice(0, size);\n    const Sraw = sig.slice(size, size * 2);\n    const r = this.curve.decodeScalar(Rraw);\n    const s = this.curve.decodeScalar(Sraw);\n\n    if (r.cmp(n) >= 0 || s.cmp(n) >= 0)\n      throw new Error('Invalid signature.');\n\n    return [r, s];\n  }\n\n  _encodeDER(r, s) {\n    const size = asn1.sizeInt(r) + asn1.sizeInt(s);\n    const out = Buffer.alloc(asn1.sizeSeq(size));\n\n    let pos = 0;\n\n    pos = asn1.writeSeq(out, pos, size);\n    pos = asn1.writeInt(out, pos, r);\n    pos = asn1.writeInt(out, pos, s);\n\n    assert(pos === out.length);\n\n    return out;\n  }\n\n  _decodeDER(sig, strict) {\n    assert(Buffer.isBuffer(sig));\n    assert(typeof strict === 'boolean');\n\n    const {n} = this.curve;\n\n    let pos = 0;\n    let r, s;\n\n    pos = asn1.readSeq(sig, pos, strict);\n    [r, pos] = asn1.readInt(sig, pos, strict);\n    [s, pos] = asn1.readInt(sig, pos, strict);\n\n    if (strict && pos !== sig.length)\n      throw new Error('Trailing bytes.');\n\n    if (r.cmp(n) >= 0 || s.cmp(n) >= 0)\n      throw new Error('Invalid signature.');\n\n    return [r, s];\n  }\n\n  _truncate(msg) {\n    // Byte array to integer conversion.\n    //\n    // [SEC1] Step 5, Page 45, Section 4.1.3.\n    // [FIPS186] Page 25, Section B.2.\n    //\n    // The two sources above disagree on this.\n    //\n    // FIPS186 simply modulos the entire byte\n    // array by the order, whereas SEC1 takes\n    // the left-most ceil(log2(n+1)) bits modulo\n    // the order (and maybe does other stuff).\n    //\n    // Instead of trying to decipher all of\n    // this nonsense, we simply replicate the\n    // OpenSSL behavior (which, in actuality,\n    // is more similar to the SEC1 behavior).\n    assert(Buffer.isBuffer(msg));\n\n    const bits = this.curve.n.bitLength();\n    const bytes = (bits + 7) >>> 3;\n\n    if (msg.length > bytes)\n      msg = msg.slice(0, bytes);\n\n    const m = BN.decode(msg, this.curve.endian);\n    const d = msg.length * 8 - bits;\n\n    if (d > 0)\n      m.iushrn(d);\n\n    return m;\n  }\n\n  _reduce(msg) {\n    return this._truncate(msg).imod(this.curve.n);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = ECDSA;","/*!\n * secp256k1.js - secp256k1 for bcrypto\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst ECDSA = require('./ecdsa');\nconst SHA256 = require('./sha256');\nconst pre = require('./precomputed/secp256k1.json');\n\n/*\n * Expose\n */\n\nmodule.exports = new ECDSA('SECP256K1', SHA256, SHA256, pre);","/*!\n * message.js - message signing utilities.\n * Copyright (c) 2019, The Bcoin Developers (MIT License).\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bufio = require('bufio');\nconst hash256 = require('../bcrypto/hash256');\nconst secp256k1 = require('../bcrypto/secp256k1');\n\n/**\n * @exports utils/message\n */\n\nconst message = exports;\n\n/**\n * Bitcoin signing magic string.\n * @const {String}\n * @default\n */\n\nmessage.MAGIC_STRING = 'eCash Signed Message:\\n';\n\n/**\n * Hash message with magic string.\n * @param {String} message\n * @param {String} [prefix = message.MAGIC_STRING]\n * @returns {Hash}\n */\n\nmessage.magicHash = (msg, prefix = message.MAGIC_STRING) => {\n  assert(typeof prefix === 'string', 'prefix must be a string.');\n  assert(typeof msg === 'string', 'message must be a string');\n\n  const bw = bufio.write();\n\n  bw.writeVarString(prefix);\n  bw.writeVarString(msg, 'utf8');\n\n  return hash256.digest(bw.render());\n};\n\n/**\n * Sign message with key.\n * @param {String} msg\n * @param {KeyRing} ring\n * @param {String} [prefix = message.MAGIC_STRING]\n * @returns {Buffer}\n */\n\nmessage.sign = (msg, ring, prefix) => {\n  assert(ring.getPrivateKey(), 'Cannot sign without private key.');\n\n  const hash = message.magicHash(msg, prefix);\n  const compress = 0x04 !== ring.getPublicKey().readInt8(0);\n  const [\n    signature,\n    recovery\n  ] = secp256k1.signRecoverable(hash, ring.getPrivateKey());\n\n  const bw = bufio.write();\n\n  bw.writeI8(recovery + 27 + (compress ? 4 : 0));\n  bw.writeBytes(signature);\n\n  return bw.render();\n};\n\n/**\n * Recover raw public key from message and signature.\n * @param {String} msg\n * @param {Buffer} signature\n * @param {String} [prefix = MAGIC_STRING]\n */\n\nmessage.recover = (msg, signature, prefix) => {\n  assert(typeof msg === 'string', 'msg must be a string');\n  assert(Buffer.isBuffer(signature), 'sig must be a buffer');\n\n  const hash = message.magicHash(msg, prefix);\n\n  assert.strictEqual(signature.length, 65, 'Invalid signature length');\n\n  const flagByte = signature.readUInt8(0) - 27;\n\n  assert(flagByte < 8, 'Invalid signature parameter');\n\n  const compressed = Boolean(flagByte & 4);\n  const recovery = flagByte & 3;\n\n  return secp256k1.recover(hash, signature.slice(1), recovery, compressed);\n};\n\n/**\n * Verify signature for message.\n * @param {String} msg\n * @param {Buffer} signature\n * @param {Buffer} publicKey\n * @param {String} [prefix = message.MAGIC_STRING]\n */\n\nmessage.verify = (msg, signature, publicKey, prefix) => {\n    const recoveredKey = message.recover(msg, signature);\n\n    assert(Buffer.isBuffer(publicKey), 'publicKey must be a buffer');\n\n    if (Buffer.compare(publicKey, recoveredKey) !== 0)\n        return false;\n\n    return secp256k1.verify(\n        message.magicHash(msg, prefix),\n        signature.slice(1),\n        publicKey\n    );\n}\n","/*!\n * utils/index.js - utils for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * @module utils\n */\n\nexports.binary = require('./binary');\nexports.fixed = require('./fixed');\nexports.util = require('./util');\nexports.message = require('./message');\n\nconst {inspect: {custom}} = require('util');\nexports.inspectSymbol = custom || 'inspect';\n","/*!\n * address.js - address object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst {base58, cashaddr} = require('bstring');\nconst ecashaddr = require('ecashaddrjs');\nconst hash160 = require('../bcrypto/hash160');\nconst hash256 = require('../bcrypto/hash256');\nconst Network = require('../protocol/network');\nconst consensus = require('../protocol/consensus');\nconst {inspectSymbol} = require('../utils');\n\n/*\n * Constants\n */\n\nconst ZERO_HASH160 = Buffer.alloc(20, 0x00);\n\n/**\n * Address\n * Represents an address.\n * @alias module:primitives.Address\n * @property {Buffer} hash\n * @property {AddressPrefix} type\n */\n\nclass Address {\n  /**\n   * Create an address.\n   * @constructor\n   * @param {Object?} options\n   */\n\n  constructor(options, network) {\n    this.type = Address.types.PUBKEYHASH;\n    this.hash = ZERO_HASH160;\n\n    if (options)\n      this.fromOptions(options, network);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options, network) {\n    if (typeof options === 'string')\n      return this.fromString(options, network);\n\n    assert(options);\n\n    const {hash, type} = options;\n\n    return this.fromHash(hash, type);\n  }\n\n  /**\n   * Insantiate address from options.\n   * @param {Object} options\n   * @returns {Address}\n   */\n\n  static fromOptions(options, network) {\n    return new this().fromOptions(options, network);\n  }\n\n  /**\n   * Get the address hash.\n   * @param {String?} enc - Can be `\"hex\"` or `null`.\n   * @returns {Hash|Buffer}\n   */\n\n  getHash(enc) {\n    if (enc === 'hex')\n      return this.hash.toString('hex');\n    return this.hash;\n  }\n\n  /**\n   * Test whether the address is null.\n   * @returns {Boolean}\n   */\n\n  isNull() {\n    if (this.hash.length === 20)\n      return this.hash.equals(ZERO_HASH160);\n\n    if (this.hash.length === 32)\n      return this.hash.equals(consensus.ZERO_HASH);\n\n    for (let i = 0; i < this.hash.length; i++) {\n      if (this.hash[i] !== 0)\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Test equality against another address.\n   * @param {Address} addr\n   * @returns {Boolean}\n   */\n\n  equals(addr) {\n    assert(addr instanceof Address);\n\n    return this.type === addr.type\n      && this.hash.equals(addr.hash);\n  }\n\n  /**\n   * Get the address type as a string.\n   * @returns {String}\n   */\n\n  getType() {\n    return Address.typesByVal[this.type].toLowerCase();\n  }\n\n  /**\n   * Get a network address prefix for the address.\n   * @param {Network?} network\n   * @returns {Number}\n   */\n\n  getPrefix(network) {\n    network = Network.get(network);\n\n    const prefixes = network.addressPrefix;\n\n    switch (this.type) {\n      case Address.types.PUBKEYHASH:\n        return prefixes.pubkeyhash;\n      case Address.types.SCRIPTHASH:\n        return prefixes.scripthash;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Calculate size of serialized address.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return 5 + this.hash.length;\n  }\n\n  /**\n   * Compile the address object to its raw serialization.\n   * @param {{NetworkType|Network)?} network\n   * @returns {Buffer}\n   * @throws Error on bad hash/prefix.\n   */\n\n  toRaw(network) {\n    const size = this.getSize();\n    const bw = bio.write(size);\n    const prefix = this.getPrefix(network);\n\n    assert(prefix !== -1, 'Not a valid address prefix.');\n\n    bw.writeU8(prefix);\n\n    bw.writeBytes(this.hash);\n    bw.writeChecksum(hash256.digest);\n\n    return bw.render();\n  }\n\n  /**\n   * Compile the address object to a base58 address.\n   * @param {{NetworkType|Network)?} network\n   * @returns {AddressString}\n   * @throws Error on bad hash/prefix.\n   */\n\n  toBase58(network) {\n    return base58.encode(this.toRaw(network));\n  }\n\n  /**\n   * Compile the address object to a cashaddr address.\n   * @param {{NetworkType|Network)?} network\n   * @returns {String}\n   * @throws Error on bad hash/prefix.\n   */\n\n  toCashAddr(network) {\n    const type = this.type;\n    const hash = this.hash;\n\n    network = Network.get(network);\n\n    const prefix = network.addressPrefix.cashaddr;\n\n    return cashaddr.encode(prefix, type, hash);\n  }\n\n  /**\n   * Inject properties from string.\n   * @private\n   * @param {String} addr\n   * @param {(Network|NetworkType)?} network\n   * @returns {Address}\n   */\n\n  fromString(addr, network) {\n    assert(typeof addr === 'string');\n    assert(addr.length > 0);\n    assert(addr.length <= 100);\n\n    // If the address is mixed case,\n    // it can only ever be base58.\n    if (isMixedCase(addr))\n      return this.fromBase58(addr, network);\n\n    // Otherwise, it's most likely cashaddr.\n    try {\n      return this.fromCashAddr(addr, network);\n    } catch (e) {\n      return this.fromBase58(addr, network);\n    }\n  }\n\n  /**\n   * Instantiate address from string.\n   * @param {String} addr\n   * @param {(Network|NetworkType)?} network\n   * @returns {Address}\n   */\n\n  static fromString(addr, network) {\n    return new this().fromString(addr, network);\n  }\n\n  /**\n   * Return cashaddr by default\n   * @param {(Network|NetworkType)?} network\n   * @returns {AddressString}\n   */\n\n  toString(network) {\n    return this.toCashAddr(network);\n  }\n\n  /**\n   * Inspect the Address.\n   * @returns {Object}\n   */\n\n  [inspectSymbol]() {\n    return '<Address:'\n      + ` type=${this.getType()}`\n      + ` str=${this.toString()}`\n      + '>';\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   * @throws Parse error\n   */\n\n  fromRaw(data, network) {\n    const br = bio.read(data, true);\n    const prefix = br.readU8();\n\n    network = Network.fromAddress(prefix, network);\n\n    const type = Address.getType(prefix, network);\n\n    if (data.length !== 25)\n      throw new Error('Address is too long.');\n\n    const hash = br.readBytes(br.left() - 4);\n\n    br.verifyChecksum(hash256.digest);\n\n    return this.fromHash(hash, type);\n  }\n\n  /**\n   * Create an address object from a serialized address.\n   * @param {Buffer} data\n   * @returns {Address}\n   * @throws Parse error.\n   */\n\n  static fromRaw(data, network) {\n    return new this().fromRaw(data, network);\n  }\n\n  /**\n   * Inject properties from base58 address.\n   * @private\n   * @param {AddressString} data\n   * @param {Network?} network\n   * @throws Parse error\n   */\n\n  fromBase58(data, network) {\n    assert(typeof data === 'string');\n\n    if (data.length > 55)\n      throw new Error('Address is too long.');\n\n    return this.fromRaw(base58.decode(data), network);\n  }\n\n  /**\n   * Create an address object from a base58 address.\n   * @param {AddressString} data\n   * @param {Network?} network\n   * @returns {Address}\n   * @throws Parse error.\n   */\n\n  static fromBase58(data, network) {\n    return new this().fromBase58(data, network);\n  }\n\n  /**\n   * Inject properties from cashaddr address.\n   * @private\n   * @param {String} data\n   * @param {Network?} network\n   * @throws Parse error\n   */\n\n  fromCashAddr(data, network) {\n    assert(typeof data === 'string');\n\n    network = Network.get(network);\n\n    const prefix = network.addressPrefix.cashaddr;\n    const addr = ecashaddr.decode(data);\n    addr.type = addr.type === 'P2PKH' ? 'PUBKEYHASH' : 'SCRIPTHASH';\n\n    Network.fromCashAddr(addr.prefix, network);\n\n    return this.fromHash(Buffer.from(addr.hash), addr.type);\n  }\n\n  /**\n   * Create an address object from a cashaddr address.\n   * @param {String} data\n   * @param {Network?} network\n   * @returns {Address}\n   * @throws Parse error.\n   */\n\n  static fromCashAddr(data, network) {\n    return new this().fromCashAddr(data, network);\n  }\n\n  /**\n   * Inject properties from output script.\n   * @private\n   * @param {Script} script\n   */\n\n  fromScript(script) {\n    const pk = script.getPubkey();\n\n    if (pk) {\n      this.hash = hash160.digest(pk);\n      this.type = Address.types.PUBKEYHASH;\n      return this;\n    }\n\n    const pkh = script.getPubkeyhash();\n\n    if (pkh) {\n      this.hash = pkh;\n      this.type = Address.types.PUBKEYHASH;\n      return this;\n    }\n\n    const sh = script.getScripthash();\n\n    if (sh) {\n      this.hash = sh;\n      this.type = Address.types.SCRIPTHASH;\n      return this;\n    }\n\n    // Put this last: it's the slowest to check.\n    if (script.isMultisig()) {\n      this.hash = script.hash160();\n      this.type = Address.types.SCRIPTHASH;\n      return this;\n    }\n\n    return null;\n  }\n\n  /**\n   * Inject properties from input script.\n   * @private\n   * @param {Script} script\n   */\n\n  fromInputScript(script) {\n    const [, pk] = script.getPubkeyhashInput();\n\n    if (pk) {\n      this.hash = hash160.digest(pk);\n      this.type = Address.types.PUBKEYHASH;\n      return this;\n    }\n\n    const redeem = script.getScripthashInput();\n\n    if (redeem) {\n      this.hash = hash160.digest(redeem);\n      this.type = Address.types.SCRIPTHASH;\n      return this;\n    }\n\n    return null;\n  }\n\n  /**\n   * Create an Address from an input script.\n   * Attempt to extract address\n   * properties from an input script.\n   * @param {Script}\n   * @returns {Address|null}\n   */\n\n  static fromInputScript(script) {\n    return new this().fromInputScript(script);\n  }\n\n  /**\n   * Create an Address from an output script.\n   * Parse an output script and extract address\n   * properties. Converts pubkey and multisig\n   * scripts to pubkeyhash and scripthash addresses.\n   * @param {Script}\n   * @returns {Address|null}\n   */\n\n  static fromScript(script) {\n    return new this().fromScript(script);\n  }\n\n  /**\n   * Inject properties from a hash.\n   * @private\n   * @param {Buffer|Hash} hash\n   * @param {AddressPrefix} type\n   * @throws on bad hash size\n   */\n\n  fromHash(hash, type) {\n    if (typeof type === 'string') {\n      type = Address.types[type.toUpperCase()];\n      assert(type != null, 'Not a valid address type.');\n    }\n\n    if (type == null)\n      type = Address.types.PUBKEYHASH;\n\n    assert(Buffer.isBuffer(hash));\n    assert((type >>> 0) === type);\n\n    assert(type >= Address.types.PUBKEYHASH && type <= Address.types.SCRIPTHASH,\n      'Not a valid address type.');\n\n    assert(hash.length === 20, 'Hash is the wrong size.');\n\n    this.hash = hash;\n    this.type = type;\n\n    return this;\n  }\n\n  /**\n   * Create a naked address from hash/type.\n   * @param {Hash} hash\n   * @param {AddressPrefix} type\n   * @returns {Address}\n   * @throws on bad hash size\n   */\n\n  static fromHash(hash, type) {\n    return new this().fromHash(hash, type);\n  }\n\n  /**\n   * Inject properties from pubkeyhash.\n   * @private\n   * @param {Buffer} hash\n   * @returns {Address}\n   */\n\n  fromPubkeyhash(hash) {\n    const type = Address.types.PUBKEYHASH;\n    assert(hash.length === 20, 'P2PKH must be 20 bytes.');\n    return this.fromHash(hash, type, -1);\n  }\n\n  /**\n   * Instantiate address from pubkeyhash.\n   * @param {Buffer} hash\n   * @returns {Address}\n   */\n\n  static fromPubkeyhash(hash) {\n    return new this().fromPubkeyhash(hash);\n  }\n\n  /**\n   * Inject properties from scripthash.\n   * @private\n   * @param {Buffer} hash\n   * @returns {Address}\n   */\n\n  fromScripthash(hash) {\n    const type = Address.types.SCRIPTHASH;\n    assert(hash && hash.length === 20, 'P2SH must be 20 bytes.');\n    return this.fromHash(hash, type, -1);\n  }\n\n  /**\n   * Instantiate address from scripthash.\n   * @param {Buffer} hash\n   * @returns {Address}\n   */\n\n  static fromScripthash(hash) {\n    return new this().fromScripthash(hash);\n  }\n\n  /**\n   * Test whether the address is pubkeyhash.\n   * @returns {Boolean}\n   */\n\n  isPubkeyhash() {\n    return this.type === Address.types.PUBKEYHASH;\n  }\n\n  /**\n   * Test whether the address is scripthash.\n   * @returns {Boolean}\n   */\n\n  isScripthash() {\n    return this.type === Address.types.SCRIPTHASH;\n  }\n\n  /**\n   * Get the hash of a base58 address or address-related object.\n   * @param {Address|Hash} data\n   * @param {String?} enc - Can be `\"hex\"` or `null`.\n   * @returns {Hash}\n   */\n\n  static getHash(data, enc) {\n    if (!data)\n      throw new Error('Object is not an address.');\n\n    let hash;\n\n    if (Buffer.isBuffer(data)) {\n      if (data.length !== 20)\n        throw new Error('Object is not an address.');\n      hash = data;\n    } else if (data instanceof Address) {\n      hash = data.hash;\n    } else {\n      throw new Error('Object is not an address.');\n    }\n\n    if (enc === 'hex')\n      return hash.toString('hex');\n\n    return hash;\n  }\n\n  /**\n   * Get an address type for a specified network address prefix.\n   * @param {Number} prefix\n   * @param {Network} network\n   * @returns {AddressType}\n   */\n\n  static getType(prefix, network) {\n    const prefixes = network.addressPrefix;\n\n    switch (prefix) {\n      case prefixes.pubkeyhash:\n        return Address.types.PUBKEYHASH;\n      case prefixes.scripthash:\n        return Address.types.SCRIPTHASH;\n      default:\n        throw new Error('Unknown address prefix.');\n    }\n  }\n}\n\n/**\n * Address types.\n * @enum {Number}\n */\n\nAddress.types = {\n  PUBKEYHASH: 0,\n  SCRIPTHASH: 1\n};\n\n/**\n * Address types by value.\n * @const {Object}\n */\n\nAddress.typesByVal = [\n  'PUBKEYHASH',\n  'SCRIPTHASH'\n];\n\n/*\n * Helpers\n */\n\nfunction isMixedCase(str) {\n  let lower = false;\n  let upper = false;\n\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch >= 0x30 && ch <= 0x39)\n      continue;\n\n    // skip :\n    if (ch === 0x3a)\n      continue;\n\n    if (ch & 32) {\n      assert(ch >= 0x61 && ch <= 0x7a);\n      lower = true;\n    } else {\n      assert(ch >= 0x41 && ch <= 0x5a);\n      upper = true;\n    }\n\n    if (lower && upper)\n      return true;\n  }\n\n  return false;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Address;\n","/**\n * uri.js - bitcoin uri parsing for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst Address = require('../primitives/address');\nconst Amount = require('./amount');\n\n/**\n * URI\n * Represents a bitcoin URI.\n * @alias module:btc.URI\n * @property {Address} address\n * @property {Amount} amount\n * @property {String|null} label\n * @property {String|null} message\n * @property {String|null} request\n */\n\nclass URI {\n  /**\n   * Create a bitcoin URI.\n   * @alias module:btc.URI\n   * @constructor\n   * @param {Object|String} options\n   */\n\n  constructor(options) {\n    this.address = new Address();\n    this.amount = -1;\n    this.label = null;\n    this.message = null;\n    this.request = null;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object|String} options\n   * @returns {URI}\n   */\n\n  fromOptions(options) {\n    if (typeof options === 'string')\n      return this.fromString(options);\n\n    if (options.address)\n      this.address.fromOptions(options.address);\n\n    if (options.amount != null) {\n      assert(Number.isSafeInteger(options.amount) && options.amount >= 0,\n        'Amount must be a uint64.');\n      this.amount = options.amount;\n    }\n\n    if (options.label) {\n      assert(typeof options.label === 'string', 'Label must be a string.');\n      this.label = options.label;\n    }\n\n    if (options.message) {\n      assert(typeof options.message === 'string', 'Message must be a string.');\n      this.message = options.message;\n    }\n\n    if (options.request) {\n      assert(typeof options.request === 'string', 'Request must be a string.');\n      this.request = options.request;\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate URI from options.\n   * @param {Object|String} options\n   * @returns {URI}\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Parse and inject properties from string.\n   * @private\n   * @param {String} str\n   * @param {Network?} network\n   * @returns {URI}\n   */\n\n  fromString(str, network) {\n    assert(typeof str === 'string');\n    assert(str.length > 8, 'Not a bitcoin URI.');\n\n    const prefix = str.substring(0, 8);\n\n    assert(prefix === 'bitcoin:', 'Not a bitcoin URI.');\n\n    str = str.substring(8);\n\n    const index = str.indexOf('?');\n\n    let addr, qs;\n    if (index === -1) {\n      addr = str;\n    } else {\n      addr = str.substring(0, index);\n      qs = str.substring(index + 1);\n    }\n\n    this.address.fromString(addr, network);\n\n    if (!qs)\n      return this;\n\n    const query = parsePairs(qs);\n\n    if (query.amount) {\n      assert(query.amount.length > 0, 'Value is empty.');\n      assert(query.amount[0] !== '-', 'Value is negative.');\n      this.amount = Amount.value(query.amount);\n    }\n\n    if (query.label)\n      this.label = query.label;\n\n    if (query.message)\n      this.message = query.message;\n\n    if (query.r)\n      this.request = query.r;\n\n    return this;\n  }\n\n  /**\n   * Instantiate uri from string.\n   * @param {String} str\n   * @param {Network?} network\n   * @returns {URI}\n   */\n\n  static fromString(str, network) {\n    return new this().fromString(str, network);\n  }\n\n  /**\n   * Serialize uri to a string.\n   * @returns {String}\n   */\n\n  toString() {\n    let str = 'bitcoin:';\n\n    str += this.address.toString();\n\n    const query = [];\n\n    if (this.amount !== -1)\n      query.push(`amount=${Amount.btc(this.amount)}`);\n\n    if (this.label)\n      query.push(`label=${escape(this.label)}`);\n\n    if (this.message)\n      query.push(`message=${escape(this.message)}`);\n\n    if (this.request)\n      query.push(`r=${escape(this.request)}`);\n\n    if (query.length > 0)\n      str += '?' + query.join('&');\n\n    return str;\n  }\n\n  /**\n   * Inspect bitcoin uri.\n   * @returns {String}\n   */\n\n  inspect() {\n    return `<URI: ${this.toString()}>`;\n  }\n}\n\n/*\n * Helpers\n */\n\nclass BitcoinQuery {\n  constructor() {\n    this.amount = null;\n    this.label = null;\n    this.message = null;\n    this.r = null;\n  }\n}\n\nfunction parsePairs(str) {\n  const parts = str.split('&');\n  const data = new BitcoinQuery();\n\n  let size = 0;\n\n  for (const pair of parts) {\n    const index = pair.indexOf('=');\n    let key, value;\n\n    if (index === -1) {\n      key = pair;\n      value = '';\n    } else {\n      key = pair.substring(0, index);\n      value = pair.substring(index + 1);\n    }\n\n    if (key.length === 0) {\n      assert(value.length === 0, 'Empty key in querystring.');\n      continue;\n    }\n\n    assert(size < 4, 'Too many keys in querystring.');\n\n    switch (key) {\n      case 'amount':\n        assert(data.amount == null, 'Duplicate key in querystring (amount).');\n        data.amount = unescape(value);\n        break;\n      case 'label':\n        assert(data.label == null, 'Duplicate key in querystring (label).');\n        data.label = unescape(value);\n        break;\n      case 'message':\n        assert(data.message == null, 'Duplicate key in querystring (message).');\n        data.message = unescape(value);\n        break;\n      case 'r':\n        assert(data.r == null, 'Duplicate key in querystring (r).');\n        data.r = unescape(value);\n        break;\n      default:\n        assert(false, `Unknown querystring key: ${value}.`);\n        break;\n    }\n\n    size += 1;\n  }\n\n  return data;\n}\n\nfunction unescape(str) {\n  try {\n    str = decodeURIComponent(str);\n    str = str.replace(/\\+/g, ' ');\n  } catch (e) {\n    throw new Error('Malformed URI.');\n  }\n\n  if (str.indexOf('\\0') !== -1)\n    throw new Error('Malformed URI.');\n\n  return str;\n}\n\nfunction escape(str) {\n  str = encodeURIComponent(str);\n  str = str.replace(/%20/g, '+');\n  return str;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = URI;\n","/*!\n * btc/index.js - high-level btc objects for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * @module btc\n */\n\nexports.Amount = require('./amount');\nexports.URI = require('./uri');\n","/*!\n * sha1.js - SHA1 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-1\n *   https://tools.ietf.org/html/rfc3174\n *   http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/sha/1.js\n */\n\n/* eslint camelcase: \"off\" */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst HMAC = require('./internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = -1;\nconst DESC = Buffer.alloc(8, 0x00);\nconst PADDING = Buffer.alloc(64, 0x00);\n\nPADDING[0] = 0x80;\n\nconst K = new Uint32Array([\n  0x5a827999,\n  0x6ed9eba1,\n  0x8f1bbcdc,\n  0xca62c1d6\n]);\n\n/**\n * SHA1\n */\n\nclass SHA1 {\n  constructor() {\n    this.state = new Uint32Array(5);\n    this.msg = new Uint32Array(80);\n    this.block = Buffer.alloc(64);\n    this.size = FINALIZED;\n  }\n\n  init() {\n    this.state[0] = 0x67452301;\n    this.state[1] = 0xefcdab89;\n    this.state[2] = 0x98badcfe;\n    this.state[3] = 0x10325476;\n    this.state[4] = 0xc3d2e1f0;\n    this.size = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    this._update(data, data.length);\n    return this;\n  }\n\n  final() {\n    return this._final(Buffer.alloc(20));\n  }\n\n  _update(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 63;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 64 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 64)\n        return;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= 64) {\n      this._transform(data, off);\n      off += 64;\n      len -= 64;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  _final(out) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    const pos = this.size & 63;\n    const len = this.size * 8;\n\n    writeU32(DESC, (len * (1 / 0x100000000)) >>> 0, 0);\n    writeU32(DESC, len >>> 0, 4);\n\n    this._update(PADDING, 1 + ((119 - pos) & 63));\n    this._update(DESC, 8);\n\n    for (let i = 0; i < 5; i++) {\n      writeU32(out, this.state[i], i * 4);\n      this.state[i] = 0;\n    }\n\n    for (let i = 0; i < 80; i++)\n      this.msg[i] = 0;\n\n    for (let i = 0; i < 64; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n\n    return out;\n  }\n\n  _transform(chunk, pos) {\n    const W = this.msg;\n\n    let a = this.state[0];\n    let b = this.state[1];\n    let c = this.state[2];\n    let d = this.state[3];\n    let e = this.state[4];\n    let i = 0;\n\n    for (; i < 16; i++)\n      W[i] = readU32(chunk, pos + i * 4);\n\n    for (; i < 80; i++)\n      W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n    for (i = 0; i < 80; i++) {\n      const s = i / 20 | 0;\n      const t = rotl32(a, 5) + ft_1(s, b, c, d) + e + W[i] + K[s];\n\n      e = d;\n      d = c;\n      c = rotl32(b, 30);\n      b = a;\n      a = t >>> 0;\n    }\n\n    this.state[0] += a;\n    this.state[1] += b;\n    this.state[2] += c;\n    this.state[3] += d;\n    this.state[4] += e;\n  }\n\n  static hash() {\n    return new SHA1();\n  }\n\n  static hmac() {\n    return new HMAC(SHA1, 64);\n  }\n\n  static digest(data) {\n    return SHA1.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 20);\n    assert(Buffer.isBuffer(right) && right.length === 20);\n    return SHA1.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = SHA1;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return SHA1.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nSHA1.native = 0;\nSHA1.id = 'SHA1';\nSHA1.size = 20;\nSHA1.bits = 160;\nSHA1.blockSize = 64;\nSHA1.zero = Buffer.alloc(20, 0x00);\nSHA1.ctx = new SHA1();\n\n/*\n * Helpers\n */\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n\n  if (s === 2)\n    return maj32(x, y, z);\n\n  return 0;\n}\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction writeU32(data, num, off) {\n  data[off++] = num >>> 24;\n  data[off++] = num >>> 16;\n  data[off++] = num >>> 8;\n  data[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = SHA1;","/*!\n * policy.js - bitcoin constants for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * @module protocol/policy\n */\n\nconst assert = require('bsert');\nconst consensus = require('./consensus');\n\n/**\n * Maximum transaction version (policy).\n * @const {Number}\n * @default\n */\n\nexports.MAX_TX_VERSION = consensus.MAX_TX_VERSION;\n\n/**\n * Maximum standard transaction size (policy).\n * @const {Number}\n * @default\n */\n\nexports.MAX_TX_SIZE = consensus.MAX_TX_SIZE / 10;\n\n/**\n * Maximum number of transaction sigops (policy).\n * @const {Number}\n * @default\n */\n\nexports.MAX_TX_SIGOPS = consensus.MAX_TX_SIGOPS / 5;\n\n/**\n * How much weight a sigop should\n * add to virtual size (policy).\n * @const {Number}\n * @default\n */\n\nexports.BYTES_PER_SIGOP = 20;\n\n/**\n * Minimum relay fee rate (policy).\n * @const {Rate}\n */\n\nexports.MIN_RELAY = 1000;\n\n/**\n * Whether bare multisig outputs\n * should be relayed (policy).\n * @const {Boolean}\n * @default\n */\n\nexports.BARE_MULTISIG = true;\n\n/**\n * Priority threshold for\n * free transactions (policy).\n * @const {Number}\n * @default\n */\n\nexports.FREE_THRESHOLD = consensus.COIN * 144 / 250;\n\n/**\n * Max sigops per redeem script (policy).\n * @const {Number}\n * @default\n */\n\nexports.MAX_P2SH_SIGOPS = 15;\n\n/**\n * Max serialized nulldata size (policy).\n * @const {Number}\n * @default\n */\n\nexports.MAX_OP_RETURN_BYTES = 223;\n\n/**\n * Max pushdata size in nulldata (policy).\n * @const {Number}\n * @default\n */\n\nexports.MAX_OP_RETURN = 220;\n\n/**\n * Max p2wsh stack size. Used for\n * witness malleation checks (policy).\n * @const {Number}\n * @default\n */\n\nexports.MAX_P2WSH_STACK = 100;\n\n/**\n * Max p2wsh push size. Used for\n * witness malleation checks (policy).\n * @const {Number}\n * @default\n */\n\nexports.MAX_P2WSH_PUSH = 80;\n\n/**\n * Max serialized p2wsh size. Used for\n * witness malleation checks (policy).\n * @const {Number}\n * @default\n */\n\nexports.MAX_P2WSH_SIZE = 3600;\n\n/**\n * Default ancestor limit. \n * @const {Number}\n * @default\n */\n\nexports.MEMPOOL_MAX_ANCESTORS = 50;\n\n/**\n * Default maximum mempool size in bytes.\n * @const {Number}\n * @default\n */\n\nexports.MEMPOOL_MAX_SIZE = 100 * 1000000;\n\n/**\n * Time at which transactions\n * fall out of the mempool.\n * @const {Number}\n * @default\n */\n\nexports.MEMPOOL_EXPIRY_TIME = 72 * 60 * 60;\n\n/**\n * Maximum number of orphan transactions.\n * @const {Number}\n * @default\n */\n\nexports.MEMPOOL_MAX_ORPHANS = 100;\n\n/**\n * Minimum block size to create. Block will be\n * filled with free transactions until block\n * reaches this weight.\n * @const {Number}\n * @default\n */\n\nexports.MIN_BLOCK_SIZE = 0;\n\n/**\n * Maximum block size to be mined.\n * @const {Number}\n * @default\n */\n\nexports.MAX_BLOCK_SIZE = consensus.MAX_FORK_BLOCK_SIZE;\n\n/**\n * How much of the block should be dedicated to\n * high-priority transactions (included regardless\n * of fee rate).\n * @const {Number}\n * @default\n */\n\nexports.BLOCK_PRIORITY_SIZE = 0;\n\n/**\n * Priority threshold to be reached before\n * switching to fee rate comparison.\n * @const {Number}\n * @default\n */\n\nexports.BLOCK_PRIORITY_THRESHOLD = exports.FREE_THRESHOLD;\n\n/**\n * Calculate minimum fee based on rate and size.\n * @param {Number?} size\n * @param {Rate?} rate - Rate of satoshi per kB.\n * @returns {Amount} fee\n */\n\nexports.getMinFee = function getMinFee(size, rate) {\n  if (rate == null)\n    rate = exports.MIN_RELAY;\n\n  assert(size >= 0);\n  assert(rate >= 0);\n\n  if (size === 0)\n    return 0;\n\n  let fee = Math.floor(rate * size / 1000);\n\n  if (fee === 0 && rate > 0)\n    fee = rate;\n\n  return fee;\n};\n\n/**\n * Calculate the minimum fee in order for the transaction\n * to be relayable, but _round to the nearest kilobyte\n * when taking into account size.\n * @param {Number?} size\n * @param {Rate?} rate - Rate of satoshi per kB.\n * @returns {Amount} fee\n */\n\nexports.getRoundFee = function getRoundFee(size, rate) {\n  if (rate == null)\n    rate = exports.MIN_RELAY;\n\n  assert(size >= 0);\n  assert(rate >= 0);\n\n  if (size === 0)\n    return 0;\n\n  let fee = rate * Math.ceil(size / 1000);\n\n  if (fee === 0 && rate > 0)\n    fee = rate;\n\n  return fee;\n};\n\n/**\n * Calculate a fee rate based on size and fees.\n * @param {Number} size\n * @param {Amount} fee\n * @returns {Rate}\n */\n\nexports.getRate = function getRate(size, fee) {\n  assert(size >= 0);\n  assert(fee >= 0);\n\n  if (size === 0)\n    return 0;\n\n  return Math.floor(fee * 1000 / size);\n};\n","/*!\n * int64.js - int64 object for javascript.\n * Copyright (c) 2017, Christopher Jeffrey (MIT License).\n * https://github.com/chjj/n64\n */\n\n'use strict';\n\n/*\n * N64 (abstract)\n */\n\nfunction N64(sign) {\n  enforce(this instanceof N64, 'this', 'N64');\n  enforce(sign === 0 || sign === 1, 'sign', 'bit');\n\n  this.hi = 0;\n  this.lo = 0;\n  this.sign = sign;\n}\n\n/*\n * Addition\n */\n\nN64.prototype._add = function _add(bhi, blo) {\n  const ahi = this.hi;\n  const alo = this.lo;\n\n  // Credit to @indutny for this method.\n  const lo = (alo + blo) | 0;\n\n  const s = lo >> 31;\n  const as = alo >> 31;\n  const bs = blo >> 31;\n\n  const c = ((as & bs) | (~s & (as ^ bs))) & 1;\n\n  const hi = ((ahi + bhi) | 0) + c;\n\n  this.hi = hi | 0;\n  this.lo = lo;\n\n  return this;\n};\n\nN64.prototype.iadd = function iadd(b) {\n  enforce(N64.isN64(b), 'operand', 'int64');\n  return this._add(b.hi, b.lo);\n};\n\nN64.prototype.iaddn = function iaddn(num) {\n  enforce(isNumber(num), 'operand', 'number');\n  return this._add((num >> 31) & -this.sign, num | 0);\n};\n\nN64.prototype.add = function add(b) {\n  return this.clone().iadd(b);\n};\n\nN64.prototype.addn = function addn(num) {\n  return this.clone().iaddn(num);\n};\n\n/*\n * Subtraction\n */\n\nN64.prototype._sub = function _sub(bhi, blo) {\n  bhi = ~bhi;\n  blo = ~blo;\n\n  if (blo === -1) {\n    blo = 0;\n    bhi += 1;\n    bhi |= 0;\n  } else {\n    blo += 1;\n  }\n\n  return this._add(bhi, blo);\n};\n\nN64.prototype.isub = function isub(b) {\n  enforce(N64.isN64(b), 'operand', 'int64');\n  return this._sub(b.hi, b.lo);\n};\n\nN64.prototype.isubn = function isubn(num) {\n  enforce(isNumber(num), 'operand', 'number');\n  return this._sub((num >> 31) & -this.sign, num | 0);\n};\n\nN64.prototype.sub = function sub(b) {\n  return this.clone().isub(b);\n};\n\nN64.prototype.subn = function subn(num) {\n  return this.clone().isubn(num);\n};\n\n/*\n * Multiplication\n */\n\nN64.prototype._mul = function _mul(bhi, blo) {\n  const ahi = this.hi;\n  const alo = this.lo;\n\n  const a48 = ahi >>> 16;\n  const a32 = ahi & 0xffff;\n  const a16 = alo >>> 16;\n  const a00 = alo & 0xffff;\n\n  const b48 = bhi >>> 16;\n  const b32 = bhi & 0xffff;\n  const b16 = blo >>> 16;\n  const b00 = blo & 0xffff;\n\n  let c48 = 0;\n  let c32 = 0;\n  let c16 = 0;\n  let c00 = 0;\n\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xffff;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xffff;\n\n  const hi = (c48 << 16) | c32;\n  const lo = (c16 << 16) | c00;\n\n  this.hi = hi;\n  this.lo = lo;\n\n  return this;\n};\n\nN64.prototype.imul = function imul(b) {\n  enforce(N64.isN64(b), 'multiplicand', 'int64');\n  return this._mul(b.hi, b.lo);\n};\n\nN64.prototype.imuln = function imuln(num) {\n  enforce(isNumber(num), 'multiplicand', 'number');\n  return this._mul((num >> 31) & -this.sign, num | 0);\n};\n\nN64.prototype.mul = function mul(b) {\n  return this.clone().imul(b);\n};\n\nN64.prototype.muln = function muln(num) {\n  return this.clone().imuln(num);\n};\n\n/*\n * Division\n */\n\nN64.prototype.idiv = function idiv(b) {\n  let a = this;\n\n  enforce(N64.isN64(b), 'divisor', 'int64');\n\n  if (b.isZero())\n    throw new Error('Cannot divide by zero.');\n\n  if (a.isZero())\n    return a;\n\n  if (a.eq(b))\n    return a.set(1);\n\n  if (a.isSafe() && b.isSafe()) {\n    const n = a.toDouble();\n    const d = b.toDouble();\n    const q = floor(n / d);\n    return a.set(q);\n  }\n\n  let neg = false;\n\n  if (a.sign) {\n    if (a.hi < 0) {\n      if (b.hi < 0) {\n        a = a.ineg();\n        b = b.neg();\n      } else {\n        a = a.ineg();\n        neg = true;\n      }\n    } else if (b.hi < 0) {\n      b = b.neg();\n      neg = true;\n    }\n  }\n\n  const n = a.toU64();\n  const d = b.toU64();\n\n  if (n.lt(d))\n    return a.set(0);\n\n  if (n.ushrn(1).lt(d))\n    return a.set(neg ? -1 : 1);\n\n  const q = new U64();\n  const r = new U64();\n\n  let bit = n.bitLength();\n\n  while (bit--) {\n    r.ishln(1);\n    r.lo |= n.testn(bit);\n    if (r.gte(d)) {\n      r.isub(d);\n      q.setn(bit, 1);\n    }\n  }\n\n  a.hi = q.hi;\n  a.lo = q.lo;\n\n  if (neg)\n    a.ineg();\n\n  return a;\n};\n\nN64.prototype.idivn = function idivn(num) {\n  enforce(isNumber(num), 'divisor', 'number');\n  return this.idiv(this._small(num));\n};\n\nN64.prototype.div = function div(b) {\n  return this.clone().idiv(b);\n};\n\nN64.prototype.divn = function divn(num) {\n  return this.clone().idivn(num);\n};\n\n/*\n * Modulo\n */\n\nN64.prototype.imod = function imod(b) {\n  const a = this;\n\n  enforce(N64.isN64(b), 'divisor', 'int64');\n\n  if (b.isZero())\n    throw new Error('Cannot divide by zero.');\n\n  if (a.isZero())\n    return a;\n\n  if (a.eq(b))\n    return a.set(0);\n\n  if (a.isSafe() && b.isSafe()) {\n    const n = a.toDouble();\n    const d = b.toDouble();\n    const r = n % d;\n    return a.set(r);\n  }\n\n  return a.isub(a.div(b).imul(b));\n};\n\nN64.prototype.imodn = function imodn(num) {\n  enforce(isNumber(num), 'divisor', 'number');\n  return this.imod(this._small(num));\n};\n\nN64.prototype.mod = function mod(b) {\n  return this.clone().imod(b);\n};\n\nN64.prototype.modn = function modn(num) {\n  return this.clone().imodn(num);\n};\n\n/*\n * Exponentiation\n */\n\nN64.prototype.ipow = function ipow(b) {\n  enforce(N64.isN64(b), 'exponent', 'int64');\n  return this.ipown(b.lo);\n};\n\nN64.prototype.ipown = function ipown(num) {\n  enforce(isNumber(num), 'exponent', 'number');\n\n  if (this.isZero())\n    return this;\n\n  const x = this.clone();\n  const n = this;\n\n  let y = num >>> 0;\n\n  n.set(1);\n\n  while (y > 0) {\n    if (y & 1)\n      n.imul(x);\n    y >>>= 1;\n    x.imul(x);\n  }\n\n  return n;\n};\n\nN64.prototype.pow = function pow(b) {\n  return this.clone().ipow(b);\n};\n\nN64.prototype.pown = function pown(num) {\n  return this.clone().ipown(num);\n};\n\nN64.prototype.sqr = function sqr() {\n  return this.mul(this);\n};\n\nN64.prototype.isqr = function isqr() {\n  return this.imul(this);\n};\n\n/*\n * AND\n */\n\nN64.prototype.iand = function iand(b) {\n  enforce(N64.isN64(b), 'operand', 'int64');\n  this.hi &= b.hi;\n  this.lo &= b.lo;\n  return this;\n};\n\nN64.prototype.iandn = function iandn(num) {\n  enforce(isNumber(num), 'operand', 'number');\n  this.hi &= (num >> 31) & -this.sign;\n  this.lo &= num | 0;\n  return this;\n};\n\nN64.prototype.and = function and(b) {\n  return this.clone().iand(b);\n};\n\nN64.prototype.andn = function andn(num) {\n  return this.clone().iandn(num);\n};\n\n/*\n * OR\n */\n\nN64.prototype.ior = function ior(b) {\n  enforce(N64.isN64(b), 'operand', 'int64');\n  this.hi |= b.hi;\n  this.lo |= b.lo;\n  return this;\n};\n\nN64.prototype.iorn = function iorn(num) {\n  enforce(isNumber(num), 'operand', 'number');\n  this.hi |= (num >> 31) & -this.sign;\n  this.lo |= num | 0;\n  return this;\n};\n\nN64.prototype.or = function or(b) {\n  return this.clone().ior(b);\n};\n\nN64.prototype.orn = function orn(num) {\n  return this.clone().iorn(num);\n};\n\n/*\n * XOR\n */\n\nN64.prototype.ixor = function ixor(b) {\n  enforce(N64.isN64(b), 'operand', 'int64');\n  this.hi ^= b.hi;\n  this.lo ^= b.lo;\n  return this;\n};\n\nN64.prototype.ixorn = function ixorn(num) {\n  enforce(isNumber(num), 'operand', 'number');\n  this.hi ^= (num >> 31) & -this.sign;\n  this.lo ^= num | 0;\n  return this;\n};\n\nN64.prototype.xor = function xor(b) {\n  return this.clone().ixor(b);\n};\n\nN64.prototype.xorn = function xorn(num) {\n  return this.clone().ixorn(num);\n};\n\n/*\n * NOT\n */\n\nN64.prototype.inot = function inot() {\n  this.hi = ~this.hi;\n  this.lo = ~this.lo;\n  return this;\n};\n\nN64.prototype.not = function not() {\n  return this.clone().inot();\n};\n\n/*\n * Left Shift\n */\n\nN64.prototype.ishl = function ishl(b) {\n  enforce(N64.isN64(b), 'bits', 'int64');\n  return this.ishln(b.lo);\n};\n\nN64.prototype.ishln = function ishln(bits) {\n  enforce(isNumber(bits), 'bits', 'number');\n\n  bits &= 63;\n\n  if (bits === 0)\n    return this;\n\n  let hi = this.hi;\n  let lo = this.lo;\n\n  if (bits < 32) {\n    hi <<= bits;\n    hi |= lo >>> (32 - bits);\n    lo <<= bits;\n  } else {\n    hi = lo << (bits - 32);\n    lo = 0;\n  }\n\n  this.hi = hi;\n  this.lo = lo;\n\n  return this;\n};\n\nN64.prototype.shl = function shl(b) {\n  return this.clone().ishl(b);\n};\n\nN64.prototype.shln = function shln(bits) {\n  return this.clone().ishln(bits);\n};\n\n/*\n * Right Shift\n */\n\nN64.prototype.ishr = function ishr(b) {\n  enforce(N64.isN64(b), 'bits', 'int64');\n  return this.ishrn(b.lo);\n};\n\nN64.prototype.ishrn = function ishrn(bits) {\n  if (!this.sign)\n    return this.iushrn(bits);\n\n  enforce(isNumber(bits), 'bits', 'number');\n\n  bits &= 63;\n\n  if (bits === 0)\n    return this;\n\n  let hi = this.hi;\n  let lo = this.lo;\n\n  if (bits < 32) {\n    lo >>>= bits;\n    lo |= hi << (32 - bits);\n    hi >>= bits;\n  } else {\n    lo = hi >> (bits - 32);\n    hi = hi >> 31;\n  }\n\n  this.hi = hi;\n  this.lo = lo;\n\n  return this;\n};\n\nN64.prototype.shr = function shr(b) {\n  return this.clone().ishr(b);\n};\n\nN64.prototype.shrn = function shrn(bits) {\n  return this.clone().ishrn(bits);\n};\n\n/*\n * Unsigned Right Shift\n */\n\nN64.prototype.iushr = function iushr(b) {\n  enforce(N64.isN64(b), 'bits', 'int64');\n  return this.iushrn(b.lo);\n};\n\nN64.prototype.iushrn = function iushrn(bits) {\n  enforce(isNumber(bits), 'bits', 'number');\n\n  bits &= 63;\n\n  if (bits === 0)\n    return this;\n\n  let hi = this.hi;\n  let lo = this.lo;\n\n  if (bits < 32) {\n    lo >>>= bits;\n    lo |= hi << (32 - bits);\n    hi >>>= bits;\n  } else {\n    lo = hi >>> (bits - 32);\n    hi = 0;\n  }\n\n  this.hi = hi | 0;\n  this.lo = lo | 0;\n\n  return this;\n};\n\nN64.prototype.ushr = function ushr(b) {\n  return this.clone().iushr(b);\n};\n\nN64.prototype.ushrn = function ushrn(bits) {\n  return this.clone().iushrn(bits);\n};\n\n/*\n * Bit Manipulation\n */\n\nN64.prototype.setn = function setn(bit, val) {\n  enforce(isNumber(bit), 'bit', 'number');\n\n  bit &= 63;\n\n  if (bit < 32) {\n    if (val)\n      this.lo |= (1 << bit);\n    else\n      this.lo &= ~(1 << bit);\n  } else {\n    if (val)\n      this.hi |= (1 << (bit - 32));\n    else\n      this.hi &= ~(1 << (bit - 32));\n  }\n\n  return this;\n};\n\nN64.prototype.testn = function testn(bit) {\n  enforce(isNumber(bit), 'bit', 'number');\n\n  bit &= 63;\n\n  if (bit < 32)\n    return (this.lo >>> bit) & 1;\n\n  return (this.hi >>> (bit - 32)) & 1;\n};\n\nN64.prototype.setb = function setb(pos, ch) {\n  enforce(isNumber(pos), 'pos', 'number');\n  enforce(isNumber(ch), 'ch', 'number');\n\n  pos &= 7;\n  ch &= 0xff;\n\n  if (pos < 4) {\n    this.lo &= ~(0xff << (pos * 8));\n    this.lo |= ch << (pos * 8);\n  } else {\n    this.hi &= ~(0xff << ((pos - 4) * 8));\n    this.hi |= ch << ((pos - 4) * 8);\n  }\n\n  return this;\n};\n\nN64.prototype.orb = function orb(pos, ch) {\n  enforce(isNumber(pos), 'pos', 'number');\n  enforce(isNumber(ch), 'ch', 'number');\n\n  pos &= 7;\n  ch &= 0xff;\n\n  if (pos < 4)\n    this.lo |= ch << (pos * 8);\n  else\n    this.hi |= ch << ((pos - 4) * 8);\n\n  return this;\n};\n\nN64.prototype.getb = function getb(pos) {\n  enforce(isNumber(pos), 'pos', 'number');\n\n  pos &= 7;\n\n  if (pos < 4)\n    return (this.lo >> (pos * 8)) & 0xff;\n\n  return (this.hi >> ((pos - 4) * 8)) & 0xff;\n};\n\nN64.prototype.imaskn = function imaskn(bit) {\n  enforce(isNumber(bit), 'bit', 'number');\n\n  bit &= 63;\n\n  if (bit < 32) {\n    this.hi = 0;\n    this.lo &= (1 << bit) - 1;\n  } else {\n    this.hi &= (1 << (bit - 32)) - 1;\n    this.lo &= 0xffffffff;\n  }\n\n  return this;\n};\n\nN64.prototype.maskn = function maskn(bit) {\n  return this.clone().imaskn(bit);\n};\n\nN64.prototype.andln = function andln(num) {\n  enforce(isNumber(num), 'operand', 'number');\n  return this.lo & num;\n};\n\n/*\n * Negation\n */\n\nN64.prototype.ineg = function ineg() {\n  let hi = ~this.hi;\n  let lo = ~this.lo;\n\n  if (lo === -1) {\n    lo = 0;\n    hi += 1;\n    hi |= 0;\n  } else {\n    lo += 1;\n  }\n\n  this.hi = hi;\n  this.lo = lo;\n\n  return this;\n};\n\nN64.prototype.neg = function neg() {\n  return this.clone().ineg();\n};\n\nN64.prototype.iabs = function iabs() {\n  if (this.isNeg())\n    this.ineg();\n  return this;\n};\n\nN64.prototype.abs = function abs() {\n  return this.clone().iabs();\n};\n\n/*\n * Comparison\n */\n\nN64.prototype._cmp = function _cmp(bhi, blo) {\n  const a = this;\n\n  let ahi = a.hi;\n  let alo = a.lo;\n\n  if (ahi === bhi && alo === blo)\n    return 0;\n\n  let neg = false;\n\n  if (a.sign) {\n    const x = ahi < 0;\n    const y = bhi < 0;\n\n    if (x && !y)\n      return -1;\n\n    if (!x && y)\n      return 1;\n\n    neg = x;\n  }\n\n  if (!neg) {\n    ahi >>>= 0;\n    bhi >>>= 0;\n  }\n\n  if (ahi < bhi)\n    return -1;\n\n  if (ahi > bhi)\n    return 1;\n\n  alo >>>= 0;\n  blo >>>= 0;\n\n  if (alo < blo)\n    return -1;\n\n  return 1;\n};\n\nN64.prototype.cmp = function cmp(b) {\n  enforce(N64.isN64(b), 'value', 'int64');\n  return this._cmp(b.hi, b.lo);\n};\n\nN64.prototype.cmpn = function cmpn(num) {\n  enforce(isNumber(num), 'value', 'number');\n  return this._cmp((num >> 31) & -this.sign, num | 0);\n};\n\nN64.prototype.eq = function eq(b) {\n  enforce(N64.isN64(b), 'value', 'int64');\n  return this.hi === b.hi && this.lo === b.lo;\n};\n\nN64.prototype.eqn = function eqn(num) {\n  enforce(isNumber(num), 'value', 'number');\n  return this.hi === ((num >> 31) & -this.sign) && this.lo === (num | 0);\n};\n\nN64.prototype.gt = function gt(b) {\n  return this.cmp(b) > 0;\n};\n\nN64.prototype.gtn = function gtn(num) {\n  return this.cmpn(num) > 0;\n};\n\nN64.prototype.gte = function gte(b) {\n  return this.cmp(b) >= 0;\n};\n\nN64.prototype.gten = function gten(num) {\n  return this.cmpn(num) >= 0;\n};\n\nN64.prototype.lt = function lt(b) {\n  return this.cmp(b) < 0;\n};\n\nN64.prototype.ltn = function ltn(num) {\n  return this.cmpn(num) < 0;\n};\n\nN64.prototype.lte = function lte(b) {\n  return this.cmp(b) <= 0;\n};\n\nN64.prototype.lten = function lten(num) {\n  return this.cmpn(num) <= 0;\n};\n\nN64.prototype.isZero = function isZero() {\n  return this.hi === 0 && this.lo === 0;\n};\n\nN64.prototype.isNeg = function isNeg() {\n  return this.sign === 1 && this.hi < 0;\n};\n\nN64.prototype.isOdd = function isOdd() {\n  return (this.lo & 1) === 1;\n};\n\nN64.prototype.isEven = function isEven() {\n  return (this.lo & 1) === 0;\n};\n\n/*\n * Helpers\n */\n\nN64.prototype.clone = function clone() {\n  const n = new this.constructor();\n  n.hi = this.hi;\n  n.lo = this.lo;\n  return n;\n};\n\nN64.prototype.inject = function inject(b) {\n  enforce(N64.isN64(b), 'value', 'int64');\n  this.hi = b.hi;\n  this.lo = b.lo;\n  return this;\n};\n\nN64.prototype.set = function set(num) {\n  enforce(isSafeInteger(num), 'number', 'integer');\n\n  let neg = false;\n\n  if (num < 0) {\n    num = -num;\n    neg = true;\n  }\n\n  this.hi = (num * (1 / 0x100000000)) | 0;\n  this.lo = num | 0;\n\n  if (neg)\n    this.ineg();\n\n  return this;\n};\n\nN64.prototype.join = function join(hi, lo) {\n  enforce(isNumber(hi), 'hi', 'number');\n  enforce(isNumber(lo), 'lo', 'number');\n  this.hi = hi | 0;\n  this.lo = lo | 0;\n  return this;\n};\n\nN64.prototype._small = function _small(num) {\n  const n = new this.constructor();\n  n.hi = (num >> 31) & -this.sign;\n  n.lo = num | 0;\n  return n;\n};\n\nN64.prototype.bitLength = function bitLength() {\n  let a = this;\n\n  if (this.isNeg())\n    a = this.neg();\n\n  if (a.hi === 0)\n    return countBits(a.lo);\n\n  return countBits(a.hi) + 32;\n};\n\nN64.prototype.byteLength = function byteLength() {\n  return Math.ceil(this.bitLength() / 8);\n};\n\nN64.prototype.isSafe = function isSafe() {\n  let hi = this.hi;\n\n  if (this.isNeg()) {\n    hi = ~hi;\n    if (this.lo === 0)\n      hi += 1;\n  }\n\n  return (hi & 0xffe00000) === 0;\n};\n\nN64.prototype.inspect = function inspect() {\n  let prefix = 'I64';\n\n  if (!this.sign)\n    prefix = 'U64';\n\n  return `<${prefix}: ${this.toString(10)}>`;\n};\n\n/*\n * Encoding\n */\n\nN64.prototype.readLE = function readLE(data, off) {\n  enforce(data && typeof data.length === 'number', 'data', 'arraylike');\n  enforce((off >> 0) === off, 'offset', 'integer');\n  enforce(off + 8 <= data.length, 'offset', 'valid offset');\n  this.lo = readI32LE(data, off);\n  this.hi = readI32LE(data, off + 4);\n  return off + 8;\n};\n\nN64.prototype.readBE = function readBE(data, off) {\n  enforce(data && typeof data.length === 'number', 'data', 'arraylike');\n  enforce((off >> 0) === off, 'offset', 'integer');\n  enforce(off + 8 <= data.length, 'offset', 'valid offset');\n  this.hi = readI32BE(data, off);\n  this.lo = readI32BE(data, off + 4);\n  return off + 8;\n};\n\nN64.prototype.readRaw = function readRaw(data, off) {\n  return this.readLE(data, off);\n};\n\nN64.prototype.writeLE = function writeLE(data, off) {\n  enforce(data && typeof data.length === 'number', 'data', 'arraylike');\n  enforce((off >> 0) === off, 'offset', 'integer');\n  enforce(off + 8 <= data.length, 'offset', 'valid offset');\n  writeI32LE(data, this.lo, off);\n  writeI32LE(data, this.hi, off + 4);\n  return off + 8;\n};\n\nN64.prototype.writeBE = function writeBE(data, off) {\n  enforce(data && typeof data.length === 'number', 'data', 'arraylike');\n  enforce((off >> 0) === off, 'offset', 'integer');\n  enforce(off + 8 <= data.length, 'offset', 'valid offset');\n  writeI32BE(data, this.hi, off);\n  writeI32BE(data, this.lo, off + 4);\n  return off + 8;\n};\n\nN64.prototype.writeRaw = function writeRaw(data, off) {\n  return this.writeLE(data, off);\n};\n\n/*\n * Conversion\n */\n\nN64.prototype.toU64 = function toU64() {\n  const n = new U64();\n  n.hi = this.hi;\n  n.lo = this.lo;\n  return n;\n};\n\nN64.prototype.toI64 = function toI64() {\n  const n = new I64();\n  n.hi = this.hi;\n  n.lo = this.lo;\n  return n;\n};\n\nN64.prototype.toNumber = function toNumber() {\n  if (!this.isSafe())\n    throw new Error('Number exceeds 53 bits.');\n\n  return this.toDouble();\n};\n\nN64.prototype.toDouble = function toDouble() {\n  let hi = this.hi;\n\n  if (!this.sign)\n    hi >>>= 0;\n\n  return hi * 0x100000000 + (this.lo >>> 0);\n};\n\nN64.prototype.toInt = function toInt() {\n  return this.sign ? this.lo : this.lo >>> 0;\n};\n\nN64.prototype.toBool = function toBool() {\n  return !this.isZero();\n};\n\nN64.prototype.toBits = function toBits() {\n  return [this.hi, this.lo];\n};\n\nN64.prototype.toObject = function toObject() {\n  return { hi: this.hi, lo: this.lo };\n};\n\nN64.prototype.toString = function toString(base, pad) {\n  base = getBase(base);\n\n  if (pad == null)\n    pad = 0;\n\n  enforce((base >>> 0) === base, 'base', 'integer');\n  enforce((pad >>> 0) === pad, 'pad', 'integer');\n\n  if (base < 2 || base > 16)\n    throw new Error('Base ranges between 2 and 16.');\n\n  if (pad > 64)\n    throw new Error('Maximum padding is 64 characters.');\n\n  let n = this;\n  let neg = false;\n\n  if (n.isNeg()) {\n    n = n.neg();\n    neg = true;\n  }\n\n  let hi = n.hi >>> 0;\n  let lo = n.lo >>> 0;\n  let str = '';\n\n  do {\n    const mhi = hi % base;\n    hi -= mhi;\n    hi /= base;\n    lo += mhi * 0x100000000;\n\n    const mlo = lo % base;\n    lo -= mlo;\n    lo /= base;\n\n    let ch = mlo;\n\n    if (ch < 10)\n      ch += 0x30;\n    else\n      ch += 0x61 - 10;\n\n    str = String.fromCharCode(ch) + str;\n  } while (lo > 0 || hi > 0);\n\n  while (str.length < pad)\n    str = '0' + str;\n\n  if (neg)\n    str = '-' + str;\n\n  return str;\n};\n\nN64.prototype.toJSON = function toJSON() {\n  return this.toString(16, 16);\n};\n\nN64.prototype.toBN = function toBN(BN) {\n  const neg = this.isNeg();\n\n  let hi = this.hi;\n  let lo = this.lo;\n\n  if (neg) {\n    hi = ~hi;\n    lo = ~lo;\n    if (lo === -1) {\n      lo = 0;\n      hi += 1;\n      hi |= 0;\n    } else {\n      lo += 1;\n    }\n  }\n\n  hi >>>= 0;\n  lo >>>= 0;\n\n  const num = new BN(hi);\n  num.ishln(32);\n  num.iadd(new BN(lo));\n\n  if (neg)\n    num.ineg();\n\n  return num;\n};\n\nN64.prototype.toLE = function toLE(ArrayLike) {\n  enforce(typeof ArrayLike === 'function', 'ArrayLike', 'constructor');\n  const data = alloc(ArrayLike, 8);\n  this.writeLE(data, 0);\n  return data;\n};\n\nN64.prototype.toBE = function toBE(ArrayLike) {\n  enforce(typeof ArrayLike === 'function', 'ArrayLike', 'constructor');\n  const data = alloc(ArrayLike, 8);\n  this.writeBE(data, 0);\n  return data;\n};\n\nN64.prototype.toRaw = function toRaw(ArrayLike) {\n  return this.toLE(ArrayLike);\n};\n\n/*\n * Instantiation\n */\n\nN64.prototype.fromNumber = function fromNumber(num) {\n  return this.set(num);\n};\n\nN64.prototype.fromInt = function fromInt(num) {\n  enforce(isNumber(num), 'integer', 'number');\n  return this.join((num >> 31) & -this.sign, num);\n};\n\nN64.prototype.fromBool = function fromBool(value) {\n  enforce(typeof value === 'boolean', 'value', 'boolean');\n  this.hi = 0;\n  this.lo = value ? 1 : 0;\n  return this;\n};\n\nN64.prototype.fromBits = function fromBits(hi, lo) {\n  return this.join(hi, lo);\n};\n\nN64.prototype.fromObject = function fromObject(num) {\n  enforce(num && typeof num === 'object', 'number', 'object');\n  return this.fromBits(num.hi, num.lo);\n};\n\nN64.prototype.fromString = function fromString(str, base) {\n  base = getBase(base);\n\n  enforce(typeof str === 'string', 'string', 'string');\n  enforce((base >>> 0) === base, 'base', 'integer');\n\n  if (base < 2 || base > 16)\n    throw new Error('Base ranges between 2 and 16.');\n\n  let neg = false;\n  let i = 0;\n\n  if (str.length > 0 && str[0] === '-') {\n    i += 1;\n    neg = true;\n  }\n\n  if (str.length === i || str.length > i + 64)\n    throw new Error('Invalid string (bad length).');\n\n  let hi = 0;\n  let lo = 0;\n\n  for (; i < str.length; i++) {\n    let ch = str.charCodeAt(i);\n\n    if (ch >= 0x30 && ch <= 0x39)\n      ch -= 0x30;\n    else if (ch >= 0x41 && ch <= 0x5a)\n      ch -= 0x41 - 10;\n    else if (ch >= 0x61 && ch <= 0x7a)\n      ch -= 0x61 - 10;\n    else\n      ch = base;\n\n    if (ch >= base)\n      throw new Error('Invalid string (parse error).');\n\n    lo *= base;\n    lo += ch;\n\n    hi *= base;\n\n    if (lo > 0xffffffff) {\n      ch = lo % 0x100000000;\n      hi += (lo - ch) / 0x100000000;\n      lo = ch;\n    }\n\n    if (hi > 0xffffffff)\n      throw new Error('Invalid string (overflow).');\n  }\n\n  this.hi = hi | 0;\n  this.lo = lo | 0;\n\n  if (neg)\n    this.ineg();\n\n  return this;\n};\n\nN64.prototype.fromJSON = function fromJSON(json) {\n  return this.fromString(json, 16);\n};\n\nN64.prototype.fromBN = function fromBN(num) {\n  enforce(num && isArray(num.words), 'number', 'big number');\n\n  const a = this;\n  const b = num.clone();\n  const neg = b.isNeg();\n\n  if (a.sign && b.testn(63))\n    throw new Error('Big number overflow.');\n\n  let i = 0;\n\n  while (!b.isZero()) {\n    if (i === 8)\n      throw new Error('Big number overflow.');\n\n    a.orb(i, b.andln(0xff));\n    b.iushrn(8);\n    i++;\n  }\n\n  if (neg)\n    a.ineg();\n\n  return a;\n};\n\nN64.prototype.fromLE = function fromLE(data) {\n  this.readLE(data, 0);\n  return this;\n};\n\nN64.prototype.fromBE = function fromBE(data) {\n  this.readBE(data, 0);\n  return this;\n};\n\nN64.prototype.fromRaw = function fromRaw(data) {\n  return this.fromLE(data);\n};\n\nN64.prototype.from = function from(num, base) {\n  if (num == null)\n    return this;\n\n  if (typeof num === 'number') {\n    if (typeof base === 'number')\n      return this.fromBits(num, base);\n    return this.fromNumber(num);\n  }\n\n  if (typeof num === 'string')\n    return this.fromString(num, base);\n\n  if (typeof num === 'object') {\n    if (isArray(num.words))\n      return this.fromBN(num);\n\n    if (typeof num.length === 'number')\n      return this.fromRaw(num);\n\n    return this.fromObject(num);\n  }\n\n  if (typeof num === 'boolean')\n    return this.fromBool(num);\n\n  throw new TypeError('Non-numeric object passed to N64.');\n};\n\n/*\n * Static Methods\n */\n\nN64.min = function min(a, b) {\n  return a.cmp(b) < 0 ? a : b;\n};\n\nN64.max = function max(a, b) {\n  return a.cmp(b) > 0 ? a : b;\n};\n\nN64.random = function random() {\n  const n = new this();\n  n.hi = (Math.random() * 0x100000000) | 0;\n  n.lo = (Math.random() * 0x100000000) | 0;\n  return n;\n};\n\nN64.pow = function pow(num, exp) {\n  return new this().fromInt(num).ipown(exp);\n};\n\nN64.shift = function shift(num, bits) {\n  return new this().fromInt(num).ishln(bits);\n};\n\nN64.readLE = function readLE(data, off) {\n  const n = new this();\n  n.readLE(data, off);\n  return n;\n};\n\nN64.readBE = function readBE(data, off) {\n  const n = new this();\n  n.readBE(data, off);\n  return n;\n};\n\nN64.readRaw = function readRaw(data, off) {\n  const n = new this();\n  n.readRaw(data, off);\n  return n;\n};\n\nN64.fromNumber = function fromNumber(num) {\n  return new this().fromNumber(num);\n};\n\nN64.fromInt = function fromInt(num) {\n  return new this().fromInt(num);\n};\n\nN64.fromBool = function fromBool(value) {\n  return new this().fromBool(value);\n};\n\nN64.fromBits = function fromBits(hi, lo) {\n  return new this().fromBits(hi, lo);\n};\n\nN64.fromObject = function fromObject(obj) {\n  return new this().fromObject(obj);\n};\n\nN64.fromString = function fromString(str, base) {\n  return new this().fromString(str, base);\n};\n\nN64.fromJSON = function fromJSON(json) {\n  return new this().fromJSON(json);\n};\n\nN64.fromBN = function fromBN(num) {\n  return new this().fromBN(num);\n};\n\nN64.fromLE = function fromLE(data) {\n  return new this().fromLE(data);\n};\n\nN64.fromBE = function fromBE(data) {\n  return new this().fromBE(data);\n};\n\nN64.fromRaw = function fromRaw(data) {\n  return new this().fromRaw(data);\n};\n\nN64.from = function from(num, base) {\n  return new this().from(num, base);\n};\n\nN64.isN64 = function isN64(obj) {\n  return obj instanceof N64;\n};\n\nN64.isU64 = function isU64(obj) {\n  return obj instanceof U64;\n};\n\nN64.isI64 = function isI64(obj) {\n  return obj instanceof I64;\n};\n\n/*\n * U64\n */\n\nfunction U64(num, base) {\n  if (!(this instanceof U64))\n    return new U64(num, base);\n\n  N64.call(this, 0);\n\n  this.from(num, base);\n}\n\nU64.__proto__ = N64;\nU64.prototype.__proto__ = N64.prototype;\n\n/*\n * Constants\n */\n\nU64.ULONG_MIN = 0x00000000;\nU64.ULONG_MAX = 0xffffffff;\n\nU64.UINT32_MIN = U64(0x00000000, 0x00000000);\nU64.UINT32_MAX = U64(0x00000000, 0xffffffff);\n\nU64.UINT64_MIN = U64(0x00000000, 0x00000000);\nU64.UINT64_MAX = U64(0xffffffff, 0xffffffff);\n\n/*\n * I64\n */\n\nfunction I64(num, base) {\n  if (!(this instanceof I64))\n    return new I64(num, base);\n\n  N64.call(this, 1);\n\n  this.from(num, base);\n}\n\nI64.__proto__ = N64;\nI64.prototype.__proto__ = N64.prototype;\n\n/*\n * Constants\n */\n\nI64.LONG_MIN = -0x80000000;\nI64.LONG_MAX = 0x7fffffff;\n\nI64.INT32_MIN = I64(0xffffffff, 0x80000000);\nI64.INT32_MAX = I64(0x00000000, 0x7fffffff);\n\nI64.INT64_MIN = I64(0x80000000, 0x00000000);\nI64.INT64_MAX = I64(0x7fffffff, 0xffffffff);\n\n/*\n * Helpers\n */\n\nfunction getBase(base) {\n  if (base == null)\n    return 10;\n\n  if (typeof base === 'number')\n    return base;\n\n  switch (base) {\n    case 'bin':\n      return 2;\n    case 'oct':\n      return 8;\n    case 'dec':\n      return 10;\n    case 'hex':\n      return 16;\n  }\n\n  return 0;\n}\n\nfunction countBits(word) {\n  if (Math.clz32)\n    return 32 - Math.clz32(word);\n\n  let bit = 31;\n\n  for (; bit >= 0; bit--) {\n    if ((word & (1 << bit)) !== 0)\n      break;\n  }\n\n  return bit + 1;\n}\n\nfunction floor(n) {\n  if (n < 0)\n    return -Math.floor(-n);\n  return Math.floor(n);\n}\n\nfunction enforce(value, name, type) {\n  if (!value) {\n    const err = new TypeError(`'${name}' must be a(n) ${type}.`);\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(err, enforce);\n    throw err;\n  }\n}\n\nfunction isNumber(num) {\n  return typeof num === 'number' && isFinite(num);\n}\n\nfunction isArray(num) {\n  if (Array.isArray)\n    return Array.isArray(num);\n\n  return ({}).toString.call(num).slice(8, -1) === 'Array';\n}\n\nfunction isSafeInteger(num) {\n  if (Number.isSafeInteger)\n    return Number.isSafeInteger(num);\n\n  return isNumber(num)\n    && Math.floor(num) === num\n    && num >= -0x001fffffffffffff\n    && num <= 0x001fffffffffffff;\n}\n\nfunction alloc(ArrayLike, size) {\n  if (ArrayLike.allocUnsafe)\n    return ArrayLike.allocUnsafe(size);\n\n  return new ArrayLike(size);\n}\n\nfunction readI32LE(data, off) {\n  return data[off]\n    | (data[off + 1] << 8)\n    | (data[off + 2] << 16)\n    | (data[off + 3] << 24);\n}\n\nfunction readI32BE(data, off) {\n  return (data[off] << 24)\n    | (data[off + 1] << 16)\n    | (data[off + 2] << 8)\n    | data[off + 3];\n}\n\nfunction writeI32LE(data, num, off) {\n  data[off] = num & 0xff;\n  data[off + 1] = (num >>> 8) & 0xff;\n  data[off + 2] = (num >>> 16) & 0xff;\n  data[off + 3] = (num >>> 24) & 0xff;\n}\n\nfunction writeI32BE(data, num, off) {\n  data[off] = (num >>> 24) & 0xff;\n  data[off + 1] = (num >>> 16) & 0xff;\n  data[off + 2] = (num >>> 8) & 0xff;\n  data[off + 3] = num & 0xff;\n}\n\n/*\n * Expose\n */\n\nexports.N64 = N64;\nexports.U64 = U64;\nexports.I64 = I64;\n","/*!\n * scripterror.js - script error for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * Script Error\n * An error thrown from the scripting system,\n * potentially pertaining to Script execution.\n * @alias module:script.ScriptError\n * @extends Error\n * @property {String} message - Error message.\n * @property {String} code - Original code passed in.\n * @property {Number} op - Opcode.\n * @property {Number} ip - Instruction pointer.\n */\n\nclass ScriptError extends Error {\n  /**\n   * Create an error.\n   * @constructor\n   * @param {String} code - Error code.\n   * @param {Opcode} op - Opcode.\n   * @param {Number?} ip - Instruction pointer.\n   */\n\n  constructor(code, op, ip) {\n    super();\n\n    this.type = 'ScriptError';\n    this.code = code;\n    this.message = code;\n    this.op = -1;\n    this.ip = -1;\n\n    if (typeof op === 'string') {\n      this.message = op;\n    } else if (op) {\n      this.message = `${code} (op=${op.toSymbol()}, ip=${ip})`;\n      this.op = op.value;\n      this.ip = ip;\n    }\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(this, ScriptError);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = ScriptError;\n","/*!\n * scriptnum.js - script number object for bcoin.\n * Copyright (c) 2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst {I64} = require('n64');\nconst ScriptError = require('./scripterror');\n\n/*\n * Constants\n */\n\nconst EMPTY_ARRAY = Buffer.alloc(0);\n\n/**\n * Script Number\n * @see https://github.com/chjj/n64\n * @alias module:script.ScriptNum\n * @property {Number} hi\n * @property {Number} lo\n * @property {Number} sign\n */\n\nclass ScriptNum extends I64 {\n  /**\n   * Create a script number.\n   * @constructor\n   * @param {(Number|String|Buffer|Object)?} num\n   * @param {(String|Number)?} base\n   */\n\n  constructor(num, base) {\n    super(num, base);\n  }\n\n  /**\n   * Cast to int32.\n   * @returns {Number}\n   */\n\n  getInt() {\n    if (this.lt(I64.INT32_MIN))\n      return I64.LONG_MIN;\n\n    if (this.gt(I64.INT32_MAX))\n      return I64.LONG_MAX;\n\n    return this.toInt();\n  }\n\n  /**\n   * Serialize script number.\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    let num = this;\n\n    // Zeroes are always empty arrays.\n    if (num.isZero())\n      return EMPTY_ARRAY;\n\n    // Need to append sign bit.\n    let neg = false;\n    if (num.isNeg()) {\n      num = num.neg();\n      neg = true;\n    }\n\n    // Calculate size.\n    const size = num.byteLength();\n\n    let offset = 0;\n\n    if (num.testn((size * 8) - 1))\n      offset = 1;\n\n    // Write number.\n    const data = Buffer.allocUnsafe(size + offset);\n\n    switch (size) {\n      case 8:\n        data[7] = (num.hi >>> 24) & 0xff;\n      case 7:\n        data[6] = (num.hi >> 16) & 0xff;\n      case 6:\n        data[5] = (num.hi >> 8) & 0xff;\n      case 5:\n        data[4] = num.hi & 0xff;\n      case 4:\n        data[3] = (num.lo >>> 24) & 0xff;\n      case 3:\n        data[2] = (num.lo >> 16) & 0xff;\n      case 2:\n        data[1] = (num.lo >> 8) & 0xff;\n      case 1:\n        data[0] = num.lo & 0xff;\n    }\n\n    // Append sign bit.\n    if (data[size - 1] & 0x80) {\n      assert(offset === 1);\n      assert(data.length === size + offset);\n      data[size] = neg ? 0x80 : 0;\n    } else if (neg) {\n      assert(offset === 0);\n      assert(data.length === size);\n      data[size - 1] |= 0x80;\n    } else {\n      assert(offset === 0);\n      assert(data.length === size);\n    }\n\n    return data;\n  }\n\n  /**\n   * Instantiate script number from serialized data.\n   * @private\n   * @param {Buffer} data\n   * @returns {ScriptNum}\n   */\n\n  fromRaw(data) {\n    assert(Buffer.isBuffer(data));\n\n    // Empty arrays are always zero.\n    if (data.length === 0)\n      return this;\n\n    // Read number (9 bytes max).\n    switch (data.length) {\n      case 8:\n        this.hi |= data[7] << 24;\n      case 7:\n        this.hi |= data[6] << 16;\n      case 6:\n        this.hi |= data[5] << 8;\n      case 5:\n        this.hi |= data[4];\n      case 4:\n        this.lo |= data[3] << 24;\n      case 3:\n        this.lo |= data[2] << 16;\n      case 2:\n        this.lo |= data[1] << 8;\n      case 1:\n        this.lo |= data[0];\n        break;\n      default:\n        for (let i = 0; i < data.length; i++)\n          this.orb(i, data[i]);\n        break;\n    }\n\n    // Remove high bit and flip sign.\n    if (data[data.length - 1] & 0x80) {\n      this.setn((data.length * 8) - 1, 0);\n      this.ineg();\n    }\n\n    return this;\n  }\n\n  /**\n   * Serialize script number.\n   * @returns {Buffer}\n   */\n\n  encode() {\n    return this.toRaw();\n  }\n\n  /**\n   * Decode and verify script number.\n   * @private\n   * @param {Buffer} data\n   * @param {Boolean?} minimal - Require minimal encoding.\n   * @param {Number?} limit - Size limit.\n   * @returns {ScriptNum}\n   */\n\n  decode(data, minimal, limit) {\n    assert(Buffer.isBuffer(data));\n\n    if (limit != null && data.length > limit)\n      throw new ScriptError('UNKNOWN_ERROR', 'Script number overflow.');\n\n    if (minimal && !ScriptNum.isMinimal(data))\n      throw new ScriptError('UNKNOWN_ERROR', 'Non-minimal script number.');\n\n    return this.fromRaw(data);\n  }\n\n  /**\n   * Inspect script number.\n   * @returns {String}\n   */\n\n  inspect() {\n    return `<ScriptNum: ${this.toString(10)}>`;\n  }\n\n  /**\n   * Test wether a serialized script\n   * number is in its most minimal form.\n   * @param {Buffer} data\n   * @returns {Boolean}\n   */\n\n  static isMinimal(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (data.length === 0)\n      return true;\n\n    if ((data[data.length - 1] & 0x7f) === 0) {\n      if (data.length === 1)\n        return false;\n\n      if ((data[data.length - 2] & 0x80) === 0)\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Encode serialized script number in its most minimal form.\n   * @param {Buffer} data\n   * @returns {Buffer} minimal encoded data\n   */\n\n  static toMinimal(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.isMinimal(data))\n      return data;\n\n    const last = data[data.length - 1];\n\n    // We are not minimally encoded, we need to figure out how much to trim.\n    for (let i = data.length - 1; i > 0; i--) {\n      // We found a non zero byte, time to encode.\n      if (data[i - 1] !== 0) {\n        if (data[i - 1] & 0x80) {\n          // We found a byte with it sign bit set so we need one more\n          // byte.\n          data[i++] = last;\n        } else {\n          // the sign bit is clear, we can use it.\n          data[i - 1] |= last;\n        }\n\n        data = data.slice(0, i);\n        return data;\n      }\n    }\n\n    // If we the whole thing is zeros, then we have a zero.\n    data = Buffer.alloc(0);\n    return data;\n  }\n\n  /**\n   * Decode and verify script number.\n   * @param {Buffer} data\n   * @param {Boolean?} minimal - Require minimal encoding.\n   * @param {Number?} limit - Size limit.\n   * @returns {ScriptNum}\n   */\n\n  static decode(data, minimal, limit) {\n    return new this().decode(data, minimal, limit);\n  }\n\n  /**\n   * Test whether object is a script number.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isScriptNum(obj) {\n    return obj instanceof ScriptNum;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = ScriptNum;\n","/*!\n * common.js - common script functions for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * @module script/common\n */\n\nconst assert = require('bsert');\nconst secp256k1 = require('../bcrypto/secp256k1');\nconst ScriptNum = require('./scriptnum');\n\n/**\n * Script opcodes.\n * @enum {Number}\n * @default\n */\n\nexports.opcodes = {\n  // Push\n  OP_0: 0x00,\n\n  OP_PUSHDATA1: 0x4c,\n  OP_PUSHDATA2: 0x4d,\n  OP_PUSHDATA4: 0x4e,\n\n  OP_1NEGATE: 0x4f,\n\n  OP_RESERVED: 0x50,\n\n  OP_1: 0x51,\n  OP_2: 0x52,\n  OP_3: 0x53,\n  OP_4: 0x54,\n  OP_5: 0x55,\n  OP_6: 0x56,\n  OP_7: 0x57,\n  OP_8: 0x58,\n  OP_9: 0x59,\n  OP_10: 0x5a,\n  OP_11: 0x5b,\n  OP_12: 0x5c,\n  OP_13: 0x5d,\n  OP_14: 0x5e,\n  OP_15: 0x5f,\n  OP_16: 0x60,\n\n  // Control\n  OP_NOP: 0x61,\n  OP_VER: 0x62,\n  OP_IF: 0x63,\n  OP_NOTIF: 0x64,\n  OP_VERIF: 0x65,\n  OP_VERNOTIF: 0x66,\n  OP_ELSE: 0x67,\n  OP_ENDIF: 0x68,\n  OP_VERIFY: 0x69,\n  OP_RETURN: 0x6a,\n\n  // Stack\n  OP_TOALTSTACK: 0x6b,\n  OP_FROMALTSTACK: 0x6c,\n  OP_2DROP: 0x6d,\n  OP_2DUP: 0x6e,\n  OP_3DUP: 0x6f,\n  OP_2OVER: 0x70,\n  OP_2ROT: 0x71,\n  OP_2SWAP: 0x72,\n  OP_IFDUP: 0x73,\n  OP_DEPTH: 0x74,\n  OP_DROP: 0x75,\n  OP_DUP: 0x76,\n  OP_NIP: 0x77,\n  OP_OVER: 0x78,\n  OP_PICK: 0x79,\n  OP_ROLL: 0x7a,\n  OP_ROT: 0x7b,\n  OP_SWAP: 0x7c,\n  OP_TUCK: 0x7d,\n\n  // Splice\n  OP_CAT: 0x7e,\n  OP_SPLIT: 0x7f,\n  OP_NUM2BIN: 0x80,\n  OP_BIN2NUM: 0x81,\n  OP_SIZE: 0x82,\n\n  // Bit\n  OP_INVERT: 0x83,\n  OP_AND: 0x84,\n  OP_OR: 0x85,\n  OP_XOR: 0x86,\n  OP_EQUAL: 0x87,\n  OP_EQUALVERIFY: 0x88,\n  OP_RESERVED1: 0x89,\n  OP_RESERVED2: 0x8a,\n\n  // Numeric\n  OP_1ADD: 0x8b,\n  OP_1SUB: 0x8c,\n  OP_2MUL: 0x8d,\n  OP_2DIV: 0x8e,\n  OP_NEGATE: 0x8f,\n  OP_ABS: 0x90,\n  OP_NOT: 0x91,\n  OP_0NOTEQUAL: 0x92,\n  OP_ADD: 0x93,\n  OP_SUB: 0x94,\n  OP_MUL: 0x95,\n  OP_DIV: 0x96,\n  OP_MOD: 0x97,\n  OP_LSHIFT: 0x98,\n  OP_RSHIFT: 0x99,\n  OP_BOOLAND: 0x9a,\n  OP_BOOLOR: 0x9b,\n  OP_NUMEQUAL: 0x9c,\n  OP_NUMEQUALVERIFY: 0x9d,\n  OP_NUMNOTEQUAL: 0x9e,\n  OP_LESSTHAN: 0x9f,\n  OP_GREATERTHAN: 0xa0,\n  OP_LESSTHANOREQUAL: 0xa1,\n  OP_GREATERTHANOREQUAL: 0xa2,\n  OP_MIN: 0xa3,\n  OP_MAX: 0xa4,\n  OP_WITHIN: 0xa5,\n\n  // Crypto\n  OP_RIPEMD160: 0xa6,\n  OP_SHA1: 0xa7,\n  OP_SHA256: 0xa8,\n  OP_HASH160: 0xa9,\n  OP_HASH256: 0xaa,\n  OP_CODESEPARATOR: 0xab,\n  OP_CHECKSIG: 0xac,\n  OP_CHECKSIGVERIFY: 0xad,\n  OP_CHECKMULTISIG: 0xae,\n  OP_CHECKMULTISIGVERIFY: 0xaf,\n\n  // Expansion\n  OP_NOP1: 0xb0,\n  OP_CHECKLOCKTIMEVERIFY: 0xb1,\n  OP_CHECKSEQUENCEVERIFY: 0xb2,\n  OP_NOP4: 0xb3,\n  OP_NOP5: 0xb4,\n  OP_NOP6: 0xb5,\n  OP_NOP7: 0xb6,\n  OP_NOP8: 0xb7,\n  OP_NOP9: 0xb8,\n  OP_NOP10: 0xb9,\n\n  // More Crypto\n  OP_CHECKDATASIG: 0xba,\n  OP_CHECKDATASIGVERIFY: 0xbb,\n\n  // additional byte-string operations\n  OP_REVERSEBYTES: 0xbc,\n\n  // Custom\n  OP_INVALIDOPCODE: 0xff\n};\n\n/**\n * Opcodes by value.\n * @const {Object}\n */\n\nexports.opcodesByVal = {\n  // Push\n  0x00: 'OP_0',\n\n  0x4c: 'OP_PUSHDATA1',\n  0x4d: 'OP_PUSHDATA2',\n  0x4e: 'OP_PUSHDATA4',\n\n  0x4f: 'OP_1NEGATE',\n\n  0x50: 'OP_RESERVED',\n\n  0x51: 'OP_1',\n  0x52: 'OP_2',\n  0x53: 'OP_3',\n  0x54: 'OP_4',\n  0x55: 'OP_5',\n  0x56: 'OP_6',\n  0x57: 'OP_7',\n  0x58: 'OP_8',\n  0x59: 'OP_9',\n  0x5a: 'OP_10',\n  0x5b: 'OP_11',\n  0x5c: 'OP_12',\n  0x5d: 'OP_13',\n  0x5e: 'OP_14',\n  0x5f: 'OP_15',\n  0x60: 'OP_16',\n\n  // Control\n  0x61: 'OP_NOP',\n  0x62: 'OP_VER',\n  0x63: 'OP_IF',\n  0x64: 'OP_NOTIF',\n  0x65: 'OP_VERIF',\n  0x66: 'OP_VERNOTIF',\n  0x67: 'OP_ELSE',\n  0x68: 'OP_ENDIF',\n  0x69: 'OP_VERIFY',\n  0x6a: 'OP_RETURN',\n\n  // Stack\n  0x6b: 'OP_TOALTSTACK',\n  0x6c: 'OP_FROMALTSTACK',\n  0x6d: 'OP_2DROP',\n  0x6e: 'OP_2DUP',\n  0x6f: 'OP_3DUP',\n  0x70: 'OP_2OVER',\n  0x71: 'OP_2ROT',\n  0x72: 'OP_2SWAP',\n  0x73: 'OP_IFDUP',\n  0x74: 'OP_DEPTH',\n  0x75: 'OP_DROP',\n  0x76: 'OP_DUP',\n  0x77: 'OP_NIP',\n  0x78: 'OP_OVER',\n  0x79: 'OP_PICK',\n  0x7a: 'OP_ROLL',\n  0x7b: 'OP_ROT',\n  0x7c: 'OP_SWAP',\n  0x7d: 'OP_TUCK',\n\n  // Splice\n  0x7e: 'OP_CAT',\n  0x7f: 'OP_SPLIT',\n  0x80: 'OP_NUM2BIN',\n  0x81: 'OP_BIN2NUM',\n  0x82: 'OP_SIZE',\n\n  // Bit\n  0x83: 'OP_INVERT',\n  0x84: 'OP_AND',\n  0x85: 'OP_OR',\n  0x86: 'OP_XOR',\n  0x87: 'OP_EQUAL',\n  0x88: 'OP_EQUALVERIFY',\n  0x89: 'OP_RESERVED1',\n  0x8a: 'OP_RESERVED2',\n\n  // Numeric\n  0x8b: 'OP_1ADD',\n  0x8c: 'OP_1SUB',\n  0x8d: 'OP_2MUL',\n  0x8e: 'OP_2DIV',\n  0x8f: 'OP_NEGATE',\n  0x90: 'OP_ABS',\n  0x91: 'OP_NOT',\n  0x92: 'OP_0NOTEQUAL',\n  0x93: 'OP_ADD',\n  0x94: 'OP_SUB',\n  0x95: 'OP_MUL',\n  0x96: 'OP_DIV',\n  0x97: 'OP_MOD',\n  0x98: 'OP_LSHIFT',\n  0x99: 'OP_RSHIFT',\n  0x9a: 'OP_BOOLAND',\n  0x9b: 'OP_BOOLOR',\n  0x9c: 'OP_NUMEQUAL',\n  0x9d: 'OP_NUMEQUALVERIFY',\n  0x9e: 'OP_NUMNOTEQUAL',\n  0x9f: 'OP_LESSTHAN',\n  0xa0: 'OP_GREATERTHAN',\n  0xa1: 'OP_LESSTHANOREQUAL',\n  0xa2: 'OP_GREATERTHANOREQUAL',\n  0xa3: 'OP_MIN',\n  0xa4: 'OP_MAX',\n  0xa5: 'OP_WITHIN',\n\n  // Crypto\n  0xa6: 'OP_RIPEMD160',\n  0xa7: 'OP_SHA1',\n  0xa8: 'OP_SHA256',\n  0xa9: 'OP_HASH160',\n  0xaa: 'OP_HASH256',\n  0xab: 'OP_CODESEPARATOR',\n  0xac: 'OP_CHECKSIG',\n  0xad: 'OP_CHECKSIGVERIFY',\n  0xae: 'OP_CHECKMULTISIG',\n  0xaf: 'OP_CHECKMULTISIGVERIFY',\n\n  // Expansion\n  0xb0: 'OP_NOP1',\n  0xb1: 'OP_CHECKLOCKTIMEVERIFY',\n  0xb2: 'OP_CHECKSEQUENCEVERIFY',\n  0xb3: 'OP_NOP4',\n  0xb4: 'OP_NOP5',\n  0xb5: 'OP_NOP6',\n  0xb6: 'OP_NOP7',\n  0xb7: 'OP_NOP8',\n  0xb8: 'OP_NOP9',\n  0xb9: 'OP_NOP10',\n\n  // More Crypto\n  0xba: 'OP_CHECKDATASIG',\n  0xbb: 'OP_CHECKDATASIGVERIFY',\n\n  // Additional byte-string operation\n  0xbc: 'OP_REVERSEBYTES',\n\n  // Custom\n  0xff: 'OP_INVALIDOPCODE'\n};\n\n/**\n * Small ints (1 indexed, 1==0).\n * @const {Buffer[]}\n */\n\nexports.small = [\n  Buffer.from([0x81]),\n  Buffer.from([]),\n  Buffer.from([0x01]),\n  Buffer.from([0x02]),\n  Buffer.from([0x03]),\n  Buffer.from([0x04]),\n  Buffer.from([0x05]),\n  Buffer.from([0x06]),\n  Buffer.from([0x07]),\n  Buffer.from([0x08]),\n  Buffer.from([0x09]),\n  Buffer.from([0x0a]),\n  Buffer.from([0x0b]),\n  Buffer.from([0x0c]),\n  Buffer.from([0x0d]),\n  Buffer.from([0x0e]),\n  Buffer.from([0x0f]),\n  Buffer.from([0x10])\n];\n\n/**\n * Script and locktime flags. See {@link VerifyFlags}.\n * @enum {Number}\n */\n\nexports.flags = {\n  VERIFY_NONE: 0,\n  VERIFY_P2SH: 1 << 0,\n  VERIFY_STRICTENC: 1 << 1,\n  VERIFY_DERSIG: 1 << 2,\n  VERIFY_LOW_S: 1 << 3,\n  VERIFY_SIGPUSHONLY: 1 << 5,\n  VERIFY_MINIMALDATA: 1 << 6,\n  VERIFY_DISCOURAGE_UPGRADABLE_NOPS: 1 << 7,\n  VERIFY_CLEANSTACK: 1 << 8,\n  VERIFY_CHECKLOCKTIMEVERIFY: 1 << 9,\n  VERIFY_CHECKSEQUENCEVERIFY: 1 << 10,\n  VERIFY_MINIMALIF: 1 << 13,\n  VERIFY_NULLFAIL: 1 << 14,\n  VERIFY_COMPRESSED_PUBKEYTYPE: 1 << 15,\n  VERIFY_SIGHASH_FORKID: 1 << 16,\n  VERIFY_REPLAY_PROTECTION: 1 << 17,\n  VERIFY_CHECKDATASIG: 1 << 18,\n  VERIFY_SCHNORR: 1 << 19,\n  VERIFY_DISALLOW_SEGWIT_RECOVERY: 1 << 20,\n  VERIFY_SCHNORR_MULTISIG: 1 << 21,\n  VERIFY_INPUT_SIGCHECKS: 1 << 22,\n  VERIFY_REVERSEBYTES: 1 << 23,\n  VERIFY_ZERO_SIGOPS: 1 << 30,\n  REPORT_SIGCHECKS: 1 << 31\n};\n\n/**\n * Consensus verify flags (used for block validation).\n * @const {VerifyFlags}\n * @default\n */\n\nexports.flags.MANDATORY_VERIFY_FLAGS = exports.flags.VERIFY_P2SH;\n\n/**\n * Standard verify flags (used for mempool validation).\n * @const {VerifyFlags}\n * @default\n */\n\nexports.flags.STANDARD_VERIFY_FLAGS = 0\n  | exports.flags.MANDATORY_VERIFY_FLAGS\n  | exports.flags.VERIFY_DERSIG\n  | exports.flags.VERIFY_STRICTENC\n  | exports.flags.VERIFY_MINIMALDATA\n  | exports.flags.VERIFY_SIGPUSHONLY\n  | exports.flags.VERIFY_DISCOURAGE_UPGRADABLE_NOPS\n  | exports.flags.VERIFY_CLEANSTACK\n  | exports.flags.VERIFY_MINIMALIF\n  | exports.flags.VERIFY_NULLFAIL\n  | exports.flags.VERIFY_CHECKLOCKTIMEVERIFY\n  | exports.flags.VERIFY_CHECKSEQUENCEVERIFY\n  | exports.flags.VERIFY_LOW_S\n  | exports.flags.VERIFY_SIGHASH_FORKID\n  | exports.flags.VERIFY_CHECKDATASIG\n  | exports.flags.VERIFY_DISALLOW_SEGWIT_RECOVERY\n  | exports.flags.VERIFY_SCHNORR_MULTISIG;\n\n/**\n * Standard flags without mandatory bits.\n * @const {VerifyFlags}\n * @default\n */\n\nexports.flags.ONLY_STANDARD_VERIFY_FLAGS =\n  exports.flags.STANDARD_VERIFY_FLAGS & ~exports.flags.MANDATORY_VERIFY_FLAGS;\n\n/**\n * Sighash Types.\n * @enum {SighashType}\n * @default\n */\n\nexports.hashType = {\n  /*\n   * Sign all outputs.\n   */\n\n  ALL: 1,\n\n  /*\n   * Do not sign outputs (zero sequences).\n   */\n\n  NONE: 2,\n\n  /*\n   * Sign output at the same index (zero sequences).\n   */\n\n  SINGLE: 3,\n\n  /*\n   * Sighash fork ID.\n   */\n\n  SIGHASH_FORKID: 0x40,\n\n  /*\n   * Sign only the current input (mask).\n   */\n\n  ANYONECANPAY: 0x80\n};\n\n/**\n * Sighash types by value.\n * @const {Object}\n */\n\nexports.hashTypeByVal = {\n  1: 'ALL',\n  2: 'NONE',\n  3: 'SINGLE',\n  0x80: 'ANYONECANPAY'\n};\n\n/**\n * Output script types.\n * @enum {Number}\n */\n\nexports.types = {\n  NONSTANDARD: 0,\n  PUBKEY: 1,\n  PUBKEYHASH: 2,\n  SCRIPTHASH: 3,\n  MULTISIG: 4,\n  NULLDATA: 5\n};\n\n/**\n * Output script types by value.\n * @const {Object}\n */\n\nexports.typesByVal = {\n  0: 'NONSTANDARD',\n  1: 'PUBKEY',\n  2: 'PUBKEYHASH',\n  3: 'SCRIPTHASH',\n  4: 'MULTISIG',\n  5: 'NULLDATA'\n};\n\n/**\n * Test a signature to see whether it contains a valid sighash type.\n * @param {Buffer} sig\n * @returns {Boolean}\n */\n\nexports.isHashType = function isHashType(sig) {\n  assert(Buffer.isBuffer(sig));\n\n  if (sig.length === 0)\n    return false;\n\n  const type = sig[sig.length - 1]\n    & ~(exports.hashType.ANYONECANPAY | exports.hashType.SIGHASH_FORKID);\n\n  if (type < exports.hashType.ALL || type > exports.hashType.SINGLE)\n    return false;\n\n  return true;\n};\n\n/**\n * Bitfield calculation helper for signatures.\n * @param {Number} bits\n * @returns {Number}\n */\n\nexports.countBits = function countBits(bits) {\n  bits = bits - ((bits >> 1) & 0x55555555);\n  bits = (bits & 0x33333333) + ((bits >> 2) & 0x33333333);\n  return (((bits + (bits >> 4)) & 0xf0f0f0f) * 0x1010101) >> 24;\n};\n\n/**\n * Test whether a signature is 64-bytes in length\n * @param {Buffer} sig\n * @returns {Boolean}\n */\n\nexports.isSchnorr = function isSchnorr(sig)  {\n  assert(Buffer.isBuffer(sig));\n  return sig.length === 64;\n}\n\n/**\n * Test a signature to see whether it contains a low S value.\n * NOTE: signature MUST exclude sighash byte\n * @param {Buffer} sig\n * @returns {Boolean}\n */\n\nexports.isLowDER = function isLowDER(sig) {\n  if (!exports.isDERSignatureEncoding(sig))\n    return false;\n\n  return secp256k1.isLowDER(sig);\n};\n\n/**\n * Test whether the data element is a valid key.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nexports.isKeyEncoding = function isKeyEncoding(key) {\n  assert(Buffer.isBuffer(key));\n\n  if (key.length < 33)\n    return false;\n\n  if (key[0] === 0x04) {\n    if (key.length !== 65)\n      return false;\n  } else if (key[0] === 0x02 || key[0] === 0x03) {\n    if (key.length !== 33)\n      return false;\n  } else {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Test whether the data element is a compressed key.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nexports.isCompressedEncoding = function isCompressedEncoding(key) {\n  assert(Buffer.isBuffer(key));\n\n  if (key.length !== 33)\n    return false;\n\n  if (key[0] !== 0x02 && key[0] !== 0x03)\n    return false;\n\n  return true;\n};\n\n/**\n * Test a signature to see if it abides by BIP66.\n * NOTE: signature MUST exclude sighash byte\n * @see https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n * @param {Buffer} sig\n * @returns {Boolean}\n */\n\nexports.isDERSignatureEncoding = function isDERSignatureEncoding(sig) {\n  assert(Buffer.isBuffer(sig));\n\n  // Format:\n  //   0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S] [sighash]\n  // * total-length: 1-byte length descriptor of everything that follows,\n  //   excluding the sighash byte.\n  // * R-length: 1-byte length descriptor of the R value that follows.\n  // * R: arbitrary-length big-endian encoded R value. It must use the shortest\n  //   possible encoding for a positive integers (which means no null bytes at\n  //   the start, except a single one when the next byte has its highest bit\n  //   set).\n  // * S-length: 1-byte length descriptor of the S value that follows.\n  // * S: arbitrary-length big-endian encoded S value. The same rules apply.\n  // * sighash: 1-byte value indicating what data is hashed (not part of the DER\n  //   signature)\n\n  // Minimum and maximum size constraints.\n  if (sig.length < 8)\n    return false;\n\n  if (sig.length > 72)\n    return false;\n\n  // A signature is of type 0x30 (compound).\n  if (sig[0] !== 0x30)\n    return false;\n\n  // Make sure the length covers the entire signature.\n  if (sig[1] !== sig.length - 2)\n    return false;\n\n  // Extract the length of the R element.\n  const lenR = sig[3];\n\n  // Make sure the length of the S element is still inside the signature.\n  if (5 + lenR >= sig.length)\n    return false;\n\n  // Extract the length of the S element.\n  const lenS = sig[5 + lenR];\n\n  // Verify that the length of the signature matches the sum of the length\n  // of the elements.\n  if (lenR + lenS + 6 !== sig.length)\n    return false;\n\n  // Check whether the R element is an integer.\n  if (sig[2] !== 0x02)\n    return false;\n\n  // Zero-length integers are not allowed for R.\n  if (lenR === 0)\n    return false;\n\n  // Negative numbers are not allowed for R.\n  if (sig[4] & 0x80)\n    return false;\n\n  // Null bytes at the start of R are not allowed, unless R would\n  // otherwise be interpreted as a negative number.\n  if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80))\n    return false;\n\n  // Check whether the S element is an integer.\n  if (sig[lenR + 4] !== 0x02)\n    return false;\n\n  // Zero-length integers are not allowed for S.\n  if (lenS === 0)\n    return false;\n\n  // Negative numbers are not allowed for S.\n  if (sig[lenR + 6] & 0x80)\n    return false;\n\n  // Null bytes at the start of S are not allowed, unless S would otherwise be\n  // interpreted as a negative number.\n  if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80))\n    return false;\n\n  return true;\n};\n\n/**\n * Format stack item into bitcoind asm format.\n * @param {Buffer} item\n * @param {Boolean?} decode - Attempt to decode hash types.\n * @returns {String} Human-readable string.\n */\n\nexports.toASM = function toASM(item, decode) {\n  if (item.length <= 4) {\n    const num = ScriptNum.decode(item);\n    return num.toString(10);\n  }\n\n  if (decode && exports.isDERSignatureEncoding(item.slice(0, -1))) {\n    const type = item[item.length - 1];\n\n    let symbol = exports.hashTypeByVal[type & 0x1f] || '';\n\n    if (symbol) {\n      if (type & exports.hashType.ANYONECANPAY)\n        symbol += '|ANYONECANPAY';\n      symbol = `[${symbol}]`;\n    }\n\n    return item.slice(0, -1).toString('hex') + symbol;\n  }\n\n  return item.toString('hex');\n};\n\n/**\n * Sighash with fork value for replay protection\n * @param {SighashType} sighash\n * @param {Number} value\n * @returns {SighashType}\n */\n\nexports.hashTypeWithForkValue = function hashTypeWithForkValue(sighash, value) {\n  return (value << 8) | (sighash & 0xff);\n};\n\n/**\n * Get fork value from hashtype\n * @param {SighashType} sighash\n * @returns {Number}\n */\n\nexports.getHashTypeForkValue = function getHashTypeForkValue(sighash) {\n  return (sighash >>> 8);\n};\n","/*!\n * opcode.js - opcode object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst ScriptNum = require('./scriptnum');\nconst common = require('./common');\nconst opcodes = common.opcodes;\n\nconst opCache = [];\n\nlet PARSE_ERROR = null;\n\n/**\n * Opcode\n * A simple struct which contains\n * an opcode and pushdata buffer.\n * @alias module:script.Opcode\n * @property {Number} value\n * @property {Buffer|null} data\n */\n\nclass Opcode {\n  /**\n   * Create an opcode.\n   * Note: this should not be called directly.\n   * @constructor\n   * @param {Number} value - Opcode.\n   * @param {Buffer?} data - Pushdata buffer.\n   */\n\n  constructor(value, data) {\n    this.value = value || 0;\n    this.data = data || null;\n  }\n\n  /**\n   * Test whether a pushdata abides by minimaldata.\n   * @returns {Boolean}\n   */\n\n  isMinimal() {\n    assert(0 <= this.value && this.value <= opcodes.OP_PUSHDATA4);\n\n    if (!this.data)\n      return true;\n\n    if (this.data.length === 1) {\n      if (this.data[0] === 0x81)\n        return false;\n\n      if (this.data[0] >= 1 && this.data[0] <= 16)\n        return false;\n    }\n\n    if (this.data.length <= 0x4b)\n      return this.value === this.data.length;\n\n    if (this.data.length <= 0xff)\n      return this.value === opcodes.OP_PUSHDATA1;\n\n    if (this.data.length <= 0xffff)\n      return this.value === opcodes.OP_PUSHDATA2;\n\n    return true;\n  }\n\n  /**\n   * Test whether opcode is a disabled opcode.\n   * @param {Number?} flags - Script standard flags.\n   * @returns {Boolean}\n   */\n\n  isDisabled(flags) {\n    switch (this.value) {\n      case opcodes.OP_INVERT:\n      case opcodes.OP_2MUL:\n      case opcodes.OP_2DIV:\n      case opcodes.OP_MUL:\n      case opcodes.OP_LSHIFT:\n      case opcodes.OP_RSHIFT:\n        return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Test whether opcode is a branch (if/else/endif).\n   * @returns {Boolean}\n   */\n\n  isBranch() {\n    return this.value >= opcodes.OP_IF && this.value <= opcodes.OP_ENDIF;\n  }\n\n  /**\n   * Test opcode equality.\n   * @param {Opcode} op\n   * @returns {Boolean}\n   */\n\n  equals(op) {\n    assert(Opcode.isOpcode(op));\n\n    if (this.value !== op.value)\n      return false;\n\n    if (!this.data) {\n      assert(!op.data);\n      return true;\n    }\n\n    assert(op.data);\n\n    return this.data.equals(op.data);\n  }\n\n  /**\n   * Convert Opcode to opcode value.\n   * @returns {Number}\n   */\n\n  toOp() {\n    return this.value;\n  }\n\n  /**\n   * Covert opcode to data push.\n   * @returns {Buffer|null}\n   */\n\n  toData() {\n    return this.data;\n  }\n\n  /**\n   * Covert opcode to data length.\n   * @returns {Number}\n   */\n\n  toLength() {\n    return this.data ? this.data.length : -1;\n  }\n\n  /**\n   * Covert and _cast_ opcode to data push.\n   * @returns {Buffer|null}\n   */\n\n  toPush() {\n    if (this.value === opcodes.OP_0)\n      return common.small[0 + 1];\n\n    if (this.value === opcodes.OP_1NEGATE)\n      return common.small[-1 + 1];\n\n    if (this.value >= opcodes.OP_1 && this.value <= opcodes.OP_16)\n      return common.small[this.value - 0x50 + 1];\n\n    return this.toData();\n  }\n\n  /**\n   * Get string for opcode.\n   * @param {String?} enc\n   * @returns {Buffer|null}\n   */\n\n  toString(enc) {\n    const data = this.toPush();\n\n    if (!data)\n      return null;\n\n    return data.toString(enc || 'utf8');\n  }\n\n  /**\n   * Convert opcode to small integer.\n   * @returns {Number}\n   */\n\n  toSmall() {\n    if (this.value === opcodes.OP_0)\n      return 0;\n\n    if (this.value >= opcodes.OP_1 && this.value <= opcodes.OP_16)\n      return this.value - 0x50;\n\n    return -1;\n  }\n\n  /**\n   * Convert opcode to script number.\n   * @param {Boolean?} minimal\n   * @param {Number?} limit\n   * @returns {ScriptNum|null}\n   */\n\n  toNum(minimal, limit) {\n    if (this.value === opcodes.OP_0)\n      return ScriptNum.fromInt(0);\n\n    if (this.value === opcodes.OP_1NEGATE)\n      return ScriptNum.fromInt(-1);\n\n    if (this.value >= opcodes.OP_1 && this.value <= opcodes.OP_16)\n      return ScriptNum.fromInt(this.value - 0x50);\n\n    if (!this.data)\n      return null;\n\n    return ScriptNum.decode(this.data, minimal, limit);\n  }\n\n  /**\n   * Convert opcode to integer.\n   * @param {Boolean?} minimal\n   * @param {Number?} limit\n   * @returns {Number}\n   */\n\n  toInt(minimal, limit) {\n    const num = this.toNum(minimal, limit);\n\n    if (!num)\n      return -1;\n\n    return num.getInt();\n  }\n\n  /**\n   * Convert opcode to boolean.\n   * @returns {Boolean}\n   */\n\n  toBool() {\n    const smi = this.toSmall();\n\n    if (smi === -1)\n      return false;\n\n    return smi === 1;\n  }\n\n  /**\n   * Convert opcode to its symbolic representation.\n   * @returns {String}\n   */\n\n  toSymbol() {\n    if (this.value === -1)\n      return 'OP_INVALIDOPCODE';\n\n    const symbol = common.opcodesByVal[this.value];\n\n    if (!symbol)\n      return `0x${hex8(this.value)}`;\n\n    return symbol;\n  }\n\n  /**\n   * Calculate opcode size.\n   * @returns {Number}\n   */\n\n  getSize() {\n    if (!this.data)\n      return 1;\n\n    switch (this.value) {\n      case opcodes.OP_PUSHDATA1:\n        return 2 + this.data.length;\n      case opcodes.OP_PUSHDATA2:\n        return 3 + this.data.length;\n      case opcodes.OP_PUSHDATA4:\n        return 5 + this.data.length;\n      default:\n        return 1 + this.data.length;\n    }\n  }\n\n  /**\n   * Encode the opcode to a buffer writer.\n   * @param {BufferWriter} bw\n   */\n\n  toWriter(bw) {\n    if (this.value === -1)\n      throw new Error('Cannot reserialize a parse error.');\n\n    if (!this.data) {\n      bw.writeU8(this.value);\n      return bw;\n    }\n\n    switch (this.value) {\n      case opcodes.OP_PUSHDATA1:\n        bw.writeU8(this.value);\n        bw.writeU8(this.data.length);\n        bw.writeBytes(this.data);\n        break;\n      case opcodes.OP_PUSHDATA2:\n        bw.writeU8(this.value);\n        bw.writeU16(this.data.length);\n        bw.writeBytes(this.data);\n        break;\n      case opcodes.OP_PUSHDATA4:\n        bw.writeU8(this.value);\n        bw.writeU32(this.data.length);\n        bw.writeBytes(this.data);\n        break;\n      default:\n        assert(this.value === this.data.length);\n        bw.writeU8(this.value);\n        bw.writeBytes(this.data);\n        break;\n    }\n\n    return bw;\n  }\n\n  /**\n   * Encode the opcode.\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    const size = this.getSize();\n    return this.toWriter(bio.write(size)).render();\n  }\n\n  /**\n   * Convert the opcode to a bitcoind test string.\n   * @returns {String} Human-readable script code.\n   */\n\n  toFormat() {\n    if (this.value === -1)\n      return '0x01';\n\n    if (this.data) {\n      // Numbers\n      if (this.data.length <= 4) {\n        const num = this.toNum();\n        if (this.equals(Opcode.fromNum(num)))\n          return num.toString(10);\n      }\n\n      const symbol = common.opcodesByVal[this.value];\n      const data = this.data.toString('hex');\n\n      // Direct push\n      if (!symbol) {\n        const size = hex8(this.value);\n        return `0x${size} 0x${data}`;\n      }\n\n      // Pushdatas\n      let size = this.data.length.toString(16);\n\n      while (size.length % 2 !== 0)\n        size = '0' + size;\n\n      return `${symbol} 0x${size} 0x${data}`;\n    }\n\n    // Opcodes\n    const symbol = common.opcodesByVal[this.value];\n    if (symbol)\n      return symbol;\n\n    // Unknown opcodes\n    const value = hex8(this.value);\n\n    return `0x${value}`;\n  }\n\n  /**\n   * Format the opcode as bitcoind asm.\n   * @param {Boolean?} decode - Attempt to decode hash types.\n   * @returns {String} Human-readable script.\n   */\n\n  toASM(decode) {\n    if (this.value === -1)\n      return '[error]';\n\n    if (this.data)\n      return common.toASM(this.data, decode);\n\n    return common.opcodesByVal[this.value] || 'OP_UNKNOWN';\n  }\n\n  /**\n   * Instantiate an opcode from a number opcode.\n   * @param {Number} op\n   * @returns {Opcode}\n   */\n\n  static fromOp(op) {\n    assert(typeof op === 'number');\n\n    const cached = opCache[op];\n\n    assert(cached, 'Bad opcode.');\n\n    return cached;\n  }\n\n  /**\n   * Instantiate a pushdata opcode from\n   * a buffer (will encode minimaldata).\n   * @param {Buffer} data\n   * @returns {Opcode}\n   */\n\n  static fromData(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (data.length === 1) {\n      if (data[0] === 0x81)\n        return this.fromOp(opcodes.OP_1NEGATE);\n\n      if (data[0] >= 1 && data[0] <= 16)\n        return this.fromOp(data[0] + 0x50);\n    }\n\n    return this.fromPush(data);\n  }\n\n  /**\n   * Instantiate a pushdata opcode from a\n   * buffer (this differs from fromData in\n   * that it will _always_ be a pushdata op).\n   * @param {Buffer} data\n   * @returns {Opcode}\n   */\n\n  static fromPush(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (data.length === 0)\n      return this.fromOp(opcodes.OP_0);\n\n    if (data.length <= 0x4b)\n      return new this(data.length, data);\n\n    if (data.length <= 0xff)\n      return new this(opcodes.OP_PUSHDATA1, data);\n\n    if (data.length <= 0xffff)\n      return new this(opcodes.OP_PUSHDATA2, data);\n\n    if (data.length <= 0xffffffff)\n      return new this(opcodes.OP_PUSHDATA4, data);\n\n    throw new Error('Pushdata size too large.');\n  }\n\n  /**\n   * Instantiate a pushdata opcode from a string.\n   * @param {String} str\n   * @param {String} [enc=utf8]\n   * @returns {Opcode}\n   */\n\n  static fromString(str, enc) {\n    assert(typeof str === 'string');\n    const data = Buffer.from(str, enc || 'utf8');\n    return this.fromData(data);\n  }\n\n  /**\n   * Instantiate an opcode from a small number.\n   * @param {Number} num\n   * @returns {Opcode}\n   */\n\n  static fromSmall(num) {\n    assert((num & 0xff) === num && num >= 0 && num <= 16);\n    return this.fromOp(num === 0 ? 0 : num + 0x50);\n  }\n\n  /**\n   * Instantiate an opcode from a ScriptNum.\n   * @param {ScriptNumber} num\n   * @returns {Opcode}\n   */\n\n  static fromNum(num) {\n    assert(ScriptNum.isScriptNum(num));\n    return this.fromData(num.encode());\n  }\n\n  /**\n   * Instantiate an opcode from a Number.\n   * @param {Number} num\n   * @returns {Opcode}\n   */\n\n  static fromInt(num) {\n    assert(Number.isSafeInteger(num));\n\n    if (num === 0)\n      return this.fromOp(opcodes.OP_0);\n\n    if (num === -1)\n      return this.fromOp(opcodes.OP_1NEGATE);\n\n    if (num >= 1 && num <= 16)\n      return this.fromOp(num + 0x50);\n\n    return this.fromNum(ScriptNum.fromNumber(num));\n  }\n\n  /**\n   * Instantiate an opcode from a Number.\n   * @param {Boolean} value\n   * @returns {Opcode}\n   */\n\n  static fromBool(value) {\n    assert(typeof value === 'boolean');\n    return this.fromSmall(value ? 1 : 0);\n  }\n\n  /**\n   * Instantiate a pushdata opcode from symbolic name.\n   * @example\n   *   Opcode.fromSymbol('checksequenceverify')\n   * @param {String} name\n   * @returns {Opcode}\n   */\n\n  static fromSymbol(name) {\n    assert(typeof name === 'string');\n    assert(name.length > 0);\n\n    if (name.charCodeAt(0) & 32)\n      name = name.toUpperCase();\n\n    if (!/^OP_/.test(name))\n      name = `OP_${name}`;\n\n    const op = common.opcodes[name];\n\n    if (op != null)\n      return this.fromOp(op);\n\n    assert(/^OP_0X/.test(name), 'Unknown opcode.');\n    assert(name.length === 7, 'Unknown opcode.');\n\n    const value = parseInt(name.substring(5), 16);\n\n    assert((value & 0xff) === value, 'Unknown opcode.');\n\n    return this.fromOp(value);\n  }\n\n  /**\n   * Instantiate opcode from buffer reader.\n   * @param {BufferReader} br\n   * @returns {Opcode}\n   */\n\n  static fromReader(br) {\n    const value = br.readU8();\n    const op = opCache[value];\n\n    if (op)\n      return op;\n\n    switch (value) {\n      case opcodes.OP_PUSHDATA1: {\n        if (br.left() < 1)\n          return PARSE_ERROR;\n\n        const size = br.readU8();\n\n        if (br.left() < size) {\n          br.seek(br.left());\n          return PARSE_ERROR;\n        }\n\n        const data = br.readBytes(size);\n\n        return new this(value, data);\n      }\n      case opcodes.OP_PUSHDATA2: {\n        if (br.left() < 2) {\n          br.seek(br.left());\n          return PARSE_ERROR;\n        }\n\n        const size = br.readU16();\n\n        if (br.left() < size) {\n          br.seek(br.left());\n          return PARSE_ERROR;\n        }\n\n        const data = br.readBytes(size);\n\n        return new this(value, data);\n      }\n      case opcodes.OP_PUSHDATA4: {\n        if (br.left() < 4) {\n          br.seek(br.left());\n          return PARSE_ERROR;\n        }\n\n        const size = br.readU32();\n\n        if (br.left() < size) {\n          br.seek(br.left());\n          return PARSE_ERROR;\n        }\n\n        const data = br.readBytes(size);\n\n        return new this(value, data);\n      }\n      default: {\n        if (br.left() < value) {\n          br.seek(br.left());\n          return PARSE_ERROR;\n        }\n\n        const data = br.readBytes(value);\n\n        return new this(value, data);\n      }\n    }\n  }\n\n  /**\n   * Instantiate opcode from serialized data.\n   * @param {Buffer} data\n   * @returns {Opcode}\n   */\n\n  static fromRaw(data) {\n    return this.fromReader(bio.read(data));\n  }\n\n  /**\n   * Test whether an object an Opcode.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isOpcode(obj) {\n    return obj instanceof Opcode;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction hex8(num) {\n  if (num <= 0x0f)\n    return '0' + num.toString(16);\n  return num.toString(16);\n}\n\n/*\n * Fill Cache\n */\n\nPARSE_ERROR = Object.freeze(new Opcode(-1));\n\nfor (let value = 0x00; value <= 0xff; value++) {\n  if (value >= 0x01 && value <= 0x4e) {\n    opCache.push(null);\n    continue;\n  }\n  const op = new Opcode(value);\n  opCache.push(Object.freeze(op));\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Opcode;\n","/*!\n * stack.js - stack object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst common = require('./common');\nconst ScriptNum = require('./scriptnum');\n\n/**\n * Stack\n * Represents the stack of a Script during execution.\n * @alias module:script.Stack\n * @property {Buffer[]} items - Stack items.\n * @property {Number} length - Size of stack.\n */\n\nclass Stack {\n  /**\n   * Create a stack.\n   * @constructor\n   * @param {Buffer[]?} items - Stack items.\n   */\n\n  constructor(items) {\n    this.items = items || [];\n  }\n\n  /**\n   * Get length.\n   * @returns {Number}\n   */\n\n  get length() {\n    return this.items.length;\n  }\n\n  /**\n   * Set length.\n   * @param {Number} value\n   */\n\n  set length(value) {\n    this.items.length = value;\n  }\n\n  /**\n   * Instantiate a value-only iterator.\n   * @returns {StackIterator}\n   */\n\n  [Symbol.iterator]() {\n    return this.items[Symbol.iterator]();\n  }\n\n  /**\n   * Instantiate a value-only iterator.\n   * @returns {StackIterator}\n   */\n\n  values() {\n    return this.items.values();\n  }\n\n  /**\n   * Instantiate a key and value iterator.\n   * @returns {StackIterator}\n   */\n\n  entries() {\n    return this.items.entries();\n  }\n\n  /**\n   * Inspect the stack.\n   * @returns {String} Human-readable stack.\n   */\n\n  inspect() {\n    return `<Stack: ${this.toString()}>`;\n  }\n\n  /**\n   * Convert the stack to a string.\n   * @returns {String} Human-readable stack.\n   */\n\n  toString() {\n    const out = [];\n\n    for (const item of this.items)\n      out.push(item.toString('hex'));\n\n    return out.join(' ');\n  }\n\n  /**\n   * Format the stack as bitcoind asm.\n   * @param {Boolean?} decode - Attempt to decode hash types.\n   * @returns {String} Human-readable script.\n   */\n\n  toASM(decode) {\n    const out = [];\n\n    for (const item of this.items)\n      out.push(common.toASM(item, decode));\n\n    return out.join(' ');\n  }\n\n  /**\n   * Clone the stack.\n   * @returns {Stack} Cloned stack.\n   */\n\n  clone() {\n    return new this.constructor(this.items.slice());\n  }\n\n  /**\n   * Clear the stack.\n   * @returns {Stack}\n   */\n\n  clear() {\n    this.items.length = 0;\n    return this;\n  }\n\n  /**\n   * Get a stack item by index.\n   * @param {Number} index\n   * @returns {Buffer|null}\n   */\n\n  get(index) {\n    if (index < 0)\n      index += this.items.length;\n\n    if (index < 0 || index >= this.items.length)\n      return null;\n\n    return this.items[index];\n  }\n\n  /**\n   * Pop a stack item.\n   * @see Array#pop\n   * @returns {Buffer|null}\n   */\n\n  pop() {\n    const item = this.items.pop();\n    return item || null;\n  }\n\n  /**\n   * Shift a stack item.\n   * @see Array#shift\n   * @returns {Buffer|null}\n   */\n\n  shift() {\n    const item = this.items.shift();\n    return item || null;\n  }\n\n  /**\n   * Remove an item.\n   * @param {Number} index\n   * @returns {Buffer}\n   */\n\n  remove(index) {\n    if (index < 0)\n      index += this.items.length;\n\n    if (index < 0 || index >= this.items.length)\n      return null;\n\n    const items = this.items.splice(index, 1);\n\n    if (items.length === 0)\n      return null;\n\n    return items[0];\n  }\n\n  /**\n   * Set stack item at index.\n   * @param {Number} index\n   * @param {Buffer} value\n   * @returns {Buffer}\n   */\n\n  set(index, item) {\n    if (index < 0)\n      index += this.items.length;\n\n    assert(Buffer.isBuffer(item));\n    assert(index >= 0 && index <= this.items.length);\n\n    this.items[index] = item;\n\n    return this;\n  }\n\n  /**\n   * Push item onto stack.\n   * @see Array#push\n   * @param {Buffer} item\n   * @returns {Number} Stack size.\n   */\n\n  push(item) {\n    assert(Buffer.isBuffer(item));\n    this.items.push(item);\n    return this;\n  }\n\n  /**\n   * Unshift item from stack.\n   * @see Array#unshift\n   * @param {Buffer} item\n   * @returns {Number}\n   */\n\n  unshift(item) {\n    assert(Buffer.isBuffer(item));\n    this.items.unshift(item);\n    return this;\n  }\n\n  /**\n   * Insert an item.\n   * @param {Number} index\n   * @param {Buffer} item\n   * @returns {Buffer}\n   */\n\n  insert(index, item) {\n    if (index < 0)\n      index += this.items.length;\n\n    assert(Buffer.isBuffer(item));\n    assert(index >= 0 && index <= this.items.length);\n\n    this.items.splice(index, 0, item);\n\n    return this;\n  }\n\n  /**\n   * Erase stack items.\n   * @param {Number} start\n   * @param {Number} end\n   * @returns {Buffer[]}\n   */\n\n  erase(start, end) {\n    if (start < 0)\n      start = this.items.length + start;\n\n    if (end < 0)\n      end = this.items.length + end;\n\n    this.items.splice(start, end - start);\n  }\n\n  /**\n   * Swap stack values.\n   * @param {Number} i1 - Index 1.\n   * @param {Number} i2 - Index 2.\n   */\n\n  swap(i1, i2) {\n    if (i1 < 0)\n      i1 = this.items.length + i1;\n\n    if (i2 < 0)\n      i2 = this.items.length + i2;\n\n    const v1 = this.items[i1];\n    const v2 = this.items[i2];\n\n    this.items[i1] = v2;\n    this.items[i2] = v1;\n  }\n\n  /*\n   * Data\n   */\n\n  getData(index) {\n    return this.get(index);\n  }\n\n  popData() {\n    return this.pop();\n  }\n\n  shiftData() {\n    return this.shift();\n  }\n\n  removeData(index) {\n    return this.remove(index);\n  }\n\n  setData(index, data) {\n    return this.set(index, data);\n  }\n\n  pushData(data) {\n    return this.push(data);\n  }\n\n  unshiftData(data) {\n    return this.unshift(data);\n  }\n\n  insertData(index, data) {\n    return this.insert(index, data);\n  }\n\n  /*\n   * Length\n   */\n\n  getLength(index) {\n    const item = this.get(index);\n    return item ? item.length : -1;\n  }\n\n  /*\n   * String\n   */\n\n  getString(index, enc) {\n    const item = this.get(index);\n    return item ? Stack.toString(item, enc) : null;\n  }\n\n  popString(enc) {\n    const item = this.pop();\n    return item ? Stack.toString(item, enc) : null;\n  }\n\n  shiftString(enc) {\n    const item = this.shift();\n    return item ? Stack.toString(item, enc) : null;\n  }\n\n  removeString(index, enc) {\n    const item = this.remove(index);\n    return item ? Stack.toString(item, enc) : null;\n  }\n\n  setString(index, str, enc) {\n    return this.set(index, Stack.fromString(str, enc));\n  }\n\n  pushString(str, enc) {\n    return this.push(Stack.fromString(str, enc));\n  }\n\n  unshiftString(str, enc) {\n    return this.unshift(Stack.fromString(str, enc));\n  }\n\n  insertString(index, str, enc) {\n    return this.insert(index, Stack.fromString(str, enc));\n  }\n\n  /*\n   * Num\n   */\n\n  getNum(index, minimal, limit) {\n    const item = this.get(index);\n    return item ? Stack.toNum(item, minimal, limit) : null;\n  }\n\n  popNum(minimal, limit) {\n    const item = this.pop();\n    return item ? Stack.toNum(item, minimal, limit) : null;\n  }\n\n  shiftNum(minimal, limit) {\n    const item = this.shift();\n    return item ? Stack.toNum(item, minimal, limit) : null;\n  }\n\n  removeNum(index, minimal, limit) {\n    const item = this.remove(index);\n    return item ? Stack.toNum(item, minimal, limit) : null;\n  }\n\n  setNum(index, num) {\n    return this.set(index, Stack.fromNum(num));\n  }\n\n  pushNum(num) {\n    return this.push(Stack.fromNum(num));\n  }\n\n  unshiftNum(num) {\n    return this.unshift(Stack.fromNum(num));\n  }\n\n  insertNum(index, num) {\n    return this.insert(index, Stack.fromNum(num));\n  }\n\n  /*\n   * Int\n   */\n\n  getInt(index, minimal, limit) {\n    const item = this.get(index);\n    return item ? Stack.toInt(item, minimal, limit) : -1;\n  }\n\n  popInt(minimal, limit) {\n    const item = this.pop();\n    return item ? Stack.toInt(item, minimal, limit) : -1;\n  }\n\n  shiftInt(minimal, limit) {\n    const item = this.shift();\n    return item ? Stack.toInt(item, minimal, limit) : -1;\n  }\n\n  removeInt(index, minimal, limit) {\n    const item = this.remove(index);\n    return item ? Stack.toInt(item, minimal, limit) : -1;\n  }\n\n  setInt(index, num) {\n    return this.set(index, Stack.fromInt(num));\n  }\n\n  pushInt(num) {\n    return this.push(Stack.fromInt(num));\n  }\n\n  unshiftInt(num) {\n    return this.unshift(Stack.fromInt(num));\n  }\n\n  insertInt(index, num) {\n    return this.insert(index, Stack.fromInt(num));\n  }\n\n  /*\n   * Bool\n   */\n\n  getBool(index) {\n    const item = this.get(index);\n    return item ? Stack.toBool(item) : false;\n  }\n\n  popBool() {\n    const item = this.pop();\n    return item ? Stack.toBool(item) : false;\n  }\n\n  shiftBool() {\n    const item = this.shift();\n    return item ? Stack.toBool(item) : false;\n  }\n\n  removeBool(index) {\n    const item = this.remove(index);\n    return item ? Stack.toBool(item) : false;\n  }\n\n  setBool(index, value) {\n    return this.set(index, Stack.fromBool(value));\n  }\n\n  pushBool(value) {\n    return this.push(Stack.fromBool(value));\n  }\n\n  unshiftBool(value) {\n    return this.unshift(Stack.fromBool(value));\n  }\n\n  insertBool(index, value) {\n    return this.insert(index, Stack.fromBool(value));\n  }\n\n  /**\n   * Test an object to see if it is a Stack.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isStack(obj) {\n    return obj instanceof Stack;\n  }\n\n  /*\n   * Encoding\n   */\n\n  static toString(item, enc) {\n    assert(Buffer.isBuffer(item));\n    return item.toString(enc || 'utf8');\n  }\n\n  static fromString(str, enc) {\n    assert(typeof str === 'string');\n    return Buffer.from(str, enc || 'utf8');\n  }\n\n  static toNum(item, minimal, limit) {\n    return ScriptNum.decode(item, minimal, limit);\n  }\n\n  static fromNum(num) {\n    assert(ScriptNum.isScriptNum(num));\n    return num.encode();\n  }\n\n  static toInt(item, minimal, limit) {\n    const num = Stack.toNum(item, minimal, limit);\n    return num.getInt();\n  }\n\n  static fromInt(int) {\n    assert(typeof int === 'number');\n\n    if (int >= -1 && int <= 16)\n      return common.small[int + 1];\n\n    const num = ScriptNum.fromNumber(int);\n\n    return Stack.fromNum(num);\n  }\n\n  static toBool(item) {\n    assert(Buffer.isBuffer(item));\n\n    for (let i = 0; i < item.length; i++) {\n      if (item[i] !== 0) {\n        // Cannot be negative zero\n        if (i === item.length - 1 && item[i] === 0x80)\n          return false;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  static fromBool(value) {\n    assert(typeof value === 'boolean');\n    return Stack.fromInt(value ? 1 : 0);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Stack;\n","const assert = require('bsert');\n\nclass Metrics {\n   constructor(sigchecks) {\n     this.sigchecks = sigchecks || 0;\n     this.init();\n   }\n   init() {\n     return this.sigchecks;\n   }\n}\n\nmodule.exports = Metrics;\n","/*!\n * script.js - script interpreter for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst ripemd160 = require('../bcrypto/ripemd160');\nconst sha1 = require('../bcrypto/sha1');\nconst sha256 = require('../bcrypto/sha256');\nconst hash160 = require('../bcrypto/hash160');\nconst hash256 = require('../bcrypto/hash256');\nconst secp256k1 = require('../bcrypto/secp256k1');\nconst consensus = require('../protocol/consensus');\nconst policy = require('../protocol/policy');\nconst Opcode = require('./opcode');\nconst Stack = require('./stack');\nconst ScriptError = require('./scripterror');\nconst ScriptNum = require('./scriptnum');\nconst common = require('./common');\nconst Address = require('../primitives/address');\nconst Metrics = require('./metrics');\nconst opcodes = common.opcodes;\nconst scriptTypes = common.types;\nconst countBits = common.countBits;\nconst {encoding} = bio;\n\n\n/*\n * Constants\n */\n\nconst EMPTY_BUFFER = Buffer.alloc(0);\nconst metrics = new Metrics();\n\n/**\n * Script\n * Represents a input or output script.\n * @alias module:script.Script\n * @property {Array} code - Parsed script code.\n * @property {Buffer?} raw - Serialized script.\n * @property {Number} length - Number of parsed opcodes.\n */\n\nclass Script {\n  /**\n   * Create a script.\n   * @constructor\n   * @param {Buffer|Array|Object} code\n   */\n\n  constructor(options) {\n    this.raw = EMPTY_BUFFER;\n    this.code = [];\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Get length.\n   * @returns {Number}\n   */\n\n  get length() {\n    return this.code.length;\n  }\n\n  /**\n   * Set length.\n   * @param {Number} value\n   */\n\n  set length(value) {\n    this.code.length = value;\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    assert(options, 'Script data is required.');\n\n    if (Buffer.isBuffer(options))\n      return this.fromRaw(options);\n\n    if (Array.isArray(options))\n      return this.fromArray(options);\n\n    if (options.raw) {\n      if (!options.code)\n        return this.fromRaw(options.raw);\n      assert(Buffer.isBuffer(options.raw), 'Raw must be a Buffer.');\n      this.raw = options.raw;\n    }\n\n    if (options.code) {\n      if (!options.raw)\n        return this.fromArray(options.code);\n      assert(Array.isArray(options.code), 'Code must be an array.');\n      this.code = options.code;\n    }\n\n    return this;\n  }\n\n  /**\n   * Insantiate script from options object.\n   * @param {Object} options\n   * @returns {Script}\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Instantiate a value-only iterator.\n   * @returns {ScriptIterator}\n   */\n\n  values() {\n    return this.code.values();\n  }\n\n  /**\n   * Instantiate a key and value iterator.\n   * @returns {ScriptIterator}\n   */\n\n  entries() {\n    return this.code.entries();\n  }\n\n  /**\n   * Instantiate a value-only iterator.\n   * @returns {ScriptIterator}\n   */\n\n  [Symbol.iterator]() {\n    return this.code[Symbol.iterator]();\n  }\n\n  /**\n   * Convert the script to an array of\n   * Buffers (pushdatas) and Numbers\n   * (opcodes).\n   * @returns {Array}\n   */\n\n  toArray() {\n    return this.code.slice();\n  }\n\n  /**\n   * Inject properties from an array of\n   * of buffers and numbers.\n   * @private\n   * @param {Array} code\n   * @returns {Script}\n   */\n\n  fromArray(code) {\n    assert(Array.isArray(code));\n\n    this.clear();\n\n    for (const op of code)\n      this.push(op);\n\n    return this.compile();\n  }\n\n  /**\n   * Instantiate script from an array\n   * of buffers and numbers.\n   * @param {Array} code\n   * @returns {Script}\n   */\n\n  static fromArray(code) {\n    return new this().fromArray(code);\n  }\n\n  /**\n   * Convert script to stack items.\n   * @returns {Buffer[]}\n   */\n\n  toItems() {\n    const items = [];\n\n    for (const op of this.code) {\n      const data = op.toPush();\n\n      if (!data)\n        throw new Error('Non-push opcode in script.');\n\n      items.push(data);\n    }\n\n    return items;\n  }\n\n  /**\n   * Inject data from stack items.\n   * @private\n   * @param {Buffer[]} items\n   * @returns {Script}\n   */\n\n  fromItems(items) {\n    assert(Array.isArray(items));\n\n    this.clear();\n\n    for (const item of items)\n      this.pushData(item);\n\n    return this.compile();\n  }\n\n  /**\n   * Instantiate script from stack items.\n   * @param {Buffer[]} items\n   * @returns {Script}\n   */\n\n  static fromItems(items) {\n    return new this().fromItems(items);\n  }\n\n  /**\n   * Convert script to stack.\n   * @returns {Stack}\n   */\n\n  toStack() {\n    return new Stack(this.toItems());\n  }\n\n  /**\n   * Inject data from stack.\n   * @private\n   * @param {Stack} stack\n   * @returns {Script}\n   */\n\n  fromStack(stack) {\n    return this.fromItems(stack.items);\n  }\n\n  /**\n   * Instantiate script from stack.\n   * @param {Stack} stack\n   * @returns {Script}\n   */\n\n  static fromStack(stack) {\n    return new this().fromStack(stack);\n  }\n\n  /**\n   * Clone the script.\n   * @returns {Script} Cloned script.\n   */\n\n  clone() {\n    return new this.constructor().inject(this);\n  }\n\n  /**\n   * Inject properties from script.\n   * Used for cloning.\n   * @private\n   * @param {Script} script\n   * @returns {Script}\n   */\n\n  inject(script) {\n    this.raw = script.raw;\n    this.code = script.code.slice();\n    return this;\n  }\n\n  /**\n   * Test equality against script.\n   * @param {Script} script\n   * @returns {Boolean}\n   */\n\n  equals(script) {\n    assert(Script.isScript(script));\n    return this.raw.equals(script.raw);\n  }\n\n  /**\n   * Compare against another script.\n   * @param {Script} script\n   * @returns {Number}\n   */\n\n  compare(script) {\n    assert(Script.isScript(script));\n    return this.raw.compare(script.raw);\n  }\n\n  /**\n   * Clear the script.\n   * @returns {Script}\n   */\n\n  clear() {\n    this.raw = EMPTY_BUFFER;\n    this.code.length = 0;\n    return this;\n  }\n\n  /**\n   * Inspect the script.\n   * @returns {String} Human-readable script code.\n   */\n\n  inspect() {\n    return `<Script: ${this.toString()}>`;\n  }\n\n  /**\n   * Convert the script to a bitcoind test string.\n   * @returns {String} Human-readable script code.\n   */\n\n  toString() {\n    const out = [];\n\n    for (const op of this.code)\n      out.push(op.toFormat());\n\n    return out.join(' ');\n  }\n\n  /**\n   * Format the script as bitcoind asm.\n   * @param {Boolean?} decode - Attempt to decode hash types.\n   * @returns {String} Human-readable script.\n   */\n\n  toASM(decode) {\n    if (this.isNulldata())\n      decode = false;\n\n    const out = [];\n\n    for (const op of this.code)\n      out.push(op.toASM(decode));\n\n    return out.join(' ');\n  }\n\n  /**\n   * Re-encode the script internally. Useful if you\n   * changed something manually in the `code` array.\n   * @returns {Script}\n   */\n\n  compile() {\n    if (this.code.length === 0)\n      return this.clear();\n\n    let size = 0;\n\n    for (const op of this.code)\n      size += op.getSize();\n\n    const bw = bio.write(size);\n\n    for (const op of this.code)\n      op.toWriter(bw);\n\n    this.raw = bw.render();\n\n    return this;\n  }\n\n  /**\n   * Write the script to a buffer writer.\n   * @param {BufferWriter} bw\n   */\n\n  toWriter(bw) {\n    bw.writeVarBytes(this.raw);\n    return bw;\n  }\n\n  /**\n   * Encode the script to a Buffer. See {@link Script#encode}.\n   * @param {String} enc - Encoding, either `'hex'` or `null`.\n   * @returns {Buffer|String} Serialized script.\n   */\n\n  toRaw() {\n    return this.raw;\n  }\n\n  /**\n   * Convert script to a hex string.\n   * @returns {String}\n   */\n\n  toJSON() {\n    return this.toRaw().toString('hex');\n  }\n\n  /**\n   * Inject properties from json object.\n   * @private\n   * @param {String} json\n   */\n\n  fromJSON(json) {\n    assert(typeof json === 'string', 'Code must be a string.');\n    return this.fromRaw(Buffer.from(json, 'hex'));\n  }\n\n  /**\n   * Instantiate script from a hex string.\n   * @params {String} json\n   * @returns {Script}\n   */\n\n  static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n  /**\n   * Get the script's \"subscript\" starting at a separator.\n   * @param {Number} index - The last separator to sign/verify beyond.\n   * @returns {Script} Subscript.\n   */\n\n  getSubscript(index) {\n    if (index === 0)\n      return this.clone();\n\n    const script = new Script();\n\n    for (let i = index; i < this.code.length; i++) {\n      const op = this.code[i];\n\n      if (op.value === -1)\n        break;\n\n      script.code.push(op);\n    }\n\n    return script.compile();\n  }\n\n  /**\n   * Get the script's \"subscript\" starting at a separator.\n   * Remove all OP_CODESEPARATORs if present. This bizarre\n   * behavior is necessary for signing and verification when\n   * code separators are present.\n   * @returns {Script} Subscript.\n   */\n\n  removeSeparators() {\n    let found = false;\n\n    // Optimizing for the common case:\n    // Check for any separators first.\n    for (const op of this.code) {\n      if (op.value === -1)\n        break;\n\n      if (op.value === opcodes.OP_CODESEPARATOR) {\n        found = true;\n        break;\n      }\n    }\n\n    if (!found)\n      return this;\n\n    // Uncommon case: someone actually\n    // has a code separator. Go through\n    // and remove them all.\n    const script = new Script();\n\n    for (const op of this.code) {\n      if (op.value === -1)\n        break;\n\n      if (op.value !== opcodes.OP_CODESEPARATOR)\n        script.code.push(op);\n    }\n\n    return script.compile();\n  }\n\n  /**\n   * Get the value of the checkBits while calculated as little endian.\n   * @param {Buffer} abkam - Stack depth of the dummy element.\n   * @param {Number?} nKeysCount - Stack depth of the top pubkeys.\n   * @returns {Number}\n   */\n\n  bitcalculator(abkam, nKeysCount) {\n    let checkBits = 0;\n\n    const bitfield_size = ((nKeysCount + 7) / 8);\n\n    for (let i = 0; i < bitfield_size; i++) {\n      checkBits |= abkam[i] << (8 * i);\n    }\n\n    return checkBits;\n  }\n\n  /**\n   * Execute and interpret the script.\n   * @param {Stack} stack - Script execution stack.\n   * @param {Number?} flags - Script standard flags.\n   * @param {TX?} tx - Transaction being verified.\n   * @param {Number?} index - Index of input being verified.\n   * @param {Amount?} value - Previous output value.\n   * @param {Number?} sigchecks\n   * @throws {ScriptError} Will be thrown on VERIFY failures.\n   */\n\n  execute(stack, flags, tx, index, value, sigchecks) {\n    if (flags == null)\n      flags = Script.flags.STANDARD_VERIFY_FLAGS;\n\n    if (this.getSize() > consensus.MAX_SCRIPT_SIZE)\n      throw new ScriptError('SCRIPT_SIZE');\n\n    const state = [];\n    const alt = [];\n\n    let lastSep = 0;\n    let opCount = 0;\n    let negate = 0;\n    let nSigsRemaining = 0;\n    let nKeysRemaining = 0;\n    let checkBits;\n    let minimal = false;\n\n    if (flags & Script.flags.VERIFY_MINIMALDATA)\n      minimal = true;\n\n    for (let ip = 0; ip < this.code.length; ip++) {\n      const op = this.code[ip];\n\n      if (op.value === -1)\n        throw new ScriptError('BAD_OPCODE', op, ip);\n\n      if (op.data && op.data.length > consensus.MAX_SCRIPT_PUSH)\n        throw new ScriptError('PUSH_SIZE', op, ip);\n\n      if (op.value > opcodes.OP_16 && ++opCount > consensus.MAX_SCRIPT_OPS)\n        throw new ScriptError('OP_COUNT', op, ip);\n\n      if (op.isDisabled(flags))\n        throw new ScriptError('DISABLED_OPCODE', op, ip);\n\n      if (negate && !op.isBranch()) {\n        if (stack.length + alt.length > consensus.MAX_SCRIPT_STACK)\n          throw new ScriptError('STACK_SIZE', op, ip);\n        continue;\n      }\n\n      if (op.data && 0 <= op.value <= opcodes.OP_PUSHDATA4) {\n        if (minimal && !op.isMinimal())\n          throw new ScriptError('MINIMALDATA', op, ip);\n\n        stack.push(op.data);\n\n        if (stack.length + alt.length > consensus.MAX_SCRIPT_STACK)\n          throw new ScriptError('STACK_SIZE', op, ip);\n\n        continue;\n      }\n\n      switch (op.value) {\n        case opcodes.OP_0: {\n          stack.pushInt(0);\n          break;\n        }\n        case opcodes.OP_1NEGATE: {\n          stack.pushInt(-1);\n          break;\n        }\n        case opcodes.OP_1:\n        case opcodes.OP_2:\n        case opcodes.OP_3:\n        case opcodes.OP_4:\n        case opcodes.OP_5:\n        case opcodes.OP_6:\n        case opcodes.OP_7:\n        case opcodes.OP_8:\n        case opcodes.OP_9:\n        case opcodes.OP_10:\n        case opcodes.OP_11:\n        case opcodes.OP_12:\n        case opcodes.OP_13:\n        case opcodes.OP_14:\n        case opcodes.OP_15:\n        case opcodes.OP_16: {\n          stack.pushInt(op.value - 0x50);\n          break;\n        }\n        case opcodes.OP_NOP: {\n          break;\n        }\n        case opcodes.OP_CHECKLOCKTIMEVERIFY: {\n          // OP_CHECKLOCKTIMEVERIFY = OP_NOP2\n          if (!(flags & Script.flags.VERIFY_CHECKLOCKTIMEVERIFY)) {\n            if (flags & Script.flags.VERIFY_DISCOURAGE_UPGRADABLE_NOPS)\n              throw new ScriptError('DISCOURAGE_UPGRADABLE_NOPS', op, ip);\n            break;\n          }\n\n          if (!tx)\n            throw new ScriptError('UNKNOWN_ERROR', 'No TX passed in.');\n\n          if (stack.length === 0)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const num = stack.getNum(-1, minimal, 5);\n\n          if (num.isNeg())\n            throw new ScriptError('NEGATIVE_LOCKTIME', op, ip);\n\n          const locktime = num.toDouble();\n\n          if (!tx.verifyLocktime(index, locktime))\n            throw new ScriptError('UNSATISFIED_LOCKTIME', op, ip);\n\n          break;\n        }\n        case opcodes.OP_CHECKSEQUENCEVERIFY: {\n          // OP_CHECKSEQUENCEVERIFY = OP_NOP3\n          if (!(flags & Script.flags.VERIFY_CHECKSEQUENCEVERIFY)) {\n            if (flags & Script.flags.VERIFY_DISCOURAGE_UPGRADABLE_NOPS)\n              throw new ScriptError('DISCOURAGE_UPGRADABLE_NOPS', op, ip);\n            break;\n          }\n\n          if (!tx)\n            throw new ScriptError('UNKNOWN_ERROR', 'No TX passed in.');\n\n          if (stack.length === 0)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const num = stack.getNum(-1, minimal, 5);\n\n          if (num.isNeg())\n            throw new ScriptError('NEGATIVE_LOCKTIME', op, ip);\n\n          const locktime = num.toDouble();\n\n          if (!tx.verifySequence(index, locktime))\n            throw new ScriptError('UNSATISFIED_LOCKTIME', op, ip);\n\n          break;\n        }\n        case opcodes.OP_NOP1:\n        case opcodes.OP_NOP4:\n        case opcodes.OP_NOP5:\n        case opcodes.OP_NOP6:\n        case opcodes.OP_NOP7:\n        case opcodes.OP_NOP8:\n        case opcodes.OP_NOP9:\n        case opcodes.OP_NOP10: {\n          if (flags & Script.flags.VERIFY_DISCOURAGE_UPGRADABLE_NOPS)\n            throw new ScriptError('DISCOURAGE_UPGRADABLE_NOPS', op, ip);\n          break;\n        }\n        case opcodes.OP_IF:\n        case opcodes.OP_NOTIF: {\n          let val = false;\n\n          if (!negate) {\n            if (stack.length < 1)\n              throw new ScriptError('UNBALANCED_CONDITIONAL', op, ip);\n\n            if (flags & Script.flags.VERIFY_MINIMALIF) {\n              const item = stack.get(-1);\n\n              if (item.length > 1)\n                throw new ScriptError('MINIMALIF');\n\n              if (item.length === 1 && item[0] !== 1)\n                throw new ScriptError('MINIMALIF');\n            }\n\n            val = stack.getBool(-1);\n\n            if (op.value === opcodes.OP_NOTIF)\n              val = !val;\n\n            stack.pop();\n          }\n\n          state.push(val);\n\n          if (!val)\n            negate += 1;\n\n          break;\n        }\n        case opcodes.OP_ELSE: {\n          if (state.length === 0)\n            throw new ScriptError('UNBALANCED_CONDITIONAL', op, ip);\n\n          state[state.length - 1] = !state[state.length - 1];\n\n          if (!state[state.length - 1])\n            negate += 1;\n          else\n            negate -= 1;\n\n          break;\n        }\n        case opcodes.OP_ENDIF: {\n          if (state.length === 0)\n            throw new ScriptError('UNBALANCED_CONDITIONAL', op, ip);\n\n          if (!state.pop())\n            negate -= 1;\n\n          break;\n        }\n        case opcodes.OP_VERIFY: {\n          if (stack.length === 0)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          if (!stack.getBool(-1))\n            throw new ScriptError('VERIFY', op, ip);\n\n          stack.pop();\n\n          break;\n        }\n        case opcodes.OP_RETURN: {\n          throw new ScriptError('OP_RETURN', op, ip);\n        }\n        case opcodes.OP_TOALTSTACK: {\n          if (stack.length === 0)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          alt.push(stack.pop());\n          break;\n        }\n        case opcodes.OP_FROMALTSTACK: {\n          if (alt.length === 0)\n            throw new ScriptError('INVALID_ALTSTACK_OPERATION', op, ip);\n\n          stack.push(alt.pop());\n          break;\n        }\n        case opcodes.OP_2DROP: {\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.pop();\n          stack.pop();\n          break;\n        }\n        case opcodes.OP_2DUP: {\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const v1 = stack.get(-2);\n          const v2 = stack.get(-1);\n\n          stack.push(v1);\n          stack.push(v2);\n          break;\n        }\n        case opcodes.OP_3DUP: {\n          if (stack.length < 3)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const v1 = stack.get(-3);\n          const v2 = stack.get(-2);\n          const v3 = stack.get(-1);\n\n          stack.push(v1);\n          stack.push(v2);\n          stack.push(v3);\n          break;\n        }\n        case opcodes.OP_2OVER: {\n          if (stack.length < 4)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const v1 = stack.get(-4);\n          const v2 = stack.get(-3);\n\n          stack.push(v1);\n          stack.push(v2);\n          break;\n        }\n        case opcodes.OP_2ROT: {\n          if (stack.length < 6)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const v1 = stack.get(-6);\n          const v2 = stack.get(-5);\n\n          stack.erase(-6, -4);\n          stack.push(v1);\n          stack.push(v2);\n          break;\n        }\n        case opcodes.OP_2SWAP: {\n          if (stack.length < 4)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.swap(-4, -2);\n          stack.swap(-3, -1);\n          break;\n        }\n        case opcodes.OP_IFDUP: {\n          if (stack.length === 0)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          if (stack.getBool(-1)) {\n            const val = stack.get(-1);\n            stack.push(val);\n          }\n\n          break;\n        }\n        case opcodes.OP_DEPTH: {\n          stack.pushInt(stack.length);\n          break;\n        }\n        case opcodes.OP_DROP: {\n          if (stack.length === 0)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.pop();\n          break;\n        }\n        case opcodes.OP_DUP: {\n          if (stack.length === 0)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.push(stack.get(-1));\n          break;\n        }\n        case opcodes.OP_NIP: {\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.remove(-2);\n          break;\n        }\n        case opcodes.OP_OVER: {\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.push(stack.get(-2));\n          break;\n        }\n        case opcodes.OP_PICK:\n        case opcodes.OP_ROLL: {\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const num = stack.getInt(-1, minimal, 4);\n          stack.pop();\n\n          if (num < 0 || num >= stack.length)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const val = stack.get(-num - 1);\n\n          if (op.value === opcodes.OP_ROLL)\n            stack.remove(-num - 1);\n\n          stack.push(val);\n          break;\n        }\n        case opcodes.OP_ROT: {\n          if (stack.length < 3)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.swap(-3, -2);\n          stack.swap(-2, -1);\n          break;\n        }\n        case opcodes.OP_SWAP: {\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.swap(-2, -1);\n          break;\n        }\n        case opcodes.OP_TUCK: {\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.insert(-2, stack.get(-1));\n          break;\n        }\n        case opcodes.OP_SIZE: {\n          if (stack.length < 1)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.pushInt(stack.get(-1).length);\n          break;\n        }\n        case opcodes.OP_EQUAL:\n        case opcodes.OP_EQUALVERIFY: {\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const v1 = stack.get(-2);\n          const v2 = stack.get(-1);\n\n          const res = v1.equals(v2);\n\n          stack.pop();\n          stack.pop();\n\n          stack.pushBool(res);\n\n          if (op.value === opcodes.OP_EQUALVERIFY) {\n            if (!res)\n              throw new ScriptError('EQUALVERIFY', op, ip);\n            stack.pop();\n          }\n\n          break;\n        }\n        case opcodes.OP_1ADD:\n        case opcodes.OP_1SUB:\n        case opcodes.OP_NEGATE:\n        case opcodes.OP_ABS:\n        case opcodes.OP_NOT:\n        case opcodes.OP_0NOTEQUAL: {\n          if (stack.length < 1)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          let num = stack.getNum(-1, minimal, 4);\n          let cmp;\n\n          switch (op.value) {\n            case opcodes.OP_1ADD:\n              num.iaddn(1);\n              break;\n            case opcodes.OP_1SUB:\n              num.isubn(1);\n              break;\n            case opcodes.OP_NEGATE:\n              num.ineg();\n              break;\n            case opcodes.OP_ABS:\n              num.iabs();\n              break;\n            case opcodes.OP_NOT:\n              cmp = num.isZero();\n              num = ScriptNum.fromBool(cmp);\n              break;\n            case opcodes.OP_0NOTEQUAL:\n              cmp = !num.isZero();\n              num = ScriptNum.fromBool(cmp);\n              break;\n            default:\n              assert(false, 'Fatal script error.');\n              break;\n          }\n\n          stack.pop();\n          stack.pushNum(num);\n\n          break;\n        }\n        case opcodes.OP_ADD:\n        case opcodes.OP_SUB:\n        case opcodes.OP_DIV:\n        case opcodes.OP_MOD:\n        case opcodes.OP_BOOLAND:\n        case opcodes.OP_BOOLOR:\n        case opcodes.OP_NUMEQUAL:\n        case opcodes.OP_NUMEQUALVERIFY:\n        case opcodes.OP_NUMNOTEQUAL:\n        case opcodes.OP_LESSTHAN:\n        case opcodes.OP_GREATERTHAN:\n        case opcodes.OP_LESSTHANOREQUAL:\n        case opcodes.OP_GREATERTHANOREQUAL:\n        case opcodes.OP_MIN:\n        case opcodes.OP_MAX: {\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const n1 = stack.getNum(-2, minimal, 4);\n          const n2 = stack.getNum(-1, minimal, 4);\n          let num, cmp;\n\n          switch (op.value) {\n            case opcodes.OP_ADD:\n              num = n1.iadd(n2);\n              break;\n            case opcodes.OP_SUB:\n              num = n1.isub(n2);\n              break;\n            case opcodes.OP_DIV:\n              if (n2.isZero())\n                throw new ScriptError('DIV_BY_ZERO', op, ip);\n              num = n1.div(n2);\n              break;\n            case opcodes.OP_MOD:\n              if (n2.isZero())\n                throw new ScriptError('MOD_BY_ZERO', op, ip);\n              num = n1.mod(n2);\n              break;\n            case opcodes.OP_BOOLAND:\n              cmp = n1.toBool() && n2.toBool();\n              num = ScriptNum.fromBool(cmp);\n              break;\n            case opcodes.OP_BOOLOR:\n              cmp = n1.toBool() || n2.toBool();\n              num = ScriptNum.fromBool(cmp);\n              break;\n            case opcodes.OP_NUMEQUAL:\n              cmp = n1.eq(n2);\n              num = ScriptNum.fromBool(cmp);\n              break;\n            case opcodes.OP_NUMEQUALVERIFY:\n              cmp = n1.eq(n2);\n              num = ScriptNum.fromBool(cmp);\n              break;\n            case opcodes.OP_NUMNOTEQUAL:\n              cmp = !n1.eq(n2);\n              num = ScriptNum.fromBool(cmp);\n              break;\n            case opcodes.OP_LESSTHAN:\n              cmp = n1.lt(n2);\n              num = ScriptNum.fromBool(cmp);\n              break;\n            case opcodes.OP_GREATERTHAN:\n              cmp = n1.gt(n2);\n              num = ScriptNum.fromBool(cmp);\n              break;\n            case opcodes.OP_LESSTHANOREQUAL:\n              cmp = n1.lte(n2);\n              num = ScriptNum.fromBool(cmp);\n              break;\n            case opcodes.OP_GREATERTHANOREQUAL:\n              cmp = n1.gte(n2);\n              num = ScriptNum.fromBool(cmp);\n              break;\n            case opcodes.OP_MIN:\n              num = ScriptNum.min(n1, n2);\n              break;\n            case opcodes.OP_MAX:\n              num = ScriptNum.max(n1, n2);\n              break;\n            default:\n              assert(false, 'Fatal script error.');\n              break;\n          }\n\n          stack.pop();\n          stack.pop();\n          stack.pushNum(num);\n\n          if (op.value === opcodes.OP_NUMEQUALVERIFY) {\n            if (!stack.getBool(-1))\n              throw new ScriptError('NUMEQUALVERIFY', op, ip);\n            stack.pop();\n          }\n\n          break;\n        }\n        case opcodes.OP_WITHIN: {\n          if (stack.length < 3)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const n1 = stack.getNum(-3, minimal, 4);\n          const n2 = stack.getNum(-2, minimal, 4);\n          const n3 = stack.getNum(-1, minimal, 4);\n\n          const val = n2.lte(n1) && n1.lt(n3);\n\n          stack.pop();\n          stack.pop();\n          stack.pop();\n\n          stack.pushBool(val);\n          break;\n        }\n        case opcodes.OP_RIPEMD160: {\n          if (stack.length === 0)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.push(ripemd160.digest(stack.pop()));\n          break;\n        }\n        case opcodes.OP_SHA1: {\n          if (stack.length === 0)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.push(sha1.digest(stack.pop()));\n          break;\n        }\n        case opcodes.OP_SHA256: {\n          if (stack.length === 0)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.push(sha256.digest(stack.pop()));\n          break;\n        }\n        case opcodes.OP_HASH160: {\n          if (stack.length === 0)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.push(hash160.digest(stack.pop()));\n          break;\n        }\n        case opcodes.OP_HASH256: {\n          if (stack.length === 0)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.push(hash256.digest(stack.pop()));\n          break;\n        }\n        case opcodes.OP_CODESEPARATOR: {\n          lastSep = ip + 1;\n          break;\n        }\n        case opcodes.OP_CHECKSIG:\n        case opcodes.OP_CHECKSIGVERIFY: {\n          if (!tx)\n            throw new ScriptError('UNKNOWN_ERROR', 'No TX passed in.');\n\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const sig = stack.get(-2);\n          const key = stack.get(-1);\n\n          const subscript = this.getSubscript(lastSep);\n\n          if (!(flags & Script.flags.VERIFY_SIGHASH_FORKID)\n            || !(sig[sig.length - 1] & Script.hashType.SIGHASH_FORKID))\n            subscript.findAndDelete(sig);\n\n          checkTransactionSignature(sig, flags);\n          validateKey(key, flags);\n\n          let res = false;\n\n          if (sig.length > 0) {\n            const type = sig[sig.length - 1];\n            const hash = tx.signatureHash(\n              index,\n              subscript,\n              value,\n              type,\n              flags\n            );\n            res = verifySignature(hash, sig.slice(0, -1), key, flags);\n            metrics.sigchecks += 1;\n            sigchecks = metrics.sigchecks;\n          }\n\n          if (!res && (flags & Script.flags.VERIFY_NULLFAIL)) {\n            if (sig.length !== 0)\n              throw new ScriptError('NULLFAIL', op, ip);\n          }\n\n          stack.pop();\n          stack.pop();\n\n          stack.pushBool(res);\n\n          if (op.value === opcodes.OP_CHECKSIGVERIFY) {\n            if (!res)\n              throw new ScriptError('CHECKSIGVERIFY', op, ip);\n            stack.pop();\n          }\n\n          break;\n        }\n        case opcodes.OP_CHECKDATASIG:\n        case opcodes.OP_CHECKDATASIGVERIFY: {\n          // (sig message pubkey -- bool)\n          if (stack.length < 3)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const sig = stack.get(-3);\n          const msg = stack.get(-2);\n          const key = stack.get(-1);\n\n          validateDataSignature(sig, flags);\n          validateKey(key, flags);\n\n          let res = false;\n\n          if (sig.length > 0) {\n            const hash = sha256.digest(msg);\n            res = verifySignature(hash, sig, key, flags);\n            metrics.sigchecks += 1;\n\t    sigchecks = metrics.sigchecks;\n          }\n\n          if (!res && (flags & Script.flags.VERIFY_NULLFAIL)) {\n            if (sig.length !== 0)\n              throw new ScriptError('NULLFAIL', op, ip);\n          }\n\n          stack.pop();\n          stack.pop();\n          stack.pop();\n\n          stack.pushBool(res);\n\n          if (op.value === opcodes.OP_CHECKDATASIGVERIFY) {\n            if (!res)\n              throw new ScriptError('CHECKDATASIGVERIFY', op, ip);\n            stack.pop();\n          }\n\n          break;\n        }\n        case opcodes.OP_CHECKMULTISIG:\n        case opcodes.OP_CHECKMULTISIGVERIFY: {\n          if (!tx)\n            throw new ScriptError('UNKNOWN_ERROR', 'No TX passed in.');\n\n          let keyCount = 1;\n          let sigCount = 0;\n          let keyTop, sigTop;\n\n          if (stack.length < keyCount)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          let nKeysCount = stack.getInt(-keyCount, minimal, 4);\n          let okey = nKeysCount + 2;\n          let ikey, isig;\n\n          if (nKeysCount < 0 || nKeysCount > consensus.MAX_MULTISIG_PUBKEYS)\n            throw new ScriptError('PUBKEY_COUNT', op, ip);\n\n          opCount += nKeysCount;\n\n          if (opCount > consensus.MAX_SCRIPT_OPS)\n            throw new ScriptError('OP_COUNT', op, ip);\n\n          keyCount += 1;\n          keyTop = keyCount;\n\n          // stack depth of nSigsCount\n          sigCount = keyTop + nKeysCount;\n\n          ikey = keyCount;\n          keyCount += nKeysCount;\n\n          if (stack.length < sigCount)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          let nSigsCount = stack.getInt(-sigCount, minimal, 4);\n\n          if (nSigsCount < 0 || nSigsCount > nKeysCount)\n            throw new ScriptError('SIG_COUNT', op, ip);\n\n          // stack depth of the top signature\n          sigTop = sigCount + 1;\n\n          // stack depth of the dummy element\n          const dummy = sigTop + nSigsCount;\n\n          if (stack.length < dummy)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          keyCount += 1;\n          isig = keyCount;\n          keyCount += nSigsCount;\n\n          const subscript = this.getSubscript(lastSep);\n          let res = true;\n\n          if ((flags & Script.flags.VERIFY_SCHNORR_MULTISIG)\n             && stack.get(-dummy).length !== 0) {\n              assert(consensus.MAX_MULTISIG_PUBKEYS < 32)\n\n            if (nKeysCount > 32)\n              throw new ScriptError('INVALID_BITFIELD_SIZE', op, ip);\n\n            const bitfield_size = Math.floor((nKeysCount + 7) / 8);\n            const abkam = stack.get(-dummy);\n\n            if (abkam.length !== bitfield_size)\n              throw new ScriptError('BITFIELD_SIZE', op, ip);\n\n            checkBits = this.bitcalculator(abkam, nKeysCount);\n\n            const mask = (1 << nKeysCount) - 1;\n            const numBits = countBits(checkBits);\n\n            if ((checkBits & mask) !== checkBits)\n              throw new ScriptError('BIT_RANGE', op, ip);\n\n            if (numBits !== nSigsCount)\n              throw new ScriptError('INVALID_BIT_COUNT', op, ip);\n\n            const bKey = keyTop + nKeysCount - 1;\n            const bSig = sigTop + nSigsCount - 1;\n\n            let ik3y = 0;\n\n            for (let is1g = 0; is1g < nSigsCount; is1g++, ik3y++) {\n              if ((checkBits >> ik3y) === 0) {\n                throw new ScriptError('INVALID_BIT_RANGE', op, ip);\n              }\n\n              while (((checkBits >> ik3y) & 0x01) === 0) {\n                ik3y++;\n              }\n\n              if (ik3y >= nKeysCount)\n                throw new ScriptError('PUBKEY_COUNT', op, ip);\n\n              const sig = stack.get(-bSig + is1g);\n              const key = stack.get(-bKey + ik3y);\n\n              // Handle checkbits left over\n              if (!sig)\n                continue;\n\n              checkTransactionSchnorrSig(sig, flags);\n              validateKey(key, flags);\n\n              if (sig.length > 0) {\n                const type = sig[sig.length - 1];\n                const hash = tx.signatureHash(\n                  index,\n                  subscript,\n                  value,\n                  type,\n                  flags\n                );\n\n                res = verifySignature(hash, sig.slice(0, -1), key, flags);\n                metrics.sigchecks += 1;\n\t\t            sigchecks = metrics.sigchecks;\n              }\n\n              while (keyCount > 1) {\n                if (!res && (flags & Script.flags.VERIFY_NULLFAIL)) {\n                  if (okey === 0 && stack.get(-1).length !== 0)\n                    throw new ScriptError('NULLFAIL', op, ip);\n                }\n    \n                if (okey > 0)\n                  okey -= 1;\n    \n                stack.pop();\n    \n                keyCount -= 1;\n              }\n\n            }\n\n\n            if ((checkBits >> ik3y) !== 0)\n              throw new ScriptError('INVALID_BIT_COUNT', op, ip);\n\n            stack.pop();\n            stack.pushBool(res);\n\n          } else {\n            // Legacy Multisig (ECDSA / NULL)\n            // A bug causes CHECKMULTISIG to consume one extra\n            // argument whose contents were not checked in any way.\n\n          for (let j = 0; j < nSigsCount; j++) {\n            const sig = stack.get(-sigTop - j);\n            if (!(flags & Script.flags.VERIFY_SIGHASH_FORKID)\n              || !(sig[sig.length - 1] & Script.hashType.SIGHASH_FORKID))\n              subscript.findAndDelete(sig, flags);\n          }\n\n          nSigsRemaining = nSigsCount;\n          nKeysRemaining = nKeysCount;\n\n          while (res && nSigsCount > 0) {\n            const sig = stack.get(-isig);\n            const key = stack.get(-ikey);\n\n            checkTransactionECDSASignature(sig, flags);\n            validateKey(key, flags);\n\n            if (sig.length > 0) {\n              const type = sig[sig.length - 1];\n              const hash = tx.signatureHash(\n                index,\n                subscript,\n                value,\n                type,\n                flags\n              );\n\n              if (checksig(hash, sig, key)) {\n                isig += 1;\n                nSigsCount -= 1;\n              }\n            }\n\n            ikey += 1;\n            nKeysCount -= 1;\n\n            if (nSigsCount > nKeysCount)\n              res = false;\n          }\n\n          while (keyCount > 1) {\n            if (!res && (flags & Script.flags.VERIFY_NULLFAIL)) {\n              if (okey === 0 && stack.get(-1).length !== 0)\n                throw new ScriptError('NULLFAIL', op, ip);\n            }\n\n            if (okey > 0)\n              okey -= 1;\n\n            stack.pop();\n\n            keyCount -= 1;\n          }\n\n          if (stack.length < 1)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          stack.pop();\n\n          stack.pushBool(res);\n\n          if (op.value === opcodes.OP_CHECKMULTISIGVERIFY) {\n            if (!res)\n              throw new ScriptError('CHECKMULTISIGVERIFY', op, ip);\n            stack.pop();\n           }\n          }\n\n          break;\n        }\n\n        //\n        // Byte string operations\n        //\n        case opcodes.OP_CAT: {\n          // (x1 x2 -- out)\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const v1 = stack.get(-2);\n          const v2 = stack.get(-1);\n          if (v1.length + v2.length > consensus.MAX_SCRIPT_PUSH) {\n            throw new ScriptError('PUSH_SIZE', op, ip);\n          }\n          stack.pop();\n          stack.pop();\n\n          stack.push(Buffer.concat([v1, v2]));\n\n          break;\n        }\n\n        case opcodes.OP_SPLIT: {\n          // (in position -- x1 x2)\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const data = stack.get(-2);\n\n          // Make sure the split point is appropriate.\n          const pos = stack.getInt(-1, minimal, 4);\n          if (pos < 0 || pos > data.length)\n            throw new ScriptError('INVALID_SPLIT_RANGE', op, ip);\n\n          // Prepare the results in their own buffer as `data`\n          // will be invalidated.\n          const n1 = data.slice(0, pos);\n          const n2 = data.slice(pos);\n\n          // Replace existing stack values by the new values.\n          stack.set(-2, n1);\n          stack.set(-1, n2);\n          break;\n        }\n        case opcodes.OP_REVERSEBYTES: {\n         if (stack.length < 1)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const data = stack.get(-1);\n\n          data.reverse();\n\n          break;\n        }\n\n        //\n        // Bitwise logic\n        //\n        case opcodes.OP_AND:\n        case opcodes.OP_OR:\n        case opcodes.OP_XOR: {\n          // (x1 x2 - out)\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const v1 = stack.get(-2);\n          const v2 = stack.get(-1);\n\n          // Inputs must be the same size\n          if (v1.length !== v2.length)\n            throw new ScriptError('INVALID_OPERAND_SIZE', op, ip);\n\n          const raw = Buffer.alloc(v1.length);\n\n          switch (op.value) {\n            case opcodes.OP_AND:\n              for (let i = 0; i < v1.length; i++) {\n                raw[i] = v1[i] & v2[i];\n              }\n              break;\n            case opcodes.OP_OR:\n              for (let i = 0; i < v1.length; i++) {\n                raw[i] = v1[i] | v2[i];\n              }\n              break;\n            case opcodes.OP_XOR:\n              for (let i = 0; i < v1.length; i++) {\n                raw[i] = v1[i] ^ v2[i];\n              }\n              break;\n            default:\n              break;\n          }\n\n          // And pop v1 and v2.\n          stack.pop();\n          stack.pop();\n\n          stack.push(raw);\n\n          break;\n        }\n\n        //\n        // Conversion operations\n        //\n        case opcodes.OP_NUM2BIN: {\n          // (in size -- out)\n          if (stack.length < 2)\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n\n          const size = stack.getInt(-1, minimal, 4);\n          if (size < 0 || size > consensus.MAX_SCRIPT_PUSH)\n            throw new ScriptError('PUSH_SIZE', op, ip);\n\n          stack.pop();\n\n          const n = stack.get(-1);\n          const v = ScriptNum.toMinimal(Buffer.from(n));\n\n          // Try to see if we can fit that number in the number of\n          // byte requested.\n          if (v.length > size)\n            // We definitively cannot.\n            throw new ScriptError('IMPOSSIBLE_ENCODING', op, ip);\n\n          // We already have an element of the right size, we don't need to do\n          // anything.\n          if (v.length === size) {\n            stack.pop();\n            stack.push(v);\n            break;\n          }\n\n          const raw = Buffer.alloc(size);\n          v.copy(raw);\n\n          let signbit = 0x00;\n          if (v.length > 0) {\n            signbit = v[v.length - 1] & 0x80;\n            raw[v.length - 1] &= 0x7f;\n          }\n\n          raw[size-1] = signbit;\n\n          stack.pop();\n          stack.push(raw);\n\n          break;\n        }\n\n        case opcodes.OP_BIN2NUM: {\n          // (in -- out)\n          if (stack.length < 1) {\n            throw new ScriptError('INVALID_STACK_OPERATION', op, ip);\n          }\n\n          const n = stack.get(-1);\n          const v = ScriptNum.toMinimal(Buffer.from(n));\n\n          stack.pop();\n          stack.push(v);\n\n          // The resulting number must be a valid number.\n          if (!ScriptNum.isMinimal(v) || v.length > 4)\n            throw new ScriptError('INVALID_NUMBER_RANGE', op, ip);\n\n          break;\n        }\n\n        default: {\n          throw new ScriptError('BAD_OPCODE', op, ip);\n        }\n      }\n    }\n\n    if (stack.length + alt.length > consensus.MAX_SCRIPT_STACK)\n      throw new ScriptError('STACK_SIZE');\n\n    if (state.length !== 0)\n      throw new ScriptError('UNBALANCED_CONDITIONAL');\n  }\n\n  /**\n   * Remove all matched data elements from\n   * a script's code (used to remove signatures\n   * before verification). Note that this\n   * compares and removes data on the _byte level_.\n   * It also reserializes the data to a single\n   * script with minimaldata encoding beforehand.\n   * A signature will _not_ be removed if it is\n   * not minimaldata.\n   * @see https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006878.html\n   * @see https://test.webbtc.com/tx/19aa42fee0fa57c45d3b16488198b27caaacc4ff5794510d0c17f173f05587ff\n   * @param {Buffer} data - Data element to match against.\n   * @returns {Number} Total.\n   */\n\n  findAndDelete(data) {\n    const target = Opcode.fromPush(data);\n\n    if (this.raw.length < target.getSize())\n      return 0;\n\n    let found = false;\n\n    for (const op of this.code) {\n      if (op.value === -1)\n        break;\n\n      if (op.equals(target)) {\n        found = true;\n        break;\n      }\n    }\n\n    if (!found)\n      return 0;\n\n    const code = [];\n\n    let total = 0;\n\n    for (const op of this.code) {\n      if (op.value === -1)\n        break;\n\n      if (op.equals(target)) {\n        total += 1;\n        continue;\n      }\n\n      code.push(op);\n    }\n\n    this.code = code;\n    this.compile();\n\n    return total;\n  }\n\n  /**\n   * Find a data element in a script.\n   * @param {Buffer} data - Data element to match against.\n   * @returns {Number} Index (`-1` if not present).\n   */\n\n  indexOf(data) {\n    for (let i = 0; i < this.code.length; i++) {\n      const op = this.code[i];\n\n      if (op.value === -1)\n        break;\n\n      if (!op.data)\n        continue;\n\n      if (op.data.equals(data))\n        return i;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Test a script to see if it is likely\n   * to be script code (no weird opcodes).\n   * @param {Number?} flags - Script standard flags.\n   * @returns {Boolean}\n   */\n\n  isCode(flags) {\n    if (flags == null)\n      flags = Script.flags.STANDARD_VERIFY_FLAGS;\n\n    for (const op of this.code) {\n      if (op.value === -1)\n        return false;\n\n      if (op.isDisabled(flags))\n        return false;\n\n      switch (op.value) {\n        case opcodes.OP_RESERVED:\n        case opcodes.OP_NOP:\n        case opcodes.OP_VER:\n        case opcodes.OP_VERIF:\n        case opcodes.OP_VERNOTIF:\n        case opcodes.OP_RESERVED1:\n        case opcodes.OP_RESERVED2:\n        case opcodes.OP_NOP1:\n          return false;\n      }\n\n      if (op.value > opcodes.OP_CHECKSEQUENCEVERIFY)\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Inject properties from a pay-to-pubkey script.\n   * @private\n   * @param {Buffer} key\n   */\n\n  fromPubkey(key) {\n    assert(Buffer.isBuffer(key) && (key.length === 33 || key.length === 65));\n\n    this.raw = Buffer.allocUnsafe(1 + key.length + 1);\n    this.raw[0] = key.length;\n    key.copy(this.raw, 1);\n    this.raw[1 + key.length] = opcodes.OP_CHECKSIG;\n\n    key = this.raw.slice(1, 1 + key.length);\n\n    this.code.length = 0;\n    this.code.push(Opcode.fromPush(key));\n    this.code.push(Opcode.fromOp(opcodes.OP_CHECKSIG));\n\n    return this;\n  }\n\n  /**\n   * Create a pay-to-pubkey script.\n   * @param {Buffer} key\n   * @returns {Script}\n   */\n\n  static fromPubkey(key) {\n    return new this().fromPubkey(key);\n  }\n\n  /**\n   * Inject properties from a pay-to-pubkeyhash script.\n   * @private\n   * @param {Buffer} hash\n   */\n\n  fromPubkeyhash(hash) {\n    assert(Buffer.isBuffer(hash) && hash.length === 20);\n\n    this.raw = Buffer.allocUnsafe(25);\n    this.raw[0] = opcodes.OP_DUP;\n    this.raw[1] = opcodes.OP_HASH160;\n    this.raw[2] = 0x14;\n    hash.copy(this.raw, 3);\n    this.raw[23] = opcodes.OP_EQUALVERIFY;\n    this.raw[24] = opcodes.OP_CHECKSIG;\n\n    hash = this.raw.slice(3, 23);\n\n    this.code.length = 0;\n    this.code.push(Opcode.fromOp(opcodes.OP_DUP));\n    this.code.push(Opcode.fromOp(opcodes.OP_HASH160));\n    this.code.push(Opcode.fromPush(hash));\n    this.code.push(Opcode.fromOp(opcodes.OP_EQUALVERIFY));\n    this.code.push(Opcode.fromOp(opcodes.OP_CHECKSIG));\n\n    return this;\n  }\n\n  /**\n   * Create a pay-to-pubkeyhash script.\n   * @param {Buffer} hash\n   * @returns {Script}\n   */\n\n  static fromPubkeyhash(hash) {\n    return new this().fromPubkeyhash(hash);\n  }\n\n  /**\n   * Inject properties from pay-to-multisig script.\n   * @private\n   * @param {Number} m\n   * @param {Number} n\n   * @param {Buffer[]} keys\n   */\n\n  fromMultisig(m, n, keys) {\n    assert((m & 0xff) === m && (n & 0xff) === n);\n    assert(Array.isArray(keys));\n    assert(keys.length === n, '`n` keys are required for multisig.');\n    assert(m >= 1 && m <= n);\n    assert(n >= 1 && n <= 15);\n\n    this.clear();\n\n    this.pushSmall(m);\n\n    for (const key of sortKeys(keys))\n      this.pushData(key);\n\n    this.pushSmall(n);\n    this.pushOp(opcodes.OP_CHECKMULTISIG);\n\n    return this.compile();\n  }\n\n  /**\n   * Create a pay-to-multisig script.\n   * @param {Number} m\n   * @param {Number} n\n   * @param {Buffer[]} keys\n   * @returns {Script}\n   */\n\n  static fromMultisig(m, n, keys) {\n    return new this().fromMultisig(m, n, keys);\n  }\n\n  /**\n   * Inject properties from a pay-to-scripthash script.\n   * @private\n   * @param {Buffer} hash\n   */\n\n  fromScripthash(hash) {\n    assert(Buffer.isBuffer(hash) && hash.length === 20);\n\n    this.raw = Buffer.allocUnsafe(23);\n    this.raw[0] = opcodes.OP_HASH160;\n    this.raw[1] = 0x14;\n    hash.copy(this.raw, 2);\n    this.raw[22] = opcodes.OP_EQUAL;\n\n    hash = this.raw.slice(2, 22);\n\n    this.code.length = 0;\n    this.code.push(Opcode.fromOp(opcodes.OP_HASH160));\n    this.code.push(Opcode.fromPush(hash));\n    this.code.push(Opcode.fromOp(opcodes.OP_EQUAL));\n\n    return this;\n  }\n\n  /**\n   * Create a pay-to-scripthash script.\n   * @param {Buffer} hash\n   * @returns {Script}\n   */\n\n  static fromScripthash(hash) {\n    return new this().fromScripthash(hash);\n  }\n\n  /**\n   * Inject properties from a nulldata/opreturn script.\n   * @private\n   * @param {Buffer} flags\n   */\n\n  fromNulldata(flags) {\n    assert(Buffer.isBuffer(flags));\n    assert(flags.length <= policy.MAX_OP_RETURN, 'Nulldata too large.');\n\n    this.clear();\n    this.pushOp(opcodes.OP_RETURN);\n    this.pushData(flags);\n\n    return this.compile();\n  }\n\n  /**\n   * Create a nulldata/opreturn script.\n   * @param {Buffer} flags\n   * @returns {Script}\n   */\n\n  static fromNulldata(flags) {\n    return new this().fromNulldata(flags);\n  }\n\n  /**\n   * Inject properties from an address.\n   * @private\n   * @param {Address|AddressString} address\n   */\n\n  fromAddress(address) {\n    if (typeof address === 'string')\n      address = Address.fromString(address);\n\n    assert(address instanceof Address, 'Not an address.');\n\n    if (address.isPubkeyhash())\n      return this.fromPubkeyhash(address.hash);\n\n    if (address.isScripthash())\n      return this.fromScripthash(address.hash);\n\n    throw new Error('Unknown address type.');\n  }\n\n  /**\n   * Create an output script from an address.\n   * @param {Address|AddressString} address\n   * @returns {Script}\n   */\n\n  static fromAddress(address) {\n    return new this().fromAddress(address);\n  }\n\n  /**\n   * Grab and deserialize the redeem script.\n   * @returns {Script|null} Redeem script.\n   */\n\n  getRedeem() {\n    let data = null;\n\n    for (const op of this.code) {\n      if (op.value === -1)\n        return null;\n\n      if (op.value > opcodes.OP_16)\n        return null;\n\n      data = op.data;\n    }\n\n    if (!data)\n      return null;\n\n    return Script.fromRaw(data);\n  }\n\n  /**\n   * Get the standard script type.\n   * @returns {ScriptType}\n   */\n\n  getType() {\n    if (this.isPubkey())\n      return scriptTypes.PUBKEY;\n\n    if (this.isPubkeyhash())\n      return scriptTypes.PUBKEYHASH;\n\n    if (this.isScripthash())\n      return scriptTypes.SCRIPTHASH;\n\n    if (this.isMultisig())\n      return scriptTypes.MULTISIG;\n\n    if (this.isNulldata())\n      return scriptTypes.NULLDATA;\n\n    return scriptTypes.NONSTANDARD;\n  }\n\n  /**\n   * Test whether a script is of an unknown/non-standard type.\n   * @returns {Boolean}\n   */\n\n  isUnknown() {\n    return this.getType() === scriptTypes.NONSTANDARD;\n  }\n\n  /**\n   * Test whether the script is standard by policy standards.\n   * @returns {Boolean}\n   */\n\n  isStandard() {\n    const [m, n] = this.getMultisig();\n\n    if (m !== -1) {\n      if (n < 1 || n > 3)\n        return false;\n\n      if (m < 1 || m > n)\n        return false;\n\n      return true;\n    }\n\n    if (this.isNulldata())\n      return this.raw.length <= policy.MAX_OP_RETURN_BYTES;\n\n    return this.getType() !== scriptTypes.NONSTANDARD;\n  }\n\n  /**\n   * Calculate the size of the script\n   * excluding the varint size bytes.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return this.raw.length;\n  }\n\n  /**\n   * Calculate the size of the script\n   * including the varint size bytes.\n   * @returns {Number}\n   */\n\n  getVarSize() {\n    return encoding.sizeVarBytes(this.raw);\n  }\n\n  /**\n   * \"Guess\" the address of the input script.\n   * This method is not 100% reliable.\n   * @returns {Address|null}\n   */\n\n  getInputAddress() {\n    return Address.fromInputScript(this);\n  }\n\n  /**\n   * Get the address of the script if present. Note that\n   * pubkey and multisig scripts will be treated as though\n   * they are pubkeyhash and scripthashes respectively.\n   * @returns {Address|null}\n   */\n\n  getAddress() {\n    return Address.fromScript(this);\n  }\n\n  /**\n   * Get the hash160 of the raw script.\n   * @param {String?} enc\n   * @returns {Hash}\n   */\n\n  hash160(enc) {\n    let hash = hash160.digest(this.toRaw());\n    if (enc === 'hex')\n      hash = hash.toString('hex');\n    return hash;\n  }\n\n  /**\n   * Get the sha256 of the raw script.\n   * @param {String?} enc\n   * @returns {Hash}\n   */\n\n  sha256(enc) {\n    let hash = sha256.digest(this.toRaw());\n    if (enc === 'hex')\n      hash = hash.toString('hex');\n    return hash;\n  }\n\n  /**\n   * Test whether the output script is pay-to-pubkey.\n   * @param {Boolean} [minimal=false] - Minimaldata only.\n   * @returns {Boolean}\n   */\n\n  isPubkey(minimal) {\n    if (minimal) {\n      return this.raw.length >= 35\n        && (this.raw[0] === 33 || this.raw[0] === 65)\n        && this.raw[0] + 2 === this.raw.length\n        && this.raw[this.raw.length - 1] === opcodes.OP_CHECKSIG;\n    }\n\n    if (this.code.length !== 2)\n      return false;\n\n    const size = this.getLength(0);\n\n    return (size === 33 || size === 65)\n      && this.getOp(1) === opcodes.OP_CHECKSIG;\n  }\n\n  /**\n   * Get P2PK key if present.\n   * @param {Boolean} [minimal=false] - Minimaldata only.\n   * @returns {Buffer|null}\n   */\n\n  getPubkey(minimal) {\n    if (!this.isPubkey(minimal))\n      return null;\n\n    if (minimal)\n      return this.raw.slice(1, 1 + this.raw[0]);\n\n    return this.getData(0);\n  }\n\n  /**\n   * Test whether the output script is pay-to-pubkeyhash.\n   * @param {Boolean} [minimal=false] - Minimaldata only.\n   * @returns {Boolean}\n   */\n\n  isPubkeyhash(minimal) {\n    if (minimal || this.raw.length === 25) {\n      return this.raw.length === 25\n        && this.raw[0] === opcodes.OP_DUP\n        && this.raw[1] === opcodes.OP_HASH160\n        && this.raw[2] === 0x14\n        && this.raw[23] === opcodes.OP_EQUALVERIFY\n        && this.raw[24] === opcodes.OP_CHECKSIG;\n    }\n\n    if (this.code.length !== 5)\n      return false;\n\n    return this.getOp(0) === opcodes.OP_DUP\n      && this.getOp(1) === opcodes.OP_HASH160\n      && this.getLength(2) === 20\n      && this.getOp(3) === opcodes.OP_EQUALVERIFY\n      && this.getOp(4) === opcodes.OP_CHECKSIG;\n  }\n\n  /**\n   * Get P2PKH hash if present.\n   * @param {Boolean} [minimal=false] - Minimaldata only.\n   * @returns {Buffer|null}\n   */\n\n  getPubkeyhash(minimal) {\n    if (!this.isPubkeyhash(minimal))\n      return null;\n\n    if (minimal)\n      return this.raw.slice(3, 23);\n\n    return this.getData(2);\n  }\n\n/**\n   * Test whether the output script is pay-to-multisig.\n   * @param {Boolean} [minimal=true] - Minimaldata only.\n   * @returns {Boolean}\n   */\n\n  isMultisig(minimal) {\n    if (this.code.length < 4 || this.code.length > 19)\n      return false;\n\n    if (this.getOp(-1) !== opcodes.OP_CHECKMULTISIG)\n      return false;\n\n    const m = this.getSmall(0);\n\n    if (m < 1)\n      return false;\n\n    const n = this.getSmall(-2);\n\n\n    if (n < 1 || m > n)\n      return false;\n\n    if (this.code.length !== n + 3)\n      return false;\n\n    for (let i = 1; i < n + 1; i++) {\n      const op = this.code[i];\n      const size = op.toLength();\n\n      if (size !== 33 && size !== 65)\n        return false;\n\n      if (minimal && !op.isMinimal())\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Get multisig m and n values if present.\n   * @param {Boolean} [minimal=false] - Minimaldata only.\n   * @returns {Array} [m, n]\n   */\n\n  getMultisig(minimal) {\n    if (!this.isMultisig(minimal))\n      return [-1, -1];\n\n    return [this.getSmall(0), this.getSmall(-2)];\n  }\n\n  /**\n   * Test whether the output script is pay-to-scripthash. Note that\n   * bitcoin itself requires scripthashes to be in strict minimaldata\n   * encoding. Using `OP_HASH160 OP_PUSHDATA1 [hash] OP_EQUAL` will\n   * _not_ be recognized as a scripthash.\n   * @returns {Boolean}\n   */\n\n  isScripthash() {\n    return this.raw.length === 23\n      && this.raw[0] === opcodes.OP_HASH160\n      && this.raw[1] === 0x14\n      && this.raw[22] === opcodes.OP_EQUAL;\n  }\n\n  /**\n   * Get P2SH hash if present.\n   * @returns {Buffer|null}\n   */\n\n  getScripthash() {\n    if (!this.isScripthash())\n      return null;\n\n    return this.getData(1);\n  }\n\n  /**\n   * Test whether the output script is nulldata/opreturn.\n   * @param {Boolean} [minimal=false] - Minimaldata only.\n   * @returns {Boolean}\n   */\n\n  isNulldata(minimal) {\n    if (this.code.length === 0)\n      return false;\n\n    if (this.getOp(0) !== opcodes.OP_RETURN)\n      return false;\n\n    if (this.code.length === 1)\n      return true;\n\n    if (minimal) {\n      if (this.raw.length > policy.MAX_OP_RETURN_BYTES)\n        return false;\n    }\n\n    for (let i = 1; i < this.code.length; i++) {\n      const op = this.code[i];\n\n      if (op.value === -1)\n        return false;\n\n      if (op.value > opcodes.OP_16)\n        return false;\n\n      if (minimal && !op.isMinimal())\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Get OP_RETURN data if present.\n   * @param {Boolean} [minimal=false] - Minimaldata only.\n   * @returns {Buffer|null}\n   */\n\n  getNulldata(minimal) {\n    if (!this.isNulldata(minimal))\n      return null;\n\n    for (let i = 1; i < this.code.length; i++) {\n      const op = this.code[i];\n      const data = op.toPush();\n      if (data)\n        return data;\n    }\n\n    return EMPTY_BUFFER;\n  }\n\n  /**\n   * Test whether the output script is a witness program.\n   * Note that this will return true even for malformed\n   * witness v0 programs.\n   * @returns {Boolean}\n   */\n\n  isProgram() {\n    if (this.raw.length < 4 || this.raw.length > 42)\n      return false;\n\n    if (this.raw[0] !== opcodes.OP_0\n      && (this.raw[0] < opcodes.OP_1 || this.raw[0] > opcodes.OP_16)) {\n      return false;\n    }\n\n    if (this.raw[1] + 2 !== this.raw.length)\n      return false;\n\n    return true;\n  }\n\n  /**\n   * Test whether the output script is unspendable.\n   * @returns {Boolean}\n   */\n\n  isUnspendable() {\n    if (this.raw.length > consensus.MAX_SCRIPT_SIZE)\n      return true;\n\n    return this.raw.length > 0 && this.raw[0] === opcodes.OP_RETURN;\n  }\n\n  /**\n   * \"Guess\" the type of the input script.\n   * This method is not 100% reliable.\n   * @returns {ScriptType}\n   */\n\n  getInputType() {\n    if (this.isPubkeyInput())\n      return scriptTypes.PUBKEY;\n\n    if (this.isPubkeyhashInput())\n      return scriptTypes.PUBKEYHASH;\n\n    if (this.isScripthashInput())\n      return scriptTypes.SCRIPTHASH;\n\n    if (this.isMultisigInput())\n      return scriptTypes.MULTISIG;\n\n    return scriptTypes.NONSTANDARD;\n  }\n\n  /**\n   * \"Guess\" whether the input script is an unknown/non-standard type.\n   * This method is not 100% reliable.\n   * @returns {Boolean}\n   */\n\n  isUnknownInput() {\n    return this.getInputType() === scriptTypes.NONSTANDARD;\n  }\n\n  /**\n   * \"Guess\" whether the input script is pay-to-pubkey.\n   * This method is not 100% reliable.\n   * @returns {Boolean}\n   */\n\n  isPubkeyInput() {\n    if (this.code.length !== 1)\n      return false;\n\n    const size = this.getLength(0);\n\n    return size >= 9 && size <= 73;\n  }\n\n  /**\n   * Get P2PK signature if present.\n   * @returns {Buffer|null}\n   */\n\n  getPubkeyInput() {\n    if (!this.isPubkeyInput())\n      return null;\n\n    return this.getData(0);\n  }\n\n  /**\n   * \"Guess\" whether the input script is pay-to-pubkeyhash.\n   * This method is not 100% reliable.\n   * @returns {Boolean}\n   */\n\n  isPubkeyhashInput() {\n    if (this.code.length !== 2)\n      return false;\n\n    const sig = this.getLength(0);\n    const key = this.getLength(1);\n\n    return sig >= 9 && sig <= 73\n      && (key === 33 || key === 65);\n  }\n\n  /**\n   * Get P2PKH signature and key if present.\n   * @returns {Array} [sig, key]\n   */\n\n  getPubkeyhashInput() {\n    if (!this.isPubkeyhashInput())\n      return [null, null];\n\n    return [this.getData(0), this.getData(1)];\n  }\n\n  /**\n   * \"Guess\" whether the input script is pay-to-multisig.\n   * This method is not 100% reliable.\n   * @returns {Boolean}\n   */\n\n  isMultisigInput() {\n    if (this.code.length < 2)\n      return false;\n\n    if (this.getOp(0) !== opcodes.OP_0)\n      return false;\n\n    if (this.getOp(1) > opcodes.OP_PUSHDATA4)\n      return false;\n\n    // We need to rule out scripthash\n    // because it may look like multisig.\n    if (this.isScripthashInput())\n      return false;\n\n    for (let i = 1; i < this.code.length; i++) {\n      const size = this.getLength(i);\n      if (size < 9 || size > 73)\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Get multisig signatures if present.\n   * @returns {Buffer[]|null}\n   */\n\n  getMultisigInput() {\n    if (!this.isMultisigInput())\n      return null;\n\n    const sigs = [];\n\n    for (let i = 1; i < this.code.length; i++)\n      sigs.push(this.getData(i));\n\n    return sigs;\n  }\n\n  /**\n   * \"Guess\" whether the input script is pay-to-scripthash.\n   * This method is not 100% reliable.\n   * @returns {Boolean}\n   */\n\n  isScripthashInput() {\n    if (this.code.length < 1)\n      return false;\n\n    // Grab the raw redeem script.\n    const raw = this.getData(-1);\n\n    // Last data element should be an array\n    // for the redeem script.\n    if (!raw)\n      return false;\n\n    // Testing for scripthash inputs requires\n    // some evil magic to work. We do it by\n    // ruling things _out_. This test will not\n    // be correct 100% of the time. We rule\n    // out that the last data element is: a\n    // null dummy, a valid signature, a valid\n    // key, and we ensure that it is at least\n    // a script that does not use undefined\n    // opcodes.\n    if (raw.length === 0)\n      return false;\n\n    if (common.isDERSignatureEncoding(raw.slice(0, -1)))\n      return false;\n\n    if (common.isKeyEncoding(raw))\n      return false;\n\n    const redeem = Script.fromRaw(raw);\n\n    if (!redeem.isCode())\n      return false;\n\n    if (redeem.isUnspendable())\n      return false;\n\n    if (!this.isPushOnly())\n      return false;\n\n    return true;\n  }\n\n  /**\n   * Get P2SH redeem script if present.\n   * @returns {Buffer|null}\n   */\n\n  getScripthashInput() {\n    if (!this.isScripthashInput())\n      return null;\n\n    return this.getData(-1);\n  }\n\n  /**\n   * Get coinbase height.\n   * @returns {Number} `-1` if not present.\n   */\n\n  getCoinbaseHeight() {\n    return Script.getCoinbaseHeight(this.raw);\n  }\n\n  /**\n   * Get coinbase height.\n   * @param {Buffer} raw - Raw script.\n   * @returns {Number} `-1` if not present.\n   */\n\n  static getCoinbaseHeight(raw) {\n    if (raw.length === 0)\n      return -1;\n\n    if (raw[0] >= opcodes.OP_1 && raw[0] <= opcodes.OP_16)\n      return raw[0] - 0x50;\n\n    if (raw[0] > 0x06)\n      return -1;\n\n    const op = Opcode.fromRaw(raw);\n    const num = op.toNum();\n\n    if (!num)\n      return 1;\n\n    if (num.isNeg())\n      return -1;\n\n    if (!op.equals(Opcode.fromNum(num)))\n      return -1;\n\n    return num.toDouble();\n  }\n\n  /**\n   * Test the script against a bloom filter.\n   * @param {Bloom} filter\n   * @returns {Boolean}\n   */\n\n  test(filter) {\n    for (const op of this.code) {\n      if (op.value === -1)\n        break;\n\n      if (!op.data || op.data.length === 0)\n        continue;\n\n      if (filter.test(op.data))\n        return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Test the script to see if it contains only push ops.\n   * Push ops are: OP_1NEGATE, OP_0-OP_16 and all PUSHDATAs.\n   * @returns {Boolean}\n   */\n\n  isPushOnly() {\n    for (const op of this.code) {\n      if (op.value === -1)\n        return false;\n\n      if (op.value > opcodes.OP_16)\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Count the sigops in the script.\n   * @param {Boolean} accurate - Whether to enable accurate counting. This will\n   * take into account the `n` value for OP_CHECKMULTISIG(VERIFY).\n   * @returns {Number} sigop count\n   */\n\n  getSigops(accurate, flags) {\n    if (flags & Script.flags.VERIFY_ZERO_SIGOPS)\n      return 0;\n\n    let total = 0;\n    let lastOp = -1;\n\n    for (const op of this.code) {\n      if (op.value === -1)\n        break;\n\n      switch (op.value) {\n        case opcodes.OP_CHECKSIG:\n        case opcodes.OP_CHECKSIGVERIFY:\n          total += 1;\n          break;\n        case opcodes.OP_CHECKSDATAIG:\n        case opcodes.OP_CHECKDATASIGVERIFY:\n          if (flags & Script.flags.VERIFY_CHECKDATASIG) {\n            total += 1;\n          }\n          break;\n        case opcodes.OP_CHECKMULTISIG:\n        case opcodes.OP_CHECKMULTISIGVERIFY:\n          if (accurate && lastOp >= opcodes.OP_1 && lastOp <= opcodes.OP_16)\n            total += lastOp - 0x50;\n          else\n            total += consensus.MAX_MULTISIG_PUBKEYS;\n          break;\n      }\n\n      lastOp = op.value;\n    }\n\n    return total;\n  }\n\n  /**\n   * Count the sigops in the script, taking into account redeem scripts.\n   * @param {Script} input - Input script, needed for access to redeem script.\n   * @param {VerifyFlags} flags\n   * @returns {Number} sigop count\n   */\n\n  getScripthashSigops(input, flags) {\n    if (!this.isScripthash())\n      return this.getSigops(true, flags);\n\n    const redeem = input.getRedeem();\n\n    if (!redeem)\n      return 0;\n\n    return redeem.getSigops(true, flags);\n  }\n\n  /*\n   * Mutation\n   */\n\n  get(index) {\n    if (index < 0)\n      index += this.code.length;\n\n    if (index < 0 || index >= this.code.length)\n      return null;\n\n    return this.code[index];\n  }\n\n  pop() {\n    const op = this.code.pop();\n    return op || null;\n  }\n\n  shift() {\n    const op = this.code.shift();\n    return op || null;\n  }\n\n  remove(index) {\n    if (index < 0)\n      index += this.code.length;\n\n    if (index < 0 || index >= this.code.length)\n      return null;\n\n    const items = this.code.splice(index, 1);\n\n    if (items.length === 0)\n      return null;\n\n    return items[0];\n  }\n\n  set(index, op) {\n    if (index < 0)\n      index += this.code.length;\n\n    assert(Opcode.isOpcode(op));\n    assert(index >= 0 && index <= this.code.length);\n\n    this.code[index] = op;\n\n    return this;\n  }\n\n  push(op) {\n    assert(Opcode.isOpcode(op));\n    this.code.push(op);\n    return this;\n  }\n\n  unshift(op) {\n    assert(Opcode.isOpcode(op));\n    this.code.unshift(op);\n    return this;\n  }\n\n  insert(index, op) {\n    if (index < 0)\n      index += this.code.length;\n\n    assert(Opcode.isOpcode(op));\n    assert(index >= 0 && index <= this.code.length);\n\n    this.code.splice(index, 0, op);\n\n    return this;\n  }\n\n  /*\n   * Op\n   */\n\n  getOp(index) {\n    const op = this.get(index);\n    return op ? op.value : -1;\n  }\n\n  popOp() {\n    const op = this.pop();\n    return op ? op.value : -1;\n  }\n\n  shiftOp() {\n    const op = this.shift();\n    return op ? op.value : -1;\n  }\n\n  removeOp(index) {\n    const op = this.remove(index);\n    return op ? op.value : -1;\n  }\n\n  setOp(index, value) {\n    return this.set(index, Opcode.fromOp(value));\n  }\n\n  pushOp(value) {\n    return this.push(Opcode.fromOp(value));\n  }\n\n  unshiftOp(value) {\n    return this.unshift(Opcode.fromOp(value));\n  }\n\n  insertOp(index, value) {\n    return this.insert(index, Opcode.fromOp(value));\n  }\n\n  /*\n   * Data\n   */\n\n  getData(index) {\n    const op = this.get(index);\n    return op ? op.data : null;\n  }\n\n  popData() {\n    const op = this.pop();\n    return op ? op.data : null;\n  }\n\n  shiftData() {\n    const op = this.shift();\n    return op ? op.data : null;\n  }\n\n  removeData(index) {\n    const op = this.remove(index);\n    return op ? op.data : null;\n  }\n\n  setData(index, data) {\n    return this.set(index, Opcode.fromData(data));\n  }\n\n  pushData(data) {\n    return this.push(Opcode.fromData(data));\n  }\n\n  unshiftData(data) {\n    return this.unshift(Opcode.fromData(data));\n  }\n\n  insertData(index, data) {\n    return this.insert(index, Opcode.fromData(data));\n  }\n\n  /*\n   * Length\n   */\n\n  getLength(index) {\n    const op = this.get(index);\n    return op ? op.toLength() : -1;\n  }\n\n  /*\n   * Push\n   */\n\n  getPush(index) {\n    const op = this.get(index);\n    return op ? op.toPush() : null;\n  }\n\n  popPush() {\n    const op = this.pop();\n    return op ? op.toPush() : null;\n  }\n\n  shiftPush() {\n    const op = this.shift();\n    return op ? op.toPush() : null;\n  }\n\n  removePush(index) {\n    const op = this.remove(index);\n    return op ? op.toPush() : null;\n  }\n\n  setPush(index, data) {\n    return this.set(index, Opcode.fromPush(data));\n  }\n\n  pushPush(data) {\n    return this.push(Opcode.fromPush(data));\n  }\n\n  unshiftPush(data) {\n    return this.unshift(Opcode.fromPush(data));\n  }\n\n  insertPush(index, data) {\n    return this.insert(index, Opcode.fromPush(data));\n  }\n\n  /*\n   * String\n   */\n\n  getString(index, enc) {\n    const op = this.get(index);\n    return op ? op.toString(enc) : null;\n  }\n\n  popString(enc) {\n    const op = this.pop();\n    return op ? op.toString(enc) : null;\n  }\n\n  shiftString(enc) {\n    const op = this.shift();\n    return op ? op.toString(enc) : null;\n  }\n\n  removeString(index, enc) {\n    const op = this.remove(index);\n    return op ? op.toString(enc) : null;\n  }\n\n  setString(index, str, enc) {\n    return this.set(index, Opcode.fromString(str, enc));\n  }\n\n  pushString(str, enc) {\n    return this.push(Opcode.fromString(str, enc));\n  }\n\n  unshiftString(str, enc) {\n    return this.unshift(Opcode.fromString(str, enc));\n  }\n\n  insertString(index, str, enc) {\n    return this.insert(index, Opcode.fromString(str, enc));\n  }\n\n  /*\n   * Small\n   */\n\n  getSmall(index) {\n    const op = this.get(index);\n    return op ? op.toSmall() : -1;\n  }\n\n  popSmall() {\n    const op = this.pop();\n    return op ? op.toSmall() : -1;\n  }\n\n  shiftSmall() {\n    const op = this.shift();\n    return op ? op.toSmall() : -1;\n  }\n\n  removeSmall(index) {\n    const op = this.remove(index);\n    return op ? op.toSmall() : -1;\n  }\n\n  setSmall(index, num) {\n    return this.set(index, Opcode.fromSmall(num));\n  }\n\n  pushSmall(num) {\n    return this.push(Opcode.fromSmall(num));\n  }\n\n  unshiftSmall(num) {\n    return this.unshift(Opcode.fromSmall(num));\n  }\n\n  insertSmall(index, num) {\n    return this.insert(index, Opcode.fromSmall(num));\n  }\n\n  /*\n   * Num\n   */\n\n  getNum(index, minimal, limit) {\n    const op = this.get(index);\n    return op ? op.toNum(minimal, limit) : null;\n  }\n\n  popNum(minimal, limit) {\n    const op = this.pop();\n    return op ? op.toNum(minimal, limit) : null;\n  }\n\n  shiftNum(minimal, limit) {\n    const op = this.shift();\n    return op ? op.toNum(minimal, limit) : null;\n  }\n\n  removeNum(index, minimal, limit) {\n    const op = this.remove(index);\n    return op ? op.toNum(minimal, limit) : null;\n  }\n\n  setNum(index, num) {\n    return this.set(index, Opcode.fromNum(num));\n  }\n\n  pushNum(num) {\n    return this.push(Opcode.fromNum(num));\n  }\n\n  unshiftNum(num) {\n    return this.unshift(Opcode.fromNum(num));\n  }\n\n  insertNum(index, num) {\n    return this.insert(index, Opcode.fromNum(num));\n  }\n\n  /*\n   * Int\n   */\n\n  getInt(index, minimal, limit) {\n    const op = this.get(index);\n    return op ? op.toInt(minimal, limit) : -1;\n  }\n\n  popInt(minimal, limit) {\n    const op = this.pop();\n    return op ? op.toInt(minimal, limit) : -1;\n  }\n\n  shiftInt(minimal, limit) {\n    const op = this.shift();\n    return op ? op.toInt(minimal, limit) : -1;\n  }\n\n  removeInt(index, minimal, limit) {\n    const op = this.remove(index);\n    return op ? op.toInt(minimal, limit) : -1;\n  }\n\n  setInt(index, num) {\n    return this.set(index, Opcode.fromInt(num));\n  }\n\n  pushInt(num) {\n    return this.push(Opcode.fromInt(num));\n  }\n\n  unshiftInt(num) {\n    return this.unshift(Opcode.fromInt(num));\n  }\n\n  insertInt(index, num) {\n    return this.insert(index, Opcode.fromInt(num));\n  }\n\n  /*\n   * Bool\n   */\n\n  getBool(index) {\n    const op = this.get(index);\n    return op ? op.toBool() : false;\n  }\n\n  popBool() {\n    const op = this.pop();\n    return op ? op.toBool() : false;\n  }\n\n  shiftBool() {\n    const op = this.shift();\n    return op ? op.toBool() : false;\n  }\n\n  removeBool(index) {\n    const op = this.remove(index);\n    return op ? op.toBool() : false;\n  }\n\n  setBool(index, value) {\n    return this.set(index, Opcode.fromBool(value));\n  }\n\n  pushBool(value) {\n    return this.push(Opcode.fromBool(value));\n  }\n\n  unshiftBool(value) {\n    return this.unshift(Opcode.fromBool(value));\n  }\n\n  insertBool(index, value) {\n    return this.insert(index, Opcode.fromBool(value));\n  }\n\n  /*\n   * Symbol\n   */\n\n  getSym(index) {\n    const op = this.get(index);\n    return op ? op.toSymbol() : null;\n  }\n\n  popSym() {\n    const op = this.pop();\n    return op ? op.toSymbol() : null;\n  }\n\n  shiftSym() {\n    const op = this.shift();\n    return op ? op.toSymbol() : null;\n  }\n\n  removeSym(index) {\n    const op = this.remove(index);\n    return op ? op.toSymbol() : null;\n  }\n\n  setSym(index, symbol) {\n    return this.set(index, Opcode.fromSymbol(symbol));\n  }\n\n  pushSym(symbol) {\n    return this.push(Opcode.fromSymbol(symbol));\n  }\n\n  unshiftSym(symbol) {\n    return this.unshift(Opcode.fromSymbol(symbol));\n  }\n\n  insertSym(index, symbol) {\n    return this.insert(index, Opcode.fromSymbol(symbol));\n  }\n\n  /**\n   * Inject properties from bitcoind test string.\n   * @private\n   * @param {String} items - Script string.\n   * @throws Parse error.\n   */\n\n  fromString(code) {\n    assert(typeof code === 'string');\n\n    code = code.trim();\n\n    if (code.length === 0)\n      return this;\n\n    const items = code.split(/\\s+/);\n    const bw = bio.write();\n\n    for (const item of items) {\n      let symbol = item;\n\n      if (symbol.charCodeAt(0) & 32)\n        symbol = symbol.toUpperCase();\n\n      if (!/^OP_/.test(symbol))\n        symbol = `OP_${symbol}`;\n\n      const value = opcodes[symbol];\n\n      if (value == null) {\n        if (item[0] === '\\'') {\n          assert(item[item.length - 1] === '\\'', 'Invalid string.');\n          const str = item.slice(1, -1);\n          const op = Opcode.fromString(str);\n          bw.writeBytes(op.toRaw());\n          continue;\n        }\n\n        if (/^-?\\d+$/.test(item)) {\n          const num = ScriptNum.fromString(item, 10);\n          const op = Opcode.fromNum(num);\n          bw.writeBytes(op.toRaw());\n          continue;\n        }\n\n        assert(item.indexOf('0x') === 0, 'Unknown opcode.');\n\n        const hex = item.substring(2);\n        const data = Buffer.from(hex, 'hex');\n\n        assert(data.length === hex.length / 2, 'Invalid hex string.');\n\n        bw.writeBytes(data);\n\n        continue;\n      }\n\n      bw.writeU8(value);\n    }\n\n    return this.fromRaw(bw.render());\n  }\n\n  /**\n   * Parse a bitcoind test script\n   * string into a script object.\n   * @param {String} items - Script string.\n   * @returns {Script}\n   * @throws Parse error.\n   */\n\n  static fromString(code) {\n    return new this().fromString(code);\n  }\n\n  /**\n   * Verify an input and output script, and a witness if present.\n   * @param {Script} input\n   * @param {Null} witness\n   * @param {Script} output\n   * @param {TX} tx\n   * @param {Number} index\n   * @param {Amount} value\n   * @param {VerifyFlags} flags\n   * @param {Number?} sigchecks\n   * @throws {ScriptError}\n   */\n\n  static verify(input, witness, output, tx, index, value, flags, sigchecks) {\n    if (flags == null)\n      flags = Script.flags.STANDARD_VERIFY_FLAGS;\n\n    if (flags & Script.flags.VERIFY_SIGPUSHONLY) {\n      if (!input.isPushOnly())\n        throw new ScriptError('SIG_PUSHONLY');\n    }\n\n    if (flags & Script.flags.VERIFY_SIGHASH_FORKID)\n      flags |= Script.flags.VERIFY_STRICTENC;\n\n    // Setup a stack.\n    let stack = new Stack();\n\n    // Execute the input script\n    input.execute(stack, flags, tx, index, value, metrics.sigchecks);\n\n    // Copy the stack for P2SH\n    let copy;\n    if (flags & Script.flags.VERIFY_P2SH)\n      copy = stack.clone();\n\n    // Execute the previous output script.\n    output.execute(stack, flags, tx, index, value, metrics.sigchecks);\n\n    // Verify the stack values.\n    if (stack.length === 0 || !stack.getBool(-1))\n      throw new ScriptError('EVAL_FALSE');\n\n    // If the script is P2SH, execute the real output script\n    if ((flags & Script.flags.VERIFY_P2SH) && output.isScripthash()) {\n      // P2SH can only have push ops in the scriptSig\n      if (!input.isPushOnly())\n        throw new ScriptError('SIG_PUSHONLY');\n\n      // Reset the stack\n      stack = copy;\n\n      // Stack should not be empty at this point\n      if (stack.length === 0)\n        throw new ScriptError('EVAL_FALSE');\n\n      // Grab the real redeem script\n      const raw = stack.pop();\n      const redeem = Script.fromRaw(raw);\n\n      if ((flags & Script.flags.VERIFY_DISALLOW_SEGWIT_RECOVERY) === 0\n         && stack.length === 0 && redeem.isProgram()) {\n\n        // Before activation all transaction count a value of 0\n        if (!(flags & Script.flags.REPORT_SIGCHECKS)) {\n          metrics.sigchecks = 0;\n        }\n        return;\n      }\n\n        // Execute the redeem script.\n      redeem.execute(stack, flags, tx, index, value, 0, metrics.sigchecks);\n\n      // Verify the the stack values.\n      if (stack.length === 0 || !stack.getBool(-1))\n        throw new ScriptError('EVAL_FALSE');\n    }\n\n    // Ensure there is nothing left on the stack.\n    if (flags & Script.flags.VERIFY_CLEANSTACK) {\n      assert((flags & Script.flags.VERIFY_P2SH) !== 0);\n      if (stack.length !== 1)\n        throw new ScriptError('CLEANSTACK');\n    }\n\n    if (flags & Script.flags.VERIFY_INPUT_SIGCHECKS) {\n      if (input.getSize() < metrics.sigchecks * 43 - 60)\n        throw new ScriptError('INPUT_SIGCHECKS');\n    }\n\n    if (!(flags & Script.flags.REPORT_SIGCHECKS)) {\n      metrics.sigchecks = 0;\n    }\n  }\n\n  /**\n   * Inject properties from buffer reader.\n   * @private\n   * @param {BufferReader} br\n   */\n\n  fromReader(br) {\n    return this.fromRaw(br.readVarBytes());\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer}\n   */\n\n  fromRaw(data) {\n    const br = bio.read(data);\n\n    this.raw = data;\n\n    while (br.left())\n      this.code.push(Opcode.fromReader(br));\n\n    return this;\n  }\n\n  /**\n   * Create a script from buffer reader.\n   * @param {BufferReader} br\n   * @param {String?} enc - Either `\"hex\"` or `null`.\n   * @returns {Script}\n   */\n\n  static fromReader(br) {\n    return new this().fromReader(br);\n  }\n\n  /**\n   * Create a script from a serialized buffer.\n   * @param {Buffer|String} data - Serialized script.\n   * @param {String?} enc - Either `\"hex\"` or `null`.\n   * @returns {Script}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Test whether an object a Script.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isScript(obj) {\n    return obj instanceof Script;\n  }\n}\n\n/**\n * Script opcodes.\n * @enum {Number}\n * @default\n */\n\nScript.opcodes = common.opcodes;\n\n/**\n * Opcodes by value.\n * @const {RevMap}\n */\n\nScript.opcodesByVal = common.opcodesByVal;\n\n/**\n * Script and locktime flags. See {@link VerifyFlags}.\n * @enum {Number}\n */\n\nScript.flags = common.flags;\n\n/**\n * Sighash Types.\n * @enum {SighashType}\n * @default\n */\n\nScript.hashType = common.hashType;\n\n/**\n * Sighash types by value.\n * @const {RevMap}\n */\n\nScript.hashTypeByVal = common.hashTypeByVal;\n\n/**\n * Output script types.\n * @enum {Number}\n */\n\nScript.types = common.types;\n\n/**\n * Output script types by value.\n * @const {RevMap}\n */\n\nScript.typesByVal = common.typesByVal;\n\n/*\n * Helpers\n */\n\nfunction sortKeys(keys) {\n  return keys.slice().sort((a, b) => {\n    return a.compare(b);\n  });\n}\n\n/**\n * Test whether the data element is a valid key if VERIFY_STRICTENC is enabled.\n * @param {Buffer} key\n * @param {VerifyFlags?} flags\n * @returns {Boolean}\n * @throws {ScriptError}\n */\n\nfunction validateKey(key, flags) {\n  assert(Buffer.isBuffer(key));\n  assert(typeof flags === 'number');\n\n  if (flags & Script.flags.VERIFY_STRICTENC) {\n    if (!common.isKeyEncoding(key))\n      throw new ScriptError('PUBKEYTYPE');\n  }\n\n  if ((flags & Script.flags.VERIFY_COMPRESSED_PUBKEYTYPE)\n    && !common.isCompressedEncoding(key)) {\n    throw new ScriptError('NONCOMPRESSED_PUBKEY');\n  };\n\n  return true;\n}\n\n/**\n * Test whether the raw element is a valid signature based\n * on the encoding, S value, and sighash type.\n * In an ECDSA-only context, 64-byte signatures are bannned\n * when Schnorr Flag is set.\n * @param {Buffer} sig\n * @param {VerifyFlags?} flags\n * @returns {Boolean}\n * @throws {ScriptError}\n */\n\nfunction validateECDSASignature(sig, flags) {\n  assert(Buffer.isBuffer(sig));\n  assert(typeof flags === 'number');\n\n  if (common.isSchnorr(sig))\n    throw new ScriptError('SIG_BADLENGTH');\n\n  if ((flags & Script.flags.VERIFY_DERSIG)\n      || (flags & Script.flags.VERIFY_LOW_S)\n      || (flags & Script.flags.VERIFY_STRICTENC)) {\n    if (!common.isDERSignatureEncoding(sig))\n      throw new ScriptError('SIG_DER');\n  }\n\n  if (flags & Script.flags.VERIFY_LOW_S) {\n    if (!common.isLowDER(sig))\n      throw new ScriptError('SIG_HIGH_S');\n  }\n\n  return true;\n}\n\n/**\n * Test whether the tx element is a valid signature based\n * on the encoding, S value, and sighash type. Requires\n * VERIFY_STRICTENC, VERIFY_SIGHASH_FORKID to be enabled respectively.\n * Note that this will allow zero-length signatures.\n * @param {Buffer} sig\n * @param {VerifyFlags?} flags\n * @returns {Boolean}\n * @throws {ScriptError}\n */\n\nfunction checkSighashEncoding(sig, flags) {\n  assert(Buffer.isBuffer(sig));\n  assert(typeof flags === 'number');\n\n  if (flags & Script.flags.VERIFY_STRICTENC) {\n    if (!common.isHashType(sig))\n      throw new ScriptError('SIG_HASHTYPE');\n\n    const usesFork = sig[sig.length - 1] & Script.hashType.SIGHASH_FORKID;\n    const forkEnabled = flags & Script.flags.VERIFY_SIGHASH_FORKID;\n\n    if (!forkEnabled && usesFork)\n      throw new ScriptError('ILLEGAL_FORKID');\n\n    if (forkEnabled && !usesFork)\n      throw new ScriptError('MUST_USE_FORKID');\n  }\n\n  return true;\n}\n\n/**\n * Test whether the transaction tested against\n * the Sighash Encoding is a valid Schnorr Signature.\n * Requires Sighash\n * @param {Buffer} sig\n * @param {VeirfyFlags?} flags\n * @returns {Boolean}\n * @throws {ScriptError}\n */\n\nfunction checkTransactionSignature(sig, flags) {\n  assert(Buffer.isBuffer(sig));\n  assert(typeof flags === 'number');\n\n  // allow empty sigs\n  if (sig.length === 0)\n    return true;\n\n  validateSchnorrSignature(sig.slice(0, -1), flags);\n\n  return checkSighashEncoding(sig, flags);\n}\n\n/**\n * Test whether the transaction is tested\n * against the sighash encoding w schnorr / ecdsa\n * for multisig opcodes.\n * @param {Buffer} sig\n * @param {VerifyFlags?} flags\n */\n\nfunction checkTransactionSchnorrSig(sig, flags) {\n  assert(Buffer.isBuffer(sig));\n  assert(typeof flags === 'number');\n\n  // Allow empty sigs.\n  if (sig.length === 0)\n    return true;\n\n  if (!isSchnorrEncoded(sig.slice(0, -1), flags))\n    return validateECDSASignature(sig.slice(0, -1), flags);\n\n  return checkSighashEncoding(sig, flags);\n}\n\n/**\n * Test whether the transaction tested against\n * the Sighash Encoding is a valid ECDSA Signature.\n * @param {Buffer} sig\n * @param {VerifyFlags?} flags\n * @returns {Boolean}\n * @throws {ScriptError}\n */\n\nfunction checkTransactionECDSASignature(sig, flags) {\n  assert(Buffer.isBuffer(sig));\n  assert(typeof flags === 'number');\n\n  // Allow empty sigs\n  if (sig.length === 0)\n    return true;\n\n  validateECDSASignature(sig.slice(0, -1), flags);\n\n  return checkSighashEncoding(sig, flags);\n}\n\n/**\n * Test whether the data element is a valid signature based\n * on the encoding, S value, and sighash type. Requires\n * VERIFY_DERSIG|VERIFY_LOW_S|VERIFY_STRICTENC, and VERIFY_LOW_S\n * to be enabled respectively. Note that this will allow zero-length\n * signatures.\n * @param {Buffer} sig\n * @param {VerifyFlags?} flags\n * @returns {Boolean}\n * @throws {ScriptError}\n */\n\nfunction validateDataSignature(sig, flags) {\n  assert(Buffer.isBuffer(sig));\n  assert(typeof flags === 'number');\n\n  // Allow empty sigs\n  if (sig.length === 0)\n    return true;\n\n  return validateSchnorrSignature(sig.slice(0, sig.length), flags);\n}\n\n/**\n * Test whether the Signature is valid in context\n * 64-byte signatures are interpreted as schnorr signatures.\n * Always correctly encoded when Verify_SCHNORR flag is set.\n * @param {Buffer} sig\n * @param {Buffer} msg - Signature hash.\n * @param {VerifyFlags?} flags\n * @returns {Promise}\n * @throws {ScriptError}\n */\n\nfunction validateSchnorrSignature(sig, flags) {\n  assert(Buffer.isBuffer(sig));\n  assert(typeof flags === 'number');\n\n  if (common.isSchnorr(sig))\n    return true;\n\n  return validateECDSASignature(sig, flags);\n}\n\n/**\n * Test whether the current signature is schnorr encoded.\n * @param {Buffer} sig\n * @param {VerifyFlags?} flags\n * @returns {Boolean}\n * @throws {ScriptError}\n */\n\nfunction isSchnorrEncoded(sig, flags) {\n  assert(Buffer.isBuffer(sig));\n  assert(typeof flags === 'number');\n\n  if (common.isSchnorr(sig))\n    return true;\n\n  throw new ScriptError('SIG_NONSCHNORR');\n}\n\n/**\n * Test whether the signature from the stack\n * is valid in either Schnorr or DER Format.\n * Always encoded correctly when Schnorr flag is set.\n * @param {Buffer} hash\n * @param {Buffer} sig\n * @param {Buffer} key\n * @param {Number} flags\n */\n\nfunction verifySignature(hash, sig, key, flags) {\n  assert(Buffer.isBuffer(hash));\n  assert(Buffer.isBuffer(sig));\n  assert(Buffer.isBuffer(key));\n  assert(typeof flags === 'number');\n\n  let res = false;\n\n  if (sig.length === 64) {\n    res = secp256k1.schnorrVerify(hash, sig, key, flags);\n  } else {\n    res = secp256k1.verifyDER(hash, sig, key, flags);\n  }\n\n  return res;\n}\n\n/**\n * Verify a signature, taking into account sighash type.\n * @param {Buffer} msg - Signature hash.\n * @param {Buffer} sig\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction checksig(msg, sig, key) {\n  return secp256k1.verifyDER(msg, sig.slice(0, -1), key);\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Script;\n","/*!\n * slp.js - simple ledger protocol script for bcash\n * Copyright (c) 2021, Vin Armani (MIT License).\n * https://github.com/badger-cash/bcash\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst {U64} = require('n64');\nconst consensus = require('../protocol/consensus');\nconst Script = require('./script');\nconst ScriptNum = require('./scriptnum');\n\n/**\n * SLP Coin Record\n */\n\n const SLP_TYPES = {\n  GENESIS: 0x00,\n  MINT: 0x01,\n  SEND: 0x02,\n  BATON: 0x03,\n  BURN: 0x04\n}\n\nclass SlpCoinRecord {\n  /**\n   * Create a record of SLP data for a given coin.\n   * @param {Buffer?} hash the output hash of the coin\n   * @param {Number?} vout the output index of the coin\n   * @param {Buffer?} tokenId 32 byte txid\n   * @param {Buffer?} tokenIndex 4 byte unsigned integer (index of tx hash in db)\n   * @param {Buffer} value big endian value of token base units\n   * @param {String} type GENESIS | MINT | SEND | BURN | BATON\n   * @param {Number?} version token type\n   * @constructor\n   */\n\n  constructor(options = {}) {\n    this.hash = options.hash;\n    this.vout = options.vout;\n    this.tokenId = options.tokenId;\n    this.tokenIndex = options.tokenIndex;\n    this.value = options.value;\n    this.type = options.type;\n    this.version = options.version;\n    \n  }\n\n  /**\n   * Get the value as 64 bit big-endian buffer\n   * @private\n   * @returns {Buffer}\n   */\n  getValueUInt64BE() {\n    assert(this.value.length <= 8, 'value buffer must be 8 bytes or less');\n    const padding = Buffer.alloc(8 - this.value.length);\n    return Buffer.concat([padding, this.value]);\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromDbData(data) {\n    const br = bio.read(data);\n\n    this.tokenIndex = br.readBytes(4);\n    const valueBytes = br.readVarBytes();\n    const padding = Buffer.alloc(8 - valueBytes.length);\n    this.value = Buffer.concat([padding, valueBytes]);\n    this.type = Object.keys(SLP_TYPES)[br.readU8()];\n    // Get version and handle if out of bounds\n    try {\n      this.version = br.readU8();\n    } catch (err) {\n      if (err.code === 'ERR_ENCODING')\n        this.version = 1;\n      else throw(err)\n    }\n\n    assert(this.version >= 1 && this.version <= 2);\n    assert(Object.keys(SLP_TYPES).includes(this.type));\n\n    return this;\n  }\n\n  /**\n   * Instantiate SLP record from serialized data.\n   * @param {Buffer} data\n   * @returns {SlpCoinRecord}\n   */\n\n  static fromDbData(data) {\n    return new this().fromDbData(data);\n  }\n\n  /**\n   * Serialize the SLP record.\n   * @returns {Buffer}\n   */\n\n  toDbData() {\n    assert(this.tokenIndex, 'Missing tokenIndex');\n    assert(this.tokenIndex.length == 4, 'tokenId must be a sha256 hash');\n    // assert(this.value, 'Missing token amount (in base units)')\n    assert(this.value.byteLength, 'Token amount must be a buffer')\n    assert(Object.keys(SLP_TYPES).includes(this.type), 'Type must be GENESIS | MINT | SEND | BATON | BURN');\n    // Remove padding (minimal)\n    for (let i = 0; i < this.value.length; i++) {\n      if (this.value[i] != 0) {\n        this.value = this.value.slice(i)\n        break;\n      }\n    }\n    const bw = bio.write();\n\n    bw.writeBytes(this.tokenIndex);\n    bw.writeVarBytes(this.value);\n    bw.writeU8(SLP_TYPES[this.type]);\n    bw.writeU8(this.version || 1);\n\n    return bw.render();\n  }\n\n  /**\n   * Convert object to JSON.\n   * @returns {Object}\n   */\n\n  getJSON() {\n    assert(this.tokenId, 'tokenId must be defined');\n\n    const json = {\n      hash: this.hash ? Buffer.from(this.hash).reverse().toString('hex') : undefined,\n      vout: this.vout,\n      tokenId: this.tokenId.toString('hex'),\n      value: U64.fromBE(this.value).toString(10),\n      type: this.type,\n      version: this.version || 1\n\n    }\n    return json;\n  }\n\n  /**\n   * Convert from JSON to Object.\n   * @param {Object} json\n   * @returns {SlpCoinRecord}\n   */\n\n   fromJSON(json) {\n\n    this.hash = Buffer.from(json.hash, 'hex').reverse();\n    this.vout = json.vout;\n    this.tokenId = Buffer.from(json.tokenId, 'hex');\n    this.value = U64.fromString(json.value).toBE(Buffer);\n    this.type = json.type;\n    this.version = json.version || 1\n\n    return this\n  }\n\n  /**\n   * Convert from JSON to Object.\n   * @param {Object} json\n   * @returns {TokenRecord}\n   */\n\n   static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n}\n\n/**\n * Token Record\n */\n\n class TokenRecord {\n  /**\n   * Create a token record.\n   * @constructor\n   * @param {Buffer?} tokenId\n   * @param {Buffer?} tokenIndex\n   * @param {String?} ticker\n   * @param {String?} name\n   * @param {String?} uri\n   * @param {String?} hash\n   * @param {Number} decimals\n   * @param {Number?} version\n   * @param {Buffer?} vaultScriptHash\n   */\n\n  constructor(options = {}) {\n    this.tokenId = options.tokenId;\n    this.tokenIndex = options.tokenIndex;\n    this.ticker = options.ticker || '';\n    this.name = options.name || '';\n    this.uri = options.uri || '';\n    this.hash = options.hash || '';\n    this.decimals = options.decimals;\n    this.version = options.version;\n    if (this.version === 2 )\n      this.vaultScriptHash = options.vaultScriptHash;\n\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromDbData(data) {\n    const br = bio.read(data);\n\n    this.tokenId = br.readHash();\n    this.ticker = br.readVarString('utf8');\n    // assert(this.ticker.length > 0);\n\n    this.name = br.readVarString('utf8');\n    // assert(this.name.length > 0);\n\n    this.uri = br.readVarString('utf8');\n    this.hash = br.readVarString('hex');\n    this.decimals = br.readU8();\n    // Get version and handle if out of bounds\n    try {\n      this.version = br.readU8();\n    } catch(err) {\n      if (err.code === 'ERR_ENCODING') {\n        this.version = 1;\n      } else throw(err)\n    }\n\n    // Read MINT vault ScriptHash\n    if (this.version ===2)\n      this.vaultScriptHash = br.readBytes(20);\n\n    assert(this.version >= 1 && this.version <= 2);\n    // assert(this.decimals >= 0 && this.decimals < 9);\n\n    return this;\n  }\n\n  /**\n   * Instantiate token record from serialized data.\n   * @param {Buffer} data\n   * @returns {TokenRecord}\n   */\n\n  static fromDbData(data) {\n    return new this().fromDbData(data);\n  }\n\n  /**\n   * Serialize the token record.\n   * @returns {Buffer}\n   */\n\n  toDbData() {\n    const bw = bio.write();\n    const encoding = bio.encoding;\n\n    bw.writeHash(this.tokenId);\n    bw.writeVarString(this.ticker, 'utf8');\n    if (this.ticker.length === 0)\n      bw.offset += encoding.sizeVarint(0);\n    bw.writeVarString(this.name, 'utf8');\n    if (this.name.length === 0)\n      bw.offset += encoding.sizeVarint(0);\n    bw.writeVarString(this.uri, 'utf8');\n    if (this.uri.length === 0)\n      bw.offset += encoding.sizeVarint(0);\n    bw.writeVarString(this.hash, 'hex');\n    if (this.hash.length === 0)\n      bw.offset += encoding.sizeVarint(0);\n    bw.writeU8(this.decimals);\n    bw.writeU8(this.version || 1);\n\n    if (this.version === 2)\n      bw.writeBytes(this.vaultScriptHash);\n\n    return bw.render();\n  }\n\n  /**\n   * Convert object to JSON.\n   * @returns {Object}\n   */\n\n  getJSON() {\n    assert(this.tokenId, 'tokenId must be defined');\n\n    const json = {\n      tokenId: this.tokenId.toString('hex'),\n      ticker: this.ticker,\n      name: this.name,\n      uri: this.uri,\n      hash: this.hash,\n      decimals: this.decimals,\n      version: this.version || 1\n    }\n\n    if (json.version === 2 && this.vaultScriptHash)\n      json.vaultScriptHash = this.vaultScriptHash.toString('hex');\n    \n    return json;\n  }\n\n  /**\n   * Convert from JSON to Object.\n   * @param {Object} json\n   * @returns {SlpCoinRecord}\n   */\n\n   fromJSON(json) {\n\n    this.tokenId = Buffer.from(json.tokenId, 'hex');\n    this.ticker = json.ticker;\n    this.name = json.name;\n    this.uri = json.uri;\n    this.hash = json.hash\n    this.decimals = json.decimals;\n    this.version = json.version;\n\n    if (json.version === 2 && json.vaultScriptHash)\n      this.vaultScriptHash = Buffer.from(json.vaultScriptHash, 'hex');\n\n    return this\n  }\n\n  /**\n   * Convert from JSON to Object.\n   * @param {Object} json\n   * @returns {TokenRecord}\n   */\n\n   static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n}\n\n\n/**\n * SLP\n * @alias module:script.SLP\n * @extends Script\n */\n\nclass SLP extends Script {\n  /**\n   * Create an SLP script.\n   * @constructor\n   * @param {Buffer|Array|Object} code\n   */\n\n  constructor(options) {\n    super(options);\n\n    this.valid = null;\n  }\n\n  /**\n   * Is SLP script is of valid construction?\n   * Use this as opposed to calling property this.isValid\n   * @private\n   * @returns {Boolean}\n   */\n  isValidSlp() {\n    if (this.valid === null) {\n      this.valid = this.verifySlp();\n    }\n    return this.valid;\n  }\n\n  /**\n   * Test whether SLP script is of valid construction\n   * (Does not test if transaction is valid SLP transaction)\n   * @private\n   * @param {Script?} script\n   * @returns {Boolean}\n   */\n\n  verifySlp(script) {\n    if (script == undefined)\n      script = this;\n\n    if (script.getSym(0) != 'OP_RETURN')\n      return false;\n\n    // LOKAD_ID\n    if (script.getString(1, 'hex') != '534c5000')\n      return false;\n\n    // Check version\n    const versionHex = script.getString(2, 'hex');\n    if (versionHex != '01' && versionHex != '02') \n      return false;\n\n    // Type\n    const type = script.getType();\n\n    switch (type) {\n      case 'GENESIS': {\n        if (script.code.length != 11)\n          return false;\n        // Hash\n        if (!script.getData(7))\n          return false;\n        if (script.getData(7).length != 0 && script.getData(7).length != 32)\n          return false;\n        // Decimals\n        if (!script.getData(8))\n          return false;\n        if (script.getData(8).length != 1 || script.getInt(8) > 9)\n          return false;\n        if (versionHex == '01') {\n          // Mint Baton\n          if (!script.getData(9))\n            return false;\n          if (script.getData(9).length > 1)\n            return false;\n          if (script.getData(9).length == 1 && script.getInt(9) < 2)\n            return false;\n        } else if (versionHex == '02') {\n          // Mint Vault ScriptHash\n          if (!script.getData(9))\n            return false;\n          if (script.getData(9).length != 20)\n            return false;\n        }\n        // Minted Tokens\n        if (script.getData(10).length != 8)\n          return false\n        break;\n      }\n      case 'MINT': {\n        if (versionHex == '01') {\n          if (script.code.length != 7)\n            return false;\n        }\n        if (versionHex == '02') {\n          if (script.code.length < 6)\n            return false;\n        }\n        // Token ID\n        if (script.getData(4).length != 32)\n          return false;\n        if (versionHex == '01') {\n          // Mint Baton\n          if (!script.getData(5))\n            return false;\n          if (script.getData(5).length > 1)\n            return false;\n          if (script.getData(5).length == 1 && script.getInt(5) < 2)\n            return false;\n          // Minted Tokens\n          if (script.getData(6).length != 8)\n            return false\n        } else if (versionHex == '02') {\n          const outputs = script.code.slice(5);\n          for (let i = 0; i < outputs.length; i++) {\n            const op = outputs[i];\n            // Sent Tokens\n            if (op.data.length != 8)\n              return false\n          }\n        }\n        break;\n      }\n      case 'SEND': {\n        if (script.code.length < 6)\n          return false;\n        // Token ID\n        if (script.getData(4).length != 32)\n          return false;\n        const outputs = script.code.slice(5);\n        for (let i = 0; i < outputs.length; i++) {\n          const op = outputs[i];\n          // Sent Tokens\n          if (op.data.length != 8)\n            return false\n        }\n        break;\n      }\n      case 'BURN': {\n        if (script.code.length != 6)\n          return false;\n        // Token ID\n        if (script.getData(4).length != 32)\n          return false;\n        // Sent Tokens\n        if (script.getData(5).length != 8)\n          return false\n        break;\n      }\n      default: {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Test whether script is of valid construction\n   * (Does not test if transaction is valid SLP transaction)\n   * @param {Script?} script\n   * @returns {Boolean}\n   */\n\n  static verifySlp(script) {\n    return new this().verifySlp(script);\n  }\n\n  /**\n   * Inject properties from a script\n   * @private\n   * @param {Script} code\n   * @returns {SLP}\n   */\n\n  fromScript(script) {\n    this.inject(script);\n    return this;\n  }\n\n  /**\n   * Inject properties from a script\n   * @param {Script} code\n   * @returns {SLP}\n   */\n\n   static fromScript(script) {\n    return new this().fromScript(script);\n  }\n\n  /**\n   * Get token ID for this script\n   * @private\n   * @returns {Hash}\n   */\n\n    getTokenId() {\n      assert(this.verifySlp(), 'This is not a valid SLP script')\n    \n      // Type\n      const type = this.getType();\n      assert(type != 'GENESIS', 'Cannot derive the tokenID from GENESIS script')\n      \n      // Return tokenId as buffer\n      return this.getData(4);\n    }\n\n  /**\n   * Get records for a this script\n   * @private\n   * @param {Buffer?} txId The txid of the transaction containing this script\n   * @returns {(SlpCoinRecord | TokenRecord)[]}\n   */\n\n  getRecords(txId) {\n    assert(this.isValidSlp(), 'Must be a valid SLP Script' )\n\n    const type = this.getType();\n    assert(Object.keys(SLP_TYPES).includes(type) && type != 'BATON', 'Type must be GENESIS | MINT | SEND | BURN');\n    assert(txId.byteLength, 'tokenId must be a buffer');\n    assert(txId.length == 32, 'tokenId must be a sha256 hash');\n\n    switch (type) {\n      case 'GENESIS': {\n        return this.getGenesisRecords(txId);\n        break;\n      }\n      case 'MINT': {\n        return this.getMintRecords(txId);\n        break;\n      }\n      case 'SEND': {\n        return this.getSendRecords(txId);\n        break;\n      }\n      case 'BURN': {\n        return this.getBurnRecords(txId);\n        break;\n      }\n      default: {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Get records for a GENESIS script\n   * @private\n   * @param {Buffer} tokenId The tokenId of the transaction containing this script\n   * @returns {(SlpCoinRecord | TokenRecord)[]}\n   */\n\n  getGenesisRecords(tokenId) {\n    assert(tokenId.byteLength, 'tokenId must be a buffer');\n    assert(tokenId.byteLength == 32, 'tokenId must be a sha256 hash');\n    const type = this.getType();\n    assert(type == 'GENESIS', 'This is not a GENESIS transaction')\n\n    const versionInt = this.getInt(2);\n    const records = [];\n    // Create TokenRecord\n    records.push(this.constructor.TokenRecord({      \n      tokenId,      \n      version: versionInt,\n      ticker: this.getString(4, 'utf-8'),\n      name: this.getString(5, 'utf-8'),\n      uri: this.getString(6, 'utf-8'),\n      hash: this.getString(7, 'hex'),\n      decimals: this.getInt(8),\n      vaultScriptHash: versionInt === 2 ? this.getData(9) : undefined\n    }));\n    // Create Minted Tokens SLPCoinRecord\n    records.push(this.constructor.SlpCoinRecord({\n      hash: Buffer.from(tokenId).reverse(),\n      vout: 1,\n      tokenId,\n      value: this.getData(10),\n      type,\n      version: this.getInt(2)\n    }));\n    // Create Mint Baton SLPCoinRecord\n    if (versionInt === 1 && this.getInt(9) >= 2) {\n      const valBuf = Buffer.alloc(1);\n      valBuf.writeInt8(1);\n      records.push(this.constructor.SlpCoinRecord({\n        hash: Buffer.from(tokenId).reverse(),\n        vout: this.getInt(9),\n        tokenId,\n        value: valBuf,\n        type: 'BATON',\n        version: this.getInt(2)\n      }));\n    }\n    return records;\n  }\n\n  /**\n   * Get records for a MINT script\n   * @private\n   * @param {Buffer} txId The txHash of the transaction containing this script\n   * @returns {SlpCoinRecord[]}\n   */\n\n  getMintRecords(txId) {\n    assert(txId.byteLength, 'txId must be a buffer');\n    assert(txId.byteLength == 32, 'txId must be a sha256 hash');\n    const type = this.getType();\n    assert(type == 'MINT', 'This is not a MINT transaction');\n\n    const versionInt = this.getInt(2);\n    const records = [];\n    // Create Minted Tokens SLPCoinRecord\n    if (versionInt === 1) {\n      records.push(this.constructor.SlpCoinRecord({\n        hash: Buffer.from(txId).reverse(),\n        vout: 1,\n        tokenId: this.getData(4),\n        value: this.getData(6),\n        type,\n        version: versionInt\n      }));\n      // Create Mint Baton SLPCoinRecord\n      if (this.getInt(5) >= 2) {\n        const valBuf = U64.fromInt(1).toBE(Buffer);\n        records.push(this.constructor.SlpCoinRecord({\n          hash: Buffer.from(txId).reverse(),\n          vout: this.getInt(5),\n          tokenId: this.getData(4),\n          value: valBuf,\n          type: 'BATON',\n          version: versionInt\n        }));\n      }\n    } else if (versionInt === 2) {\n      // Mimic Token Type 1 SEND\n      const outputs = this.code.slice(5);\n      for (let i = 0; i < outputs.length; i++) {\n        const valueBuf = outputs[i].toData();\n        const vout = i + 1;\n      \n        // Create Token Type 2 Mint Tokens SLPCoinRecord\n        records.push(this.constructor.SlpCoinRecord({\n          hash: Buffer.from(txId).reverse(),\n          vout,\n          tokenId: this.getData(4),\n          value: valueBuf,\n          type,\n          version: this.getInt(2)\n        }));\n      }\n    }\n    return records;\n  }\n\n  /**\n   * Get records for a SEND script\n   * @private\n   * @param {Buffer} txId The txHash of the transaction containing this script\n   * @param {Boolean} nonStandardOuts OP_RETURN is located at an index other than 0\n   * @returns {SlpCoinRecord[]}\n   */\n\n  getSendRecords(txId, nonStandardOuts = false) {\n    assert(txId.byteLength, 'txId must be a buffer');\n    assert(txId.byteLength == 32, 'txId must be a sha256 hash');\n    const type = this.getType();\n    assert(type == 'SEND', 'This is not a SEND transaction')\n\n    const records = [];\n    const outputs = this.code.slice(5);\n    for (let i = 0; i < outputs.length; i++) {\n      const valueBuf = outputs[i].toData();\n      const vout = nonStandardOuts ? i : i + 1;\n    \n      // Create Send Tokens SLPCoinRecord\n      records.push(this.constructor.SlpCoinRecord({\n        hash: Buffer.from(txId).reverse(),\n        vout,\n        tokenId: this.getData(4),\n        value: valueBuf,\n        type,\n        version: this.getInt(2)\n      }));\n    }\n    return records;\n  }\n\n  getBurnRecords(txId, nonStandardOuts = false) {\n    assert(txId.byteLength, 'txId must be a buffer');\n    assert(txId.byteLength == 32, 'txId must be a sha256 hash');\n    const type = this.getType();\n    assert(type == 'BURN', 'This is not a BURN transaction');\n\n    const records = [];\n    const valueBuf = this.code[5].toData();\n  \n    // Create Send Tokens SLPCoinRecord\n    records.push(this.constructor.SlpCoinRecord({\n      hash: Buffer.from(txId).reverse(),\n      vout: 0,\n      tokenId: this.getData(4),\n      value: valueBuf,\n      type,\n      version: this.getInt(2)\n    }));\n\n    return records;\n  }\n  \n  /**\n   * Re-encode the script internally. Useful if you\n   * changed something manually in the `code` array.\n   * @returns {Script}\n   */\n\n  compile() {\n    super.compile();\n\n    this.valid = null;\n    this.isValidSlp();\n  }\n\n  /**\n   * Inspect the script.\n   * @returns {String} Human-readable script code.\n   */\n\n  inspect() {\n    return `<SLP: ${this.toString()}>`;\n  }\n\n  getType() {\n    return this.getString(3);\n  }\n\n  /**\n   * Create a new TokenRecord\n   * @param {Buffer?} tokenId\n   * @param {Buffer?} tokenIndex\n   * @param {String?} ticker\n   * @param {String?} name\n   * @param {String?} uri\n   * @param {String?} hash\n   * @param {Number} decimals\n   * @param {Number?} version\n   * @returns {TokenRecord}\n   */\n\n  static TokenRecord(options = {}) {\n    return new TokenRecord(options);\n  }\n\n  /**\n   * Create a new SlpCoinRecord\n   * @param {Buffer?} hash the output hash of the coin\n   * @param {Number?} vout the output index of the coin\n   * @param {Buffer?} tokenId 32 byte txid\n   * @param {Buffer?} tokenIndex 4 byte unsigned integer (index of tx hash in db)\n   * @param {Number} value\n   * @param {String} type GENESIS | MINT | SEND | BATON\n   * @param {Number?} version\n   * @returns {SlpCoinRecord}\n   */\n\n  static SlpCoinRecord(options = {}) {\n    return new SlpCoinRecord(options);\n  }\n\n}\n\nmodule.exports = SLP;\n","/*!\n * output.js - output object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst Amount = require('../btc/amount');\nconst Network = require('../protocol/network');\nconst Address = require('../primitives/address');\nconst Script = require('../script/script');\nconst SLP = require('../script/slp');\nconst policy = require('../protocol/policy');\nconst {inspectSymbol} = require('../utils');\n\n/**\n * Represents a transaction output.\n * @alias module:primitives.Output\n * @property {Amount} value\n * @property {Script} script\n * @property {SlpCoinRecord?} slp\n */\n\nclass Output {\n  /**\n   * Create an output.\n   * @constructor\n   * @param {Object?} options\n   */\n\n  constructor(options) {\n    this.value = 0;\n    this.script = new Script();\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    assert(options, 'Output data is required.');\n\n    if (options.value) {\n      assert(Number.isSafeInteger(options.value) && options.value >= 0,\n        'Value must be a uint64.');\n      this.value = options.value;\n    }\n\n    if (options.script)\n      this.script.fromOptions(options.script);\n\n    if (options.address)\n      this.script.fromAddress(options.address);\n\n    if (options.slp) {\n      if (options.slp.constructor === SLP.SlpCoinRecord().constructor)\n        this.slp = options.slp\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate output from options object.\n   * @param {Object} options\n   * @returns {Output}\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Inject properties from script/value pair.\n   * @private\n   * @param {Script|Address} script\n   * @param {Amount} value\n   * @returns {Output}\n   */\n\n  fromScript(script, value) {\n    if (typeof script === 'string')\n      script = Address.fromString(script);\n\n    if (script instanceof Address)\n      script = Script.fromAddress(script);\n\n    assert(script instanceof Script, 'Script must be a Script.');\n    assert(Number.isSafeInteger(value) && value >= 0,\n      'Value must be a uint64.');\n\n    this.script = script;\n    this.value = value;\n\n    return this;\n  }\n\n  /**\n   * Instantiate output from script/value pair.\n   * @param {Script|Address} script\n   * @param {Amount} value\n   * @returns {Output}\n   */\n\n  static fromScript(script, value) {\n    return new this().fromScript(script, value);\n  }\n\n  /**\n   * Clone the output.\n   * @returns {Output}\n   */\n\n  clone() {\n    const output = new this.constructor();\n    output.value = this.value;\n    output.script.inject(this.script);\n    return output;\n  }\n\n  /**\n   * Test equality against another output.\n   * @param {Output} output\n   * @returns {Boolean}\n   */\n\n  equals(output) {\n    assert(Output.isOutput(output));\n    return this.value === output.value\n      && this.script.equals(output.script);\n  }\n\n  /**\n   * Compare against another output (BIP69).\n   * @param {Output} output\n   * @returns {Number}\n   */\n\n  compare(output) {\n    assert(Output.isOutput(output));\n\n    const cmp = this.value - output.value;\n\n    if (cmp !== 0)\n      return cmp;\n\n    return this.script.compare(output.script);\n  }\n\n  /**\n   * Get the script type as a string.\n   * @returns {ScriptType} type\n   */\n\n  getType() {\n    return Script.typesByVal[this.script.getType()].toLowerCase();\n  }\n\n  /**\n   * Get the address.\n   * @returns {Address} address\n   */\n\n  getAddress() {\n    return this.script.getAddress();\n  }\n\n  /**\n   * Get the address hash.\n   * @param {String?} enc\n   * @returns {Hash} hash\n   */\n\n  getHash(enc) {\n    const addr = this.getAddress();\n\n    if (!addr)\n      return null;\n\n    return addr.getHash(enc);\n  }\n\n  /**\n   * Convert the input to a more user-friendly object.\n   * @returns {Object}\n   */\n\n  [inspectSymbol]() {\n    const hr = {\n      type: this.getType(),\n      value: Amount.btc(this.value),\n      script: this.script,\n      address: this.getAddress()\n    };\n    if (this.slp) {\n      return {\n        ...hr,\n        slp: this.slp\n      }\n    }\n    return hr;\n  }\n\n  /**\n   * Convert the output to an object suitable\n   * for JSON serialization.\n   * @returns {Object}\n   */\n\n  toJSON() {\n    return this.getJSON();\n  }\n\n  /**\n   * Convert the output to an object suitable\n   * for JSON serialization.\n   * @param {Network} network\n   * @returns {Object}\n   */\n\n  getJSON(network) {\n    let addr = this.getAddress();\n\n    network = Network.get(network);\n\n    if (addr)\n      addr = addr.toString(network);\n\n    const json = {\n      value: this.value,\n      script: this.script.toJSON(),\n      address: addr\n    };\n\n    if (this.slp) {\n      return {\n        ...json,\n        slp: this.slp.getJSON()\n      }\n    }\n    return json;\n  }\n\n  /**\n   * Calculate the dust threshold for this\n   * output, based on serialize size and rate.\n   * @param {Rate?} rate\n   * @returns {Amount}\n   */\n\n  getDustThreshold(rate) {\n    if (this.script.isUnspendable())\n      return 0;\n\n    let size = this.getSize();\n\n    size += 32 + 4 + 1 + 107 + 4;\n\n    return 3 * policy.getMinFee(size, rate);\n  }\n\n  /**\n   * Calculate size of serialized output.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return 8 + this.script.getVarSize();\n  }\n\n  /**\n   * Test whether the output should be considered dust.\n   * @param {Rate?} rate\n   * @returns {Boolean}\n   */\n\n  isDust(rate) {\n    return this.value < this.getDustThreshold(rate);\n  }\n\n  /**\n   * Inject properties from a JSON object.\n   * @private\n   * @param {Object} json\n   */\n\n  fromJSON(json) {\n    assert(json, 'Output data is required.');\n    assert(Number.isSafeInteger(json.value) && json.value >= 0,\n      'Value must be a uint64.');\n    this.value = json.value;\n    this.script.fromJSON(json.script);\n    if (json.slp) {\n      this.slp = SLP.SlpCoinRecord().fromJSON(json.slp)\n    }\n    return this;\n  }\n\n  /**\n   * Instantiate an Output from a jsonified output object.\n   * @param {Object} json - The jsonified output object.\n   * @returns {Output}\n   */\n\n  static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n  /**\n   * Write the output to a buffer writer.\n   * @param {BufferWriter} bw\n   */\n\n  toWriter(bw) {\n    bw.writeI64(this.value);\n    bw.writeVarBytes(this.script.toRaw());\n    return bw;\n  }\n\n  /**\n   * Serialize the output.\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {Buffer|String}\n   */\n\n  toRaw() {\n    const size = this.getSize();\n    return this.toWriter(bio.write(size)).render();\n  }\n\n  /**\n   * Inject properties from buffer reader.\n   * @private\n   * @param {BufferReader} br\n   */\n\n  fromReader(br) {\n    this.value = br.readI64();\n    this.script.fromRaw(br.readVarBytes());\n    return this;\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    return this.fromReader(bio.read(data));\n  }\n\n  /**\n   * Instantiate an output from a buffer reader.\n   * @param {BufferReader} br\n   * @returns {Output}\n   */\n\n  static fromReader(br) {\n    return new this().fromReader(br);\n  }\n\n  /**\n   * Instantiate an output from a serialized Buffer.\n   * @param {Buffer} data\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {Output}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Test an object to see if it is an Output.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isOutput(obj) {\n    return obj instanceof Output;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Output;\n","/*!\n * outpoint.js - outpoint object for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst util = require('../utils/util');\nconst consensus = require('../protocol/consensus');\nconst {inspectSymbol} = require('../utils');\n\n/**\n * Outpoint\n * Represents a COutPoint.\n * @alias module:primitives.Outpoint\n * @property {Hash} hash\n * @property {Number} index\n */\n\nclass Outpoint {\n  /**\n   * Create an outpoint.\n   * @constructor\n   * @param {Hash?} hash\n   * @param {Number?} index\n   */\n\n  constructor(hash, index) {\n    this.hash = consensus.ZERO_HASH;\n    this.index = 0xffffffff;\n\n    if (hash != null) {\n      assert(Buffer.isBuffer(hash));\n      assert((index >>> 0) === index, 'Index must be a uint32.');\n      this.hash = hash;\n      this.index = index;\n    }\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    assert(options, 'Outpoint data is required.');\n    assert(Buffer.isBuffer(options.hash));\n    assert((options.index >>> 0) === options.index, 'Index must be a uint32.');\n    this.hash = options.hash;\n    this.index = options.index;\n    return this;\n  }\n\n  /**\n   * Instantate outpoint from options object.\n   * @param {Object} options\n   * @returns {Outpoint}\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Clone the outpoint.\n   * @returns {Outpoint}\n   */\n\n  clone() {\n    const outpoint = new this.constructor();\n    outpoint.hash = this.hash;\n    outpoint.index = this.index;\n    return outpoint;\n  }\n\n  /**\n   * Test equality against another outpoint.\n   * @param {Outpoint} prevout\n   * @returns {Boolean}\n   */\n\n  equals(prevout) {\n    assert(Outpoint.isOutpoint(prevout));\n    return this.hash.equals(prevout.hash)\n      && this.index === prevout.index;\n  }\n\n  /**\n   * Compare against another outpoint (BIP69).\n   * @param {Outpoint} prevout\n   * @returns {Number}\n   */\n\n  compare(prevout) {\n    assert(Outpoint.isOutpoint(prevout));\n\n    const cmp = strcmp(this.txid(), prevout.txid());\n\n    if (cmp !== 0)\n      return cmp;\n\n    return this.index - prevout.index;\n  }\n\n  /**\n   * Test whether the outpoint is null (hash of zeroes\n   * with max-u32 index). Used to detect coinbases.\n   * @returns {Boolean}\n   */\n\n  isNull() {\n    return this.index === 0xffffffff && this.hash.equals(consensus.ZERO_HASH);\n  }\n\n  /**\n   * Get little-endian hash.\n   * @returns {Hash}\n   */\n\n  rhash() {\n    return util.revHex(this.hash);\n  }\n\n  /**\n   * Get little-endian hash.\n   * @returns {Hash}\n   */\n\n  txid() {\n    return this.rhash();\n  }\n\n  /**\n   * Serialize outpoint to a key\n   * suitable for a hash table.\n   * @returns {String}\n   */\n\n  toKey() {\n    return this.toRaw();\n  }\n\n  /**\n   * Inject properties from hash table key.\n   * @private\n   * @param {String} key\n   * @returns {Outpoint}\n   */\n\n  fromKey(key) {\n    this.hash = key.slice(0, 32);\n    this.index = bio.readU32(key, 32);\n    return this;\n  }\n\n  /**\n   * Instantiate outpoint from hash table key.\n   * @param {String} key\n   * @returns {Outpoint}\n   */\n\n  static fromKey(key) {\n    return new this().fromKey(key);\n  }\n\n  /**\n   * Write outpoint to a buffer writer.\n   * @param {BufferWriter} bw\n   */\n\n  toWriter(bw) {\n    bw.writeHash(this.hash);\n    bw.writeU32(this.index);\n    return bw;\n  }\n\n  /**\n   * Calculate size of outpoint.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return 36;\n  }\n\n  /**\n   * Serialize outpoint.\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    return this.toWriter(bio.write(36)).render();\n  }\n\n  /**\n   * Inject properties from buffer reader.\n   * @private\n   * @param {BufferReader} br\n   */\n\n  fromReader(br) {\n    this.hash = br.readHash();\n    this.index = br.readU32();\n    return this;\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    return this.fromReader(bio.read(data));\n  }\n\n  /**\n   * Instantiate outpoint from a buffer reader.\n   * @param {BufferReader} br\n   * @returns {Outpoint}\n   */\n\n  static fromReader(br) {\n    return new this().fromReader(br);\n  }\n\n  /**\n   * Instantiate outpoint from serialized data.\n   * @param {Buffer} data\n   * @returns {Outpoint}\n   */\n\n  static fromRaw(data) {\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Inject properties from json object.\n   * @private\n   * @params {Object} json\n   */\n\n  fromJSON(json) {\n    assert(json, 'Outpoint data is required.');\n    assert(typeof json.hash === 'string', 'Hash must be a string.');\n    assert((json.index >>> 0) === json.index, 'Index must be a uint32.');\n    this.hash = util.fromRev(json.hash);\n    this.index = json.index;\n    return this;\n  }\n\n  /**\n   * Convert the outpoint to an object suitable\n   * for JSON serialization. Note that the hash\n   * will be reversed to abide by bitcoind's legacy\n   * of little-endian uint256s.\n   * @returns {Object}\n   */\n\n  toJSON() {\n    return {\n      hash: util.revHex(this.hash),\n      index: this.index\n    };\n  }\n\n  /**\n   * Instantiate outpoint from json object.\n   * @param {Object} json\n   * @returns {Outpoint}\n   */\n\n  static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n  /**\n   * Inject properties from tx.\n   * @private\n   * @param {TX} tx\n   * @param {Number} index\n   */\n\n  fromTX(tx, index) {\n    assert(tx);\n    assert(typeof index === 'number');\n    assert(index >= 0);\n    this.hash = tx.hash();\n    this.index = index;\n    return this;\n  }\n\n  /**\n   * Instantiate outpoint from tx.\n   * @param {TX} tx\n   * @param {Number} index\n   * @returns {Outpoint}\n   */\n\n  static fromTX(tx, index) {\n    return new this().fromTX(tx, index);\n  }\n\n  /**\n   * Serialize outpoint to a key\n   * suitable for a hash table.\n   * @param {Hash} hash\n   * @param {Number} index\n   * @returns {String}\n   */\n\n  static toKey(hash, index) {\n    return new Outpoint(hash, index).toKey();\n  }\n\n  /**\n   * Convert the outpoint to a user-friendly string.\n   * @returns {String}\n   */\n\n  [inspectSymbol]() {\n    return `<Outpoint: ${this.rhash()}/${this.index}>`;\n  }\n\n  /**\n   * Test an object to see if it is an outpoint.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isOutpoint(obj) {\n    return obj instanceof Outpoint;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction strcmp(a, b) {\n  const len = Math.min(a.length, b.length);\n\n  for (let i = 0; i < len; i++) {\n    if (a[i] < b[i])\n      return -1;\n    if (a[i] > b[i])\n      return 1;\n  }\n\n  if (a.length < b.length)\n    return -1;\n\n  if (a.length > b.length)\n    return 1;\n\n  return 0;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Outpoint;\n","/*!\n * coin.js - coin object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst util = require('../utils/util');\nconst Amount = require('../btc/amount');\nconst Output = require('./output');\nconst Network = require('../protocol/network');\nconst consensus = require('../protocol/consensus');\nconst Outpoint = require('./outpoint');\nconst SLP = require('../script/slp');\nconst {inspectSymbol} = require('../utils');\n\n/**\n * Coin\n * Represents an unspent output.\n * @alias module:primitives.Coin\n * @extends Output\n * @property {Number} version\n * @property {Number} height\n * @property {Amount} value\n * @property {Script} script\n * @property {Boolean} coinbase\n * @property {Hash} hash\n * @property {Number} index\n */\n\nclass Coin extends Output {\n  /**\n   * Create a coin.\n   * @constructor\n   * @param {Object} options\n   */\n\n  constructor(options) {\n    super();\n\n    this.version = 1;\n    this.height = -1;\n    this.coinbase = false;\n    this.hash = consensus.ZERO_HASH;\n    this.index = 0;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject options into coin.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    assert(options, 'Coin data is required.');\n\n    if (options.version != null) {\n      assert((options.version >>> 0) === options.version,\n        'Version must be a uint32.');\n      this.version = options.version;\n    }\n\n    if (options.height != null) {\n      if (options.height !== -1) {\n        assert((options.height >>> 0) === options.height,\n          'Height must be a uint32.');\n        this.height = options.height;\n      } else {\n        this.height = -1;\n      }\n    }\n\n    if (options.value != null) {\n      assert(Number.isSafeInteger(options.value) && options.value >= 0,\n        'Value must be a uint64.');\n      this.value = options.value;\n    }\n\n    if (options.script)\n      this.script.fromOptions(options.script);\n\n    if (options.coinbase != null) {\n      assert(typeof options.coinbase === 'boolean',\n        'Coinbase must be a boolean.');\n      this.coinbase = options.coinbase;\n    }\n\n    if (options.hash != null) {\n      assert(Buffer.isBuffer(options.hash));\n      this.hash = options.hash;\n    }\n\n    if (options.index != null) {\n      assert((options.index >>> 0) === options.index,\n        'Index must be a uint32.');\n      this.index = options.index;\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate Coin from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Clone the coin.\n   * @private\n   * @returns {Coin}\n   */\n\n  clone() {\n    assert(false, 'Coins are not cloneable.');\n  }\n\n  /**\n   * Calculate number of confirmations since coin was created.\n   * @param {Number?} height - Current chain height. Network\n   * height is used if not passed in.\n   * @return {Number}\n   */\n\n  getDepth(height) {\n    assert(typeof height === 'number', 'Must pass a height.');\n\n    if (this.height === -1)\n      return 0;\n\n    if (height === -1)\n      return 0;\n\n    if (height < this.height)\n      return 0;\n\n    return height - this.height + 1;\n  }\n\n  /**\n   * Serialize coin to a key\n   * suitable for a hash table.\n   * @returns {String}\n   */\n\n  toKey() {\n    return Outpoint.toKey(this.hash, this.index);\n  }\n\n  /**\n   * Inject properties from hash table key.\n   * @private\n   * @param {String} key\n   * @returns {Coin}\n   */\n\n  fromKey(key) {\n    const {hash, index} = Outpoint.fromKey(key);\n    this.hash = hash;\n    this.index = index;\n    return this;\n  }\n\n  /**\n   * Instantiate coin from hash table key.\n   * @param {String} key\n   * @returns {Coin}\n   */\n\n  static fromKey(key) {\n    return new this().fromKey(key);\n  }\n\n  /**\n   * Get little-endian hash.\n   * @returns {Hash}\n   */\n\n  rhash() {\n    return util.revHex(this.hash);\n  }\n\n  /**\n   * Get little-endian hash.\n   * @returns {Hash}\n   */\n\n  txid() {\n    return this.rhash();\n  }\n\n  /**\n   * Convert the coin to a more user-friendly object.\n   * @returns {Object}\n   */\n\n  [inspectSymbol]() {\n    const hr = {\n      type: this.getType(),\n      version: this.version,\n      height: this.height,\n      value: Amount.btc(this.value),\n      script: this.script,\n      coinbase: this.coinbase,\n      hash: this.hash ? util.revHex(this.hash) : null,\n      index: this.index,\n      address: this.getAddress()\n    };\n    if (this.slp) {\n      return {\n        ...hr,\n        slp: this.slp\n      }\n    }\n    return hr;\n  }\n\n  /**\n   * Convert the coin to an object suitable\n   * for JSON serialization.\n   * @returns {Object}\n   */\n\n  toJSON() {\n    return this.getJSON();\n  }\n\n  /**\n   * Convert the coin to an object suitable\n   * for JSON serialization. Note that the hash\n   * will be reversed to abide by bitcoind's legacy\n   * of little-endian uint256s.\n   * @param {Network} network\n   * @param {Boolean} minimal\n   * @returns {Object}\n   */\n\n  getJSON(network, minimal) {\n    let addr = this.getAddress();\n\n    network = Network.get(network);\n\n    if (addr)\n      addr = addr.toString(network);\n\n    const json = {\n      version: this.version,\n      height: this.height,\n      value: this.value,\n      script: this.script.toJSON(),\n      address: addr,\n      coinbase: this.coinbase,\n      hash: !minimal ? this.rhash() : undefined,\n      index: !minimal ? this.index : undefined\n    };\n\n    if (this.slp) {\n      return {\n        ...json,\n        slp: this.slp.getJSON()\n      }\n    }\n    return json;\n  }\n\n  /**\n   * Inject JSON properties into coin.\n   * @private\n   * @param {Object} json\n   */\n\n  fromJSON(json) {\n    assert(json, 'Coin data required.');\n    assert((json.version >>> 0) === json.version, 'Version must be a uint32.');\n    assert(json.height === -1 || (json.height >>> 0) === json.height,\n      'Height must be a uint32.');\n    assert(Number.isSafeInteger(json.value) && json.value >= 0,\n      'Value must be a uint64.');\n    assert(typeof json.coinbase === 'boolean', 'Coinbase must be a boolean.');\n\n    this.version = json.version;\n    this.height = json.height;\n    this.value = json.value;\n    this.script.fromJSON(json.script);\n    this.coinbase = json.coinbase;\n\n    if (json.hash != null) {\n      assert(typeof json.hash === 'string', 'Hash must be a string.');\n      assert(json.hash.length === 64, 'Hash must be a string.');\n      assert((json.index >>> 0) === json.index, 'Index must be a uint32.');\n      this.hash = util.fromRev(json.hash);\n      this.index = json.index;\n    }\n\n    if (json.slp) {\n      json.slp.hash = json.hash;\n      this.slp = SLP.SlpCoinRecord().fromJSON(json.slp);\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate an Coin from a jsonified coin object.\n   * @param {Object} json - The jsonified coin object.\n   * @returns {Coin}\n   */\n\n  static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n  /**\n   * Calculate size of coin.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return 17 + this.script.getVarSize();\n  }\n\n  /**\n   * Write the coin to a buffer writer.\n   * @param {BufferWriter} bw\n   */\n\n  toWriter(bw) {\n    let height = this.height;\n\n    if (height === -1)\n      height = 0x7fffffff;\n\n    bw.writeU32(this.version);\n    bw.writeU32(height);\n    bw.writeI64(this.value);\n    bw.writeVarBytes(this.script.toRaw());\n    bw.writeU8(this.coinbase ? 1 : 0);\n\n    return bw;\n  }\n\n  /**\n   * Serialize the coin.\n   * @returns {Buffer|String}\n   */\n\n  toRaw() {\n    const size = this.getSize();\n    return this.toWriter(bio.write(size)).render();\n  }\n\n  /**\n   * Inject properties from serialized buffer writer.\n   * @private\n   * @param {BufferReader} br\n   */\n\n  fromReader(br) {\n    this.version = br.readU32();\n    this.height = br.readU32();\n    this.value = br.readI64();\n    this.script.fromRaw(br.readVarBytes());\n    this.coinbase = br.readU8() === 1;\n\n    if (this.height === 0x7fffffff)\n      this.height = -1;\n\n    return this;\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    return this.fromReader(bio.read(data));\n  }\n\n  /**\n   * Instantiate a coin from a buffer reader.\n   * @param {BufferReader} br\n   * @returns {Coin}\n   */\n\n  static fromReader(br) {\n    return new this().fromReader(br);\n  }\n\n  /**\n   * Instantiate a coin from a serialized Buffer.\n   * @param {Buffer} data\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {Coin}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Inject properties from TX.\n   * @param {TX} tx\n   * @param {Number} index\n   */\n\n  fromTX(tx, index, height) {\n    assert(typeof index === 'number');\n    assert(typeof height === 'number');\n    assert(index >= 0 && index < tx.outputs.length);\n    this.version = tx.version;\n    this.height = height;\n    this.value = tx.outputs[index].value;\n    this.script = tx.outputs[index].script;\n    this.coinbase = tx.isCoinbase();\n    this.hash = tx.hash();\n    this.index = index;\n    return this;\n  }\n\n  /**\n   * Instantiate a coin from a TX\n   * @param {TX} tx\n   * @param {Number} index - Output index.\n   * @returns {Coin}\n   */\n\n  static fromTX(tx, index, height) {\n    return new this().fromTX(tx, index, height);\n  }\n\n  /**\n   * Test an object to see if it is a Coin.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isCoin(obj) {\n    return obj instanceof Coin;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Coin;\n","/*!\n * compress.js - coin compressor for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * @module coins/compress\n * @ignore\n */\n\nconst assert = require('bsert');\nconst {encoding} = require('bufio');\nconst secp256k1 = require('../bcrypto/secp256k1');\nconst consensus = require('../protocol/consensus');\n\n/*\n * Constants\n */\n\nconst COMPRESS_TYPES = 6;\nconst EMPTY_BUFFER = Buffer.alloc(0);\n\n/**\n * Compress a script, write directly to the buffer.\n * @param {Script} script\n * @param {BufferWriter} bw\n */\n\nfunction compressScript(script, bw) {\n  // Attempt to compress the output scripts.\n  // We can _only_ ever compress them if\n  // they are serialized as minimaldata, as\n  // we need to recreate them when we read\n  // them.\n\n  // P2PKH -> 0 | key-hash\n  // Saves 5 bytes.\n  const pkh = script.getPubkeyhash(true);\n  if (pkh) {\n    bw.writeU8(0);\n    bw.writeBytes(pkh);\n    return bw;\n  }\n\n  // P2SH -> 1 | script-hash\n  // Saves 3 bytes.\n  const sh = script.getScripthash();\n  if (sh) {\n    bw.writeU8(1);\n    bw.writeBytes(sh);\n    return bw;\n  }\n\n  // P2PK -> 2-5 | compressed-key\n  // Only works if the key is valid.\n  // Saves up to 35 bytes.\n  const pk = script.getPubkey(true);\n  if (pk) {\n    if (publicKeyVerify(pk)) {\n      const key = compressKey(pk);\n      bw.writeBytes(key);\n      return bw;\n    }\n  }\n\n  // Raw -> varlen + 10 | script\n  bw.writeVarint(script.raw.length + COMPRESS_TYPES);\n  bw.writeBytes(script.raw);\n\n  return bw;\n}\n\n/**\n * Decompress a script from buffer reader.\n * @param {Script} script\n * @param {BufferReader} br\n */\n\nfunction decompressScript(script, br) {\n  // Decompress the script.\n  switch (br.readU8()) {\n    case 0: {\n      const hash = br.readBytes(20, true);\n      script.fromPubkeyhash(hash);\n      break;\n    }\n    case 1: {\n      const hash = br.readBytes(20, true);\n      script.fromScripthash(hash);\n      break;\n    }\n    case 2:\n    case 3:\n    case 4:\n    case 5: {\n      br.offset -= 1;\n      const data = br.readBytes(33, true);\n      // Decompress the key. If this fails,\n      // we have database corruption!\n      const key = decompressKey(data);\n      script.fromPubkey(key);\n      break;\n    }\n    default: {\n      br.offset -= 1;\n      const size = br.readVarint() - COMPRESS_TYPES;\n      if (size > consensus.MAX_SCRIPT_SIZE) {\n        // This violates consensus rules.\n        // We don't need to read it.\n        script.fromNulldata(EMPTY_BUFFER);\n        br.seek(size);\n      } else {\n        const data = br.readBytes(size);\n        script.fromRaw(data);\n      }\n      break;\n    }\n  }\n\n  return script;\n}\n\n/**\n * Calculate script size.\n * @returns {Number}\n */\n\nfunction sizeScript(script) {\n  if (script.isPubkeyhash(true))\n    return 21;\n\n  if (script.isScripthash())\n    return 21;\n\n  const pk = script.getPubkey(true);\n  if (pk) {\n    if (publicKeyVerify(pk))\n      return 33;\n  }\n\n  let size = 0;\n  size += encoding.sizeVarint(script.raw.length + COMPRESS_TYPES);\n  size += script.raw.length;\n\n  return size;\n}\n\n/**\n * Compress an output.\n * @param {Output} output\n * @param {BufferWriter} bw\n */\n\nfunction compressOutput(output, bw) {\n  bw.writeVarint(output.value);\n  compressScript(output.script, bw);\n  return bw;\n}\n\n/**\n * Decompress a script from buffer reader.\n * @param {Output} output\n * @param {BufferReader} br\n */\n\nfunction decompressOutput(output, br) {\n  output.value = br.readVarint();\n  decompressScript(output.script, br);\n  return output;\n}\n\n/**\n * Calculate output size.\n * @returns {Number}\n */\n\nfunction sizeOutput(output) {\n  let size = 0;\n  size += encoding.sizeVarint(output.value);\n  size += sizeScript(output.script);\n  return size;\n}\n\n/**\n * Compress value using an exponent. Takes advantage of\n * the fact that many bitcoin values are divisible by 10.\n * @see https://github.com/btcsuite/btcd/blob/master/blockchain/compress.go\n * @param {Amount} value\n * @returns {Number}\n */\n\nfunction compressValue(value) {\n  if (value === 0)\n    return 0;\n\n  let exp = 0;\n  while (value % 10 === 0 && exp < 9) {\n    value /= 10;\n    exp++;\n  }\n\n  if (exp < 9) {\n    const last = value % 10;\n    value = (value - last) / 10;\n    return 1 + 10 * (9 * value + last - 1) + exp;\n  }\n\n  return 10 + 10 * (value - 1);\n}\n\n/**\n * Decompress value.\n * @param {Number} value - Compressed value.\n * @returns {Amount} value\n */\n\nfunction decompressValue(value) {\n  if (value === 0)\n    return 0;\n\n  value--;\n\n  let exp = value % 10;\n\n  value = (value - exp) / 10;\n\n  let n;\n  if (exp < 9) {\n    const last = value % 9;\n    value = (value - last) / 9;\n    n = value * 10 + last + 1;\n  } else {\n    n = value + 1;\n  }\n\n  while (exp > 0) {\n    n *= 10;\n    exp--;\n  }\n\n  return n;\n}\n\n/**\n * Verify a public key (no hybrid keys allowed).\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction publicKeyVerify(key) {\n  if (key.length === 0)\n    return false;\n\n  switch (key[0]) {\n    case 0x02:\n    case 0x03:\n      return key.length === 33;\n    case 0x04:\n      if (key.length !== 65)\n        return false;\n\n      return secp256k1.publicKeyVerify(key);\n    default:\n      return false;\n  }\n}\n\n/**\n * Compress a public key to coins compression format.\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction compressKey(key) {\n  let out;\n\n  switch (key[0]) {\n    case 0x02:\n    case 0x03:\n      // Key is already compressed.\n      out = key;\n      break;\n    case 0x04:\n      // Compress the key normally.\n      out = secp256k1.publicKeyConvert(key, true);\n      // Store the oddness.\n      // Pseudo-hybrid format.\n      out[0] = 0x04 | (key[64] & 0x01);\n      break;\n    default:\n      throw new Error('Bad point format.');\n  }\n\n  assert(out.length === 33);\n\n  return out;\n}\n\n/**\n * Decompress a public key from the coins compression format.\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction decompressKey(key) {\n  const format = key[0];\n\n  assert(key.length === 33);\n\n  switch (format) {\n    case 0x02:\n    case 0x03:\n      return key;\n    case 0x04:\n      key[0] = 0x02;\n      break;\n    case 0x05:\n      key[0] = 0x03;\n      break;\n    default:\n      throw new Error('Bad point format.');\n  }\n\n  // Decompress the key.\n  const out = secp256k1.publicKeyConvert(key, false);\n\n  // Reset the first byte so as not to\n  // mutate the original buffer.\n  key[0] = format;\n\n  return out;\n}\n\n// Make eslint happy.\ncompressValue;\ndecompressValue;\n\n/*\n * Expose\n */\n\nexports.pack = compressOutput;\nexports.unpack = decompressOutput;\nexports.size = sizeOutput;\n","/*!\n * coinentry.js - coin entry object for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst Coin = require('../primitives/coin');\nconst Output = require('../primitives/output');\nconst compress = require('./compress');\nconst {encoding} = bio;\n\n/*\n * Constants\n */\n\nconst NUM_FLAGS = 1;\nconst MAX_HEIGHT = ((1 << (32 - NUM_FLAGS)) >>> 0) - 1;\n\n/**\n * Coin Entry\n * Represents an unspent output.\n * @alias module:coins.CoinEntry\n * @property {Number} version - Transaction version.\n * @property {Number} height - Transaction height (-1 if unconfirmed).\n * @property {Boolean} coinbase - Whether the containing\n * transaction is a coinbase.\n * @property {Output} output\n * @property {Boolean} spent\n * @property {Buffer} raw\n */\n\nclass CoinEntry {\n  /**\n   * Create a coin entry.\n   * @constructor\n   */\n\n  constructor() {\n    this.version = 1;\n    this.height = -1;\n    this.coinbase = false;\n    this.output = new Output();\n    this.spent = false;\n    this.raw = null;\n  }\n\n  /**\n   * Convert coin entry to an output.\n   * @returns {Output}\n   */\n\n  toOutput() {\n    return this.output;\n  }\n\n  /**\n   * Convert coin entry to a coin.\n   * @param {Outpoint} prevout\n   * @returns {Coin}\n   */\n\n  toCoin(prevout) {\n    const coin = new Coin();\n    coin.version = this.version;\n    coin.height = this.height;\n    coin.coinbase = this.coinbase;\n    coin.script = this.output.script;\n    coin.value = this.output.value;\n    coin.hash = prevout.hash;\n    coin.index = prevout.index;\n    return coin;\n  }\n\n  /**\n   * Inject properties from TX.\n   * @param {TX} tx\n   * @param {Number} index\n   */\n\n  fromOutput(output) {\n    this.output = output;\n    return this;\n  }\n\n  /**\n   * Instantiate a coin from a TX\n   * @param {TX} tx\n   * @param {Number} index - Output index.\n   * @returns {CoinEntry}\n   */\n\n  static fromOutput(output) {\n    return new this().fromOutput(output);\n  }\n\n  /**\n   * Inject properties from TX.\n   * @param {TX} tx\n   * @param {Number} index\n   */\n\n  fromCoin(coin) {\n    this.version = coin.version;\n    this.height = coin.height;\n    this.coinbase = coin.coinbase;\n    this.output.script = coin.script;\n    this.output.value = coin.value;\n    return this;\n  }\n\n  /**\n   * Instantiate a coin from a TX\n   * @param {TX} tx\n   * @param {Number} index - Output index.\n   * @returns {CoinEntry}\n   */\n\n  static fromCoin(coin) {\n    return new this().fromCoin(coin);\n  }\n\n  /**\n   * Inject properties from TX.\n   * @param {TX} tx\n   * @param {Number} index\n   */\n\n  fromTX(tx, index, height) {\n    assert(typeof index === 'number');\n    assert(typeof height === 'number');\n    assert(index >= 0 && index < tx.outputs.length);\n    this.version = tx.version;\n    this.height = height;\n    this.coinbase = tx.isCoinbase();\n    this.output = tx.outputs[index];\n    return this;\n  }\n\n  /**\n   * Instantiate a coin from a TX\n   * @param {TX} tx\n   * @param {Number} index - Output index.\n   * @returns {CoinEntry}\n   */\n\n  static fromTX(tx, index, height) {\n    return new this().fromTX(tx, index, height);\n  }\n\n  /**\n   * Calculate size of coin.\n   * @returns {Number}\n   */\n\n  getSize() {\n    if (this.raw)\n      return this.raw.length;\n\n    let size = 0;\n    size += encoding.sizeVarint(this.version);\n    size += 4;\n    size += compress.size(this.output);\n\n    return size;\n  }\n\n  /**\n   * Write the coin to a buffer writer.\n   * @param {BufferWriter} bw\n   */\n\n  toWriter(bw) {\n    if (this.raw) {\n      bw.writeBytes(this.raw);\n      return bw;\n    }\n\n    let height = this.height;\n    let field = 0;\n\n    if (this.coinbase)\n      field |= 1;\n\n    if (height === -1)\n      height = MAX_HEIGHT;\n\n    field |= height << NUM_FLAGS;\n\n    bw.writeVarint(this.version);\n    bw.writeU32(field);\n    compress.pack(this.output, bw);\n\n    return bw;\n  }\n\n  /**\n   * Serialize the coin.\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    if (this.raw)\n      return this.raw;\n\n    const size = this.getSize();\n    const bw = bio.write(size);\n\n    this.toWriter(bw);\n\n    this.raw = bw.render();\n\n    return this.raw;\n  }\n\n  /**\n   * Inject properties from serialized buffer writer.\n   * @private\n   * @param {BufferReader} br\n   */\n\n  fromReader(br) {\n    const version = br.readVarint();\n    const field = br.readU32();\n\n    let height = field >>> NUM_FLAGS;\n\n    if (height === MAX_HEIGHT)\n      height = -1;\n\n    this.version = version;\n    this.coinbase = (field & 1) !== 0;\n    this.height = height;\n\n    compress.unpack(this.output, br);\n\n    return this;\n  }\n\n  /**\n   * Instantiate a coin from a serialized Buffer.\n   * @param {Buffer} data\n   * @returns {CoinEntry}\n   */\n\n  static fromReader(data) {\n    return new this().fromReader(data);\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    this.fromReader(bio.read(data));\n    this.raw = data;\n    return this;\n  }\n\n  /**\n   * Instantiate a coin from a serialized Buffer.\n   * @param {Buffer} data\n   * @returns {CoinEntry}\n   */\n\n  static fromRaw(data) {\n    return new this().fromRaw(data);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = CoinEntry;\n","/*!\n * coins.js - coins object for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst CoinEntry = require('./coinentry');\n\n/**\n * Coins\n * Represents the outputs for a single transaction.\n * @alias module:coins.Coins\n * @property {Map[]} outputs - Coins.\n */\n\nclass Coins {\n  /**\n   * Create coins.\n   * @constructor\n   */\n\n  constructor() {\n    this.outputs = new Map();\n  }\n\n  /**\n   * Add a single entry to the collection.\n   * @param {Number} index\n   * @param {CoinEntry} coin\n   * @returns {CoinEntry}\n   */\n\n  add(index, coin) {\n    assert((index >>> 0) === index);\n    assert(coin);\n    this.outputs.set(index, coin);\n    return coin;\n  }\n\n  /**\n   * Add a single output to the collection.\n   * @param {Number} index\n   * @param {Output} output\n   * @returns {CoinEntry}\n   */\n\n  addOutput(index, output) {\n    return this.add(index, CoinEntry.fromOutput(output));\n  }\n\n  /**\n   * Add an output to the collection by output index.\n   * @param {TX} tx\n   * @param {Number} index\n   * @param {Number} height\n   * @returns {CoinEntry}\n   */\n\n  addIndex(tx, index, height) {\n    return this.add(index, CoinEntry.fromTX(tx, index, height));\n  }\n\n  /**\n   * Add a single coin to the collection.\n   * @param {Coin} coin\n   * @returns {CoinEntry}\n   */\n\n  addCoin(coin) {\n    return this.add(coin.index, CoinEntry.fromCoin(coin));\n  }\n\n  /**\n   * Test whether the collection has a coin.\n   * @param {Number} index\n   * @returns {Boolean}\n   */\n\n  has(index) {\n    return this.outputs.has(index);\n  }\n\n  /**\n   * Test whether the collection has an unspent coin.\n   * @param {Number} index\n   * @returns {Boolean}\n   */\n\n  isUnspent(index) {\n    const coin = this.outputs.get(index);\n\n    if (!coin || coin.spent)\n      return false;\n\n    return true;\n  }\n\n  /**\n   * Get a coin entry.\n   * @param {Number} index\n   * @returns {CoinEntry|null}\n   */\n\n  get(index) {\n    return this.outputs.get(index) || null;\n  }\n\n  /**\n   * Get an output.\n   * @param {Number} index\n   * @returns {Output|null}\n   */\n\n  getOutput(index) {\n    const coin = this.outputs.get(index);\n\n    if (!coin)\n      return null;\n\n    return coin.output;\n  }\n\n  /**\n   * Get a coin.\n   * @param {Outpoint} prevout\n   * @returns {Coin|null}\n   */\n\n  getCoin(prevout) {\n    const coin = this.outputs.get(prevout.index);\n\n    if (!coin)\n      return null;\n\n    return coin.toCoin(prevout);\n  }\n\n  /**\n   * Spend a coin entry and return it.\n   * @param {Number} index\n   * @returns {CoinEntry|null}\n   */\n\n  spend(index) {\n    const coin = this.get(index);\n\n    if (!coin || coin.spent)\n      return null;\n\n    coin.spent = true;\n\n    return coin;\n  }\n\n  /**\n   * Remove a coin entry and return it.\n   * @param {Number} index\n   * @returns {CoinEntry|null}\n   */\n\n  remove(index) {\n    const coin = this.get(index);\n\n    if (!coin)\n      return null;\n\n    this.outputs.delete(index);\n\n    return coin;\n  }\n\n  /**\n   * Test whether the coins are fully spent.\n   * @returns {Boolean}\n   */\n\n  isEmpty() {\n    return this.outputs.size === 0;\n  }\n\n  /**\n   * Inject properties from tx.\n   * @private\n   * @param {TX} tx\n   * @param {Number} height\n   * @returns {Coins}\n   */\n\n  fromTX(tx, height) {\n    assert(typeof height === 'number');\n\n    for (let i = 0; i < tx.outputs.length; i++) {\n      const output = tx.outputs[i];\n\n      if (output.script.isUnspendable())\n        continue;\n\n      const entry = CoinEntry.fromTX(tx, i, height);\n\n      this.outputs.set(i, entry);\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate a coins object from a transaction.\n   * @param {TX} tx\n   * @param {Number} height\n   * @returns {Coins}\n   */\n\n  static fromTX(tx, height) {\n    return new this().fromTX(tx, height);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Coins;\n","'use strict';\n\nconst {inspect} = require('util');\n\nexports.custom = inspect.custom || 'inspect';\n","/*!\n * buffer-map.js - buffer map for javascript\n * Copyright (c) 2018, Christopher Jeffrey (MIT License).\n * https://github.com/chjj/buffer-map\n */\n\n/* global SharedArrayBuffer */\n\n'use strict';\n\nconst {custom} = require('./custom');\n\n/**\n * Buffer Map\n */\n\nclass BufferMap {\n  constructor(iterable) {\n    this.map = new Map();\n\n    if (iterable != null) {\n      for (const [key, value] of iterable)\n        this.set(key, value);\n    }\n  }\n\n  get size() {\n    return this.map.size;\n  }\n\n  get(key) {\n    const item = this.map.get(toBinary(key));\n\n    if (!item)\n      return undefined;\n\n    return item.value;\n  }\n\n  has(key) {\n    return this.map.has(toBinary(key));\n  }\n\n  set(key, value) {\n    this.map.set(toBinary(key), new BufferItem(key, value));\n    return this;\n  }\n\n  delete(key) {\n    return this.map.delete(toBinary(key));\n  }\n\n  clear() {\n    this.map.clear();\n  }\n\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  *entries() {\n    for (const {key, value} of this.map.values())\n      yield [key, value];\n  }\n\n  *keys() {\n    for (const {key} of this.map.values())\n      yield key;\n  }\n\n  *values() {\n    for (const {value} of this.map.values())\n      yield value;\n  }\n\n  forEach(func, self) {\n    if (typeof func !== 'function')\n      throw new TypeError(`${typeof func} is not a function`);\n\n    for (const {key, value} of this.map.values())\n      func.call(self, value, key, this);\n  }\n\n  toKeys() {\n    const out = [];\n\n    for (const {key} of this.map.values())\n      out.push(key);\n\n    return out;\n  }\n\n  toValues() {\n    const out = [];\n\n    for (const {value} of this.map.values())\n      out.push(value);\n\n    return out;\n  }\n\n  toArray() {\n    return this.toValues();\n  }\n\n  [custom]() {\n    const map = new Map();\n\n    for (const {key, value} of this.map.values())\n      map.set(toHex(key), value);\n\n    return map;\n  }\n}\n\n/**\n * Buffer Set\n */\n\nclass BufferSet {\n  constructor(iterable) {\n    this.map = new Map();\n\n    if (iterable != null) {\n      for (const key of iterable)\n        this.add(key);\n    }\n  }\n\n  get size() {\n    return this.map.size;\n  }\n\n  has(key) {\n    return this.map.has(toBinary(key));\n  }\n\n  add(key) {\n    this.map.set(toBinary(key), key);\n    return this;\n  }\n\n  delete(key) {\n    return this.map.delete(toBinary(key));\n  }\n\n  clear() {\n    this.map.clear();\n  }\n\n  [Symbol.iterator]() {\n    return this.keys();\n  }\n\n  *entries() {\n    for (const key of this.map.values())\n      yield [key, key];\n  }\n\n  keys() {\n    return this.map.values();\n  }\n\n  values() {\n    return this.map.values();\n  }\n\n  forEach(func, self) {\n    if (typeof func !== 'function')\n      throw new TypeError(`${typeof func} is not a function`);\n\n    for (const key of this.map.values())\n      func.call(self, key, key, this);\n  }\n\n  toKeys() {\n    const out = [];\n\n    for (const key of this.map.values())\n      out.push(key);\n\n    return out;\n  }\n\n  toValues() {\n    return this.toKeys();\n  }\n\n  toArray() {\n    return this.toKeys();\n  }\n\n  [custom]() {\n    const set = new Set();\n\n    for (const key of this.map.values())\n      set.add(toHex(key));\n\n    return set;\n  }\n}\n\n/**\n * Buffer Item\n */\n\nclass BufferItem {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n}\n\n/*\n * Helpers\n */\n\nconst HAS_SHARED_ARRAY_BUFFER = typeof SharedArrayBuffer === 'function';\n\nfunction isArrayBuffer(key) {\n  if (key instanceof ArrayBuffer)\n    return true;\n\n  if (HAS_SHARED_ARRAY_BUFFER) {\n    if (key instanceof SharedArrayBuffer)\n      return true;\n  }\n\n  return false;\n}\n\nfunction toBuffer(key) {\n  if (ArrayBuffer.isView(key))\n    return Buffer.from(key.buffer, key.byteOffset, key.byteLength);\n\n  if (isArrayBuffer(key))\n    return Buffer.from(key, 0, key.byteLength);\n\n  throw new TypeError('Non-buffer passed to buffer map/set.');\n}\n\nfunction encode(key, encoding) {\n  if (!Buffer.isBuffer(key))\n    key = toBuffer(key);\n\n  return key.toString(encoding);\n}\n\nfunction toBinary(key) {\n  return encode(key, 'binary');\n}\n\nfunction toHex(key) {\n  return encode(key, 'hex');\n}\n\n/*\n * Expose\n */\n\nexports.BufferMap = BufferMap;\nexports.BufferSet = BufferSet;\n","/*!\n * undocoins.js - undocoins object for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst CoinEntry = require('../coins/coinentry');\n\n/**\n * Undo Coins\n * Coins need to be resurrected from somewhere\n * during a reorg. The undo coins store all\n * spent coins in a single record per block\n * (in a compressed format).\n * @alias module:coins.UndoCoins\n * @property {UndoCoin[]} items\n */\n\nclass UndoCoins {\n  /**\n   * Create undo coins.\n   * @constructor\n   */\n\n  constructor() {\n    this.items = [];\n  }\n\n  /**\n   * Push coin entry onto undo coin array.\n   * @param {CoinEntry}\n   * @returns {Number}\n   */\n\n  push(coin) {\n    return this.items.push(coin);\n  }\n\n  /**\n   * Calculate undo coins size.\n   * @returns {Number}\n   */\n\n  getSize() {\n    let size = 0;\n\n    size += 4;\n\n    for (const coin of this.items)\n      size += coin.getSize();\n\n    return size;\n  }\n\n  /**\n   * Serialize all undo coins.\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    const size = this.getSize();\n    const bw = bio.write(size);\n\n    bw.writeU32(this.items.length);\n\n    for (const coin of this.items)\n      coin.toWriter(bw);\n\n    return bw.render();\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   * @returns {UndoCoins}\n   */\n\n  fromRaw(data) {\n    const br = bio.read(data);\n    const count = br.readU32();\n\n    for (let i = 0; i < count; i++)\n      this.items.push(CoinEntry.fromReader(br));\n\n    return this;\n  }\n\n  /**\n   * Instantiate undo coins from serialized data.\n   * @param {Buffer} data\n   * @returns {UndoCoins}\n   */\n\n  static fromRaw(data) {\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Test whether the undo coins have any members.\n   * @returns {Boolean}\n   */\n\n  isEmpty() {\n    return this.items.length === 0;\n  }\n\n  /**\n   * Render the undo coins.\n   * @returns {Buffer}\n   */\n\n  commit() {\n    const raw = this.toRaw();\n    this.items.length = 0;\n    return raw;\n  }\n\n  /**\n   * Re-apply undo coins to a view, effectively unspending them.\n   * @param {CoinView} view\n   * @param {Outpoint} prevout\n   */\n\n  apply(view, prevout) {\n    const undo = this.items.pop();\n\n    assert(undo);\n\n    view.addEntry(prevout, undo);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = UndoCoins;\n","/*!\n * coinview.js - coin viewpoint object for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst {BufferMap} = require('buffer-map');\nconst Coins = require('./coins');\nconst UndoCoins = require('./undocoins');\nconst CoinEntry = require('./coinentry');\n\n/**\n * Coin View\n * Represents a coin viewpoint:\n * a snapshot of {@link Coins} objects.\n * @alias module:coins.CoinView\n * @property {Object} map\n * @property {UndoCoins} undo\n */\n\nclass CoinView {\n  /**\n   * Create a coin view.\n   * @constructor\n   */\n\n  constructor() {\n    this.map = new BufferMap();\n    this.undo = new UndoCoins();\n  }\n\n  /**\n   * Get coins.\n   * @param {Hash} hash\n   * @returns {Coins} coins\n   */\n\n  get(hash) {\n    return this.map.get(hash);\n  }\n\n  /**\n   * Test whether the view has an entry.\n   * @param {Hash} hash\n   * @returns {Boolean}\n   */\n\n  has(hash) {\n    return this.map.has(hash);\n  }\n\n  /**\n   * Add coins to the collection.\n   * @param {Hash} hash\n   * @param {Coins} coins\n   * @returns {Coins}\n   */\n\n  add(hash, coins) {\n    this.map.set(hash, coins);\n    return coins;\n  }\n\n  /**\n   * Ensure existence of coins object in the collection.\n   * @param {Hash} hash\n   * @returns {Coins}\n   */\n\n  ensure(hash) {\n    const coins = this.map.get(hash);\n\n    if (coins)\n      return coins;\n\n    return this.add(hash, new Coins());\n  }\n\n  /**\n   * Remove coins from the collection.\n   * @param {Coins} coins\n   * @returns {Coins|null}\n   */\n\n  remove(hash) {\n    const coins = this.map.get(hash);\n\n    if (!coins)\n      return null;\n\n    this.map.delete(hash);\n\n    return coins;\n  }\n\n  /**\n   * Add a tx to the collection.\n   * @param {TX} tx\n   * @param {Number} height\n   * @returns {Coins}\n   */\n\n  addTX(tx, height) {\n    const hash = tx.hash();\n    const coins = Coins.fromTX(tx, height);\n    return this.add(hash, coins);\n  }\n\n  /**\n   * Remove a tx from the collection.\n   * @param {TX} tx\n   * @param {Number} height\n   * @returns {Coins}\n   */\n\n  removeTX(tx, height) {\n    const hash = tx.hash();\n    const coins = Coins.fromTX(tx, height);\n\n    for (const coin of coins.outputs.values())\n      coin.spent = true;\n\n    return this.add(hash, coins);\n  }\n\n  /**\n   * Add an entry to the collection.\n   * @param {Outpoint} prevout\n   * @param {CoinEntry} coin\n   * @returns {CoinEntry|null}\n   */\n\n  addEntry(prevout, coin) {\n    const {hash, index} = prevout;\n    const coins = this.ensure(hash);\n    return coins.add(index, coin);\n  }\n\n  /**\n   * Add a coin to the collection.\n   * @param {Coin} coin\n   * @returns {CoinEntry|null}\n   */\n\n  addCoin(coin) {\n    const coins = this.ensure(coin.hash);\n    return coins.addCoin(coin);\n  }\n\n  /**\n   * Add an output to the collection.\n   * @param {Outpoint} prevout\n   * @param {Output} output\n   * @returns {CoinEntry|null}\n   */\n\n  addOutput(prevout, output) {\n    const {hash, index} = prevout;\n    const coins = this.ensure(hash);\n    return coins.addOutput(index, output);\n  }\n\n  /**\n   * Add an output to the collection by output index.\n   * @param {TX} tx\n   * @param {Number} index\n   * @param {Number} height\n   * @returns {CoinEntry|null}\n   */\n\n  addIndex(tx, index, height) {\n    const hash = tx.hash();\n    const coins = this.ensure(hash);\n    return coins.addIndex(tx, index, height);\n  }\n\n  /**\n   * Spend an output.\n   * @param {Outpoint} prevout\n   * @returns {CoinEntry|null}\n   */\n\n  spendEntry(prevout) {\n    const {hash, index} = prevout;\n    const coins = this.get(hash);\n\n    if (!coins)\n      return null;\n\n    const coin = coins.spend(index);\n\n    if (!coin)\n      return null;\n\n    this.undo.push(coin);\n\n    return coin;\n  }\n\n  /**\n   * Remove an output.\n   * @param {Outpoint} prevout\n   * @returns {CoinEntry|null}\n   */\n\n  removeEntry(prevout) {\n    const {hash, index} = prevout;\n    const coins = this.get(hash);\n\n    if (!coins)\n      return null;\n\n    return coins.remove(index);\n  }\n\n  /**\n   * Test whether the view has an entry by prevout.\n   * @param {Outpoint} prevout\n   * @returns {Boolean}\n   */\n\n  hasEntry(prevout) {\n    const {hash, index} = prevout;\n    const coins = this.get(hash);\n\n    if (!coins)\n      return false;\n\n    return coins.has(index);\n  }\n\n  /**\n   * Get a single entry by prevout.\n   * @param {Outpoint} prevout\n   * @returns {CoinEntry|null}\n   */\n\n  getEntry(prevout) {\n    const {hash, index} = prevout;\n    const coins = this.get(hash);\n\n    if (!coins)\n      return null;\n\n    return coins.get(index);\n  }\n\n  /**\n   * Test whether an entry has been spent by prevout.\n   * @param {Outpoint} prevout\n   * @returns {Boolean}\n   */\n\n  isUnspent(prevout) {\n    const {hash, index} = prevout;\n    const coins = this.get(hash);\n\n    if (!coins)\n      return false;\n\n    return coins.isUnspent(index);\n  }\n\n  /**\n   * Get a single coin by prevout.\n   * @param {Outpoint} prevout\n   * @returns {Coin|null}\n   */\n\n  getCoin(prevout) {\n    const coins = this.get(prevout.hash);\n\n    if (!coins)\n      return null;\n\n    return coins.getCoin(prevout);\n  }\n\n  /**\n   * Get a single output by prevout.\n   * @param {Outpoint} prevout\n   * @returns {Output|null}\n   */\n\n  getOutput(prevout) {\n    const {hash, index} = prevout;\n    const coins = this.get(hash);\n\n    if (!coins)\n      return null;\n\n    return coins.getOutput(index);\n  }\n\n  /**\n   * Get coins height by prevout.\n   * @param {Outpoint} prevout\n   * @returns {Number}\n   */\n\n  getHeight(prevout) {\n    const coin = this.getEntry(prevout);\n\n    if (!coin)\n      return -1;\n\n    return coin.height;\n  }\n\n  /**\n   * Get coins coinbase flag by prevout.\n   * @param {Outpoint} prevout\n   * @returns {Boolean}\n   */\n\n  isCoinbase(prevout) {\n    const coin = this.getEntry(prevout);\n\n    if (!coin)\n      return false;\n\n    return coin.coinbase;\n  }\n\n  /**\n   * Test whether the view has an entry by input.\n   * @param {Input} input\n   * @returns {Boolean}\n   */\n\n  hasEntryFor(input) {\n    return this.hasEntry(input.prevout);\n  }\n\n  /**\n   * Get a single entry by input.\n   * @param {Input} input\n   * @returns {CoinEntry|null}\n   */\n\n  getEntryFor(input) {\n    return this.getEntry(input.prevout);\n  }\n\n  /**\n   * Test whether an entry has been spent by input.\n   * @param {Input} input\n   * @returns {Boolean}\n   */\n\n  isUnspentFor(input) {\n    return this.isUnspent(input.prevout);\n  }\n\n  /**\n   * Get a single coin by input.\n   * @param {Input} input\n   * @returns {Coin|null}\n   */\n\n  getCoinFor(input) {\n    return this.getCoin(input.prevout);\n  }\n\n  /**\n   * Get a single output by input.\n   * @param {Input} input\n   * @returns {Output|null}\n   */\n\n  getOutputFor(input) {\n    return this.getOutput(input.prevout);\n  }\n\n  /**\n   * Get coins height by input.\n   * @param {Input} input\n   * @returns {Number}\n   */\n\n  getHeightFor(input) {\n    return this.getHeight(input.prevout);\n  }\n\n  /**\n   * Get coins coinbase flag by input.\n   * @param {Input} input\n   * @returns {Boolean}\n   */\n\n  isCoinbaseFor(input) {\n    return this.isCoinbase(input.prevout);\n  }\n\n  /**\n   * Retrieve coins from database.\n   * @method\n   * @param {ChainDB} db\n   * @param {Outpoint} prevout\n   * @returns {Promise} - Returns {@link CoinEntry}.\n   */\n\n  async readCoin(db, prevout) {\n    const cache = this.getEntry(prevout);\n\n    if (cache)\n      return cache;\n\n    const coin = await db.readCoin(prevout);\n\n    if (!coin)\n      return null;\n\n    return this.addEntry(prevout, coin);\n  }\n\n  /**\n   * Read all input coins into unspent map.\n   * @method\n   * @param {ChainDB} db\n   * @param {TX} tx\n   * @returns {Promise} - Returns {Boolean}.\n   */\n\n  async readInputs(db, tx) {\n    let found = true;\n\n    for (const {prevout} of tx.inputs) {\n      if (!await this.readCoin(db, prevout))\n        found = false;\n    }\n\n    return found;\n  }\n\n  /**\n   * Spend coins for transaction.\n   * @method\n   * @param {ChainDB} db\n   * @param {TX} tx\n   * @returns {Promise} - Returns {Boolean}.\n   */\n\n  async spendInputs(db, tx) {\n    let i = 0;\n\n    while (i < tx.inputs.length) {\n      const len = Math.min(i + 4, tx.inputs.length);\n      const jobs = [];\n\n      for (; i < len; i++) {\n        const {prevout} = tx.inputs[i];\n        jobs.push(this.readCoin(db, prevout));\n      }\n\n      const coins = await Promise.all(jobs);\n\n      for (const coin of coins) {\n        if (!coin || coin.spent)\n          return false;\n\n        coin.spent = true;\n        this.undo.push(coin);\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Calculate serialization size.\n   * @returns {Number}\n   */\n\n  getSize(tx) {\n    let size = 0;\n\n    size += tx.inputs.length;\n\n    for (const {prevout} of tx.inputs) {\n      const coin = this.getEntry(prevout);\n\n      if (!coin)\n        continue;\n\n      size += coin.getSize();\n    }\n\n    return size;\n  }\n\n  /**\n   * Write coin data to buffer writer\n   * as it pertains to a transaction.\n   * @param {BufferWriter} bw\n   * @param {TX} tx\n   */\n\n  toWriter(bw, tx) {\n    for (const {prevout} of tx.inputs) {\n      const coin = this.getEntry(prevout);\n\n      if (!coin) {\n        bw.writeU8(0);\n        continue;\n      }\n\n      bw.writeU8(1);\n      coin.toWriter(bw);\n    }\n\n    return bw;\n  }\n\n  /**\n   * Read serialized view data from a buffer\n   * reader as it pertains to a transaction.\n   * @private\n   * @param {BufferReader} br\n   * @param {TX} tx\n   */\n\n  fromReader(br, tx) {\n    for (const {prevout} of tx.inputs) {\n      if (br.readU8() === 0)\n        continue;\n\n      const coin = CoinEntry.fromReader(br);\n\n      this.addEntry(prevout, coin);\n    }\n\n    return this;\n  }\n\n  /**\n   * Read serialized view data from a buffer\n   * reader as it pertains to a transaction.\n   * @param {BufferReader} br\n   * @param {TX} tx\n   * @returns {CoinView}\n   */\n\n  static fromReader(br, tx) {\n    return new this().fromReader(br, tx);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = CoinView;\n","/*!\n * coins/index.js - utxo management for bcoin\n * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * @module coins\n */\n\nexports.Coins = require('./coins');\nexports.CoinView = require('./coinview');\nexports.compress = require('./compress');\nexports.UndoCoins = require('./undocoins');\n","/*!\n * lru.js - LRU cache for bcoin\n * Copyright (c) 2014-2018, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\n\n/**\n * LRU Cache\n */\n\nclass LRU {\n  /**\n   * Create an LRU cache.\n   * @constructor\n   * @param {Number} capacity\n   * @param {Function?} getSize\n   * @param {Function?} CustomMap\n   */\n\n  constructor(capacity, getSize, CustomMap) {\n    assert(typeof capacity === 'number', 'Capacity must be a number.');\n    assert(capacity >= 0, 'Capacity cannot be negative.');\n    assert(!getSize || typeof getSize === 'function', 'Bad size callback.');\n    assert(!CustomMap || typeof CustomMap === 'function');\n\n    this.map = CustomMap ? new CustomMap() : new Map();\n    this.size = 0;\n    this.items = 0;\n    this.head = null;\n    this.tail = null;\n    this.pending = null;\n\n    this.capacity = capacity;\n    this.getSize = getSize;\n  }\n\n  /**\n   * Calculate size of an item.\n   * @private\n   * @param {LRUItem} item\n   * @returns {Number} Size.\n   */\n\n  _getSize(item) {\n    if (this.getSize)\n      return 120 + this.getSize(item.value, item.key);\n\n    return 1;\n  }\n\n  /**\n   * Compact the LRU linked list.\n   * @private\n   */\n\n  _compact() {\n    if (this.size <= this.capacity)\n      return;\n\n    let item = null;\n    let next = null;\n\n    for (item = this.head; item; item = next) {\n      if (this.size <= this.capacity)\n        break;\n\n      this.size -= this._getSize(item);\n      this.items -= 1;\n      this.map.delete(item.key);\n\n      next = item.next;\n\n      item.prev = null;\n      item.next = null;\n    }\n\n    if (!item) {\n      this.head = null;\n      this.tail = null;\n      return;\n    }\n\n    this.head = item;\n    item.prev = null;\n  }\n\n  /**\n   * Reset the cache. Clear all items.\n   */\n\n  reset() {\n    let item, next;\n\n    for (item = this.head; item; item = next) {\n      this.map.delete(item.key);\n      this.items -= 1;\n      next = item.next;\n      item.prev = null;\n      item.next = null;\n    }\n\n    assert(!item);\n\n    this.size = 0;\n    this.head = null;\n    this.tail = null;\n  }\n\n  /**\n   * Add an item to the cache.\n   * @param {String|Number} key\n   * @param {Object} value\n   */\n\n  set(key, value) {\n    if (this.capacity === 0)\n      return;\n\n    let item = this.map.get(key);\n\n    if (item) {\n      this.size -= this._getSize(item);\n      item.value = value;\n      this.size += this._getSize(item);\n      this._removeList(item);\n      this._appendList(item);\n      this._compact();\n      return;\n    }\n\n    item = new LRUItem(key, value);\n\n    this.map.set(key, item);\n\n    this._appendList(item);\n\n    this.size += this._getSize(item);\n    this.items += 1;\n\n    this._compact();\n  }\n\n  /**\n   * Retrieve an item from the cache.\n   * @param {String|Number} key\n   * @returns {Object} Item.\n   */\n\n  get(key) {\n    if (this.capacity === 0)\n      return null;\n\n    const item = this.map.get(key);\n\n    if (!item)\n      return null;\n\n    this._removeList(item);\n    this._appendList(item);\n\n    return item.value;\n  }\n\n  /**\n   * Test whether the cache contains a key.\n   * @param {String|Number} key\n   * @returns {Boolean}\n   */\n\n  has(key) {\n    if (this.capacity === 0)\n      return false;\n    return this.map.has(key);\n  }\n\n  /**\n   * Remove an item from the cache.\n   * @param {String|Number} key\n   * @returns {Boolean} Whether an item was removed.\n   */\n\n  remove(key) {\n    if (this.capacity === 0)\n      return false;\n\n    const item = this.map.get(key);\n\n    if (!item)\n      return false;\n\n    this.size -= this._getSize(item);\n    this.items -= 1;\n\n    this.map.delete(key);\n\n    this._removeList(item);\n\n    return true;\n  }\n\n  /**\n   * Prepend an item to the linked list (sets new head).\n   * @private\n   * @param {LRUItem}\n   */\n\n  _prependList(item) {\n    this._insertList(null, item);\n  }\n\n  /**\n   * Append an item to the linked list (sets new tail).\n   * @private\n   * @param {LRUItem}\n   */\n\n  _appendList(item) {\n    this._insertList(this.tail, item);\n  }\n\n  /**\n   * Insert item into the linked list.\n   * @private\n   * @param {LRUItem|null} ref\n   * @param {LRUItem} item\n   */\n\n  _insertList(ref, item) {\n    assert(!item.next);\n    assert(!item.prev);\n\n    if (ref == null) {\n      if (!this.head) {\n        this.head = item;\n        this.tail = item;\n      } else {\n        this.head.prev = item;\n        item.next = this.head;\n        this.head = item;\n      }\n      return;\n    }\n\n    item.next = ref.next;\n    item.prev = ref;\n    ref.next = item;\n\n    if (item.next)\n      item.next.prev = item;\n\n    if (ref === this.tail)\n      this.tail = item;\n  }\n\n  /**\n   * Remove item from the linked list.\n   * @private\n   * @param {LRUItem}\n   */\n\n  _removeList(item) {\n    if (item.prev)\n      item.prev.next = item.next;\n\n    if (item.next)\n      item.next.prev = item.prev;\n\n    if (item === this.head)\n      this.head = item.next;\n\n    if (item === this.tail)\n      this.tail = item.prev || this.head;\n\n    if (!this.head)\n      assert(!this.tail);\n\n    if (!this.tail)\n      assert(!this.head);\n\n    item.prev = null;\n    item.next = null;\n  }\n\n  /**\n   * Collect all keys in the cache, sorted by LRU.\n   * @returns {String[]}\n   */\n\n  keys() {\n    const items = [];\n\n    for (let item = this.head; item; item = item.next) {\n      if (item === this.head)\n        assert(!item.prev);\n      if (!item.prev)\n        assert(item === this.head);\n      if (!item.next)\n        assert(item === this.tail);\n      items.push(item.key);\n    }\n\n    return items;\n  }\n\n  /**\n   * Collect all values in the cache, sorted by LRU.\n   * @returns {String[]}\n   */\n\n  values() {\n    const items = [];\n\n    for (let item = this.head; item; item = item.next)\n      items.push(item.value);\n\n    return items;\n  }\n\n  /**\n   * Convert the LRU cache to an array of items.\n   * @returns {Object[]}\n   */\n\n  toArray() {\n    const items = [];\n\n    for (let item = this.head; item; item = item.next)\n      items.push(item);\n\n    return items;\n  }\n\n  /**\n   * Create an atomic batch for the lru\n   * (used for caching database writes).\n   * @returns {LRUBatch}\n   */\n\n  batch() {\n    return new LRUBatch(this);\n  }\n\n  /**\n   * Start the pending batch.\n   */\n\n  start() {\n    assert(!this.pending);\n    this.pending = this.batch();\n  }\n\n  /**\n   * Clear the pending batch.\n   */\n\n  clear() {\n    assert(this.pending);\n    this.pending.clear();\n  }\n\n  /**\n   * Drop the pending batch.\n   */\n\n  drop() {\n    assert(this.pending);\n    this.pending = null;\n  }\n\n  /**\n   * Commit the pending batch.\n   */\n\n  commit() {\n    assert(this.pending);\n    this.pending.commit();\n    this.pending = null;\n  }\n\n  /**\n   * Push an item onto the pending batch.\n   * @param {String} key\n   * @param {Object} value\n   */\n\n  push(key, value) {\n    assert(this.pending);\n\n    if (this.capacity === 0)\n      return;\n\n    this.pending.set(key, value);\n  }\n\n  /**\n   * Push a removal onto the pending batch.\n   * @param {String} key\n   */\n\n  unpush(key) {\n    assert(this.pending);\n\n    if (this.capacity === 0)\n      return;\n\n    this.pending.remove(key);\n  }\n}\n\n/**\n * LRU Item\n * @alias module:utils.LRUItem\n */\n\nclass LRUItem {\n  /**\n   * Create an LRU item.\n   * @constructor\n   * @private\n   * @param {String} key\n   * @param {Object} value\n   */\n\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.next = null;\n    this.prev = null;\n  }\n}\n\n/**\n * LRU Batch\n * @alias module:utils.LRUBatch\n */\n\nclass LRUBatch {\n  /**\n   * Create an LRU batch.\n   * @constructor\n   * @param {LRU} lru\n   */\n\n  constructor(lru) {\n    this.lru = lru;\n    this.ops = [];\n  }\n\n  /**\n   * Push an item onto the batch.\n   * @param {String} key\n   * @param {Object} value\n   */\n\n  set(key, value) {\n    this.ops.push(new LRUOp(false, key, value));\n  }\n\n  /**\n   * Push a removal onto the batch.\n   * @param {String} key\n   */\n\n  remove(key) {\n    this.ops.push(new LRUOp(true, key, null));\n  }\n\n  /**\n   * Clear the batch.\n   */\n\n  clear() {\n    this.ops.length = 0;\n  }\n\n  /**\n   * Commit the batch.\n   */\n\n  commit() {\n    for (const op of this.ops) {\n      if (op.remove) {\n        this.lru.remove(op.key);\n        continue;\n      }\n      this.lru.set(op.key, op.value);\n    }\n\n    this.ops.length = 0;\n  }\n}\n\n/**\n * LRU Op\n * @alias module:utils.LRUOp\n * @private\n */\n\nclass LRUOp {\n  /**\n   * Create an LRU op.\n   * @constructor\n   * @param {Boolean} remove\n   * @param {String} key\n   * @param {Object} value\n   */\n\n  constructor(remove, key, value) {\n    this.remove = remove;\n    this.key = key;\n    this.value = value;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = LRU;\n","'use strict';\n\nmodule.exports = require('./lru');\n","/*!\n * common.js - common functions for hd\n * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst LRU = require('blru');\nconst common = exports;\n\n/**\n * Index at which hardening begins.\n * @const {Number}\n * @default\n */\n\ncommon.HARDENED = 0x80000000;\n\n/**\n * Min entropy bits.\n * @const {Number}\n * @default\n */\n\ncommon.MIN_ENTROPY = 128;\n\n/**\n * Max entropy bits.\n * @const {Number}\n * @default\n */\n\ncommon.MAX_ENTROPY = 512;\n\n/**\n * LRU cache to avoid deriving keys twice.\n * @type {LRU}\n */\n\ncommon.cache = new LRU(500);\n\n/**\n * Parse a derivation path and return an array of indexes.\n * @see https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki\n * @param {String} path\n * @param {Boolean} hard\n * @returns {Number[]}\n */\n\ncommon.parsePath = function parsePath(path, hard) {\n  assert(typeof path === 'string');\n  assert(typeof hard === 'boolean');\n  assert(path.length >= 1);\n  assert(path.length <= 3062);\n\n  const parts = path.split('/');\n  const root = parts[0];\n\n  if (root !== 'm'\n      && root !== 'M'\n      && root !== 'm\\''\n      && root !== 'M\\'') {\n    throw new Error('Invalid path root.');\n  }\n\n  const result = [];\n\n  for (let i = 1; i < parts.length; i++) {\n    let part = parts[i];\n\n    const hardened = part[part.length - 1] === '\\'';\n\n    if (hardened)\n      part = part.slice(0, -1);\n\n    if (part.length > 10)\n      throw new Error('Path index too large.');\n\n    if (!/^\\d+$/.test(part))\n      throw new Error('Path index is non-numeric.');\n\n    let index = parseInt(part, 10);\n\n    if ((index >>> 0) !== index)\n      throw new Error('Path index out of range.');\n\n    if (hardened) {\n      index |= common.HARDENED;\n      index >>>= 0;\n    }\n\n    if (!hard && (index & common.HARDENED))\n      throw new Error('Path index cannot be hardened.');\n\n    result.push(index);\n  }\n\n  return result;\n};\n\n/**\n * Test whether the key is a master key.\n * @param {HDPrivateKey|HDPublicKey} key\n * @returns {Boolean}\n */\n\ncommon.isMaster = function isMaster(key) {\n  return key.depth === 0\n    && key.childIndex === 0\n    && key.parentFingerPrint === 0;\n};\n\n/**\n * Test whether the key is (most likely) a BIP44 account key.\n * @param {HDPrivateKey|HDPublicKey} key\n * @param {Number?} account\n * @returns {Boolean}\n */\n\ncommon.isAccount = function isAccount(key, account) {\n  if (account != null) {\n    const index = (common.HARDENED | account) >>> 0;\n    if (key.childIndex !== index)\n      return false;\n  }\n  return key.depth === 3 && (key.childIndex & common.HARDENED) !== 0;\n};\n\n/**\n * A compressed pubkey of all zeroes.\n * @const {Buffer}\n * @default\n */\n\ncommon.ZERO_KEY = Buffer.alloc(33, 0x00);\n","/*!\n * cleanse.js - memzero for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst random = require('./random');\n\n/**\n * A maybe-secure memzero.\n * @param {Buffer} data\n */\n\nfunction cleanse(data) {\n  assert(Buffer.isBuffer(data));\n  random.randomFill(data, 0, data.length);\n}\n\n/*\n * Static\n */\n\ncleanse.native = 0;\n\n/*\n * Expose\n */\n\nmodule.exports = cleanse;","/*!\n * pbkdf2.js - pbkdf2 for bcrypto\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/PBKDF2\n *   https://tools.ietf.org/html/rfc2898\n *   https://tools.ietf.org/html/rfc2898#section-5.2\n *   https://tools.ietf.org/html/rfc6070\n *   https://www.emc.com/collateral/white-papers/h11302-pkcs5v2-1-password-based-cryptography-standard-wp.pdf\n *   http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst crypto = global.crypto || global.msCrypto || {};\nconst subtle = crypto.subtle || {};\n\n/**\n * Perform key derivation using PBKDF2.\n * @param {Function} hash\n * @param {Buffer} pass\n * @param {Buffer} salt\n * @param {Number} iter\n * @param {Number} len\n * @returns {Buffer}\n */\n\nfunction derive(hash, pass, salt, iter, len) {\n  if (typeof pass === 'string')\n    pass = Buffer.from(pass, 'utf8');\n\n  if (typeof salt === 'string')\n    salt = Buffer.from(salt, 'utf8');\n\n  if (salt == null)\n    salt = Buffer.alloc(0);\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(pass));\n  assert(Buffer.isBuffer(salt));\n  assert((iter >>> 0) === iter);\n  assert((len >>> 0) === len);\n\n  const size = hash.size;\n  const blocks = Math.ceil(len / size);\n  const out = Buffer.alloc(blocks * size);\n  const state = Buffer.alloc(salt.length + 4);\n\n  salt.copy(state, 0);\n\n  // Preemptively shorten key.\n  if (pass.length > hash.blockSize) {\n    pass = hash.digest(pass);\n    assert(pass.length <= hash.blockSize);\n  }\n\n  for (let i = 0; i < blocks; i++) {\n    const round = i + 1;\n\n    state[salt.length + 0] = round >>> 24;\n    state[salt.length + 1] = round >>> 16;\n    state[salt.length + 2] = round >>> 8;\n    state[salt.length + 3] = round;\n\n    const block = hash.mac(state, pass);\n\n    let mac = block;\n\n    for (let j = 1; j < iter; j++) {\n      mac = hash.mac(mac, pass);\n\n      for (let k = 0; k < size; k++)\n        block[k] ^= mac[k];\n    }\n\n    block.copy(out, i * size);\n  }\n\n  return out.slice(0, len);\n}\n\n/**\n * Execute pbkdf2 asynchronously.\n * @param {Function} hash\n * @param {Buffer} pass\n * @param {Buffer} salt\n * @param {Number} iter\n * @param {Number} len\n * @returns {Promise}\n */\n\nasync function deriveAsync(hash, pass, salt, iter, len) {\n  if (typeof pass === 'string')\n    pass = Buffer.from(pass, 'utf8');\n\n  if (typeof salt === 'string')\n    salt = Buffer.from(salt, 'utf8');\n\n  if (salt == null)\n    salt = Buffer.alloc(0);\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(pass));\n  assert(Buffer.isBuffer(salt));\n  assert((iter >>> 0) === iter);\n  assert((len >>> 0) === len);\n\n  const name = getHash(hash);\n\n  if (!subtle.importKey || !subtle.deriveBits || !name)\n    return derive(hash, pass, salt, iter, len);\n\n  const algo = { name: 'PBKDF2' };\n  const use = ['deriveBits'];\n\n  const options = {\n    name: 'PBKDF2',\n    salt: salt,\n    iterations: iter,\n    hash: name\n  };\n\n  const key = await subtle.importKey('raw', pass, algo, false, use);\n  const out = await subtle.deriveBits(options, key, len * 8);\n\n  return Buffer.from(out);\n}\n\n/*\n * Helpers\n */\n\nfunction getHash(hash) {\n  switch (hash.id) {\n    case 'SHA1':\n      return 'SHA-1';\n    case 'SHA256':\n      return 'SHA-256';\n    case 'SHA384':\n      return 'SHA-384';\n    case 'SHA512':\n      return 'SHA-512';\n    default:\n      return null;\n  }\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.derive = derive;\nexports.deriveAsync = deriveAsync;","/*!\n * sha512.js - SHA512 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-2\n *   https://tools.ietf.org/html/rfc4634\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/sha/512.js\n */\n\n/* eslint camelcase: \"off\" */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst HMAC = require('./internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = -1;\nconst DESC = Buffer.alloc(16, 0x00);\nconst PADDING = Buffer.alloc(128, 0x00);\n\nPADDING[0] = 0x80;\n\nconst K = new Uint32Array([\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]);\n\n/**\n * SHA512\n */\n\nclass SHA512 {\n  constructor() {\n    this.state = new Uint32Array(16);\n    this.msg = new Uint32Array(160);\n    this.block = Buffer.alloc(128);\n    this.size = FINALIZED;\n  }\n\n  init() {\n    this.state[0] = 0x6a09e667;\n    this.state[1] = 0xf3bcc908;\n    this.state[2] = 0xbb67ae85;\n    this.state[3] = 0x84caa73b;\n    this.state[4] = 0x3c6ef372;\n    this.state[5] = 0xfe94f82b;\n    this.state[6] = 0xa54ff53a;\n    this.state[7] = 0x5f1d36f1;\n    this.state[8] = 0x510e527f;\n    this.state[9] = 0xade682d1;\n    this.state[10] = 0x9b05688c;\n    this.state[11] = 0x2b3e6c1f;\n    this.state[12] = 0x1f83d9ab;\n    this.state[13] = 0xfb41bd6b;\n    this.state[14] = 0x5be0cd19;\n    this.state[15] = 0x137e2179;\n    this.size = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    this._update(data, data.length);\n    return this;\n  }\n\n  final() {\n    return this._final(Buffer.alloc(64));\n  }\n\n  _update(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 127;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 128 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 128)\n        return;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= 128) {\n      this._transform(data, off);\n      off += 128;\n      len -= 128;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  /**\n   * Finalize SHA512 context.\n   * @private\n   * @param {Buffer} out\n   * @returns {Buffer}\n   */\n\n  _final(out) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    const pos = this.size & 127;\n    const len = this.size * 8;\n\n    writeU32(DESC, (len * (1 / 0x100000000)) >>> 0, 8);\n    writeU32(DESC, len >>> 0, 12);\n\n    this._update(PADDING, 1 + ((239 - pos) & 127));\n    this._update(DESC, 16);\n\n    for (let i = 0; i < 16; i++) {\n      writeU32(out, this.state[i], i * 4);\n      this.state[i] = 0;\n    }\n\n    for (let i = 0; i < 160; i++)\n      this.msg[i] = 0;\n\n    for (let i = 0; i < 128; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n\n    return out;\n  }\n\n  _prepare(chunk, pos) {\n    const W = this.msg;\n\n    let i = 0;\n\n    for (; i < 32; i++)\n      W[i] = readU32(chunk, pos + i * 4);\n\n    for (; i < 160; i += 2) {\n      const c0_hi = g1_512_hi(W[i - 4], W[i - 3]);\n      const c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n      const c1_hi = W[i - 14];\n      const c1_lo = W[i - 13];\n      const c2_hi = g0_512_hi(W[i - 30], W[i - 29]);\n      const c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n      const c3_hi = W[i - 32];\n      const c3_lo = W[i - 31];\n\n      W[i + 0] = sum64_4_hi(c0_hi, c0_lo,\n                            c1_hi, c1_lo,\n                            c2_hi, c2_lo,\n                            c3_hi, c3_lo);\n\n      W[i + 1] = sum64_4_lo(c0_hi, c0_lo,\n                            c1_hi, c1_lo,\n                            c2_hi, c2_lo,\n                            c3_hi, c3_lo);\n    }\n  }\n\n  _transform(chunk, pos) {\n    const W = this.msg;\n\n    this._prepare(chunk, pos);\n\n    let ah = this.state[0];\n    let al = this.state[1];\n    let bh = this.state[2];\n    let bl = this.state[3];\n    let ch = this.state[4];\n    let cl = this.state[5];\n    let dh = this.state[6];\n    let dl = this.state[7];\n    let eh = this.state[8];\n    let el = this.state[9];\n    let fh = this.state[10];\n    let fl = this.state[11];\n    let gh = this.state[12];\n    let gl = this.state[13];\n    let hh = this.state[14];\n    let hl = this.state[15];\n\n    for (let i = 0; i < W.length; i += 2) {\n      let c0_hi = hh;\n      let c0_lo = hl;\n      let c1_hi = s1_512_hi(eh, el);\n      let c1_lo = s1_512_lo(eh, el);\n\n      const c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n      const c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n      const c3_hi = K[i + 0];\n      const c3_lo = K[i + 1];\n      const c4_hi = W[i + 0];\n      const c4_lo = W[i + 1];\n\n      const T1_hi = sum64_5_hi(c0_hi, c0_lo,\n                               c1_hi, c1_lo,\n                               c2_hi, c2_lo,\n                               c3_hi, c3_lo,\n                               c4_hi, c4_lo);\n\n      const T1_lo = sum64_5_lo(c0_hi, c0_lo,\n                               c1_hi, c1_lo,\n                               c2_hi, c2_lo,\n                               c3_hi, c3_lo,\n                               c4_hi, c4_lo);\n\n      c0_hi = s0_512_hi(ah, al);\n      c0_lo = s0_512_lo(ah, al);\n      c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n      c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n      const T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n      const T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n      hh = gh;\n      hl = gl;\n\n      gh = fh;\n      gl = fl;\n\n      fh = eh;\n      fl = el;\n\n      eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n      el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n      dh = ch;\n      dl = cl;\n\n      ch = bh;\n      cl = bl;\n\n      bh = ah;\n      bl = al;\n\n      ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n      al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n    }\n\n    sum64(this.state, 0, ah, al);\n    sum64(this.state, 2, bh, bl);\n    sum64(this.state, 4, ch, cl);\n    sum64(this.state, 6, dh, dl);\n    sum64(this.state, 8, eh, el);\n    sum64(this.state, 10, fh, fl);\n    sum64(this.state, 12, gh, gl);\n    sum64(this.state, 14, hh, hl);\n  }\n\n  static hash() {\n    return new SHA512();\n  }\n\n  static hmac() {\n    return new HMAC(SHA512, 128);\n  }\n\n  static digest(data) {\n    return SHA512.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 64);\n    assert(Buffer.isBuffer(right) && right.length === 64);\n    return SHA512.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = SHA512;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return SHA512.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nSHA512.native = 0;\nSHA512.id = 'SHA512';\nSHA512.size = 64;\nSHA512.bits = 512;\nSHA512.blockSize = 128;\nSHA512.zero = Buffer.alloc(64, 0x00);\nSHA512.ctx = new SHA512();\n\n/*\n * Helpers\n */\n\nfunction sum64(buf, pos, ah, al) {\n  const bh = buf[pos + 0];\n  const bl = buf[pos + 1];\n\n  const lo = (al + bl) >>> 0;\n  const hi = (lo < al) + ah + bh;\n\n  buf[pos + 0] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\n\nfunction sum64_hi(ah, al, bh, bl) {\n  const lo = (al + bl) >>> 0;\n  const hi = (lo < al) + ah + bh;\n  return hi >>> 0;\n}\n\nfunction sum64_lo(ah, al, bh, bl) {\n  const lo = al + bl;\n  return lo >>> 0;\n}\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  let carry = 0;\n  let lo = al;\n\n  lo = (lo + bl) >>> 0;\n  carry += (lo < al);\n\n  lo = (lo + cl) >>> 0;\n  carry += (lo < cl);\n\n  lo = (lo + dl) >>> 0;\n  carry += (lo < dl);\n\n  const hi = ah + bh + ch + dh + carry;\n\n  return hi >>> 0;\n}\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  const lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  let carry = 0;\n  let lo = al;\n\n  lo = (lo + bl) >>> 0;\n  carry += (lo < al);\n\n  lo = (lo + cl) >>> 0;\n  carry += (lo < cl);\n\n  lo = (lo + dl) >>> 0;\n  carry += (lo < dl);\n\n  lo = (lo + el) >>> 0;\n  carry += (lo < el);\n\n  const hi = ah + bh + ch + dh + eh + carry;\n\n  return hi >>> 0;\n}\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  const lo = al + bl + cl + dl + el;\n  return lo >>> 0;\n}\n\nfunction rotr64_hi(ah, al, num) {\n  const r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\n\nfunction rotr64_lo(ah, al, num) {\n  const r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\n\nfunction shr64_lo(ah, al, num) {\n  const r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\n\nfunction ch64_hi(xh, xl, yh, yl, zh, zl) {\n  const r = (xh & yh) ^ ((~xh) & zh);\n  return r >>> 0;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  const r = (xl & yl) ^ ((~xl) & zl);\n  return r >>> 0;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh, zl) {\n  const r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  return r >>> 0;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  const r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  return r >>> 0;\n}\n\nfunction s0_512_hi(xh, xl) {\n  const c0_hi = rotr64_hi(xh, xl, 28);\n  const c1_hi = rotr64_hi(xl, xh, 2); // 34\n  const c2_hi = rotr64_hi(xl, xh, 7); // 39\n  const r = c0_hi ^ c1_hi ^ c2_hi;\n  return r >>> 0;\n}\n\nfunction s0_512_lo(xh, xl) {\n  const c0_lo = rotr64_lo(xh, xl, 28);\n  const c1_lo = rotr64_lo(xl, xh, 2); // 34\n  const c2_lo = rotr64_lo(xl, xh, 7); // 39\n  const r = c0_lo ^ c1_lo ^ c2_lo;\n  return r >>> 0;\n}\n\nfunction s1_512_hi(xh, xl) {\n  const c0_hi = rotr64_hi(xh, xl, 14);\n  const c1_hi = rotr64_hi(xh, xl, 18);\n  const c2_hi = rotr64_hi(xl, xh, 9); // 41\n  const r = c0_hi ^ c1_hi ^ c2_hi;\n  return r >>> 0;\n}\n\nfunction s1_512_lo(xh, xl) {\n  const c0_lo = rotr64_lo(xh, xl, 14);\n  const c1_lo = rotr64_lo(xh, xl, 18);\n  const c2_lo = rotr64_lo(xl, xh, 9); // 41\n  const r = c0_lo ^ c1_lo ^ c2_lo;\n  return r >>> 0;\n}\n\nfunction g0_512_hi(xh, xl) {\n  const c0_hi = rotr64_hi(xh, xl, 1);\n  const c1_hi = rotr64_hi(xh, xl, 8);\n  const c2_hi = shr64_hi(xh, xl, 7);\n  const r = c0_hi ^ c1_hi ^ c2_hi;\n  return r >>> 0;\n}\n\nfunction g0_512_lo(xh, xl) {\n  const c0_lo = rotr64_lo(xh, xl, 1);\n  const c1_lo = rotr64_lo(xh, xl, 8);\n  const c2_lo = shr64_lo(xh, xl, 7);\n  const r = c0_lo ^ c1_lo ^ c2_lo;\n  return r >>> 0;\n}\n\nfunction g1_512_hi(xh, xl) {\n  const c0_hi = rotr64_hi(xh, xl, 19);\n  const c1_hi = rotr64_hi(xl, xh, 29); // 61\n  const c2_hi = shr64_hi(xh, xl, 6);\n  const r = c0_hi ^ c1_hi ^ c2_hi;\n  return r >>> 0;\n}\n\nfunction g1_512_lo(xh, xl) {\n  const c0_lo = rotr64_lo(xh, xl, 19);\n  const c1_lo = rotr64_lo(xl, xh, 29); // 61\n  const c2_lo = shr64_lo(xh, xl, 6);\n  const r = c0_lo ^ c1_lo ^ c2_lo;\n  return r >>> 0;\n}\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction writeU32(data, num, off) {\n  data[off++] = num >>> 24;\n  data[off++] = num >>> 16;\n  data[off++] = num >>> 8;\n  data[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = SHA512;\n","'use strict';\n\nmodule.exports = [\n  '的',\n  '一',\n  '是',\n  '在',\n  '不',\n  '了',\n  '有',\n  '和',\n  '人',\n  '这',\n  '中',\n  '大',\n  '为',\n  '上',\n  '个',\n  '国',\n  '我',\n  '以',\n  '要',\n  '他',\n  '时',\n  '来',\n  '用',\n  '们',\n  '生',\n  '到',\n  '作',\n  '地',\n  '于',\n  '出',\n  '就',\n  '分',\n  '对',\n  '成',\n  '会',\n  '可',\n  '主',\n  '发',\n  '年',\n  '动',\n  '同',\n  '工',\n  '也',\n  '能',\n  '下',\n  '过',\n  '子',\n  '说',\n  '产',\n  '种',\n  '面',\n  '而',\n  '方',\n  '后',\n  '多',\n  '定',\n  '行',\n  '学',\n  '法',\n  '所',\n  '民',\n  '得',\n  '经',\n  '十',\n  '三',\n  '之',\n  '进',\n  '着',\n  '等',\n  '部',\n  '度',\n  '家',\n  '电',\n  '力',\n  '里',\n  '如',\n  '水',\n  '化',\n  '高',\n  '自',\n  '二',\n  '理',\n  '起',\n  '小',\n  '物',\n  '现',\n  '实',\n  '加',\n  '量',\n  '都',\n  '两',\n  '体',\n  '制',\n  '机',\n  '当',\n  '使',\n  '点',\n  '从',\n  '业',\n  '本',\n  '去',\n  '把',\n  '性',\n  '好',\n  '应',\n  '开',\n  '它',\n  '合',\n  '还',\n  '因',\n  '由',\n  '其',\n  '些',\n  '然',\n  '前',\n  '外',\n  '天',\n  '政',\n  '四',\n  '日',\n  '那',\n  '社',\n  '义',\n  '事',\n  '平',\n  '形',\n  '相',\n  '全',\n  '表',\n  '间',\n  '样',\n  '与',\n  '关',\n  '各',\n  '重',\n  '新',\n  '线',\n  '内',\n  '数',\n  '正',\n  '心',\n  '反',\n  '你',\n  '明',\n  '看',\n  '原',\n  '又',\n  '么',\n  '利',\n  '比',\n  '或',\n  '但',\n  '质',\n  '气',\n  '第',\n  '向',\n  '道',\n  '命',\n  '此',\n  '变',\n  '条',\n  '只',\n  '没',\n  '结',\n  '解',\n  '问',\n  '意',\n  '建',\n  '月',\n  '公',\n  '无',\n  '系',\n  '军',\n  '很',\n  '情',\n  '者',\n  '最',\n  '立',\n  '代',\n  '想',\n  '已',\n  '通',\n  '并',\n  '提',\n  '直',\n  '题',\n  '党',\n  '程',\n  '展',\n  '五',\n  '果',\n  '料',\n  '象',\n  '员',\n  '革',\n  '位',\n  '入',\n  '常',\n  '文',\n  '总',\n  '次',\n  '品',\n  '式',\n  '活',\n  '设',\n  '及',\n  '管',\n  '特',\n  '件',\n  '长',\n  '求',\n  '老',\n  '头',\n  '基',\n  '资',\n  '边',\n  '流',\n  '路',\n  '级',\n  '少',\n  '图',\n  '山',\n  '统',\n  '接',\n  '知',\n  '较',\n  '将',\n  '组',\n  '见',\n  '计',\n  '别',\n  '她',\n  '手',\n  '角',\n  '期',\n  '根',\n  '论',\n  '运',\n  '农',\n  '指',\n  '几',\n  '九',\n  '区',\n  '强',\n  '放',\n  '决',\n  '西',\n  '被',\n  '干',\n  '做',\n  '必',\n  '战',\n  '先',\n  '回',\n  '则',\n  '任',\n  '取',\n  '据',\n  '处',\n  '队',\n  '南',\n  '给',\n  '色',\n  '光',\n  '门',\n  '即',\n  '保',\n  '治',\n  '北',\n  '造',\n  '百',\n  '规',\n  '热',\n  '领',\n  '七',\n  '海',\n  '口',\n  '东',\n  '导',\n  '器',\n  '压',\n  '志',\n  '世',\n  '金',\n  '增',\n  '争',\n  '济',\n  '阶',\n  '油',\n  '思',\n  '术',\n  '极',\n  '交',\n  '受',\n  '联',\n  '什',\n  '认',\n  '六',\n  '共',\n  '权',\n  '收',\n  '证',\n  '改',\n  '清',\n  '美',\n  '再',\n  '采',\n  '转',\n  '更',\n  '单',\n  '风',\n  '切',\n  '打',\n  '白',\n  '教',\n  '速',\n  '花',\n  '带',\n  '安',\n  '场',\n  '身',\n  '车',\n  '例',\n  '真',\n  '务',\n  '具',\n  '万',\n  '每',\n  '目',\n  '至',\n  '达',\n  '走',\n  '积',\n  '示',\n  '议',\n  '声',\n  '报',\n  '斗',\n  '完',\n  '类',\n  '八',\n  '离',\n  '华',\n  '名',\n  '确',\n  '才',\n  '科',\n  '张',\n  '信',\n  '马',\n  '节',\n  '话',\n  '米',\n  '整',\n  '空',\n  '元',\n  '况',\n  '今',\n  '集',\n  '温',\n  '传',\n  '土',\n  '许',\n  '步',\n  '群',\n  '广',\n  '石',\n  '记',\n  '需',\n  '段',\n  '研',\n  '界',\n  '拉',\n  '林',\n  '律',\n  '叫',\n  '且',\n  '究',\n  '观',\n  '越',\n  '织',\n  '装',\n  '影',\n  '算',\n  '低',\n  '持',\n  '音',\n  '众',\n  '书',\n  '布',\n  '复',\n  '容',\n  '儿',\n  '须',\n  '际',\n  '商',\n  '非',\n  '验',\n  '连',\n  '断',\n  '深',\n  '难',\n  '近',\n  '矿',\n  '千',\n  '周',\n  '委',\n  '素',\n  '技',\n  '备',\n  '半',\n  '办',\n  '青',\n  '省',\n  '列',\n  '习',\n  '响',\n  '约',\n  '支',\n  '般',\n  '史',\n  '感',\n  '劳',\n  '便',\n  '团',\n  '往',\n  '酸',\n  '历',\n  '市',\n  '克',\n  '何',\n  '除',\n  '消',\n  '构',\n  '府',\n  '称',\n  '太',\n  '准',\n  '精',\n  '值',\n  '号',\n  '率',\n  '族',\n  '维',\n  '划',\n  '选',\n  '标',\n  '写',\n  '存',\n  '候',\n  '毛',\n  '亲',\n  '快',\n  '效',\n  '斯',\n  '院',\n  '查',\n  '江',\n  '型',\n  '眼',\n  '王',\n  '按',\n  '格',\n  '养',\n  '易',\n  '置',\n  '派',\n  '层',\n  '片',\n  '始',\n  '却',\n  '专',\n  '状',\n  '育',\n  '厂',\n  '京',\n  '识',\n  '适',\n  '属',\n  '圆',\n  '包',\n  '火',\n  '住',\n  '调',\n  '满',\n  '县',\n  '局',\n  '照',\n  '参',\n  '红',\n  '细',\n  '引',\n  '听',\n  '该',\n  '铁',\n  '价',\n  '严',\n  '首',\n  '底',\n  '液',\n  '官',\n  '德',\n  '随',\n  '病',\n  '苏',\n  '失',\n  '尔',\n  '死',\n  '讲',\n  '配',\n  '女',\n  '黄',\n  '推',\n  '显',\n  '谈',\n  '罪',\n  '神',\n  '艺',\n  '呢',\n  '席',\n  '含',\n  '企',\n  '望',\n  '密',\n  '批',\n  '营',\n  '项',\n  '防',\n  '举',\n  '球',\n  '英',\n  '氧',\n  '势',\n  '告',\n  '李',\n  '台',\n  '落',\n  '木',\n  '帮',\n  '轮',\n  '破',\n  '亚',\n  '师',\n  '围',\n  '注',\n  '远',\n  '字',\n  '材',\n  '排',\n  '供',\n  '河',\n  '态',\n  '封',\n  '另',\n  '施',\n  '减',\n  '树',\n  '溶',\n  '怎',\n  '止',\n  '案',\n  '言',\n  '士',\n  '均',\n  '武',\n  '固',\n  '叶',\n  '鱼',\n  '波',\n  '视',\n  '仅',\n  '费',\n  '紧',\n  '爱',\n  '左',\n  '章',\n  '早',\n  '朝',\n  '害',\n  '续',\n  '轻',\n  '服',\n  '试',\n  '食',\n  '充',\n  '兵',\n  '源',\n  '判',\n  '护',\n  '司',\n  '足',\n  '某',\n  '练',\n  '差',\n  '致',\n  '板',\n  '田',\n  '降',\n  '黑',\n  '犯',\n  '负',\n  '击',\n  '范',\n  '继',\n  '兴',\n  '似',\n  '余',\n  '坚',\n  '曲',\n  '输',\n  '修',\n  '故',\n  '城',\n  '夫',\n  '够',\n  '送',\n  '笔',\n  '船',\n  '占',\n  '右',\n  '财',\n  '吃',\n  '富',\n  '春',\n  '职',\n  '觉',\n  '汉',\n  '画',\n  '功',\n  '巴',\n  '跟',\n  '虽',\n  '杂',\n  '飞',\n  '检',\n  '吸',\n  '助',\n  '升',\n  '阳',\n  '互',\n  '初',\n  '创',\n  '抗',\n  '考',\n  '投',\n  '坏',\n  '策',\n  '古',\n  '径',\n  '换',\n  '未',\n  '跑',\n  '留',\n  '钢',\n  '曾',\n  '端',\n  '责',\n  '站',\n  '简',\n  '述',\n  '钱',\n  '副',\n  '尽',\n  '帝',\n  '射',\n  '草',\n  '冲',\n  '承',\n  '独',\n  '令',\n  '限',\n  '阿',\n  '宣',\n  '环',\n  '双',\n  '请',\n  '超',\n  '微',\n  '让',\n  '控',\n  '州',\n  '良',\n  '轴',\n  '找',\n  '否',\n  '纪',\n  '益',\n  '依',\n  '优',\n  '顶',\n  '础',\n  '载',\n  '倒',\n  '房',\n  '突',\n  '坐',\n  '粉',\n  '敌',\n  '略',\n  '客',\n  '袁',\n  '冷',\n  '胜',\n  '绝',\n  '析',\n  '块',\n  '剂',\n  '测',\n  '丝',\n  '协',\n  '诉',\n  '念',\n  '陈',\n  '仍',\n  '罗',\n  '盐',\n  '友',\n  '洋',\n  '错',\n  '苦',\n  '夜',\n  '刑',\n  '移',\n  '频',\n  '逐',\n  '靠',\n  '混',\n  '母',\n  '短',\n  '皮',\n  '终',\n  '聚',\n  '汽',\n  '村',\n  '云',\n  '哪',\n  '既',\n  '距',\n  '卫',\n  '停',\n  '烈',\n  '央',\n  '察',\n  '烧',\n  '迅',\n  '境',\n  '若',\n  '印',\n  '洲',\n  '刻',\n  '括',\n  '激',\n  '孔',\n  '搞',\n  '甚',\n  '室',\n  '待',\n  '核',\n  '校',\n  '散',\n  '侵',\n  '吧',\n  '甲',\n  '游',\n  '久',\n  '菜',\n  '味',\n  '旧',\n  '模',\n  '湖',\n  '货',\n  '损',\n  '预',\n  '阻',\n  '毫',\n  '普',\n  '稳',\n  '乙',\n  '妈',\n  '植',\n  '息',\n  '扩',\n  '银',\n  '语',\n  '挥',\n  '酒',\n  '守',\n  '拿',\n  '序',\n  '纸',\n  '医',\n  '缺',\n  '雨',\n  '吗',\n  '针',\n  '刘',\n  '啊',\n  '急',\n  '唱',\n  '误',\n  '训',\n  '愿',\n  '审',\n  '附',\n  '获',\n  '茶',\n  '鲜',\n  '粮',\n  '斤',\n  '孩',\n  '脱',\n  '硫',\n  '肥',\n  '善',\n  '龙',\n  '演',\n  '父',\n  '渐',\n  '血',\n  '欢',\n  '械',\n  '掌',\n  '歌',\n  '沙',\n  '刚',\n  '攻',\n  '谓',\n  '盾',\n  '讨',\n  '晚',\n  '粒',\n  '乱',\n  '燃',\n  '矛',\n  '乎',\n  '杀',\n  '药',\n  '宁',\n  '鲁',\n  '贵',\n  '钟',\n  '煤',\n  '读',\n  '班',\n  '伯',\n  '香',\n  '介',\n  '迫',\n  '句',\n  '丰',\n  '培',\n  '握',\n  '兰',\n  '担',\n  '弦',\n  '蛋',\n  '沉',\n  '假',\n  '穿',\n  '执',\n  '答',\n  '乐',\n  '谁',\n  '顺',\n  '烟',\n  '缩',\n  '征',\n  '脸',\n  '喜',\n  '松',\n  '脚',\n  '困',\n  '异',\n  '免',\n  '背',\n  '星',\n  '福',\n  '买',\n  '染',\n  '井',\n  '概',\n  '慢',\n  '怕',\n  '磁',\n  '倍',\n  '祖',\n  '皇',\n  '促',\n  '静',\n  '补',\n  '评',\n  '翻',\n  '肉',\n  '践',\n  '尼',\n  '衣',\n  '宽',\n  '扬',\n  '棉',\n  '希',\n  '伤',\n  '操',\n  '垂',\n  '秋',\n  '宜',\n  '氢',\n  '套',\n  '督',\n  '振',\n  '架',\n  '亮',\n  '末',\n  '宪',\n  '庆',\n  '编',\n  '牛',\n  '触',\n  '映',\n  '雷',\n  '销',\n  '诗',\n  '座',\n  '居',\n  '抓',\n  '裂',\n  '胞',\n  '呼',\n  '娘',\n  '景',\n  '威',\n  '绿',\n  '晶',\n  '厚',\n  '盟',\n  '衡',\n  '鸡',\n  '孙',\n  '延',\n  '危',\n  '胶',\n  '屋',\n  '乡',\n  '临',\n  '陆',\n  '顾',\n  '掉',\n  '呀',\n  '灯',\n  '岁',\n  '措',\n  '束',\n  '耐',\n  '剧',\n  '玉',\n  '赵',\n  '跳',\n  '哥',\n  '季',\n  '课',\n  '凯',\n  '胡',\n  '额',\n  '款',\n  '绍',\n  '卷',\n  '齐',\n  '伟',\n  '蒸',\n  '殖',\n  '永',\n  '宗',\n  '苗',\n  '川',\n  '炉',\n  '岩',\n  '弱',\n  '零',\n  '杨',\n  '奏',\n  '沿',\n  '露',\n  '杆',\n  '探',\n  '滑',\n  '镇',\n  '饭',\n  '浓',\n  '航',\n  '怀',\n  '赶',\n  '库',\n  '夺',\n  '伊',\n  '灵',\n  '税',\n  '途',\n  '灭',\n  '赛',\n  '归',\n  '召',\n  '鼓',\n  '播',\n  '盘',\n  '裁',\n  '险',\n  '康',\n  '唯',\n  '录',\n  '菌',\n  '纯',\n  '借',\n  '糖',\n  '盖',\n  '横',\n  '符',\n  '私',\n  '努',\n  '堂',\n  '域',\n  '枪',\n  '润',\n  '幅',\n  '哈',\n  '竟',\n  '熟',\n  '虫',\n  '泽',\n  '脑',\n  '壤',\n  '碳',\n  '欧',\n  '遍',\n  '侧',\n  '寨',\n  '敢',\n  '彻',\n  '虑',\n  '斜',\n  '薄',\n  '庭',\n  '纳',\n  '弹',\n  '饲',\n  '伸',\n  '折',\n  '麦',\n  '湿',\n  '暗',\n  '荷',\n  '瓦',\n  '塞',\n  '床',\n  '筑',\n  '恶',\n  '户',\n  '访',\n  '塔',\n  '奇',\n  '透',\n  '梁',\n  '刀',\n  '旋',\n  '迹',\n  '卡',\n  '氯',\n  '遇',\n  '份',\n  '毒',\n  '泥',\n  '退',\n  '洗',\n  '摆',\n  '灰',\n  '彩',\n  '卖',\n  '耗',\n  '夏',\n  '择',\n  '忙',\n  '铜',\n  '献',\n  '硬',\n  '予',\n  '繁',\n  '圈',\n  '雪',\n  '函',\n  '亦',\n  '抽',\n  '篇',\n  '阵',\n  '阴',\n  '丁',\n  '尺',\n  '追',\n  '堆',\n  '雄',\n  '迎',\n  '泛',\n  '爸',\n  '楼',\n  '避',\n  '谋',\n  '吨',\n  '野',\n  '猪',\n  '旗',\n  '累',\n  '偏',\n  '典',\n  '馆',\n  '索',\n  '秦',\n  '脂',\n  '潮',\n  '爷',\n  '豆',\n  '忽',\n  '托',\n  '惊',\n  '塑',\n  '遗',\n  '愈',\n  '朱',\n  '替',\n  '纤',\n  '粗',\n  '倾',\n  '尚',\n  '痛',\n  '楚',\n  '谢',\n  '奋',\n  '购',\n  '磨',\n  '君',\n  '池',\n  '旁',\n  '碎',\n  '骨',\n  '监',\n  '捕',\n  '弟',\n  '暴',\n  '割',\n  '贯',\n  '殊',\n  '释',\n  '词',\n  '亡',\n  '壁',\n  '顿',\n  '宝',\n  '午',\n  '尘',\n  '闻',\n  '揭',\n  '炮',\n  '残',\n  '冬',\n  '桥',\n  '妇',\n  '警',\n  '综',\n  '招',\n  '吴',\n  '付',\n  '浮',\n  '遭',\n  '徐',\n  '您',\n  '摇',\n  '谷',\n  '赞',\n  '箱',\n  '隔',\n  '订',\n  '男',\n  '吹',\n  '园',\n  '纷',\n  '唐',\n  '败',\n  '宋',\n  '玻',\n  '巨',\n  '耕',\n  '坦',\n  '荣',\n  '闭',\n  '湾',\n  '键',\n  '凡',\n  '驻',\n  '锅',\n  '救',\n  '恩',\n  '剥',\n  '凝',\n  '碱',\n  '齿',\n  '截',\n  '炼',\n  '麻',\n  '纺',\n  '禁',\n  '废',\n  '盛',\n  '版',\n  '缓',\n  '净',\n  '睛',\n  '昌',\n  '婚',\n  '涉',\n  '筒',\n  '嘴',\n  '插',\n  '岸',\n  '朗',\n  '庄',\n  '街',\n  '藏',\n  '姑',\n  '贸',\n  '腐',\n  '奴',\n  '啦',\n  '惯',\n  '乘',\n  '伙',\n  '恢',\n  '匀',\n  '纱',\n  '扎',\n  '辩',\n  '耳',\n  '彪',\n  '臣',\n  '亿',\n  '璃',\n  '抵',\n  '脉',\n  '秀',\n  '萨',\n  '俄',\n  '网',\n  '舞',\n  '店',\n  '喷',\n  '纵',\n  '寸',\n  '汗',\n  '挂',\n  '洪',\n  '贺',\n  '闪',\n  '柬',\n  '爆',\n  '烯',\n  '津',\n  '稻',\n  '墙',\n  '软',\n  '勇',\n  '像',\n  '滚',\n  '厘',\n  '蒙',\n  '芳',\n  '肯',\n  '坡',\n  '柱',\n  '荡',\n  '腿',\n  '仪',\n  '旅',\n  '尾',\n  '轧',\n  '冰',\n  '贡',\n  '登',\n  '黎',\n  '削',\n  '钻',\n  '勒',\n  '逃',\n  '障',\n  '氨',\n  '郭',\n  '峰',\n  '币',\n  '港',\n  '伏',\n  '轨',\n  '亩',\n  '毕',\n  '擦',\n  '莫',\n  '刺',\n  '浪',\n  '秘',\n  '援',\n  '株',\n  '健',\n  '售',\n  '股',\n  '岛',\n  '甘',\n  '泡',\n  '睡',\n  '童',\n  '铸',\n  '汤',\n  '阀',\n  '休',\n  '汇',\n  '舍',\n  '牧',\n  '绕',\n  '炸',\n  '哲',\n  '磷',\n  '绩',\n  '朋',\n  '淡',\n  '尖',\n  '启',\n  '陷',\n  '柴',\n  '呈',\n  '徒',\n  '颜',\n  '泪',\n  '稍',\n  '忘',\n  '泵',\n  '蓝',\n  '拖',\n  '洞',\n  '授',\n  '镜',\n  '辛',\n  '壮',\n  '锋',\n  '贫',\n  '虚',\n  '弯',\n  '摩',\n  '泰',\n  '幼',\n  '廷',\n  '尊',\n  '窗',\n  '纲',\n  '弄',\n  '隶',\n  '疑',\n  '氏',\n  '宫',\n  '姐',\n  '震',\n  '瑞',\n  '怪',\n  '尤',\n  '琴',\n  '循',\n  '描',\n  '膜',\n  '违',\n  '夹',\n  '腰',\n  '缘',\n  '珠',\n  '穷',\n  '森',\n  '枝',\n  '竹',\n  '沟',\n  '催',\n  '绳',\n  '忆',\n  '邦',\n  '剩',\n  '幸',\n  '浆',\n  '栏',\n  '拥',\n  '牙',\n  '贮',\n  '礼',\n  '滤',\n  '钠',\n  '纹',\n  '罢',\n  '拍',\n  '咱',\n  '喊',\n  '袖',\n  '埃',\n  '勤',\n  '罚',\n  '焦',\n  '潜',\n  '伍',\n  '墨',\n  '欲',\n  '缝',\n  '姓',\n  '刊',\n  '饱',\n  '仿',\n  '奖',\n  '铝',\n  '鬼',\n  '丽',\n  '跨',\n  '默',\n  '挖',\n  '链',\n  '扫',\n  '喝',\n  '袋',\n  '炭',\n  '污',\n  '幕',\n  '诸',\n  '弧',\n  '励',\n  '梅',\n  '奶',\n  '洁',\n  '灾',\n  '舟',\n  '鉴',\n  '苯',\n  '讼',\n  '抱',\n  '毁',\n  '懂',\n  '寒',\n  '智',\n  '埔',\n  '寄',\n  '届',\n  '跃',\n  '渡',\n  '挑',\n  '丹',\n  '艰',\n  '贝',\n  '碰',\n  '拔',\n  '爹',\n  '戴',\n  '码',\n  '梦',\n  '芽',\n  '熔',\n  '赤',\n  '渔',\n  '哭',\n  '敬',\n  '颗',\n  '奔',\n  '铅',\n  '仲',\n  '虎',\n  '稀',\n  '妹',\n  '乏',\n  '珍',\n  '申',\n  '桌',\n  '遵',\n  '允',\n  '隆',\n  '螺',\n  '仓',\n  '魏',\n  '锐',\n  '晓',\n  '氮',\n  '兼',\n  '隐',\n  '碍',\n  '赫',\n  '拨',\n  '忠',\n  '肃',\n  '缸',\n  '牵',\n  '抢',\n  '博',\n  '巧',\n  '壳',\n  '兄',\n  '杜',\n  '讯',\n  '诚',\n  '碧',\n  '祥',\n  '柯',\n  '页',\n  '巡',\n  '矩',\n  '悲',\n  '灌',\n  '龄',\n  '伦',\n  '票',\n  '寻',\n  '桂',\n  '铺',\n  '圣',\n  '恐',\n  '恰',\n  '郑',\n  '趣',\n  '抬',\n  '荒',\n  '腾',\n  '贴',\n  '柔',\n  '滴',\n  '猛',\n  '阔',\n  '辆',\n  '妻',\n  '填',\n  '撤',\n  '储',\n  '签',\n  '闹',\n  '扰',\n  '紫',\n  '砂',\n  '递',\n  '戏',\n  '吊',\n  '陶',\n  '伐',\n  '喂',\n  '疗',\n  '瓶',\n  '婆',\n  '抚',\n  '臂',\n  '摸',\n  '忍',\n  '虾',\n  '蜡',\n  '邻',\n  '胸',\n  '巩',\n  '挤',\n  '偶',\n  '弃',\n  '槽',\n  '劲',\n  '乳',\n  '邓',\n  '吉',\n  '仁',\n  '烂',\n  '砖',\n  '租',\n  '乌',\n  '舰',\n  '伴',\n  '瓜',\n  '浅',\n  '丙',\n  '暂',\n  '燥',\n  '橡',\n  '柳',\n  '迷',\n  '暖',\n  '牌',\n  '秧',\n  '胆',\n  '详',\n  '簧',\n  '踏',\n  '瓷',\n  '谱',\n  '呆',\n  '宾',\n  '糊',\n  '洛',\n  '辉',\n  '愤',\n  '竞',\n  '隙',\n  '怒',\n  '粘',\n  '乃',\n  '绪',\n  '肩',\n  '籍',\n  '敏',\n  '涂',\n  '熙',\n  '皆',\n  '侦',\n  '悬',\n  '掘',\n  '享',\n  '纠',\n  '醒',\n  '狂',\n  '锁',\n  '淀',\n  '恨',\n  '牲',\n  '霸',\n  '爬',\n  '赏',\n  '逆',\n  '玩',\n  '陵',\n  '祝',\n  '秒',\n  '浙',\n  '貌',\n  '役',\n  '彼',\n  '悉',\n  '鸭',\n  '趋',\n  '凤',\n  '晨',\n  '畜',\n  '辈',\n  '秩',\n  '卵',\n  '署',\n  '梯',\n  '炎',\n  '滩',\n  '棋',\n  '驱',\n  '筛',\n  '峡',\n  '冒',\n  '啥',\n  '寿',\n  '译',\n  '浸',\n  '泉',\n  '帽',\n  '迟',\n  '硅',\n  '疆',\n  '贷',\n  '漏',\n  '稿',\n  '冠',\n  '嫩',\n  '胁',\n  '芯',\n  '牢',\n  '叛',\n  '蚀',\n  '奥',\n  '鸣',\n  '岭',\n  '羊',\n  '凭',\n  '串',\n  '塘',\n  '绘',\n  '酵',\n  '融',\n  '盆',\n  '锡',\n  '庙',\n  '筹',\n  '冻',\n  '辅',\n  '摄',\n  '袭',\n  '筋',\n  '拒',\n  '僚',\n  '旱',\n  '钾',\n  '鸟',\n  '漆',\n  '沈',\n  '眉',\n  '疏',\n  '添',\n  '棒',\n  '穗',\n  '硝',\n  '韩',\n  '逼',\n  '扭',\n  '侨',\n  '凉',\n  '挺',\n  '碗',\n  '栽',\n  '炒',\n  '杯',\n  '患',\n  '馏',\n  '劝',\n  '豪',\n  '辽',\n  '勃',\n  '鸿',\n  '旦',\n  '吏',\n  '拜',\n  '狗',\n  '埋',\n  '辊',\n  '掩',\n  '饮',\n  '搬',\n  '骂',\n  '辞',\n  '勾',\n  '扣',\n  '估',\n  '蒋',\n  '绒',\n  '雾',\n  '丈',\n  '朵',\n  '姆',\n  '拟',\n  '宇',\n  '辑',\n  '陕',\n  '雕',\n  '偿',\n  '蓄',\n  '崇',\n  '剪',\n  '倡',\n  '厅',\n  '咬',\n  '驶',\n  '薯',\n  '刷',\n  '斥',\n  '番',\n  '赋',\n  '奉',\n  '佛',\n  '浇',\n  '漫',\n  '曼',\n  '扇',\n  '钙',\n  '桃',\n  '扶',\n  '仔',\n  '返',\n  '俗',\n  '亏',\n  '腔',\n  '鞋',\n  '棱',\n  '覆',\n  '框',\n  '悄',\n  '叔',\n  '撞',\n  '骗',\n  '勘',\n  '旺',\n  '沸',\n  '孤',\n  '吐',\n  '孟',\n  '渠',\n  '屈',\n  '疾',\n  '妙',\n  '惜',\n  '仰',\n  '狠',\n  '胀',\n  '谐',\n  '抛',\n  '霉',\n  '桑',\n  '岗',\n  '嘛',\n  '衰',\n  '盗',\n  '渗',\n  '脏',\n  '赖',\n  '涌',\n  '甜',\n  '曹',\n  '阅',\n  '肌',\n  '哩',\n  '厉',\n  '烃',\n  '纬',\n  '毅',\n  '昨',\n  '伪',\n  '症',\n  '煮',\n  '叹',\n  '钉',\n  '搭',\n  '茎',\n  '笼',\n  '酷',\n  '偷',\n  '弓',\n  '锥',\n  '恒',\n  '杰',\n  '坑',\n  '鼻',\n  '翼',\n  '纶',\n  '叙',\n  '狱',\n  '逮',\n  '罐',\n  '络',\n  '棚',\n  '抑',\n  '膨',\n  '蔬',\n  '寺',\n  '骤',\n  '穆',\n  '冶',\n  '枯',\n  '册',\n  '尸',\n  '凸',\n  '绅',\n  '坯',\n  '牺',\n  '焰',\n  '轰',\n  '欣',\n  '晋',\n  '瘦',\n  '御',\n  '锭',\n  '锦',\n  '丧',\n  '旬',\n  '锻',\n  '垄',\n  '搜',\n  '扑',\n  '邀',\n  '亭',\n  '酯',\n  '迈',\n  '舒',\n  '脆',\n  '酶',\n  '闲',\n  '忧',\n  '酚',\n  '顽',\n  '羽',\n  '涨',\n  '卸',\n  '仗',\n  '陪',\n  '辟',\n  '惩',\n  '杭',\n  '姚',\n  '肚',\n  '捉',\n  '飘',\n  '漂',\n  '昆',\n  '欺',\n  '吾',\n  '郎',\n  '烷',\n  '汁',\n  '呵',\n  '饰',\n  '萧',\n  '雅',\n  '邮',\n  '迁',\n  '燕',\n  '撒',\n  '姻',\n  '赴',\n  '宴',\n  '烦',\n  '债',\n  '帐',\n  '斑',\n  '铃',\n  '旨',\n  '醇',\n  '董',\n  '饼',\n  '雏',\n  '姿',\n  '拌',\n  '傅',\n  '腹',\n  '妥',\n  '揉',\n  '贤',\n  '拆',\n  '歪',\n  '葡',\n  '胺',\n  '丢',\n  '浩',\n  '徽',\n  '昂',\n  '垫',\n  '挡',\n  '览',\n  '贪',\n  '慰',\n  '缴',\n  '汪',\n  '慌',\n  '冯',\n  '诺',\n  '姜',\n  '谊',\n  '凶',\n  '劣',\n  '诬',\n  '耀',\n  '昏',\n  '躺',\n  '盈',\n  '骑',\n  '乔',\n  '溪',\n  '丛',\n  '卢',\n  '抹',\n  '闷',\n  '咨',\n  '刮',\n  '驾',\n  '缆',\n  '悟',\n  '摘',\n  '铒',\n  '掷',\n  '颇',\n  '幻',\n  '柄',\n  '惠',\n  '惨',\n  '佳',\n  '仇',\n  '腊',\n  '窝',\n  '涤',\n  '剑',\n  '瞧',\n  '堡',\n  '泼',\n  '葱',\n  '罩',\n  '霍',\n  '捞',\n  '胎',\n  '苍',\n  '滨',\n  '俩',\n  '捅',\n  '湘',\n  '砍',\n  '霞',\n  '邵',\n  '萄',\n  '疯',\n  '淮',\n  '遂',\n  '熊',\n  '粪',\n  '烘',\n  '宿',\n  '档',\n  '戈',\n  '驳',\n  '嫂',\n  '裕',\n  '徙',\n  '箭',\n  '捐',\n  '肠',\n  '撑',\n  '晒',\n  '辨',\n  '殿',\n  '莲',\n  '摊',\n  '搅',\n  '酱',\n  '屏',\n  '疫',\n  '哀',\n  '蔡',\n  '堵',\n  '沫',\n  '皱',\n  '畅',\n  '叠',\n  '阁',\n  '莱',\n  '敲',\n  '辖',\n  '钩',\n  '痕',\n  '坝',\n  '巷',\n  '饿',\n  '祸',\n  '丘',\n  '玄',\n  '溜',\n  '曰',\n  '逻',\n  '彭',\n  '尝',\n  '卿',\n  '妨',\n  '艇',\n  '吞',\n  '韦',\n  '怨',\n  '矮',\n  '歇'\n];\n","'use strict';\n\nmodule.exports = [\n  '的',\n  '一',\n  '是',\n  '在',\n  '不',\n  '了',\n  '有',\n  '和',\n  '人',\n  '這',\n  '中',\n  '大',\n  '為',\n  '上',\n  '個',\n  '國',\n  '我',\n  '以',\n  '要',\n  '他',\n  '時',\n  '來',\n  '用',\n  '們',\n  '生',\n  '到',\n  '作',\n  '地',\n  '於',\n  '出',\n  '就',\n  '分',\n  '對',\n  '成',\n  '會',\n  '可',\n  '主',\n  '發',\n  '年',\n  '動',\n  '同',\n  '工',\n  '也',\n  '能',\n  '下',\n  '過',\n  '子',\n  '說',\n  '產',\n  '種',\n  '面',\n  '而',\n  '方',\n  '後',\n  '多',\n  '定',\n  '行',\n  '學',\n  '法',\n  '所',\n  '民',\n  '得',\n  '經',\n  '十',\n  '三',\n  '之',\n  '進',\n  '著',\n  '等',\n  '部',\n  '度',\n  '家',\n  '電',\n  '力',\n  '裡',\n  '如',\n  '水',\n  '化',\n  '高',\n  '自',\n  '二',\n  '理',\n  '起',\n  '小',\n  '物',\n  '現',\n  '實',\n  '加',\n  '量',\n  '都',\n  '兩',\n  '體',\n  '制',\n  '機',\n  '當',\n  '使',\n  '點',\n  '從',\n  '業',\n  '本',\n  '去',\n  '把',\n  '性',\n  '好',\n  '應',\n  '開',\n  '它',\n  '合',\n  '還',\n  '因',\n  '由',\n  '其',\n  '些',\n  '然',\n  '前',\n  '外',\n  '天',\n  '政',\n  '四',\n  '日',\n  '那',\n  '社',\n  '義',\n  '事',\n  '平',\n  '形',\n  '相',\n  '全',\n  '表',\n  '間',\n  '樣',\n  '與',\n  '關',\n  '各',\n  '重',\n  '新',\n  '線',\n  '內',\n  '數',\n  '正',\n  '心',\n  '反',\n  '你',\n  '明',\n  '看',\n  '原',\n  '又',\n  '麼',\n  '利',\n  '比',\n  '或',\n  '但',\n  '質',\n  '氣',\n  '第',\n  '向',\n  '道',\n  '命',\n  '此',\n  '變',\n  '條',\n  '只',\n  '沒',\n  '結',\n  '解',\n  '問',\n  '意',\n  '建',\n  '月',\n  '公',\n  '無',\n  '系',\n  '軍',\n  '很',\n  '情',\n  '者',\n  '最',\n  '立',\n  '代',\n  '想',\n  '已',\n  '通',\n  '並',\n  '提',\n  '直',\n  '題',\n  '黨',\n  '程',\n  '展',\n  '五',\n  '果',\n  '料',\n  '象',\n  '員',\n  '革',\n  '位',\n  '入',\n  '常',\n  '文',\n  '總',\n  '次',\n  '品',\n  '式',\n  '活',\n  '設',\n  '及',\n  '管',\n  '特',\n  '件',\n  '長',\n  '求',\n  '老',\n  '頭',\n  '基',\n  '資',\n  '邊',\n  '流',\n  '路',\n  '級',\n  '少',\n  '圖',\n  '山',\n  '統',\n  '接',\n  '知',\n  '較',\n  '將',\n  '組',\n  '見',\n  '計',\n  '別',\n  '她',\n  '手',\n  '角',\n  '期',\n  '根',\n  '論',\n  '運',\n  '農',\n  '指',\n  '幾',\n  '九',\n  '區',\n  '強',\n  '放',\n  '決',\n  '西',\n  '被',\n  '幹',\n  '做',\n  '必',\n  '戰',\n  '先',\n  '回',\n  '則',\n  '任',\n  '取',\n  '據',\n  '處',\n  '隊',\n  '南',\n  '給',\n  '色',\n  '光',\n  '門',\n  '即',\n  '保',\n  '治',\n  '北',\n  '造',\n  '百',\n  '規',\n  '熱',\n  '領',\n  '七',\n  '海',\n  '口',\n  '東',\n  '導',\n  '器',\n  '壓',\n  '志',\n  '世',\n  '金',\n  '增',\n  '爭',\n  '濟',\n  '階',\n  '油',\n  '思',\n  '術',\n  '極',\n  '交',\n  '受',\n  '聯',\n  '什',\n  '認',\n  '六',\n  '共',\n  '權',\n  '收',\n  '證',\n  '改',\n  '清',\n  '美',\n  '再',\n  '採',\n  '轉',\n  '更',\n  '單',\n  '風',\n  '切',\n  '打',\n  '白',\n  '教',\n  '速',\n  '花',\n  '帶',\n  '安',\n  '場',\n  '身',\n  '車',\n  '例',\n  '真',\n  '務',\n  '具',\n  '萬',\n  '每',\n  '目',\n  '至',\n  '達',\n  '走',\n  '積',\n  '示',\n  '議',\n  '聲',\n  '報',\n  '鬥',\n  '完',\n  '類',\n  '八',\n  '離',\n  '華',\n  '名',\n  '確',\n  '才',\n  '科',\n  '張',\n  '信',\n  '馬',\n  '節',\n  '話',\n  '米',\n  '整',\n  '空',\n  '元',\n  '況',\n  '今',\n  '集',\n  '溫',\n  '傳',\n  '土',\n  '許',\n  '步',\n  '群',\n  '廣',\n  '石',\n  '記',\n  '需',\n  '段',\n  '研',\n  '界',\n  '拉',\n  '林',\n  '律',\n  '叫',\n  '且',\n  '究',\n  '觀',\n  '越',\n  '織',\n  '裝',\n  '影',\n  '算',\n  '低',\n  '持',\n  '音',\n  '眾',\n  '書',\n  '布',\n  '复',\n  '容',\n  '兒',\n  '須',\n  '際',\n  '商',\n  '非',\n  '驗',\n  '連',\n  '斷',\n  '深',\n  '難',\n  '近',\n  '礦',\n  '千',\n  '週',\n  '委',\n  '素',\n  '技',\n  '備',\n  '半',\n  '辦',\n  '青',\n  '省',\n  '列',\n  '習',\n  '響',\n  '約',\n  '支',\n  '般',\n  '史',\n  '感',\n  '勞',\n  '便',\n  '團',\n  '往',\n  '酸',\n  '歷',\n  '市',\n  '克',\n  '何',\n  '除',\n  '消',\n  '構',\n  '府',\n  '稱',\n  '太',\n  '準',\n  '精',\n  '值',\n  '號',\n  '率',\n  '族',\n  '維',\n  '劃',\n  '選',\n  '標',\n  '寫',\n  '存',\n  '候',\n  '毛',\n  '親',\n  '快',\n  '效',\n  '斯',\n  '院',\n  '查',\n  '江',\n  '型',\n  '眼',\n  '王',\n  '按',\n  '格',\n  '養',\n  '易',\n  '置',\n  '派',\n  '層',\n  '片',\n  '始',\n  '卻',\n  '專',\n  '狀',\n  '育',\n  '廠',\n  '京',\n  '識',\n  '適',\n  '屬',\n  '圓',\n  '包',\n  '火',\n  '住',\n  '調',\n  '滿',\n  '縣',\n  '局',\n  '照',\n  '參',\n  '紅',\n  '細',\n  '引',\n  '聽',\n  '該',\n  '鐵',\n  '價',\n  '嚴',\n  '首',\n  '底',\n  '液',\n  '官',\n  '德',\n  '隨',\n  '病',\n  '蘇',\n  '失',\n  '爾',\n  '死',\n  '講',\n  '配',\n  '女',\n  '黃',\n  '推',\n  '顯',\n  '談',\n  '罪',\n  '神',\n  '藝',\n  '呢',\n  '席',\n  '含',\n  '企',\n  '望',\n  '密',\n  '批',\n  '營',\n  '項',\n  '防',\n  '舉',\n  '球',\n  '英',\n  '氧',\n  '勢',\n  '告',\n  '李',\n  '台',\n  '落',\n  '木',\n  '幫',\n  '輪',\n  '破',\n  '亞',\n  '師',\n  '圍',\n  '注',\n  '遠',\n  '字',\n  '材',\n  '排',\n  '供',\n  '河',\n  '態',\n  '封',\n  '另',\n  '施',\n  '減',\n  '樹',\n  '溶',\n  '怎',\n  '止',\n  '案',\n  '言',\n  '士',\n  '均',\n  '武',\n  '固',\n  '葉',\n  '魚',\n  '波',\n  '視',\n  '僅',\n  '費',\n  '緊',\n  '愛',\n  '左',\n  '章',\n  '早',\n  '朝',\n  '害',\n  '續',\n  '輕',\n  '服',\n  '試',\n  '食',\n  '充',\n  '兵',\n  '源',\n  '判',\n  '護',\n  '司',\n  '足',\n  '某',\n  '練',\n  '差',\n  '致',\n  '板',\n  '田',\n  '降',\n  '黑',\n  '犯',\n  '負',\n  '擊',\n  '范',\n  '繼',\n  '興',\n  '似',\n  '餘',\n  '堅',\n  '曲',\n  '輸',\n  '修',\n  '故',\n  '城',\n  '夫',\n  '夠',\n  '送',\n  '筆',\n  '船',\n  '佔',\n  '右',\n  '財',\n  '吃',\n  '富',\n  '春',\n  '職',\n  '覺',\n  '漢',\n  '畫',\n  '功',\n  '巴',\n  '跟',\n  '雖',\n  '雜',\n  '飛',\n  '檢',\n  '吸',\n  '助',\n  '昇',\n  '陽',\n  '互',\n  '初',\n  '創',\n  '抗',\n  '考',\n  '投',\n  '壞',\n  '策',\n  '古',\n  '徑',\n  '換',\n  '未',\n  '跑',\n  '留',\n  '鋼',\n  '曾',\n  '端',\n  '責',\n  '站',\n  '簡',\n  '述',\n  '錢',\n  '副',\n  '盡',\n  '帝',\n  '射',\n  '草',\n  '衝',\n  '承',\n  '獨',\n  '令',\n  '限',\n  '阿',\n  '宣',\n  '環',\n  '雙',\n  '請',\n  '超',\n  '微',\n  '讓',\n  '控',\n  '州',\n  '良',\n  '軸',\n  '找',\n  '否',\n  '紀',\n  '益',\n  '依',\n  '優',\n  '頂',\n  '礎',\n  '載',\n  '倒',\n  '房',\n  '突',\n  '坐',\n  '粉',\n  '敵',\n  '略',\n  '客',\n  '袁',\n  '冷',\n  '勝',\n  '絕',\n  '析',\n  '塊',\n  '劑',\n  '測',\n  '絲',\n  '協',\n  '訴',\n  '念',\n  '陳',\n  '仍',\n  '羅',\n  '鹽',\n  '友',\n  '洋',\n  '錯',\n  '苦',\n  '夜',\n  '刑',\n  '移',\n  '頻',\n  '逐',\n  '靠',\n  '混',\n  '母',\n  '短',\n  '皮',\n  '終',\n  '聚',\n  '汽',\n  '村',\n  '雲',\n  '哪',\n  '既',\n  '距',\n  '衛',\n  '停',\n  '烈',\n  '央',\n  '察',\n  '燒',\n  '迅',\n  '境',\n  '若',\n  '印',\n  '洲',\n  '刻',\n  '括',\n  '激',\n  '孔',\n  '搞',\n  '甚',\n  '室',\n  '待',\n  '核',\n  '校',\n  '散',\n  '侵',\n  '吧',\n  '甲',\n  '遊',\n  '久',\n  '菜',\n  '味',\n  '舊',\n  '模',\n  '湖',\n  '貨',\n  '損',\n  '預',\n  '阻',\n  '毫',\n  '普',\n  '穩',\n  '乙',\n  '媽',\n  '植',\n  '息',\n  '擴',\n  '銀',\n  '語',\n  '揮',\n  '酒',\n  '守',\n  '拿',\n  '序',\n  '紙',\n  '醫',\n  '缺',\n  '雨',\n  '嗎',\n  '針',\n  '劉',\n  '啊',\n  '急',\n  '唱',\n  '誤',\n  '訓',\n  '願',\n  '審',\n  '附',\n  '獲',\n  '茶',\n  '鮮',\n  '糧',\n  '斤',\n  '孩',\n  '脫',\n  '硫',\n  '肥',\n  '善',\n  '龍',\n  '演',\n  '父',\n  '漸',\n  '血',\n  '歡',\n  '械',\n  '掌',\n  '歌',\n  '沙',\n  '剛',\n  '攻',\n  '謂',\n  '盾',\n  '討',\n  '晚',\n  '粒',\n  '亂',\n  '燃',\n  '矛',\n  '乎',\n  '殺',\n  '藥',\n  '寧',\n  '魯',\n  '貴',\n  '鐘',\n  '煤',\n  '讀',\n  '班',\n  '伯',\n  '香',\n  '介',\n  '迫',\n  '句',\n  '豐',\n  '培',\n  '握',\n  '蘭',\n  '擔',\n  '弦',\n  '蛋',\n  '沉',\n  '假',\n  '穿',\n  '執',\n  '答',\n  '樂',\n  '誰',\n  '順',\n  '煙',\n  '縮',\n  '徵',\n  '臉',\n  '喜',\n  '松',\n  '腳',\n  '困',\n  '異',\n  '免',\n  '背',\n  '星',\n  '福',\n  '買',\n  '染',\n  '井',\n  '概',\n  '慢',\n  '怕',\n  '磁',\n  '倍',\n  '祖',\n  '皇',\n  '促',\n  '靜',\n  '補',\n  '評',\n  '翻',\n  '肉',\n  '踐',\n  '尼',\n  '衣',\n  '寬',\n  '揚',\n  '棉',\n  '希',\n  '傷',\n  '操',\n  '垂',\n  '秋',\n  '宜',\n  '氫',\n  '套',\n  '督',\n  '振',\n  '架',\n  '亮',\n  '末',\n  '憲',\n  '慶',\n  '編',\n  '牛',\n  '觸',\n  '映',\n  '雷',\n  '銷',\n  '詩',\n  '座',\n  '居',\n  '抓',\n  '裂',\n  '胞',\n  '呼',\n  '娘',\n  '景',\n  '威',\n  '綠',\n  '晶',\n  '厚',\n  '盟',\n  '衡',\n  '雞',\n  '孫',\n  '延',\n  '危',\n  '膠',\n  '屋',\n  '鄉',\n  '臨',\n  '陸',\n  '顧',\n  '掉',\n  '呀',\n  '燈',\n  '歲',\n  '措',\n  '束',\n  '耐',\n  '劇',\n  '玉',\n  '趙',\n  '跳',\n  '哥',\n  '季',\n  '課',\n  '凱',\n  '胡',\n  '額',\n  '款',\n  '紹',\n  '卷',\n  '齊',\n  '偉',\n  '蒸',\n  '殖',\n  '永',\n  '宗',\n  '苗',\n  '川',\n  '爐',\n  '岩',\n  '弱',\n  '零',\n  '楊',\n  '奏',\n  '沿',\n  '露',\n  '桿',\n  '探',\n  '滑',\n  '鎮',\n  '飯',\n  '濃',\n  '航',\n  '懷',\n  '趕',\n  '庫',\n  '奪',\n  '伊',\n  '靈',\n  '稅',\n  '途',\n  '滅',\n  '賽',\n  '歸',\n  '召',\n  '鼓',\n  '播',\n  '盤',\n  '裁',\n  '險',\n  '康',\n  '唯',\n  '錄',\n  '菌',\n  '純',\n  '借',\n  '糖',\n  '蓋',\n  '橫',\n  '符',\n  '私',\n  '努',\n  '堂',\n  '域',\n  '槍',\n  '潤',\n  '幅',\n  '哈',\n  '竟',\n  '熟',\n  '蟲',\n  '澤',\n  '腦',\n  '壤',\n  '碳',\n  '歐',\n  '遍',\n  '側',\n  '寨',\n  '敢',\n  '徹',\n  '慮',\n  '斜',\n  '薄',\n  '庭',\n  '納',\n  '彈',\n  '飼',\n  '伸',\n  '折',\n  '麥',\n  '濕',\n  '暗',\n  '荷',\n  '瓦',\n  '塞',\n  '床',\n  '築',\n  '惡',\n  '戶',\n  '訪',\n  '塔',\n  '奇',\n  '透',\n  '梁',\n  '刀',\n  '旋',\n  '跡',\n  '卡',\n  '氯',\n  '遇',\n  '份',\n  '毒',\n  '泥',\n  '退',\n  '洗',\n  '擺',\n  '灰',\n  '彩',\n  '賣',\n  '耗',\n  '夏',\n  '擇',\n  '忙',\n  '銅',\n  '獻',\n  '硬',\n  '予',\n  '繁',\n  '圈',\n  '雪',\n  '函',\n  '亦',\n  '抽',\n  '篇',\n  '陣',\n  '陰',\n  '丁',\n  '尺',\n  '追',\n  '堆',\n  '雄',\n  '迎',\n  '泛',\n  '爸',\n  '樓',\n  '避',\n  '謀',\n  '噸',\n  '野',\n  '豬',\n  '旗',\n  '累',\n  '偏',\n  '典',\n  '館',\n  '索',\n  '秦',\n  '脂',\n  '潮',\n  '爺',\n  '豆',\n  '忽',\n  '托',\n  '驚',\n  '塑',\n  '遺',\n  '愈',\n  '朱',\n  '替',\n  '纖',\n  '粗',\n  '傾',\n  '尚',\n  '痛',\n  '楚',\n  '謝',\n  '奮',\n  '購',\n  '磨',\n  '君',\n  '池',\n  '旁',\n  '碎',\n  '骨',\n  '監',\n  '捕',\n  '弟',\n  '暴',\n  '割',\n  '貫',\n  '殊',\n  '釋',\n  '詞',\n  '亡',\n  '壁',\n  '頓',\n  '寶',\n  '午',\n  '塵',\n  '聞',\n  '揭',\n  '炮',\n  '殘',\n  '冬',\n  '橋',\n  '婦',\n  '警',\n  '綜',\n  '招',\n  '吳',\n  '付',\n  '浮',\n  '遭',\n  '徐',\n  '您',\n  '搖',\n  '谷',\n  '贊',\n  '箱',\n  '隔',\n  '訂',\n  '男',\n  '吹',\n  '園',\n  '紛',\n  '唐',\n  '敗',\n  '宋',\n  '玻',\n  '巨',\n  '耕',\n  '坦',\n  '榮',\n  '閉',\n  '灣',\n  '鍵',\n  '凡',\n  '駐',\n  '鍋',\n  '救',\n  '恩',\n  '剝',\n  '凝',\n  '鹼',\n  '齒',\n  '截',\n  '煉',\n  '麻',\n  '紡',\n  '禁',\n  '廢',\n  '盛',\n  '版',\n  '緩',\n  '淨',\n  '睛',\n  '昌',\n  '婚',\n  '涉',\n  '筒',\n  '嘴',\n  '插',\n  '岸',\n  '朗',\n  '莊',\n  '街',\n  '藏',\n  '姑',\n  '貿',\n  '腐',\n  '奴',\n  '啦',\n  '慣',\n  '乘',\n  '夥',\n  '恢',\n  '勻',\n  '紗',\n  '扎',\n  '辯',\n  '耳',\n  '彪',\n  '臣',\n  '億',\n  '璃',\n  '抵',\n  '脈',\n  '秀',\n  '薩',\n  '俄',\n  '網',\n  '舞',\n  '店',\n  '噴',\n  '縱',\n  '寸',\n  '汗',\n  '掛',\n  '洪',\n  '賀',\n  '閃',\n  '柬',\n  '爆',\n  '烯',\n  '津',\n  '稻',\n  '牆',\n  '軟',\n  '勇',\n  '像',\n  '滾',\n  '厘',\n  '蒙',\n  '芳',\n  '肯',\n  '坡',\n  '柱',\n  '盪',\n  '腿',\n  '儀',\n  '旅',\n  '尾',\n  '軋',\n  '冰',\n  '貢',\n  '登',\n  '黎',\n  '削',\n  '鑽',\n  '勒',\n  '逃',\n  '障',\n  '氨',\n  '郭',\n  '峰',\n  '幣',\n  '港',\n  '伏',\n  '軌',\n  '畝',\n  '畢',\n  '擦',\n  '莫',\n  '刺',\n  '浪',\n  '秘',\n  '援',\n  '株',\n  '健',\n  '售',\n  '股',\n  '島',\n  '甘',\n  '泡',\n  '睡',\n  '童',\n  '鑄',\n  '湯',\n  '閥',\n  '休',\n  '匯',\n  '舍',\n  '牧',\n  '繞',\n  '炸',\n  '哲',\n  '磷',\n  '績',\n  '朋',\n  '淡',\n  '尖',\n  '啟',\n  '陷',\n  '柴',\n  '呈',\n  '徒',\n  '顏',\n  '淚',\n  '稍',\n  '忘',\n  '泵',\n  '藍',\n  '拖',\n  '洞',\n  '授',\n  '鏡',\n  '辛',\n  '壯',\n  '鋒',\n  '貧',\n  '虛',\n  '彎',\n  '摩',\n  '泰',\n  '幼',\n  '廷',\n  '尊',\n  '窗',\n  '綱',\n  '弄',\n  '隸',\n  '疑',\n  '氏',\n  '宮',\n  '姐',\n  '震',\n  '瑞',\n  '怪',\n  '尤',\n  '琴',\n  '循',\n  '描',\n  '膜',\n  '違',\n  '夾',\n  '腰',\n  '緣',\n  '珠',\n  '窮',\n  '森',\n  '枝',\n  '竹',\n  '溝',\n  '催',\n  '繩',\n  '憶',\n  '邦',\n  '剩',\n  '幸',\n  '漿',\n  '欄',\n  '擁',\n  '牙',\n  '貯',\n  '禮',\n  '濾',\n  '鈉',\n  '紋',\n  '罷',\n  '拍',\n  '咱',\n  '喊',\n  '袖',\n  '埃',\n  '勤',\n  '罰',\n  '焦',\n  '潛',\n  '伍',\n  '墨',\n  '欲',\n  '縫',\n  '姓',\n  '刊',\n  '飽',\n  '仿',\n  '獎',\n  '鋁',\n  '鬼',\n  '麗',\n  '跨',\n  '默',\n  '挖',\n  '鏈',\n  '掃',\n  '喝',\n  '袋',\n  '炭',\n  '污',\n  '幕',\n  '諸',\n  '弧',\n  '勵',\n  '梅',\n  '奶',\n  '潔',\n  '災',\n  '舟',\n  '鑑',\n  '苯',\n  '訟',\n  '抱',\n  '毀',\n  '懂',\n  '寒',\n  '智',\n  '埔',\n  '寄',\n  '屆',\n  '躍',\n  '渡',\n  '挑',\n  '丹',\n  '艱',\n  '貝',\n  '碰',\n  '拔',\n  '爹',\n  '戴',\n  '碼',\n  '夢',\n  '芽',\n  '熔',\n  '赤',\n  '漁',\n  '哭',\n  '敬',\n  '顆',\n  '奔',\n  '鉛',\n  '仲',\n  '虎',\n  '稀',\n  '妹',\n  '乏',\n  '珍',\n  '申',\n  '桌',\n  '遵',\n  '允',\n  '隆',\n  '螺',\n  '倉',\n  '魏',\n  '銳',\n  '曉',\n  '氮',\n  '兼',\n  '隱',\n  '礙',\n  '赫',\n  '撥',\n  '忠',\n  '肅',\n  '缸',\n  '牽',\n  '搶',\n  '博',\n  '巧',\n  '殼',\n  '兄',\n  '杜',\n  '訊',\n  '誠',\n  '碧',\n  '祥',\n  '柯',\n  '頁',\n  '巡',\n  '矩',\n  '悲',\n  '灌',\n  '齡',\n  '倫',\n  '票',\n  '尋',\n  '桂',\n  '鋪',\n  '聖',\n  '恐',\n  '恰',\n  '鄭',\n  '趣',\n  '抬',\n  '荒',\n  '騰',\n  '貼',\n  '柔',\n  '滴',\n  '猛',\n  '闊',\n  '輛',\n  '妻',\n  '填',\n  '撤',\n  '儲',\n  '簽',\n  '鬧',\n  '擾',\n  '紫',\n  '砂',\n  '遞',\n  '戲',\n  '吊',\n  '陶',\n  '伐',\n  '餵',\n  '療',\n  '瓶',\n  '婆',\n  '撫',\n  '臂',\n  '摸',\n  '忍',\n  '蝦',\n  '蠟',\n  '鄰',\n  '胸',\n  '鞏',\n  '擠',\n  '偶',\n  '棄',\n  '槽',\n  '勁',\n  '乳',\n  '鄧',\n  '吉',\n  '仁',\n  '爛',\n  '磚',\n  '租',\n  '烏',\n  '艦',\n  '伴',\n  '瓜',\n  '淺',\n  '丙',\n  '暫',\n  '燥',\n  '橡',\n  '柳',\n  '迷',\n  '暖',\n  '牌',\n  '秧',\n  '膽',\n  '詳',\n  '簧',\n  '踏',\n  '瓷',\n  '譜',\n  '呆',\n  '賓',\n  '糊',\n  '洛',\n  '輝',\n  '憤',\n  '競',\n  '隙',\n  '怒',\n  '粘',\n  '乃',\n  '緒',\n  '肩',\n  '籍',\n  '敏',\n  '塗',\n  '熙',\n  '皆',\n  '偵',\n  '懸',\n  '掘',\n  '享',\n  '糾',\n  '醒',\n  '狂',\n  '鎖',\n  '淀',\n  '恨',\n  '牲',\n  '霸',\n  '爬',\n  '賞',\n  '逆',\n  '玩',\n  '陵',\n  '祝',\n  '秒',\n  '浙',\n  '貌',\n  '役',\n  '彼',\n  '悉',\n  '鴨',\n  '趨',\n  '鳳',\n  '晨',\n  '畜',\n  '輩',\n  '秩',\n  '卵',\n  '署',\n  '梯',\n  '炎',\n  '灘',\n  '棋',\n  '驅',\n  '篩',\n  '峽',\n  '冒',\n  '啥',\n  '壽',\n  '譯',\n  '浸',\n  '泉',\n  '帽',\n  '遲',\n  '矽',\n  '疆',\n  '貸',\n  '漏',\n  '稿',\n  '冠',\n  '嫩',\n  '脅',\n  '芯',\n  '牢',\n  '叛',\n  '蝕',\n  '奧',\n  '鳴',\n  '嶺',\n  '羊',\n  '憑',\n  '串',\n  '塘',\n  '繪',\n  '酵',\n  '融',\n  '盆',\n  '錫',\n  '廟',\n  '籌',\n  '凍',\n  '輔',\n  '攝',\n  '襲',\n  '筋',\n  '拒',\n  '僚',\n  '旱',\n  '鉀',\n  '鳥',\n  '漆',\n  '沈',\n  '眉',\n  '疏',\n  '添',\n  '棒',\n  '穗',\n  '硝',\n  '韓',\n  '逼',\n  '扭',\n  '僑',\n  '涼',\n  '挺',\n  '碗',\n  '栽',\n  '炒',\n  '杯',\n  '患',\n  '餾',\n  '勸',\n  '豪',\n  '遼',\n  '勃',\n  '鴻',\n  '旦',\n  '吏',\n  '拜',\n  '狗',\n  '埋',\n  '輥',\n  '掩',\n  '飲',\n  '搬',\n  '罵',\n  '辭',\n  '勾',\n  '扣',\n  '估',\n  '蔣',\n  '絨',\n  '霧',\n  '丈',\n  '朵',\n  '姆',\n  '擬',\n  '宇',\n  '輯',\n  '陝',\n  '雕',\n  '償',\n  '蓄',\n  '崇',\n  '剪',\n  '倡',\n  '廳',\n  '咬',\n  '駛',\n  '薯',\n  '刷',\n  '斥',\n  '番',\n  '賦',\n  '奉',\n  '佛',\n  '澆',\n  '漫',\n  '曼',\n  '扇',\n  '鈣',\n  '桃',\n  '扶',\n  '仔',\n  '返',\n  '俗',\n  '虧',\n  '腔',\n  '鞋',\n  '棱',\n  '覆',\n  '框',\n  '悄',\n  '叔',\n  '撞',\n  '騙',\n  '勘',\n  '旺',\n  '沸',\n  '孤',\n  '吐',\n  '孟',\n  '渠',\n  '屈',\n  '疾',\n  '妙',\n  '惜',\n  '仰',\n  '狠',\n  '脹',\n  '諧',\n  '拋',\n  '黴',\n  '桑',\n  '崗',\n  '嘛',\n  '衰',\n  '盜',\n  '滲',\n  '臟',\n  '賴',\n  '湧',\n  '甜',\n  '曹',\n  '閱',\n  '肌',\n  '哩',\n  '厲',\n  '烴',\n  '緯',\n  '毅',\n  '昨',\n  '偽',\n  '症',\n  '煮',\n  '嘆',\n  '釘',\n  '搭',\n  '莖',\n  '籠',\n  '酷',\n  '偷',\n  '弓',\n  '錐',\n  '恆',\n  '傑',\n  '坑',\n  '鼻',\n  '翼',\n  '綸',\n  '敘',\n  '獄',\n  '逮',\n  '罐',\n  '絡',\n  '棚',\n  '抑',\n  '膨',\n  '蔬',\n  '寺',\n  '驟',\n  '穆',\n  '冶',\n  '枯',\n  '冊',\n  '屍',\n  '凸',\n  '紳',\n  '坯',\n  '犧',\n  '焰',\n  '轟',\n  '欣',\n  '晉',\n  '瘦',\n  '禦',\n  '錠',\n  '錦',\n  '喪',\n  '旬',\n  '鍛',\n  '壟',\n  '搜',\n  '撲',\n  '邀',\n  '亭',\n  '酯',\n  '邁',\n  '舒',\n  '脆',\n  '酶',\n  '閒',\n  '憂',\n  '酚',\n  '頑',\n  '羽',\n  '漲',\n  '卸',\n  '仗',\n  '陪',\n  '闢',\n  '懲',\n  '杭',\n  '姚',\n  '肚',\n  '捉',\n  '飄',\n  '漂',\n  '昆',\n  '欺',\n  '吾',\n  '郎',\n  '烷',\n  '汁',\n  '呵',\n  '飾',\n  '蕭',\n  '雅',\n  '郵',\n  '遷',\n  '燕',\n  '撒',\n  '姻',\n  '赴',\n  '宴',\n  '煩',\n  '債',\n  '帳',\n  '斑',\n  '鈴',\n  '旨',\n  '醇',\n  '董',\n  '餅',\n  '雛',\n  '姿',\n  '拌',\n  '傅',\n  '腹',\n  '妥',\n  '揉',\n  '賢',\n  '拆',\n  '歪',\n  '葡',\n  '胺',\n  '丟',\n  '浩',\n  '徽',\n  '昂',\n  '墊',\n  '擋',\n  '覽',\n  '貪',\n  '慰',\n  '繳',\n  '汪',\n  '慌',\n  '馮',\n  '諾',\n  '姜',\n  '誼',\n  '兇',\n  '劣',\n  '誣',\n  '耀',\n  '昏',\n  '躺',\n  '盈',\n  '騎',\n  '喬',\n  '溪',\n  '叢',\n  '盧',\n  '抹',\n  '悶',\n  '諮',\n  '刮',\n  '駕',\n  '纜',\n  '悟',\n  '摘',\n  '鉺',\n  '擲',\n  '頗',\n  '幻',\n  '柄',\n  '惠',\n  '慘',\n  '佳',\n  '仇',\n  '臘',\n  '窩',\n  '滌',\n  '劍',\n  '瞧',\n  '堡',\n  '潑',\n  '蔥',\n  '罩',\n  '霍',\n  '撈',\n  '胎',\n  '蒼',\n  '濱',\n  '倆',\n  '捅',\n  '湘',\n  '砍',\n  '霞',\n  '邵',\n  '萄',\n  '瘋',\n  '淮',\n  '遂',\n  '熊',\n  '糞',\n  '烘',\n  '宿',\n  '檔',\n  '戈',\n  '駁',\n  '嫂',\n  '裕',\n  '徙',\n  '箭',\n  '捐',\n  '腸',\n  '撐',\n  '曬',\n  '辨',\n  '殿',\n  '蓮',\n  '攤',\n  '攪',\n  '醬',\n  '屏',\n  '疫',\n  '哀',\n  '蔡',\n  '堵',\n  '沫',\n  '皺',\n  '暢',\n  '疊',\n  '閣',\n  '萊',\n  '敲',\n  '轄',\n  '鉤',\n  '痕',\n  '壩',\n  '巷',\n  '餓',\n  '禍',\n  '丘',\n  '玄',\n  '溜',\n  '曰',\n  '邏',\n  '彭',\n  '嘗',\n  '卿',\n  '妨',\n  '艇',\n  '吞',\n  '韋',\n  '怨',\n  '矮',\n  '歇'\n];\n","'use strict';\n\nmodule.exports = [\n  'abandon',\n  'ability',\n  'able',\n  'about',\n  'above',\n  'absent',\n  'absorb',\n  'abstract',\n  'absurd',\n  'abuse',\n  'access',\n  'accident',\n  'account',\n  'accuse',\n  'achieve',\n  'acid',\n  'acoustic',\n  'acquire',\n  'across',\n  'act',\n  'action',\n  'actor',\n  'actress',\n  'actual',\n  'adapt',\n  'add',\n  'addict',\n  'address',\n  'adjust',\n  'admit',\n  'adult',\n  'advance',\n  'advice',\n  'aerobic',\n  'affair',\n  'afford',\n  'afraid',\n  'again',\n  'age',\n  'agent',\n  'agree',\n  'ahead',\n  'aim',\n  'air',\n  'airport',\n  'aisle',\n  'alarm',\n  'album',\n  'alcohol',\n  'alert',\n  'alien',\n  'all',\n  'alley',\n  'allow',\n  'almost',\n  'alone',\n  'alpha',\n  'already',\n  'also',\n  'alter',\n  'always',\n  'amateur',\n  'amazing',\n  'among',\n  'amount',\n  'amused',\n  'analyst',\n  'anchor',\n  'ancient',\n  'anger',\n  'angle',\n  'angry',\n  'animal',\n  'ankle',\n  'announce',\n  'annual',\n  'another',\n  'answer',\n  'antenna',\n  'antique',\n  'anxiety',\n  'any',\n  'apart',\n  'apology',\n  'appear',\n  'apple',\n  'approve',\n  'april',\n  'arch',\n  'arctic',\n  'area',\n  'arena',\n  'argue',\n  'arm',\n  'armed',\n  'armor',\n  'army',\n  'around',\n  'arrange',\n  'arrest',\n  'arrive',\n  'arrow',\n  'art',\n  'artefact',\n  'artist',\n  'artwork',\n  'ask',\n  'aspect',\n  'assault',\n  'asset',\n  'assist',\n  'assume',\n  'asthma',\n  'athlete',\n  'atom',\n  'attack',\n  'attend',\n  'attitude',\n  'attract',\n  'auction',\n  'audit',\n  'august',\n  'aunt',\n  'author',\n  'auto',\n  'autumn',\n  'average',\n  'avocado',\n  'avoid',\n  'awake',\n  'aware',\n  'away',\n  'awesome',\n  'awful',\n  'awkward',\n  'axis',\n  'baby',\n  'bachelor',\n  'bacon',\n  'badge',\n  'bag',\n  'balance',\n  'balcony',\n  'ball',\n  'bamboo',\n  'banana',\n  'banner',\n  'bar',\n  'barely',\n  'bargain',\n  'barrel',\n  'base',\n  'basic',\n  'basket',\n  'battle',\n  'beach',\n  'bean',\n  'beauty',\n  'because',\n  'become',\n  'beef',\n  'before',\n  'begin',\n  'behave',\n  'behind',\n  'believe',\n  'below',\n  'belt',\n  'bench',\n  'benefit',\n  'best',\n  'betray',\n  'better',\n  'between',\n  'beyond',\n  'bicycle',\n  'bid',\n  'bike',\n  'bind',\n  'biology',\n  'bird',\n  'birth',\n  'bitter',\n  'black',\n  'blade',\n  'blame',\n  'blanket',\n  'blast',\n  'bleak',\n  'bless',\n  'blind',\n  'blood',\n  'blossom',\n  'blouse',\n  'blue',\n  'blur',\n  'blush',\n  'board',\n  'boat',\n  'body',\n  'boil',\n  'bomb',\n  'bone',\n  'bonus',\n  'book',\n  'boost',\n  'border',\n  'boring',\n  'borrow',\n  'boss',\n  'bottom',\n  'bounce',\n  'box',\n  'boy',\n  'bracket',\n  'brain',\n  'brand',\n  'brass',\n  'brave',\n  'bread',\n  'breeze',\n  'brick',\n  'bridge',\n  'brief',\n  'bright',\n  'bring',\n  'brisk',\n  'broccoli',\n  'broken',\n  'bronze',\n  'broom',\n  'brother',\n  'brown',\n  'brush',\n  'bubble',\n  'buddy',\n  'budget',\n  'buffalo',\n  'build',\n  'bulb',\n  'bulk',\n  'bullet',\n  'bundle',\n  'bunker',\n  'burden',\n  'burger',\n  'burst',\n  'bus',\n  'business',\n  'busy',\n  'butter',\n  'buyer',\n  'buzz',\n  'cabbage',\n  'cabin',\n  'cable',\n  'cactus',\n  'cage',\n  'cake',\n  'call',\n  'calm',\n  'camera',\n  'camp',\n  'can',\n  'canal',\n  'cancel',\n  'candy',\n  'cannon',\n  'canoe',\n  'canvas',\n  'canyon',\n  'capable',\n  'capital',\n  'captain',\n  'car',\n  'carbon',\n  'card',\n  'cargo',\n  'carpet',\n  'carry',\n  'cart',\n  'case',\n  'cash',\n  'casino',\n  'castle',\n  'casual',\n  'cat',\n  'catalog',\n  'catch',\n  'category',\n  'cattle',\n  'caught',\n  'cause',\n  'caution',\n  'cave',\n  'ceiling',\n  'celery',\n  'cement',\n  'census',\n  'century',\n  'cereal',\n  'certain',\n  'chair',\n  'chalk',\n  'champion',\n  'change',\n  'chaos',\n  'chapter',\n  'charge',\n  'chase',\n  'chat',\n  'cheap',\n  'check',\n  'cheese',\n  'chef',\n  'cherry',\n  'chest',\n  'chicken',\n  'chief',\n  'child',\n  'chimney',\n  'choice',\n  'choose',\n  'chronic',\n  'chuckle',\n  'chunk',\n  'churn',\n  'cigar',\n  'cinnamon',\n  'circle',\n  'citizen',\n  'city',\n  'civil',\n  'claim',\n  'clap',\n  'clarify',\n  'claw',\n  'clay',\n  'clean',\n  'clerk',\n  'clever',\n  'click',\n  'client',\n  'cliff',\n  'climb',\n  'clinic',\n  'clip',\n  'clock',\n  'clog',\n  'close',\n  'cloth',\n  'cloud',\n  'clown',\n  'club',\n  'clump',\n  'cluster',\n  'clutch',\n  'coach',\n  'coast',\n  'coconut',\n  'code',\n  'coffee',\n  'coil',\n  'coin',\n  'collect',\n  'color',\n  'column',\n  'combine',\n  'come',\n  'comfort',\n  'comic',\n  'common',\n  'company',\n  'concert',\n  'conduct',\n  'confirm',\n  'congress',\n  'connect',\n  'consider',\n  'control',\n  'convince',\n  'cook',\n  'cool',\n  'copper',\n  'copy',\n  'coral',\n  'core',\n  'corn',\n  'correct',\n  'cost',\n  'cotton',\n  'couch',\n  'country',\n  'couple',\n  'course',\n  'cousin',\n  'cover',\n  'coyote',\n  'crack',\n  'cradle',\n  'craft',\n  'cram',\n  'crane',\n  'crash',\n  'crater',\n  'crawl',\n  'crazy',\n  'cream',\n  'credit',\n  'creek',\n  'crew',\n  'cricket',\n  'crime',\n  'crisp',\n  'critic',\n  'crop',\n  'cross',\n  'crouch',\n  'crowd',\n  'crucial',\n  'cruel',\n  'cruise',\n  'crumble',\n  'crunch',\n  'crush',\n  'cry',\n  'crystal',\n  'cube',\n  'culture',\n  'cup',\n  'cupboard',\n  'curious',\n  'current',\n  'curtain',\n  'curve',\n  'cushion',\n  'custom',\n  'cute',\n  'cycle',\n  'dad',\n  'damage',\n  'damp',\n  'dance',\n  'danger',\n  'daring',\n  'dash',\n  'daughter',\n  'dawn',\n  'day',\n  'deal',\n  'debate',\n  'debris',\n  'decade',\n  'december',\n  'decide',\n  'decline',\n  'decorate',\n  'decrease',\n  'deer',\n  'defense',\n  'define',\n  'defy',\n  'degree',\n  'delay',\n  'deliver',\n  'demand',\n  'demise',\n  'denial',\n  'dentist',\n  'deny',\n  'depart',\n  'depend',\n  'deposit',\n  'depth',\n  'deputy',\n  'derive',\n  'describe',\n  'desert',\n  'design',\n  'desk',\n  'despair',\n  'destroy',\n  'detail',\n  'detect',\n  'develop',\n  'device',\n  'devote',\n  'diagram',\n  'dial',\n  'diamond',\n  'diary',\n  'dice',\n  'diesel',\n  'diet',\n  'differ',\n  'digital',\n  'dignity',\n  'dilemma',\n  'dinner',\n  'dinosaur',\n  'direct',\n  'dirt',\n  'disagree',\n  'discover',\n  'disease',\n  'dish',\n  'dismiss',\n  'disorder',\n  'display',\n  'distance',\n  'divert',\n  'divide',\n  'divorce',\n  'dizzy',\n  'doctor',\n  'document',\n  'dog',\n  'doll',\n  'dolphin',\n  'domain',\n  'donate',\n  'donkey',\n  'donor',\n  'door',\n  'dose',\n  'double',\n  'dove',\n  'draft',\n  'dragon',\n  'drama',\n  'drastic',\n  'draw',\n  'dream',\n  'dress',\n  'drift',\n  'drill',\n  'drink',\n  'drip',\n  'drive',\n  'drop',\n  'drum',\n  'dry',\n  'duck',\n  'dumb',\n  'dune',\n  'during',\n  'dust',\n  'dutch',\n  'duty',\n  'dwarf',\n  'dynamic',\n  'eager',\n  'eagle',\n  'early',\n  'earn',\n  'earth',\n  'easily',\n  'east',\n  'easy',\n  'echo',\n  'ecology',\n  'economy',\n  'edge',\n  'edit',\n  'educate',\n  'effort',\n  'egg',\n  'eight',\n  'either',\n  'elbow',\n  'elder',\n  'electric',\n  'elegant',\n  'element',\n  'elephant',\n  'elevator',\n  'elite',\n  'else',\n  'embark',\n  'embody',\n  'embrace',\n  'emerge',\n  'emotion',\n  'employ',\n  'empower',\n  'empty',\n  'enable',\n  'enact',\n  'end',\n  'endless',\n  'endorse',\n  'enemy',\n  'energy',\n  'enforce',\n  'engage',\n  'engine',\n  'enhance',\n  'enjoy',\n  'enlist',\n  'enough',\n  'enrich',\n  'enroll',\n  'ensure',\n  'enter',\n  'entire',\n  'entry',\n  'envelope',\n  'episode',\n  'equal',\n  'equip',\n  'era',\n  'erase',\n  'erode',\n  'erosion',\n  'error',\n  'erupt',\n  'escape',\n  'essay',\n  'essence',\n  'estate',\n  'eternal',\n  'ethics',\n  'evidence',\n  'evil',\n  'evoke',\n  'evolve',\n  'exact',\n  'example',\n  'excess',\n  'exchange',\n  'excite',\n  'exclude',\n  'excuse',\n  'execute',\n  'exercise',\n  'exhaust',\n  'exhibit',\n  'exile',\n  'exist',\n  'exit',\n  'exotic',\n  'expand',\n  'expect',\n  'expire',\n  'explain',\n  'expose',\n  'express',\n  'extend',\n  'extra',\n  'eye',\n  'eyebrow',\n  'fabric',\n  'face',\n  'faculty',\n  'fade',\n  'faint',\n  'faith',\n  'fall',\n  'false',\n  'fame',\n  'family',\n  'famous',\n  'fan',\n  'fancy',\n  'fantasy',\n  'farm',\n  'fashion',\n  'fat',\n  'fatal',\n  'father',\n  'fatigue',\n  'fault',\n  'favorite',\n  'feature',\n  'february',\n  'federal',\n  'fee',\n  'feed',\n  'feel',\n  'female',\n  'fence',\n  'festival',\n  'fetch',\n  'fever',\n  'few',\n  'fiber',\n  'fiction',\n  'field',\n  'figure',\n  'file',\n  'film',\n  'filter',\n  'final',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'firm',\n  'first',\n  'fiscal',\n  'fish',\n  'fit',\n  'fitness',\n  'fix',\n  'flag',\n  'flame',\n  'flash',\n  'flat',\n  'flavor',\n  'flee',\n  'flight',\n  'flip',\n  'float',\n  'flock',\n  'floor',\n  'flower',\n  'fluid',\n  'flush',\n  'fly',\n  'foam',\n  'focus',\n  'fog',\n  'foil',\n  'fold',\n  'follow',\n  'food',\n  'foot',\n  'force',\n  'forest',\n  'forget',\n  'fork',\n  'fortune',\n  'forum',\n  'forward',\n  'fossil',\n  'foster',\n  'found',\n  'fox',\n  'fragile',\n  'frame',\n  'frequent',\n  'fresh',\n  'friend',\n  'fringe',\n  'frog',\n  'front',\n  'frost',\n  'frown',\n  'frozen',\n  'fruit',\n  'fuel',\n  'fun',\n  'funny',\n  'furnace',\n  'fury',\n  'future',\n  'gadget',\n  'gain',\n  'galaxy',\n  'gallery',\n  'game',\n  'gap',\n  'garage',\n  'garbage',\n  'garden',\n  'garlic',\n  'garment',\n  'gas',\n  'gasp',\n  'gate',\n  'gather',\n  'gauge',\n  'gaze',\n  'general',\n  'genius',\n  'genre',\n  'gentle',\n  'genuine',\n  'gesture',\n  'ghost',\n  'giant',\n  'gift',\n  'giggle',\n  'ginger',\n  'giraffe',\n  'girl',\n  'give',\n  'glad',\n  'glance',\n  'glare',\n  'glass',\n  'glide',\n  'glimpse',\n  'globe',\n  'gloom',\n  'glory',\n  'glove',\n  'glow',\n  'glue',\n  'goat',\n  'goddess',\n  'gold',\n  'good',\n  'goose',\n  'gorilla',\n  'gospel',\n  'gossip',\n  'govern',\n  'gown',\n  'grab',\n  'grace',\n  'grain',\n  'grant',\n  'grape',\n  'grass',\n  'gravity',\n  'great',\n  'green',\n  'grid',\n  'grief',\n  'grit',\n  'grocery',\n  'group',\n  'grow',\n  'grunt',\n  'guard',\n  'guess',\n  'guide',\n  'guilt',\n  'guitar',\n  'gun',\n  'gym',\n  'habit',\n  'hair',\n  'half',\n  'hammer',\n  'hamster',\n  'hand',\n  'happy',\n  'harbor',\n  'hard',\n  'harsh',\n  'harvest',\n  'hat',\n  'have',\n  'hawk',\n  'hazard',\n  'head',\n  'health',\n  'heart',\n  'heavy',\n  'hedgehog',\n  'height',\n  'hello',\n  'helmet',\n  'help',\n  'hen',\n  'hero',\n  'hidden',\n  'high',\n  'hill',\n  'hint',\n  'hip',\n  'hire',\n  'history',\n  'hobby',\n  'hockey',\n  'hold',\n  'hole',\n  'holiday',\n  'hollow',\n  'home',\n  'honey',\n  'hood',\n  'hope',\n  'horn',\n  'horror',\n  'horse',\n  'hospital',\n  'host',\n  'hotel',\n  'hour',\n  'hover',\n  'hub',\n  'huge',\n  'human',\n  'humble',\n  'humor',\n  'hundred',\n  'hungry',\n  'hunt',\n  'hurdle',\n  'hurry',\n  'hurt',\n  'husband',\n  'hybrid',\n  'ice',\n  'icon',\n  'idea',\n  'identify',\n  'idle',\n  'ignore',\n  'ill',\n  'illegal',\n  'illness',\n  'image',\n  'imitate',\n  'immense',\n  'immune',\n  'impact',\n  'impose',\n  'improve',\n  'impulse',\n  'inch',\n  'include',\n  'income',\n  'increase',\n  'index',\n  'indicate',\n  'indoor',\n  'industry',\n  'infant',\n  'inflict',\n  'inform',\n  'inhale',\n  'inherit',\n  'initial',\n  'inject',\n  'injury',\n  'inmate',\n  'inner',\n  'innocent',\n  'input',\n  'inquiry',\n  'insane',\n  'insect',\n  'inside',\n  'inspire',\n  'install',\n  'intact',\n  'interest',\n  'into',\n  'invest',\n  'invite',\n  'involve',\n  'iron',\n  'island',\n  'isolate',\n  'issue',\n  'item',\n  'ivory',\n  'jacket',\n  'jaguar',\n  'jar',\n  'jazz',\n  'jealous',\n  'jeans',\n  'jelly',\n  'jewel',\n  'job',\n  'join',\n  'joke',\n  'journey',\n  'joy',\n  'judge',\n  'juice',\n  'jump',\n  'jungle',\n  'junior',\n  'junk',\n  'just',\n  'kangaroo',\n  'keen',\n  'keep',\n  'ketchup',\n  'key',\n  'kick',\n  'kid',\n  'kidney',\n  'kind',\n  'kingdom',\n  'kiss',\n  'kit',\n  'kitchen',\n  'kite',\n  'kitten',\n  'kiwi',\n  'knee',\n  'knife',\n  'knock',\n  'know',\n  'lab',\n  'label',\n  'labor',\n  'ladder',\n  'lady',\n  'lake',\n  'lamp',\n  'language',\n  'laptop',\n  'large',\n  'later',\n  'latin',\n  'laugh',\n  'laundry',\n  'lava',\n  'law',\n  'lawn',\n  'lawsuit',\n  'layer',\n  'lazy',\n  'leader',\n  'leaf',\n  'learn',\n  'leave',\n  'lecture',\n  'left',\n  'leg',\n  'legal',\n  'legend',\n  'leisure',\n  'lemon',\n  'lend',\n  'length',\n  'lens',\n  'leopard',\n  'lesson',\n  'letter',\n  'level',\n  'liar',\n  'liberty',\n  'library',\n  'license',\n  'life',\n  'lift',\n  'light',\n  'like',\n  'limb',\n  'limit',\n  'link',\n  'lion',\n  'liquid',\n  'list',\n  'little',\n  'live',\n  'lizard',\n  'load',\n  'loan',\n  'lobster',\n  'local',\n  'lock',\n  'logic',\n  'lonely',\n  'long',\n  'loop',\n  'lottery',\n  'loud',\n  'lounge',\n  'love',\n  'loyal',\n  'lucky',\n  'luggage',\n  'lumber',\n  'lunar',\n  'lunch',\n  'luxury',\n  'lyrics',\n  'machine',\n  'mad',\n  'magic',\n  'magnet',\n  'maid',\n  'mail',\n  'main',\n  'major',\n  'make',\n  'mammal',\n  'man',\n  'manage',\n  'mandate',\n  'mango',\n  'mansion',\n  'manual',\n  'maple',\n  'marble',\n  'march',\n  'margin',\n  'marine',\n  'market',\n  'marriage',\n  'mask',\n  'mass',\n  'master',\n  'match',\n  'material',\n  'math',\n  'matrix',\n  'matter',\n  'maximum',\n  'maze',\n  'meadow',\n  'mean',\n  'measure',\n  'meat',\n  'mechanic',\n  'medal',\n  'media',\n  'melody',\n  'melt',\n  'member',\n  'memory',\n  'mention',\n  'menu',\n  'mercy',\n  'merge',\n  'merit',\n  'merry',\n  'mesh',\n  'message',\n  'metal',\n  'method',\n  'middle',\n  'midnight',\n  'milk',\n  'million',\n  'mimic',\n  'mind',\n  'minimum',\n  'minor',\n  'minute',\n  'miracle',\n  'mirror',\n  'misery',\n  'miss',\n  'mistake',\n  'mix',\n  'mixed',\n  'mixture',\n  'mobile',\n  'model',\n  'modify',\n  'mom',\n  'moment',\n  'monitor',\n  'monkey',\n  'monster',\n  'month',\n  'moon',\n  'moral',\n  'more',\n  'morning',\n  'mosquito',\n  'mother',\n  'motion',\n  'motor',\n  'mountain',\n  'mouse',\n  'move',\n  'movie',\n  'much',\n  'muffin',\n  'mule',\n  'multiply',\n  'muscle',\n  'museum',\n  'mushroom',\n  'music',\n  'must',\n  'mutual',\n  'myself',\n  'mystery',\n  'myth',\n  'naive',\n  'name',\n  'napkin',\n  'narrow',\n  'nasty',\n  'nation',\n  'nature',\n  'near',\n  'neck',\n  'need',\n  'negative',\n  'neglect',\n  'neither',\n  'nephew',\n  'nerve',\n  'nest',\n  'net',\n  'network',\n  'neutral',\n  'never',\n  'news',\n  'next',\n  'nice',\n  'night',\n  'noble',\n  'noise',\n  'nominee',\n  'noodle',\n  'normal',\n  'north',\n  'nose',\n  'notable',\n  'note',\n  'nothing',\n  'notice',\n  'novel',\n  'now',\n  'nuclear',\n  'number',\n  'nurse',\n  'nut',\n  'oak',\n  'obey',\n  'object',\n  'oblige',\n  'obscure',\n  'observe',\n  'obtain',\n  'obvious',\n  'occur',\n  'ocean',\n  'october',\n  'odor',\n  'off',\n  'offer',\n  'office',\n  'often',\n  'oil',\n  'okay',\n  'old',\n  'olive',\n  'olympic',\n  'omit',\n  'once',\n  'one',\n  'onion',\n  'online',\n  'only',\n  'open',\n  'opera',\n  'opinion',\n  'oppose',\n  'option',\n  'orange',\n  'orbit',\n  'orchard',\n  'order',\n  'ordinary',\n  'organ',\n  'orient',\n  'original',\n  'orphan',\n  'ostrich',\n  'other',\n  'outdoor',\n  'outer',\n  'output',\n  'outside',\n  'oval',\n  'oven',\n  'over',\n  'own',\n  'owner',\n  'oxygen',\n  'oyster',\n  'ozone',\n  'pact',\n  'paddle',\n  'page',\n  'pair',\n  'palace',\n  'palm',\n  'panda',\n  'panel',\n  'panic',\n  'panther',\n  'paper',\n  'parade',\n  'parent',\n  'park',\n  'parrot',\n  'party',\n  'pass',\n  'patch',\n  'path',\n  'patient',\n  'patrol',\n  'pattern',\n  'pause',\n  'pave',\n  'payment',\n  'peace',\n  'peanut',\n  'pear',\n  'peasant',\n  'pelican',\n  'pen',\n  'penalty',\n  'pencil',\n  'people',\n  'pepper',\n  'perfect',\n  'permit',\n  'person',\n  'pet',\n  'phone',\n  'photo',\n  'phrase',\n  'physical',\n  'piano',\n  'picnic',\n  'picture',\n  'piece',\n  'pig',\n  'pigeon',\n  'pill',\n  'pilot',\n  'pink',\n  'pioneer',\n  'pipe',\n  'pistol',\n  'pitch',\n  'pizza',\n  'place',\n  'planet',\n  'plastic',\n  'plate',\n  'play',\n  'please',\n  'pledge',\n  'pluck',\n  'plug',\n  'plunge',\n  'poem',\n  'poet',\n  'point',\n  'polar',\n  'pole',\n  'police',\n  'pond',\n  'pony',\n  'pool',\n  'popular',\n  'portion',\n  'position',\n  'possible',\n  'post',\n  'potato',\n  'pottery',\n  'poverty',\n  'powder',\n  'power',\n  'practice',\n  'praise',\n  'predict',\n  'prefer',\n  'prepare',\n  'present',\n  'pretty',\n  'prevent',\n  'price',\n  'pride',\n  'primary',\n  'print',\n  'priority',\n  'prison',\n  'private',\n  'prize',\n  'problem',\n  'process',\n  'produce',\n  'profit',\n  'program',\n  'project',\n  'promote',\n  'proof',\n  'property',\n  'prosper',\n  'protect',\n  'proud',\n  'provide',\n  'public',\n  'pudding',\n  'pull',\n  'pulp',\n  'pulse',\n  'pumpkin',\n  'punch',\n  'pupil',\n  'puppy',\n  'purchase',\n  'purity',\n  'purpose',\n  'purse',\n  'push',\n  'put',\n  'puzzle',\n  'pyramid',\n  'quality',\n  'quantum',\n  'quarter',\n  'question',\n  'quick',\n  'quit',\n  'quiz',\n  'quote',\n  'rabbit',\n  'raccoon',\n  'race',\n  'rack',\n  'radar',\n  'radio',\n  'rail',\n  'rain',\n  'raise',\n  'rally',\n  'ramp',\n  'ranch',\n  'random',\n  'range',\n  'rapid',\n  'rare',\n  'rate',\n  'rather',\n  'raven',\n  'raw',\n  'razor',\n  'ready',\n  'real',\n  'reason',\n  'rebel',\n  'rebuild',\n  'recall',\n  'receive',\n  'recipe',\n  'record',\n  'recycle',\n  'reduce',\n  'reflect',\n  'reform',\n  'refuse',\n  'region',\n  'regret',\n  'regular',\n  'reject',\n  'relax',\n  'release',\n  'relief',\n  'rely',\n  'remain',\n  'remember',\n  'remind',\n  'remove',\n  'render',\n  'renew',\n  'rent',\n  'reopen',\n  'repair',\n  'repeat',\n  'replace',\n  'report',\n  'require',\n  'rescue',\n  'resemble',\n  'resist',\n  'resource',\n  'response',\n  'result',\n  'retire',\n  'retreat',\n  'return',\n  'reunion',\n  'reveal',\n  'review',\n  'reward',\n  'rhythm',\n  'rib',\n  'ribbon',\n  'rice',\n  'rich',\n  'ride',\n  'ridge',\n  'rifle',\n  'right',\n  'rigid',\n  'ring',\n  'riot',\n  'ripple',\n  'risk',\n  'ritual',\n  'rival',\n  'river',\n  'road',\n  'roast',\n  'robot',\n  'robust',\n  'rocket',\n  'romance',\n  'roof',\n  'rookie',\n  'room',\n  'rose',\n  'rotate',\n  'rough',\n  'round',\n  'route',\n  'royal',\n  'rubber',\n  'rude',\n  'rug',\n  'rule',\n  'run',\n  'runway',\n  'rural',\n  'sad',\n  'saddle',\n  'sadness',\n  'safe',\n  'sail',\n  'salad',\n  'salmon',\n  'salon',\n  'salt',\n  'salute',\n  'same',\n  'sample',\n  'sand',\n  'satisfy',\n  'satoshi',\n  'sauce',\n  'sausage',\n  'save',\n  'say',\n  'scale',\n  'scan',\n  'scare',\n  'scatter',\n  'scene',\n  'scheme',\n  'school',\n  'science',\n  'scissors',\n  'scorpion',\n  'scout',\n  'scrap',\n  'screen',\n  'script',\n  'scrub',\n  'sea',\n  'search',\n  'season',\n  'seat',\n  'second',\n  'secret',\n  'section',\n  'security',\n  'seed',\n  'seek',\n  'segment',\n  'select',\n  'sell',\n  'seminar',\n  'senior',\n  'sense',\n  'sentence',\n  'series',\n  'service',\n  'session',\n  'settle',\n  'setup',\n  'seven',\n  'shadow',\n  'shaft',\n  'shallow',\n  'share',\n  'shed',\n  'shell',\n  'sheriff',\n  'shield',\n  'shift',\n  'shine',\n  'ship',\n  'shiver',\n  'shock',\n  'shoe',\n  'shoot',\n  'shop',\n  'short',\n  'shoulder',\n  'shove',\n  'shrimp',\n  'shrug',\n  'shuffle',\n  'shy',\n  'sibling',\n  'sick',\n  'side',\n  'siege',\n  'sight',\n  'sign',\n  'silent',\n  'silk',\n  'silly',\n  'silver',\n  'similar',\n  'simple',\n  'since',\n  'sing',\n  'siren',\n  'sister',\n  'situate',\n  'six',\n  'size',\n  'skate',\n  'sketch',\n  'ski',\n  'skill',\n  'skin',\n  'skirt',\n  'skull',\n  'slab',\n  'slam',\n  'sleep',\n  'slender',\n  'slice',\n  'slide',\n  'slight',\n  'slim',\n  'slogan',\n  'slot',\n  'slow',\n  'slush',\n  'small',\n  'smart',\n  'smile',\n  'smoke',\n  'smooth',\n  'snack',\n  'snake',\n  'snap',\n  'sniff',\n  'snow',\n  'soap',\n  'soccer',\n  'social',\n  'sock',\n  'soda',\n  'soft',\n  'solar',\n  'soldier',\n  'solid',\n  'solution',\n  'solve',\n  'someone',\n  'song',\n  'soon',\n  'sorry',\n  'sort',\n  'soul',\n  'sound',\n  'soup',\n  'source',\n  'south',\n  'space',\n  'spare',\n  'spatial',\n  'spawn',\n  'speak',\n  'special',\n  'speed',\n  'spell',\n  'spend',\n  'sphere',\n  'spice',\n  'spider',\n  'spike',\n  'spin',\n  'spirit',\n  'split',\n  'spoil',\n  'sponsor',\n  'spoon',\n  'sport',\n  'spot',\n  'spray',\n  'spread',\n  'spring',\n  'spy',\n  'square',\n  'squeeze',\n  'squirrel',\n  'stable',\n  'stadium',\n  'staff',\n  'stage',\n  'stairs',\n  'stamp',\n  'stand',\n  'start',\n  'state',\n  'stay',\n  'steak',\n  'steel',\n  'stem',\n  'step',\n  'stereo',\n  'stick',\n  'still',\n  'sting',\n  'stock',\n  'stomach',\n  'stone',\n  'stool',\n  'story',\n  'stove',\n  'strategy',\n  'street',\n  'strike',\n  'strong',\n  'struggle',\n  'student',\n  'stuff',\n  'stumble',\n  'style',\n  'subject',\n  'submit',\n  'subway',\n  'success',\n  'such',\n  'sudden',\n  'suffer',\n  'sugar',\n  'suggest',\n  'suit',\n  'summer',\n  'sun',\n  'sunny',\n  'sunset',\n  'super',\n  'supply',\n  'supreme',\n  'sure',\n  'surface',\n  'surge',\n  'surprise',\n  'surround',\n  'survey',\n  'suspect',\n  'sustain',\n  'swallow',\n  'swamp',\n  'swap',\n  'swarm',\n  'swear',\n  'sweet',\n  'swift',\n  'swim',\n  'swing',\n  'switch',\n  'sword',\n  'symbol',\n  'symptom',\n  'syrup',\n  'system',\n  'table',\n  'tackle',\n  'tag',\n  'tail',\n  'talent',\n  'talk',\n  'tank',\n  'tape',\n  'target',\n  'task',\n  'taste',\n  'tattoo',\n  'taxi',\n  'teach',\n  'team',\n  'tell',\n  'ten',\n  'tenant',\n  'tennis',\n  'tent',\n  'term',\n  'test',\n  'text',\n  'thank',\n  'that',\n  'theme',\n  'then',\n  'theory',\n  'there',\n  'they',\n  'thing',\n  'this',\n  'thought',\n  'three',\n  'thrive',\n  'throw',\n  'thumb',\n  'thunder',\n  'ticket',\n  'tide',\n  'tiger',\n  'tilt',\n  'timber',\n  'time',\n  'tiny',\n  'tip',\n  'tired',\n  'tissue',\n  'title',\n  'toast',\n  'tobacco',\n  'today',\n  'toddler',\n  'toe',\n  'together',\n  'toilet',\n  'token',\n  'tomato',\n  'tomorrow',\n  'tone',\n  'tongue',\n  'tonight',\n  'tool',\n  'tooth',\n  'top',\n  'topic',\n  'topple',\n  'torch',\n  'tornado',\n  'tortoise',\n  'toss',\n  'total',\n  'tourist',\n  'toward',\n  'tower',\n  'town',\n  'toy',\n  'track',\n  'trade',\n  'traffic',\n  'tragic',\n  'train',\n  'transfer',\n  'trap',\n  'trash',\n  'travel',\n  'tray',\n  'treat',\n  'tree',\n  'trend',\n  'trial',\n  'tribe',\n  'trick',\n  'trigger',\n  'trim',\n  'trip',\n  'trophy',\n  'trouble',\n  'truck',\n  'true',\n  'truly',\n  'trumpet',\n  'trust',\n  'truth',\n  'try',\n  'tube',\n  'tuition',\n  'tumble',\n  'tuna',\n  'tunnel',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twenty',\n  'twice',\n  'twin',\n  'twist',\n  'two',\n  'type',\n  'typical',\n  'ugly',\n  'umbrella',\n  'unable',\n  'unaware',\n  'uncle',\n  'uncover',\n  'under',\n  'undo',\n  'unfair',\n  'unfold',\n  'unhappy',\n  'uniform',\n  'unique',\n  'unit',\n  'universe',\n  'unknown',\n  'unlock',\n  'until',\n  'unusual',\n  'unveil',\n  'update',\n  'upgrade',\n  'uphold',\n  'upon',\n  'upper',\n  'upset',\n  'urban',\n  'urge',\n  'usage',\n  'use',\n  'used',\n  'useful',\n  'useless',\n  'usual',\n  'utility',\n  'vacant',\n  'vacuum',\n  'vague',\n  'valid',\n  'valley',\n  'valve',\n  'van',\n  'vanish',\n  'vapor',\n  'various',\n  'vast',\n  'vault',\n  'vehicle',\n  'velvet',\n  'vendor',\n  'venture',\n  'venue',\n  'verb',\n  'verify',\n  'version',\n  'very',\n  'vessel',\n  'veteran',\n  'viable',\n  'vibrant',\n  'vicious',\n  'victory',\n  'video',\n  'view',\n  'village',\n  'vintage',\n  'violin',\n  'virtual',\n  'virus',\n  'visa',\n  'visit',\n  'visual',\n  'vital',\n  'vivid',\n  'vocal',\n  'voice',\n  'void',\n  'volcano',\n  'volume',\n  'vote',\n  'voyage',\n  'wage',\n  'wagon',\n  'wait',\n  'walk',\n  'wall',\n  'walnut',\n  'want',\n  'warfare',\n  'warm',\n  'warrior',\n  'wash',\n  'wasp',\n  'waste',\n  'water',\n  'wave',\n  'way',\n  'wealth',\n  'weapon',\n  'wear',\n  'weasel',\n  'weather',\n  'web',\n  'wedding',\n  'weekend',\n  'weird',\n  'welcome',\n  'west',\n  'wet',\n  'whale',\n  'what',\n  'wheat',\n  'wheel',\n  'when',\n  'where',\n  'whip',\n  'whisper',\n  'wide',\n  'width',\n  'wife',\n  'wild',\n  'will',\n  'win',\n  'window',\n  'wine',\n  'wing',\n  'wink',\n  'winner',\n  'winter',\n  'wire',\n  'wisdom',\n  'wise',\n  'wish',\n  'witness',\n  'wolf',\n  'woman',\n  'wonder',\n  'wood',\n  'wool',\n  'word',\n  'work',\n  'world',\n  'worry',\n  'worth',\n  'wrap',\n  'wreck',\n  'wrestle',\n  'wrist',\n  'write',\n  'wrong',\n  'yard',\n  'year',\n  'yellow',\n  'you',\n  'young',\n  'youth',\n  'zebra',\n  'zero',\n  'zone',\n  'zoo'\n];\n","'use strict';\n\nmodule.exports = [\n  'abaisser',\n  'abandon',\n  'abdiquer',\n  'abeille',\n  'abolir',\n  'aborder',\n  'aboutir',\n  'aboyer',\n  'abrasif',\n  'abreuver',\n  'abriter',\n  'abroger',\n  'abrupt',\n  'absence',\n  'absolu',\n  'absurde',\n  'abusif',\n  'abyssal',\n  'académie',\n  'acajou',\n  'acarien',\n  'accabler',\n  'accepter',\n  'acclamer',\n  'accolade',\n  'accroche',\n  'accuser',\n  'acerbe',\n  'achat',\n  'acheter',\n  'aciduler',\n  'acier',\n  'acompte',\n  'acquérir',\n  'acronyme',\n  'acteur',\n  'actif',\n  'actuel',\n  'adepte',\n  'adéquat',\n  'adhésif',\n  'adjectif',\n  'adjuger',\n  'admettre',\n  'admirer',\n  'adopter',\n  'adorer',\n  'adoucir',\n  'adresse',\n  'adroit',\n  'adulte',\n  'adverbe',\n  'aérer',\n  'aéronef',\n  'affaire',\n  'affecter',\n  'affiche',\n  'affreux',\n  'affubler',\n  'agacer',\n  'agencer',\n  'agile',\n  'agiter',\n  'agrafer',\n  'agréable',\n  'agrume',\n  'aider',\n  'aiguille',\n  'ailier',\n  'aimable',\n  'aisance',\n  'ajouter',\n  'ajuster',\n  'alarmer',\n  'alchimie',\n  'alerte',\n  'algèbre',\n  'algue',\n  'aliéner',\n  'aliment',\n  'alléger',\n  'alliage',\n  'allouer',\n  'allumer',\n  'alourdir',\n  'alpaga',\n  'altesse',\n  'alvéole',\n  'amateur',\n  'ambigu',\n  'ambre',\n  'aménager',\n  'amertume',\n  'amidon',\n  'amiral',\n  'amorcer',\n  'amour',\n  'amovible',\n  'amphibie',\n  'ampleur',\n  'amusant',\n  'analyse',\n  'anaphore',\n  'anarchie',\n  'anatomie',\n  'ancien',\n  'anéantir',\n  'angle',\n  'angoisse',\n  'anguleux',\n  'animal',\n  'annexer',\n  'annonce',\n  'annuel',\n  'anodin',\n  'anomalie',\n  'anonyme',\n  'anormal',\n  'antenne',\n  'antidote',\n  'anxieux',\n  'apaiser',\n  'apéritif',\n  'aplanir',\n  'apologie',\n  'appareil',\n  'appeler',\n  'apporter',\n  'appuyer',\n  'aquarium',\n  'aqueduc',\n  'arbitre',\n  'arbuste',\n  'ardeur',\n  'ardoise',\n  'argent',\n  'arlequin',\n  'armature',\n  'armement',\n  'armoire',\n  'armure',\n  'arpenter',\n  'arracher',\n  'arriver',\n  'arroser',\n  'arsenic',\n  'artériel',\n  'article',\n  'aspect',\n  'asphalte',\n  'aspirer',\n  'assaut',\n  'asservir',\n  'assiette',\n  'associer',\n  'assurer',\n  'asticot',\n  'astre',\n  'astuce',\n  'atelier',\n  'atome',\n  'atrium',\n  'atroce',\n  'attaque',\n  'attentif',\n  'attirer',\n  'attraper',\n  'aubaine',\n  'auberge',\n  'audace',\n  'audible',\n  'augurer',\n  'aurore',\n  'automne',\n  'autruche',\n  'avaler',\n  'avancer',\n  'avarice',\n  'avenir',\n  'averse',\n  'aveugle',\n  'aviateur',\n  'avide',\n  'avion',\n  'aviser',\n  'avoine',\n  'avouer',\n  'avril',\n  'axial',\n  'axiome',\n  'badge',\n  'bafouer',\n  'bagage',\n  'baguette',\n  'baignade',\n  'balancer',\n  'balcon',\n  'baleine',\n  'balisage',\n  'bambin',\n  'bancaire',\n  'bandage',\n  'banlieue',\n  'bannière',\n  'banquier',\n  'barbier',\n  'baril',\n  'baron',\n  'barque',\n  'barrage',\n  'bassin',\n  'bastion',\n  'bataille',\n  'bateau',\n  'batterie',\n  'baudrier',\n  'bavarder',\n  'belette',\n  'bélier',\n  'belote',\n  'bénéfice',\n  'berceau',\n  'berger',\n  'berline',\n  'bermuda',\n  'besace',\n  'besogne',\n  'bétail',\n  'beurre',\n  'biberon',\n  'bicycle',\n  'bidule',\n  'bijou',\n  'bilan',\n  'bilingue',\n  'billard',\n  'binaire',\n  'biologie',\n  'biopsie',\n  'biotype',\n  'biscuit',\n  'bison',\n  'bistouri',\n  'bitume',\n  'bizarre',\n  'blafard',\n  'blague',\n  'blanchir',\n  'blessant',\n  'blinder',\n  'blond',\n  'bloquer',\n  'blouson',\n  'bobard',\n  'bobine',\n  'boire',\n  'boiser',\n  'bolide',\n  'bonbon',\n  'bondir',\n  'bonheur',\n  'bonifier',\n  'bonus',\n  'bordure',\n  'borne',\n  'botte',\n  'boucle',\n  'boueux',\n  'bougie',\n  'boulon',\n  'bouquin',\n  'bourse',\n  'boussole',\n  'boutique',\n  'boxeur',\n  'branche',\n  'brasier',\n  'brave',\n  'brebis',\n  'brèche',\n  'breuvage',\n  'bricoler',\n  'brigade',\n  'brillant',\n  'brioche',\n  'brique',\n  'brochure',\n  'broder',\n  'bronzer',\n  'brousse',\n  'broyeur',\n  'brume',\n  'brusque',\n  'brutal',\n  'bruyant',\n  'buffle',\n  'buisson',\n  'bulletin',\n  'bureau',\n  'burin',\n  'bustier',\n  'butiner',\n  'butoir',\n  'buvable',\n  'buvette',\n  'cabanon',\n  'cabine',\n  'cachette',\n  'cadeau',\n  'cadre',\n  'caféine',\n  'caillou',\n  'caisson',\n  'calculer',\n  'calepin',\n  'calibre',\n  'calmer',\n  'calomnie',\n  'calvaire',\n  'camarade',\n  'caméra',\n  'camion',\n  'campagne',\n  'canal',\n  'caneton',\n  'canon',\n  'cantine',\n  'canular',\n  'capable',\n  'caporal',\n  'caprice',\n  'capsule',\n  'capter',\n  'capuche',\n  'carabine',\n  'carbone',\n  'caresser',\n  'caribou',\n  'carnage',\n  'carotte',\n  'carreau',\n  'carton',\n  'cascade',\n  'casier',\n  'casque',\n  'cassure',\n  'causer',\n  'caution',\n  'cavalier',\n  'caverne',\n  'caviar',\n  'cédille',\n  'ceinture',\n  'céleste',\n  'cellule',\n  'cendrier',\n  'censurer',\n  'central',\n  'cercle',\n  'cérébral',\n  'cerise',\n  'cerner',\n  'cerveau',\n  'cesser',\n  'chagrin',\n  'chaise',\n  'chaleur',\n  'chambre',\n  'chance',\n  'chapitre',\n  'charbon',\n  'chasseur',\n  'chaton',\n  'chausson',\n  'chavirer',\n  'chemise',\n  'chenille',\n  'chéquier',\n  'chercher',\n  'cheval',\n  'chien',\n  'chiffre',\n  'chignon',\n  'chimère',\n  'chiot',\n  'chlorure',\n  'chocolat',\n  'choisir',\n  'chose',\n  'chouette',\n  'chrome',\n  'chute',\n  'cigare',\n  'cigogne',\n  'cimenter',\n  'cinéma',\n  'cintrer',\n  'circuler',\n  'cirer',\n  'cirque',\n  'citerne',\n  'citoyen',\n  'citron',\n  'civil',\n  'clairon',\n  'clameur',\n  'claquer',\n  'classe',\n  'clavier',\n  'client',\n  'cligner',\n  'climat',\n  'clivage',\n  'cloche',\n  'clonage',\n  'cloporte',\n  'cobalt',\n  'cobra',\n  'cocasse',\n  'cocotier',\n  'coder',\n  'codifier',\n  'coffre',\n  'cogner',\n  'cohésion',\n  'coiffer',\n  'coincer',\n  'colère',\n  'colibri',\n  'colline',\n  'colmater',\n  'colonel',\n  'combat',\n  'comédie',\n  'commande',\n  'compact',\n  'concert',\n  'conduire',\n  'confier',\n  'congeler',\n  'connoter',\n  'consonne',\n  'contact',\n  'convexe',\n  'copain',\n  'copie',\n  'corail',\n  'corbeau',\n  'cordage',\n  'corniche',\n  'corpus',\n  'correct',\n  'cortège',\n  'cosmique',\n  'costume',\n  'coton',\n  'coude',\n  'coupure',\n  'courage',\n  'couteau',\n  'couvrir',\n  'coyote',\n  'crabe',\n  'crainte',\n  'cravate',\n  'crayon',\n  'créature',\n  'créditer',\n  'crémeux',\n  'creuser',\n  'crevette',\n  'cribler',\n  'crier',\n  'cristal',\n  'critère',\n  'croire',\n  'croquer',\n  'crotale',\n  'crucial',\n  'cruel',\n  'crypter',\n  'cubique',\n  'cueillir',\n  'cuillère',\n  'cuisine',\n  'cuivre',\n  'culminer',\n  'cultiver',\n  'cumuler',\n  'cupide',\n  'curatif',\n  'curseur',\n  'cyanure',\n  'cycle',\n  'cylindre',\n  'cynique',\n  'daigner',\n  'damier',\n  'danger',\n  'danseur',\n  'dauphin',\n  'débattre',\n  'débiter',\n  'déborder',\n  'débrider',\n  'débutant',\n  'décaler',\n  'décembre',\n  'déchirer',\n  'décider',\n  'déclarer',\n  'décorer',\n  'décrire',\n  'décupler',\n  'dédale',\n  'déductif',\n  'déesse',\n  'défensif',\n  'défiler',\n  'défrayer',\n  'dégager',\n  'dégivrer',\n  'déglutir',\n  'dégrafer',\n  'déjeuner',\n  'délice',\n  'déloger',\n  'demander',\n  'demeurer',\n  'démolir',\n  'dénicher',\n  'dénouer',\n  'dentelle',\n  'dénuder',\n  'départ',\n  'dépenser',\n  'déphaser',\n  'déplacer',\n  'déposer',\n  'déranger',\n  'dérober',\n  'désastre',\n  'descente',\n  'désert',\n  'désigner',\n  'désobéir',\n  'dessiner',\n  'destrier',\n  'détacher',\n  'détester',\n  'détourer',\n  'détresse',\n  'devancer',\n  'devenir',\n  'deviner',\n  'devoir',\n  'diable',\n  'dialogue',\n  'diamant',\n  'dicter',\n  'différer',\n  'digérer',\n  'digital',\n  'digne',\n  'diluer',\n  'dimanche',\n  'diminuer',\n  'dioxyde',\n  'directif',\n  'diriger',\n  'discuter',\n  'disposer',\n  'dissiper',\n  'distance',\n  'divertir',\n  'diviser',\n  'docile',\n  'docteur',\n  'dogme',\n  'doigt',\n  'domaine',\n  'domicile',\n  'dompter',\n  'donateur',\n  'donjon',\n  'donner',\n  'dopamine',\n  'dortoir',\n  'dorure',\n  'dosage',\n  'doseur',\n  'dossier',\n  'dotation',\n  'douanier',\n  'double',\n  'douceur',\n  'douter',\n  'doyen',\n  'dragon',\n  'draper',\n  'dresser',\n  'dribbler',\n  'droiture',\n  'duperie',\n  'duplexe',\n  'durable',\n  'durcir',\n  'dynastie',\n  'éblouir',\n  'écarter',\n  'écharpe',\n  'échelle',\n  'éclairer',\n  'éclipse',\n  'éclore',\n  'écluse',\n  'école',\n  'économie',\n  'écorce',\n  'écouter',\n  'écraser',\n  'écrémer',\n  'écrivain',\n  'écrou',\n  'écume',\n  'écureuil',\n  'édifier',\n  'éduquer',\n  'effacer',\n  'effectif',\n  'effigie',\n  'effort',\n  'effrayer',\n  'effusion',\n  'égaliser',\n  'égarer',\n  'éjecter',\n  'élaborer',\n  'élargir',\n  'électron',\n  'élégant',\n  'éléphant',\n  'élève',\n  'éligible',\n  'élitisme',\n  'éloge',\n  'élucider',\n  'éluder',\n  'emballer',\n  'embellir',\n  'embryon',\n  'émeraude',\n  'émission',\n  'emmener',\n  'émotion',\n  'émouvoir',\n  'empereur',\n  'employer',\n  'emporter',\n  'emprise',\n  'émulsion',\n  'encadrer',\n  'enchère',\n  'enclave',\n  'encoche',\n  'endiguer',\n  'endosser',\n  'endroit',\n  'enduire',\n  'énergie',\n  'enfance',\n  'enfermer',\n  'enfouir',\n  'engager',\n  'engin',\n  'englober',\n  'énigme',\n  'enjamber',\n  'enjeu',\n  'enlever',\n  'ennemi',\n  'ennuyeux',\n  'enrichir',\n  'enrobage',\n  'enseigne',\n  'entasser',\n  'entendre',\n  'entier',\n  'entourer',\n  'entraver',\n  'énumérer',\n  'envahir',\n  'enviable',\n  'envoyer',\n  'enzyme',\n  'éolien',\n  'épaissir',\n  'épargne',\n  'épatant',\n  'épaule',\n  'épicerie',\n  'épidémie',\n  'épier',\n  'épilogue',\n  'épine',\n  'épisode',\n  'épitaphe',\n  'époque',\n  'épreuve',\n  'éprouver',\n  'épuisant',\n  'équerre',\n  'équipe',\n  'ériger',\n  'érosion',\n  'erreur',\n  'éruption',\n  'escalier',\n  'espadon',\n  'espèce',\n  'espiègle',\n  'espoir',\n  'esprit',\n  'esquiver',\n  'essayer',\n  'essence',\n  'essieu',\n  'essorer',\n  'estime',\n  'estomac',\n  'estrade',\n  'étagère',\n  'étaler',\n  'étanche',\n  'étatique',\n  'éteindre',\n  'étendoir',\n  'éternel',\n  'éthanol',\n  'éthique',\n  'ethnie',\n  'étirer',\n  'étoffer',\n  'étoile',\n  'étonnant',\n  'étourdir',\n  'étrange',\n  'étroit',\n  'étude',\n  'euphorie',\n  'évaluer',\n  'évasion',\n  'éventail',\n  'évidence',\n  'éviter',\n  'évolutif',\n  'évoquer',\n  'exact',\n  'exagérer',\n  'exaucer',\n  'exceller',\n  'excitant',\n  'exclusif',\n  'excuse',\n  'exécuter',\n  'exemple',\n  'exercer',\n  'exhaler',\n  'exhorter',\n  'exigence',\n  'exiler',\n  'exister',\n  'exotique',\n  'expédier',\n  'explorer',\n  'exposer',\n  'exprimer',\n  'exquis',\n  'extensif',\n  'extraire',\n  'exulter',\n  'fable',\n  'fabuleux',\n  'facette',\n  'facile',\n  'facture',\n  'faiblir',\n  'falaise',\n  'fameux',\n  'famille',\n  'farceur',\n  'farfelu',\n  'farine',\n  'farouche',\n  'fasciner',\n  'fatal',\n  'fatigue',\n  'faucon',\n  'fautif',\n  'faveur',\n  'favori',\n  'fébrile',\n  'féconder',\n  'fédérer',\n  'félin',\n  'femme',\n  'fémur',\n  'fendoir',\n  'féodal',\n  'fermer',\n  'féroce',\n  'ferveur',\n  'festival',\n  'feuille',\n  'feutre',\n  'février',\n  'fiasco',\n  'ficeler',\n  'fictif',\n  'fidèle',\n  'figure',\n  'filature',\n  'filetage',\n  'filière',\n  'filleul',\n  'filmer',\n  'filou',\n  'filtrer',\n  'financer',\n  'finir',\n  'fiole',\n  'firme',\n  'fissure',\n  'fixer',\n  'flairer',\n  'flamme',\n  'flasque',\n  'flatteur',\n  'fléau',\n  'flèche',\n  'fleur',\n  'flexion',\n  'flocon',\n  'flore',\n  'fluctuer',\n  'fluide',\n  'fluvial',\n  'folie',\n  'fonderie',\n  'fongible',\n  'fontaine',\n  'forcer',\n  'forgeron',\n  'formuler',\n  'fortune',\n  'fossile',\n  'foudre',\n  'fougère',\n  'fouiller',\n  'foulure',\n  'fourmi',\n  'fragile',\n  'fraise',\n  'franchir',\n  'frapper',\n  'frayeur',\n  'frégate',\n  'freiner',\n  'frelon',\n  'frémir',\n  'frénésie',\n  'frère',\n  'friable',\n  'friction',\n  'frisson',\n  'frivole',\n  'froid',\n  'fromage',\n  'frontal',\n  'frotter',\n  'fruit',\n  'fugitif',\n  'fuite',\n  'fureur',\n  'furieux',\n  'furtif',\n  'fusion',\n  'futur',\n  'gagner',\n  'galaxie',\n  'galerie',\n  'gambader',\n  'garantir',\n  'gardien',\n  'garnir',\n  'garrigue',\n  'gazelle',\n  'gazon',\n  'géant',\n  'gélatine',\n  'gélule',\n  'gendarme',\n  'général',\n  'génie',\n  'genou',\n  'gentil',\n  'géologie',\n  'géomètre',\n  'géranium',\n  'germe',\n  'gestuel',\n  'geyser',\n  'gibier',\n  'gicler',\n  'girafe',\n  'givre',\n  'glace',\n  'glaive',\n  'glisser',\n  'globe',\n  'gloire',\n  'glorieux',\n  'golfeur',\n  'gomme',\n  'gonfler',\n  'gorge',\n  'gorille',\n  'goudron',\n  'gouffre',\n  'goulot',\n  'goupille',\n  'gourmand',\n  'goutte',\n  'graduel',\n  'graffiti',\n  'graine',\n  'grand',\n  'grappin',\n  'gratuit',\n  'gravir',\n  'grenat',\n  'griffure',\n  'griller',\n  'grimper',\n  'grogner',\n  'gronder',\n  'grotte',\n  'groupe',\n  'gruger',\n  'grutier',\n  'gruyère',\n  'guépard',\n  'guerrier',\n  'guide',\n  'guimauve',\n  'guitare',\n  'gustatif',\n  'gymnaste',\n  'gyrostat',\n  'habitude',\n  'hachoir',\n  'halte',\n  'hameau',\n  'hangar',\n  'hanneton',\n  'haricot',\n  'harmonie',\n  'harpon',\n  'hasard',\n  'hélium',\n  'hématome',\n  'herbe',\n  'hérisson',\n  'hermine',\n  'héron',\n  'hésiter',\n  'heureux',\n  'hiberner',\n  'hibou',\n  'hilarant',\n  'histoire',\n  'hiver',\n  'homard',\n  'hommage',\n  'homogène',\n  'honneur',\n  'honorer',\n  'honteux',\n  'horde',\n  'horizon',\n  'horloge',\n  'hormone',\n  'horrible',\n  'houleux',\n  'housse',\n  'hublot',\n  'huileux',\n  'humain',\n  'humble',\n  'humide',\n  'humour',\n  'hurler',\n  'hydromel',\n  'hygiène',\n  'hymne',\n  'hypnose',\n  'idylle',\n  'ignorer',\n  'iguane',\n  'illicite',\n  'illusion',\n  'image',\n  'imbiber',\n  'imiter',\n  'immense',\n  'immobile',\n  'immuable',\n  'impact',\n  'impérial',\n  'implorer',\n  'imposer',\n  'imprimer',\n  'imputer',\n  'incarner',\n  'incendie',\n  'incident',\n  'incliner',\n  'incolore',\n  'indexer',\n  'indice',\n  'inductif',\n  'inédit',\n  'ineptie',\n  'inexact',\n  'infini',\n  'infliger',\n  'informer',\n  'infusion',\n  'ingérer',\n  'inhaler',\n  'inhiber',\n  'injecter',\n  'injure',\n  'innocent',\n  'inoculer',\n  'inonder',\n  'inscrire',\n  'insecte',\n  'insigne',\n  'insolite',\n  'inspirer',\n  'instinct',\n  'insulter',\n  'intact',\n  'intense',\n  'intime',\n  'intrigue',\n  'intuitif',\n  'inutile',\n  'invasion',\n  'inventer',\n  'inviter',\n  'invoquer',\n  'ironique',\n  'irradier',\n  'irréel',\n  'irriter',\n  'isoler',\n  'ivoire',\n  'ivresse',\n  'jaguar',\n  'jaillir',\n  'jambe',\n  'janvier',\n  'jardin',\n  'jauger',\n  'jaune',\n  'javelot',\n  'jetable',\n  'jeton',\n  'jeudi',\n  'jeunesse',\n  'joindre',\n  'joncher',\n  'jongler',\n  'joueur',\n  'jouissif',\n  'journal',\n  'jovial',\n  'joyau',\n  'joyeux',\n  'jubiler',\n  'jugement',\n  'junior',\n  'jupon',\n  'juriste',\n  'justice',\n  'juteux',\n  'juvénile',\n  'kayak',\n  'kimono',\n  'kiosque',\n  'label',\n  'labial',\n  'labourer',\n  'lacérer',\n  'lactose',\n  'lagune',\n  'laine',\n  'laisser',\n  'laitier',\n  'lambeau',\n  'lamelle',\n  'lampe',\n  'lanceur',\n  'langage',\n  'lanterne',\n  'lapin',\n  'largeur',\n  'larme',\n  'laurier',\n  'lavabo',\n  'lavoir',\n  'lecture',\n  'légal',\n  'léger',\n  'légume',\n  'lessive',\n  'lettre',\n  'levier',\n  'lexique',\n  'lézard',\n  'liasse',\n  'libérer',\n  'libre',\n  'licence',\n  'licorne',\n  'liège',\n  'lièvre',\n  'ligature',\n  'ligoter',\n  'ligue',\n  'limer',\n  'limite',\n  'limonade',\n  'limpide',\n  'linéaire',\n  'lingot',\n  'lionceau',\n  'liquide',\n  'lisière',\n  'lister',\n  'lithium',\n  'litige',\n  'littoral',\n  'livreur',\n  'logique',\n  'lointain',\n  'loisir',\n  'lombric',\n  'loterie',\n  'louer',\n  'lourd',\n  'loutre',\n  'louve',\n  'loyal',\n  'lubie',\n  'lucide',\n  'lucratif',\n  'lueur',\n  'lugubre',\n  'luisant',\n  'lumière',\n  'lunaire',\n  'lundi',\n  'luron',\n  'lutter',\n  'luxueux',\n  'machine',\n  'magasin',\n  'magenta',\n  'magique',\n  'maigre',\n  'maillon',\n  'maintien',\n  'mairie',\n  'maison',\n  'majorer',\n  'malaxer',\n  'maléfice',\n  'malheur',\n  'malice',\n  'mallette',\n  'mammouth',\n  'mandater',\n  'maniable',\n  'manquant',\n  'manteau',\n  'manuel',\n  'marathon',\n  'marbre',\n  'marchand',\n  'mardi',\n  'maritime',\n  'marqueur',\n  'marron',\n  'marteler',\n  'mascotte',\n  'massif',\n  'matériel',\n  'matière',\n  'matraque',\n  'maudire',\n  'maussade',\n  'mauve',\n  'maximal',\n  'méchant',\n  'méconnu',\n  'médaille',\n  'médecin',\n  'méditer',\n  'méduse',\n  'meilleur',\n  'mélange',\n  'mélodie',\n  'membre',\n  'mémoire',\n  'menacer',\n  'mener',\n  'menhir',\n  'mensonge',\n  'mentor',\n  'mercredi',\n  'mérite',\n  'merle',\n  'messager',\n  'mesure',\n  'métal',\n  'météore',\n  'méthode',\n  'métier',\n  'meuble',\n  'miauler',\n  'microbe',\n  'miette',\n  'mignon',\n  'migrer',\n  'milieu',\n  'million',\n  'mimique',\n  'mince',\n  'minéral',\n  'minimal',\n  'minorer',\n  'minute',\n  'miracle',\n  'miroiter',\n  'missile',\n  'mixte',\n  'mobile',\n  'moderne',\n  'moelleux',\n  'mondial',\n  'moniteur',\n  'monnaie',\n  'monotone',\n  'monstre',\n  'montagne',\n  'monument',\n  'moqueur',\n  'morceau',\n  'morsure',\n  'mortier',\n  'moteur',\n  'motif',\n  'mouche',\n  'moufle',\n  'moulin',\n  'mousson',\n  'mouton',\n  'mouvant',\n  'multiple',\n  'munition',\n  'muraille',\n  'murène',\n  'murmure',\n  'muscle',\n  'muséum',\n  'musicien',\n  'mutation',\n  'muter',\n  'mutuel',\n  'myriade',\n  'myrtille',\n  'mystère',\n  'mythique',\n  'nageur',\n  'nappe',\n  'narquois',\n  'narrer',\n  'natation',\n  'nation',\n  'nature',\n  'naufrage',\n  'nautique',\n  'navire',\n  'nébuleux',\n  'nectar',\n  'néfaste',\n  'négation',\n  'négliger',\n  'négocier',\n  'neige',\n  'nerveux',\n  'nettoyer',\n  'neurone',\n  'neutron',\n  'neveu',\n  'niche',\n  'nickel',\n  'nitrate',\n  'niveau',\n  'noble',\n  'nocif',\n  'nocturne',\n  'noirceur',\n  'noisette',\n  'nomade',\n  'nombreux',\n  'nommer',\n  'normatif',\n  'notable',\n  'notifier',\n  'notoire',\n  'nourrir',\n  'nouveau',\n  'novateur',\n  'novembre',\n  'novice',\n  'nuage',\n  'nuancer',\n  'nuire',\n  'nuisible',\n  'numéro',\n  'nuptial',\n  'nuque',\n  'nutritif',\n  'obéir',\n  'objectif',\n  'obliger',\n  'obscur',\n  'observer',\n  'obstacle',\n  'obtenir',\n  'obturer',\n  'occasion',\n  'occuper',\n  'océan',\n  'octobre',\n  'octroyer',\n  'octupler',\n  'oculaire',\n  'odeur',\n  'odorant',\n  'offenser',\n  'officier',\n  'offrir',\n  'ogive',\n  'oiseau',\n  'oisillon',\n  'olfactif',\n  'olivier',\n  'ombrage',\n  'omettre',\n  'onctueux',\n  'onduler',\n  'onéreux',\n  'onirique',\n  'opale',\n  'opaque',\n  'opérer',\n  'opinion',\n  'opportun',\n  'opprimer',\n  'opter',\n  'optique',\n  'orageux',\n  'orange',\n  'orbite',\n  'ordonner',\n  'oreille',\n  'organe',\n  'orgueil',\n  'orifice',\n  'ornement',\n  'orque',\n  'ortie',\n  'osciller',\n  'osmose',\n  'ossature',\n  'otarie',\n  'ouragan',\n  'ourson',\n  'outil',\n  'outrager',\n  'ouvrage',\n  'ovation',\n  'oxyde',\n  'oxygène',\n  'ozone',\n  'paisible',\n  'palace',\n  'palmarès',\n  'palourde',\n  'palper',\n  'panache',\n  'panda',\n  'pangolin',\n  'paniquer',\n  'panneau',\n  'panorama',\n  'pantalon',\n  'papaye',\n  'papier',\n  'papoter',\n  'papyrus',\n  'paradoxe',\n  'parcelle',\n  'paresse',\n  'parfumer',\n  'parler',\n  'parole',\n  'parrain',\n  'parsemer',\n  'partager',\n  'parure',\n  'parvenir',\n  'passion',\n  'pastèque',\n  'paternel',\n  'patience',\n  'patron',\n  'pavillon',\n  'pavoiser',\n  'payer',\n  'paysage',\n  'peigne',\n  'peintre',\n  'pelage',\n  'pélican',\n  'pelle',\n  'pelouse',\n  'peluche',\n  'pendule',\n  'pénétrer',\n  'pénible',\n  'pensif',\n  'pénurie',\n  'pépite',\n  'péplum',\n  'perdrix',\n  'perforer',\n  'période',\n  'permuter',\n  'perplexe',\n  'persil',\n  'perte',\n  'peser',\n  'pétale',\n  'petit',\n  'pétrir',\n  'peuple',\n  'pharaon',\n  'phobie',\n  'phoque',\n  'photon',\n  'phrase',\n  'physique',\n  'piano',\n  'pictural',\n  'pièce',\n  'pierre',\n  'pieuvre',\n  'pilote',\n  'pinceau',\n  'pipette',\n  'piquer',\n  'pirogue',\n  'piscine',\n  'piston',\n  'pivoter',\n  'pixel',\n  'pizza',\n  'placard',\n  'plafond',\n  'plaisir',\n  'planer',\n  'plaque',\n  'plastron',\n  'plateau',\n  'pleurer',\n  'plexus',\n  'pliage',\n  'plomb',\n  'plonger',\n  'pluie',\n  'plumage',\n  'pochette',\n  'poésie',\n  'poète',\n  'pointe',\n  'poirier',\n  'poisson',\n  'poivre',\n  'polaire',\n  'policier',\n  'pollen',\n  'polygone',\n  'pommade',\n  'pompier',\n  'ponctuel',\n  'pondérer',\n  'poney',\n  'portique',\n  'position',\n  'posséder',\n  'posture',\n  'potager',\n  'poteau',\n  'potion',\n  'pouce',\n  'poulain',\n  'poumon',\n  'pourpre',\n  'poussin',\n  'pouvoir',\n  'prairie',\n  'pratique',\n  'précieux',\n  'prédire',\n  'préfixe',\n  'prélude',\n  'prénom',\n  'présence',\n  'prétexte',\n  'prévoir',\n  'primitif',\n  'prince',\n  'prison',\n  'priver',\n  'problème',\n  'procéder',\n  'prodige',\n  'profond',\n  'progrès',\n  'proie',\n  'projeter',\n  'prologue',\n  'promener',\n  'propre',\n  'prospère',\n  'protéger',\n  'prouesse',\n  'proverbe',\n  'prudence',\n  'pruneau',\n  'psychose',\n  'public',\n  'puceron',\n  'puiser',\n  'pulpe',\n  'pulsar',\n  'punaise',\n  'punitif',\n  'pupitre',\n  'purifier',\n  'puzzle',\n  'pyramide',\n  'quasar',\n  'querelle',\n  'question',\n  'quiétude',\n  'quitter',\n  'quotient',\n  'racine',\n  'raconter',\n  'radieux',\n  'ragondin',\n  'raideur',\n  'raisin',\n  'ralentir',\n  'rallonge',\n  'ramasser',\n  'rapide',\n  'rasage',\n  'ratisser',\n  'ravager',\n  'ravin',\n  'rayonner',\n  'réactif',\n  'réagir',\n  'réaliser',\n  'réanimer',\n  'recevoir',\n  'réciter',\n  'réclamer',\n  'récolter',\n  'recruter',\n  'reculer',\n  'recycler',\n  'rédiger',\n  'redouter',\n  'refaire',\n  'réflexe',\n  'réformer',\n  'refrain',\n  'refuge',\n  'régalien',\n  'région',\n  'réglage',\n  'régulier',\n  'réitérer',\n  'rejeter',\n  'rejouer',\n  'relatif',\n  'relever',\n  'relief',\n  'remarque',\n  'remède',\n  'remise',\n  'remonter',\n  'remplir',\n  'remuer',\n  'renard',\n  'renfort',\n  'renifler',\n  'renoncer',\n  'rentrer',\n  'renvoi',\n  'replier',\n  'reporter',\n  'reprise',\n  'reptile',\n  'requin',\n  'réserve',\n  'résineux',\n  'résoudre',\n  'respect',\n  'rester',\n  'résultat',\n  'rétablir',\n  'retenir',\n  'réticule',\n  'retomber',\n  'retracer',\n  'réunion',\n  'réussir',\n  'revanche',\n  'revivre',\n  'révolte',\n  'révulsif',\n  'richesse',\n  'rideau',\n  'rieur',\n  'rigide',\n  'rigoler',\n  'rincer',\n  'riposter',\n  'risible',\n  'risque',\n  'rituel',\n  'rival',\n  'rivière',\n  'rocheux',\n  'romance',\n  'rompre',\n  'ronce',\n  'rondin',\n  'roseau',\n  'rosier',\n  'rotatif',\n  'rotor',\n  'rotule',\n  'rouge',\n  'rouille',\n  'rouleau',\n  'routine',\n  'royaume',\n  'ruban',\n  'rubis',\n  'ruche',\n  'ruelle',\n  'rugueux',\n  'ruiner',\n  'ruisseau',\n  'ruser',\n  'rustique',\n  'rythme',\n  'sabler',\n  'saboter',\n  'sabre',\n  'sacoche',\n  'safari',\n  'sagesse',\n  'saisir',\n  'salade',\n  'salive',\n  'salon',\n  'saluer',\n  'samedi',\n  'sanction',\n  'sanglier',\n  'sarcasme',\n  'sardine',\n  'saturer',\n  'saugrenu',\n  'saumon',\n  'sauter',\n  'sauvage',\n  'savant',\n  'savonner',\n  'scalpel',\n  'scandale',\n  'scélérat',\n  'scénario',\n  'sceptre',\n  'schéma',\n  'science',\n  'scinder',\n  'score',\n  'scrutin',\n  'sculpter',\n  'séance',\n  'sécable',\n  'sécher',\n  'secouer',\n  'sécréter',\n  'sédatif',\n  'séduire',\n  'seigneur',\n  'séjour',\n  'sélectif',\n  'semaine',\n  'sembler',\n  'semence',\n  'séminal',\n  'sénateur',\n  'sensible',\n  'sentence',\n  'séparer',\n  'séquence',\n  'serein',\n  'sergent',\n  'sérieux',\n  'serrure',\n  'sérum',\n  'service',\n  'sésame',\n  'sévir',\n  'sevrage',\n  'sextuple',\n  'sidéral',\n  'siècle',\n  'siéger',\n  'siffler',\n  'sigle',\n  'signal',\n  'silence',\n  'silicium',\n  'simple',\n  'sincère',\n  'sinistre',\n  'siphon',\n  'sirop',\n  'sismique',\n  'situer',\n  'skier',\n  'social',\n  'socle',\n  'sodium',\n  'soigneux',\n  'soldat',\n  'soleil',\n  'solitude',\n  'soluble',\n  'sombre',\n  'sommeil',\n  'somnoler',\n  'sonde',\n  'songeur',\n  'sonnette',\n  'sonore',\n  'sorcier',\n  'sortir',\n  'sosie',\n  'sottise',\n  'soucieux',\n  'soudure',\n  'souffle',\n  'soulever',\n  'soupape',\n  'source',\n  'soutirer',\n  'souvenir',\n  'spacieux',\n  'spatial',\n  'spécial',\n  'sphère',\n  'spiral',\n  'stable',\n  'station',\n  'sternum',\n  'stimulus',\n  'stipuler',\n  'strict',\n  'studieux',\n  'stupeur',\n  'styliste',\n  'sublime',\n  'substrat',\n  'subtil',\n  'subvenir',\n  'succès',\n  'sucre',\n  'suffixe',\n  'suggérer',\n  'suiveur',\n  'sulfate',\n  'superbe',\n  'supplier',\n  'surface',\n  'suricate',\n  'surmener',\n  'surprise',\n  'sursaut',\n  'survie',\n  'suspect',\n  'syllabe',\n  'symbole',\n  'symétrie',\n  'synapse',\n  'syntaxe',\n  'système',\n  'tabac',\n  'tablier',\n  'tactile',\n  'tailler',\n  'talent',\n  'talisman',\n  'talonner',\n  'tambour',\n  'tamiser',\n  'tangible',\n  'tapis',\n  'taquiner',\n  'tarder',\n  'tarif',\n  'tartine',\n  'tasse',\n  'tatami',\n  'tatouage',\n  'taupe',\n  'taureau',\n  'taxer',\n  'témoin',\n  'temporel',\n  'tenaille',\n  'tendre',\n  'teneur',\n  'tenir',\n  'tension',\n  'terminer',\n  'terne',\n  'terrible',\n  'tétine',\n  'texte',\n  'thème',\n  'théorie',\n  'thérapie',\n  'thorax',\n  'tibia',\n  'tiède',\n  'timide',\n  'tirelire',\n  'tiroir',\n  'tissu',\n  'titane',\n  'titre',\n  'tituber',\n  'toboggan',\n  'tolérant',\n  'tomate',\n  'tonique',\n  'tonneau',\n  'toponyme',\n  'torche',\n  'tordre',\n  'tornade',\n  'torpille',\n  'torrent',\n  'torse',\n  'tortue',\n  'totem',\n  'toucher',\n  'tournage',\n  'tousser',\n  'toxine',\n  'traction',\n  'trafic',\n  'tragique',\n  'trahir',\n  'train',\n  'trancher',\n  'travail',\n  'trèfle',\n  'tremper',\n  'trésor',\n  'treuil',\n  'triage',\n  'tribunal',\n  'tricoter',\n  'trilogie',\n  'triomphe',\n  'tripler',\n  'triturer',\n  'trivial',\n  'trombone',\n  'tronc',\n  'tropical',\n  'troupeau',\n  'tuile',\n  'tulipe',\n  'tumulte',\n  'tunnel',\n  'turbine',\n  'tuteur',\n  'tutoyer',\n  'tuyau',\n  'tympan',\n  'typhon',\n  'typique',\n  'tyran',\n  'ubuesque',\n  'ultime',\n  'ultrason',\n  'unanime',\n  'unifier',\n  'union',\n  'unique',\n  'unitaire',\n  'univers',\n  'uranium',\n  'urbain',\n  'urticant',\n  'usage',\n  'usine',\n  'usuel',\n  'usure',\n  'utile',\n  'utopie',\n  'vacarme',\n  'vaccin',\n  'vagabond',\n  'vague',\n  'vaillant',\n  'vaincre',\n  'vaisseau',\n  'valable',\n  'valise',\n  'vallon',\n  'valve',\n  'vampire',\n  'vanille',\n  'vapeur',\n  'varier',\n  'vaseux',\n  'vassal',\n  'vaste',\n  'vecteur',\n  'vedette',\n  'végétal',\n  'véhicule',\n  'veinard',\n  'véloce',\n  'vendredi',\n  'vénérer',\n  'venger',\n  'venimeux',\n  'ventouse',\n  'verdure',\n  'vérin',\n  'vernir',\n  'verrou',\n  'verser',\n  'vertu',\n  'veston',\n  'vétéran',\n  'vétuste',\n  'vexant',\n  'vexer',\n  'viaduc',\n  'viande',\n  'victoire',\n  'vidange',\n  'vidéo',\n  'vignette',\n  'vigueur',\n  'vilain',\n  'village',\n  'vinaigre',\n  'violon',\n  'vipère',\n  'virement',\n  'virtuose',\n  'virus',\n  'visage',\n  'viseur',\n  'vision',\n  'visqueux',\n  'visuel',\n  'vital',\n  'vitesse',\n  'viticole',\n  'vitrine',\n  'vivace',\n  'vivipare',\n  'vocation',\n  'voguer',\n  'voile',\n  'voisin',\n  'voiture',\n  'volaille',\n  'volcan',\n  'voltiger',\n  'volume',\n  'vorace',\n  'vortex',\n  'voter',\n  'vouloir',\n  'voyage',\n  'voyelle',\n  'wagon',\n  'xénon',\n  'yacht',\n  'zèbre',\n  'zénith',\n  'zeste',\n  'zoologie'\n];\n","'use strict';\n\nmodule.exports = [\n  'abaco',\n  'abbaglio',\n  'abbinato',\n  'abete',\n  'abisso',\n  'abolire',\n  'abrasivo',\n  'abrogato',\n  'accadere',\n  'accenno',\n  'accusato',\n  'acetone',\n  'achille',\n  'acido',\n  'acqua',\n  'acre',\n  'acrilico',\n  'acrobata',\n  'acuto',\n  'adagio',\n  'addebito',\n  'addome',\n  'adeguato',\n  'aderire',\n  'adipe',\n  'adottare',\n  'adulare',\n  'affabile',\n  'affetto',\n  'affisso',\n  'affranto',\n  'aforisma',\n  'afoso',\n  'africano',\n  'agave',\n  'agente',\n  'agevole',\n  'aggancio',\n  'agire',\n  'agitare',\n  'agonismo',\n  'agricolo',\n  'agrumeto',\n  'aguzzo',\n  'alabarda',\n  'alato',\n  'albatro',\n  'alberato',\n  'albo',\n  'albume',\n  'alce',\n  'alcolico',\n  'alettone',\n  'alfa',\n  'algebra',\n  'aliante',\n  'alibi',\n  'alimento',\n  'allagato',\n  'allegro',\n  'allievo',\n  'allodola',\n  'allusivo',\n  'almeno',\n  'alogeno',\n  'alpaca',\n  'alpestre',\n  'altalena',\n  'alterno',\n  'alticcio',\n  'altrove',\n  'alunno',\n  'alveolo',\n  'alzare',\n  'amalgama',\n  'amanita',\n  'amarena',\n  'ambito',\n  'ambrato',\n  'ameba',\n  'america',\n  'ametista',\n  'amico',\n  'ammasso',\n  'ammenda',\n  'ammirare',\n  'ammonito',\n  'amore',\n  'ampio',\n  'ampliare',\n  'amuleto',\n  'anacardo',\n  'anagrafe',\n  'analista',\n  'anarchia',\n  'anatra',\n  'anca',\n  'ancella',\n  'ancora',\n  'andare',\n  'andrea',\n  'anello',\n  'angelo',\n  'angolare',\n  'angusto',\n  'anima',\n  'annegare',\n  'annidato',\n  'anno',\n  'annuncio',\n  'anonimo',\n  'anticipo',\n  'anzi',\n  'apatico',\n  'apertura',\n  'apode',\n  'apparire',\n  'appetito',\n  'appoggio',\n  'approdo',\n  'appunto',\n  'aprile',\n  'arabica',\n  'arachide',\n  'aragosta',\n  'araldica',\n  'arancio',\n  'aratura',\n  'arazzo',\n  'arbitro',\n  'archivio',\n  'ardito',\n  'arenile',\n  'argento',\n  'argine',\n  'arguto',\n  'aria',\n  'armonia',\n  'arnese',\n  'arredato',\n  'arringa',\n  'arrosto',\n  'arsenico',\n  'arso',\n  'artefice',\n  'arzillo',\n  'asciutto',\n  'ascolto',\n  'asepsi',\n  'asettico',\n  'asfalto',\n  'asino',\n  'asola',\n  'aspirato',\n  'aspro',\n  'assaggio',\n  'asse',\n  'assoluto',\n  'assurdo',\n  'asta',\n  'astenuto',\n  'astice',\n  'astratto',\n  'atavico',\n  'ateismo',\n  'atomico',\n  'atono',\n  'attesa',\n  'attivare',\n  'attorno',\n  'attrito',\n  'attuale',\n  'ausilio',\n  'austria',\n  'autista',\n  'autonomo',\n  'autunno',\n  'avanzato',\n  'avere',\n  'avvenire',\n  'avviso',\n  'avvolgere',\n  'azione',\n  'azoto',\n  'azzimo',\n  'azzurro',\n  'babele',\n  'baccano',\n  'bacino',\n  'baco',\n  'badessa',\n  'badilata',\n  'bagnato',\n  'baita',\n  'balcone',\n  'baldo',\n  'balena',\n  'ballata',\n  'balzano',\n  'bambino',\n  'bandire',\n  'baraonda',\n  'barbaro',\n  'barca',\n  'baritono',\n  'barlume',\n  'barocco',\n  'basilico',\n  'basso',\n  'batosta',\n  'battuto',\n  'baule',\n  'bava',\n  'bavosa',\n  'becco',\n  'beffa',\n  'belgio',\n  'belva',\n  'benda',\n  'benevole',\n  'benigno',\n  'benzina',\n  'bere',\n  'berlina',\n  'beta',\n  'bibita',\n  'bici',\n  'bidone',\n  'bifido',\n  'biga',\n  'bilancia',\n  'bimbo',\n  'binocolo',\n  'biologo',\n  'bipede',\n  'bipolare',\n  'birbante',\n  'birra',\n  'biscotto',\n  'bisesto',\n  'bisnonno',\n  'bisonte',\n  'bisturi',\n  'bizzarro',\n  'blando',\n  'blatta',\n  'bollito',\n  'bonifico',\n  'bordo',\n  'bosco',\n  'botanico',\n  'bottino',\n  'bozzolo',\n  'braccio',\n  'bradipo',\n  'brama',\n  'branca',\n  'bravura',\n  'bretella',\n  'brevetto',\n  'brezza',\n  'briglia',\n  'brillante',\n  'brindare',\n  'broccolo',\n  'brodo',\n  'bronzina',\n  'brullo',\n  'bruno',\n  'bubbone',\n  'buca',\n  'budino',\n  'buffone',\n  'buio',\n  'bulbo',\n  'buono',\n  'burlone',\n  'burrasca',\n  'bussola',\n  'busta',\n  'cadetto',\n  'caduco',\n  'calamaro',\n  'calcolo',\n  'calesse',\n  'calibro',\n  'calmo',\n  'caloria',\n  'cambusa',\n  'camerata',\n  'camicia',\n  'cammino',\n  'camola',\n  'campale',\n  'canapa',\n  'candela',\n  'cane',\n  'canino',\n  'canotto',\n  'cantina',\n  'capace',\n  'capello',\n  'capitolo',\n  'capogiro',\n  'cappero',\n  'capra',\n  'capsula',\n  'carapace',\n  'carcassa',\n  'cardo',\n  'carisma',\n  'carovana',\n  'carretto',\n  'cartolina',\n  'casaccio',\n  'cascata',\n  'caserma',\n  'caso',\n  'cassone',\n  'castello',\n  'casuale',\n  'catasta',\n  'catena',\n  'catrame',\n  'cauto',\n  'cavillo',\n  'cedibile',\n  'cedrata',\n  'cefalo',\n  'celebre',\n  'cellulare',\n  'cena',\n  'cenone',\n  'centesimo',\n  'ceramica',\n  'cercare',\n  'certo',\n  'cerume',\n  'cervello',\n  'cesoia',\n  'cespo',\n  'ceto',\n  'chela',\n  'chiaro',\n  'chicca',\n  'chiedere',\n  'chimera',\n  'china',\n  'chirurgo',\n  'chitarra',\n  'ciao',\n  'ciclismo',\n  'cifrare',\n  'cigno',\n  'cilindro',\n  'ciottolo',\n  'circa',\n  'cirrosi',\n  'citrico',\n  'cittadino',\n  'ciuffo',\n  'civetta',\n  'civile',\n  'classico',\n  'clinica',\n  'cloro',\n  'cocco',\n  'codardo',\n  'codice',\n  'coerente',\n  'cognome',\n  'collare',\n  'colmato',\n  'colore',\n  'colposo',\n  'coltivato',\n  'colza',\n  'coma',\n  'cometa',\n  'commando',\n  'comodo',\n  'computer',\n  'comune',\n  'conciso',\n  'condurre',\n  'conferma',\n  'congelare',\n  'coniuge',\n  'connesso',\n  'conoscere',\n  'consumo',\n  'continuo',\n  'convegno',\n  'coperto',\n  'copione',\n  'coppia',\n  'copricapo',\n  'corazza',\n  'cordata',\n  'coricato',\n  'cornice',\n  'corolla',\n  'corpo',\n  'corredo',\n  'corsia',\n  'cortese',\n  'cosmico',\n  'costante',\n  'cottura',\n  'covato',\n  'cratere',\n  'cravatta',\n  'creato',\n  'credere',\n  'cremoso',\n  'crescita',\n  'creta',\n  'criceto',\n  'crinale',\n  'crisi',\n  'critico',\n  'croce',\n  'cronaca',\n  'crostata',\n  'cruciale',\n  'crusca',\n  'cucire',\n  'cuculo',\n  'cugino',\n  'cullato',\n  'cupola',\n  'curatore',\n  'cursore',\n  'curvo',\n  'cuscino',\n  'custode',\n  'dado',\n  'daino',\n  'dalmata',\n  'damerino',\n  'daniela',\n  'dannoso',\n  'danzare',\n  'datato',\n  'davanti',\n  'davvero',\n  'debutto',\n  'decennio',\n  'deciso',\n  'declino',\n  'decollo',\n  'decreto',\n  'dedicato',\n  'definito',\n  'deforme',\n  'degno',\n  'delegare',\n  'delfino',\n  'delirio',\n  'delta',\n  'demenza',\n  'denotato',\n  'dentro',\n  'deposito',\n  'derapata',\n  'derivare',\n  'deroga',\n  'descritto',\n  'deserto',\n  'desiderio',\n  'desumere',\n  'detersivo',\n  'devoto',\n  'diametro',\n  'dicembre',\n  'diedro',\n  'difeso',\n  'diffuso',\n  'digerire',\n  'digitale',\n  'diluvio',\n  'dinamico',\n  'dinnanzi',\n  'dipinto',\n  'diploma',\n  'dipolo',\n  'diradare',\n  'dire',\n  'dirotto',\n  'dirupo',\n  'disagio',\n  'discreto',\n  'disfare',\n  'disgelo',\n  'disposto',\n  'distanza',\n  'disumano',\n  'dito',\n  'divano',\n  'divelto',\n  'dividere',\n  'divorato',\n  'doblone',\n  'docente',\n  'doganale',\n  'dogma',\n  'dolce',\n  'domato',\n  'domenica',\n  'dominare',\n  'dondolo',\n  'dono',\n  'dormire',\n  'dote',\n  'dottore',\n  'dovuto',\n  'dozzina',\n  'drago',\n  'druido',\n  'dubbio',\n  'dubitare',\n  'ducale',\n  'duna',\n  'duomo',\n  'duplice',\n  'duraturo',\n  'ebano',\n  'eccesso',\n  'ecco',\n  'eclissi',\n  'economia',\n  'edera',\n  'edicola',\n  'edile',\n  'editoria',\n  'educare',\n  'egemonia',\n  'egli',\n  'egoismo',\n  'egregio',\n  'elaborato',\n  'elargire',\n  'elegante',\n  'elencato',\n  'eletto',\n  'elevare',\n  'elfico',\n  'elica',\n  'elmo',\n  'elsa',\n  'eluso',\n  'emanato',\n  'emblema',\n  'emesso',\n  'emiro',\n  'emotivo',\n  'emozione',\n  'empirico',\n  'emulo',\n  'endemico',\n  'enduro',\n  'energia',\n  'enfasi',\n  'enoteca',\n  'entrare',\n  'enzima',\n  'epatite',\n  'epilogo',\n  'episodio',\n  'epocale',\n  'eppure',\n  'equatore',\n  'erario',\n  'erba',\n  'erboso',\n  'erede',\n  'eremita',\n  'erigere',\n  'ermetico',\n  'eroe',\n  'erosivo',\n  'errante',\n  'esagono',\n  'esame',\n  'esanime',\n  'esaudire',\n  'esca',\n  'esempio',\n  'esercito',\n  'esibito',\n  'esigente',\n  'esistere',\n  'esito',\n  'esofago',\n  'esortato',\n  'esoso',\n  'espanso',\n  'espresso',\n  'essenza',\n  'esso',\n  'esteso',\n  'estimare',\n  'estonia',\n  'estroso',\n  'esultare',\n  'etilico',\n  'etnico',\n  'etrusco',\n  'etto',\n  'euclideo',\n  'europa',\n  'evaso',\n  'evidenza',\n  'evitato',\n  'evoluto',\n  'evviva',\n  'fabbrica',\n  'faccenda',\n  'fachiro',\n  'falco',\n  'famiglia',\n  'fanale',\n  'fanfara',\n  'fango',\n  'fantasma',\n  'fare',\n  'farfalla',\n  'farinoso',\n  'farmaco',\n  'fascia',\n  'fastoso',\n  'fasullo',\n  'faticare',\n  'fato',\n  'favoloso',\n  'febbre',\n  'fecola',\n  'fede',\n  'fegato',\n  'felpa',\n  'feltro',\n  'femmina',\n  'fendere',\n  'fenomeno',\n  'fermento',\n  'ferro',\n  'fertile',\n  'fessura',\n  'festivo',\n  'fetta',\n  'feudo',\n  'fiaba',\n  'fiducia',\n  'fifa',\n  'figurato',\n  'filo',\n  'finanza',\n  'finestra',\n  'finire',\n  'fiore',\n  'fiscale',\n  'fisico',\n  'fiume',\n  'flacone',\n  'flamenco',\n  'flebo',\n  'flemma',\n  'florido',\n  'fluente',\n  'fluoro',\n  'fobico',\n  'focaccia',\n  'focoso',\n  'foderato',\n  'foglio',\n  'folata',\n  'folclore',\n  'folgore',\n  'fondente',\n  'fonetico',\n  'fonia',\n  'fontana',\n  'forbito',\n  'forchetta',\n  'foresta',\n  'formica',\n  'fornaio',\n  'foro',\n  'fortezza',\n  'forzare',\n  'fosfato',\n  'fosso',\n  'fracasso',\n  'frana',\n  'frassino',\n  'fratello',\n  'freccetta',\n  'frenata',\n  'fresco',\n  'frigo',\n  'frollino',\n  'fronde',\n  'frugale',\n  'frutta',\n  'fucilata',\n  'fucsia',\n  'fuggente',\n  'fulmine',\n  'fulvo',\n  'fumante',\n  'fumetto',\n  'fumoso',\n  'fune',\n  'funzione',\n  'fuoco',\n  'furbo',\n  'furgone',\n  'furore',\n  'fuso',\n  'futile',\n  'gabbiano',\n  'gaffe',\n  'galateo',\n  'gallina',\n  'galoppo',\n  'gambero',\n  'gamma',\n  'garanzia',\n  'garbo',\n  'garofano',\n  'garzone',\n  'gasdotto',\n  'gasolio',\n  'gastrico',\n  'gatto',\n  'gaudio',\n  'gazebo',\n  'gazzella',\n  'geco',\n  'gelatina',\n  'gelso',\n  'gemello',\n  'gemmato',\n  'gene',\n  'genitore',\n  'gennaio',\n  'genotipo',\n  'gergo',\n  'ghepardo',\n  'ghiaccio',\n  'ghisa',\n  'giallo',\n  'gilda',\n  'ginepro',\n  'giocare',\n  'gioiello',\n  'giorno',\n  'giove',\n  'girato',\n  'girone',\n  'gittata',\n  'giudizio',\n  'giurato',\n  'giusto',\n  'globulo',\n  'glutine',\n  'gnomo',\n  'gobba',\n  'golf',\n  'gomito',\n  'gommone',\n  'gonfio',\n  'gonna',\n  'governo',\n  'gracile',\n  'grado',\n  'grafico',\n  'grammo',\n  'grande',\n  'grattare',\n  'gravoso',\n  'grazia',\n  'greca',\n  'gregge',\n  'grifone',\n  'grigio',\n  'grinza',\n  'grotta',\n  'gruppo',\n  'guadagno',\n  'guaio',\n  'guanto',\n  'guardare',\n  'gufo',\n  'guidare',\n  'ibernato',\n  'icona',\n  'identico',\n  'idillio',\n  'idolo',\n  'idra',\n  'idrico',\n  'idrogeno',\n  'igiene',\n  'ignaro',\n  'ignorato',\n  'ilare',\n  'illeso',\n  'illogico',\n  'illudere',\n  'imballo',\n  'imbevuto',\n  'imbocco',\n  'imbuto',\n  'immane',\n  'immerso',\n  'immolato',\n  'impacco',\n  'impeto',\n  'impiego',\n  'importo',\n  'impronta',\n  'inalare',\n  'inarcare',\n  'inattivo',\n  'incanto',\n  'incendio',\n  'inchino',\n  'incisivo',\n  'incluso',\n  'incontro',\n  'incrocio',\n  'incubo',\n  'indagine',\n  'india',\n  'indole',\n  'inedito',\n  'infatti',\n  'infilare',\n  'inflitto',\n  'ingaggio',\n  'ingegno',\n  'inglese',\n  'ingordo',\n  'ingrosso',\n  'innesco',\n  'inodore',\n  'inoltrare',\n  'inondato',\n  'insano',\n  'insetto',\n  'insieme',\n  'insonnia',\n  'insulina',\n  'intasato',\n  'intero',\n  'intonaco',\n  'intuito',\n  'inumidire',\n  'invalido',\n  'invece',\n  'invito',\n  'iperbole',\n  'ipnotico',\n  'ipotesi',\n  'ippica',\n  'iride',\n  'irlanda',\n  'ironico',\n  'irrigato',\n  'irrorare',\n  'isolato',\n  'isotopo',\n  'isterico',\n  'istituto',\n  'istrice',\n  'italia',\n  'iterare',\n  'labbro',\n  'labirinto',\n  'lacca',\n  'lacerato',\n  'lacrima',\n  'lacuna',\n  'laddove',\n  'lago',\n  'lampo',\n  'lancetta',\n  'lanterna',\n  'lardoso',\n  'larga',\n  'laringe',\n  'lastra',\n  'latenza',\n  'latino',\n  'lattuga',\n  'lavagna',\n  'lavoro',\n  'legale',\n  'leggero',\n  'lembo',\n  'lentezza',\n  'lenza',\n  'leone',\n  'lepre',\n  'lesivo',\n  'lessato',\n  'lesto',\n  'letterale',\n  'leva',\n  'levigato',\n  'libero',\n  'lido',\n  'lievito',\n  'lilla',\n  'limatura',\n  'limitare',\n  'limpido',\n  'lineare',\n  'lingua',\n  'liquido',\n  'lira',\n  'lirica',\n  'lisca',\n  'lite',\n  'litigio',\n  'livrea',\n  'locanda',\n  'lode',\n  'logica',\n  'lombare',\n  'londra',\n  'longevo',\n  'loquace',\n  'lorenzo',\n  'loto',\n  'lotteria',\n  'luce',\n  'lucidato',\n  'lumaca',\n  'luminoso',\n  'lungo',\n  'lupo',\n  'luppolo',\n  'lusinga',\n  'lusso',\n  'lutto',\n  'macabro',\n  'macchina',\n  'macero',\n  'macinato',\n  'madama',\n  'magico',\n  'maglia',\n  'magnete',\n  'magro',\n  'maiolica',\n  'malafede',\n  'malgrado',\n  'malinteso',\n  'malsano',\n  'malto',\n  'malumore',\n  'mana',\n  'mancia',\n  'mandorla',\n  'mangiare',\n  'manifesto',\n  'mannaro',\n  'manovra',\n  'mansarda',\n  'mantide',\n  'manubrio',\n  'mappa',\n  'maratona',\n  'marcire',\n  'maretta',\n  'marmo',\n  'marsupio',\n  'maschera',\n  'massaia',\n  'mastino',\n  'materasso',\n  'matricola',\n  'mattone',\n  'maturo',\n  'mazurca',\n  'meandro',\n  'meccanico',\n  'mecenate',\n  'medesimo',\n  'meditare',\n  'mega',\n  'melassa',\n  'melis',\n  'melodia',\n  'meninge',\n  'meno',\n  'mensola',\n  'mercurio',\n  'merenda',\n  'merlo',\n  'meschino',\n  'mese',\n  'messere',\n  'mestolo',\n  'metallo',\n  'metodo',\n  'mettere',\n  'miagolare',\n  'mica',\n  'micelio',\n  'michele',\n  'microbo',\n  'midollo',\n  'miele',\n  'migliore',\n  'milano',\n  'milite',\n  'mimosa',\n  'minerale',\n  'mini',\n  'minore',\n  'mirino',\n  'mirtillo',\n  'miscela',\n  'missiva',\n  'misto',\n  'misurare',\n  'mitezza',\n  'mitigare',\n  'mitra',\n  'mittente',\n  'mnemonico',\n  'modello',\n  'modifica',\n  'modulo',\n  'mogano',\n  'mogio',\n  'mole',\n  'molosso',\n  'monastero',\n  'monco',\n  'mondina',\n  'monetario',\n  'monile',\n  'monotono',\n  'monsone',\n  'montato',\n  'monviso',\n  'mora',\n  'mordere',\n  'morsicato',\n  'mostro',\n  'motivato',\n  'motosega',\n  'motto',\n  'movenza',\n  'movimento',\n  'mozzo',\n  'mucca',\n  'mucosa',\n  'muffa',\n  'mughetto',\n  'mugnaio',\n  'mulatto',\n  'mulinello',\n  'multiplo',\n  'mummia',\n  'munto',\n  'muovere',\n  'murale',\n  'musa',\n  'muscolo',\n  'musica',\n  'mutevole',\n  'muto',\n  'nababbo',\n  'nafta',\n  'nanometro',\n  'narciso',\n  'narice',\n  'narrato',\n  'nascere',\n  'nastrare',\n  'naturale',\n  'nautica',\n  'naviglio',\n  'nebulosa',\n  'necrosi',\n  'negativo',\n  'negozio',\n  'nemmeno',\n  'neofita',\n  'neretto',\n  'nervo',\n  'nessuno',\n  'nettuno',\n  'neutrale',\n  'neve',\n  'nevrotico',\n  'nicchia',\n  'ninfa',\n  'nitido',\n  'nobile',\n  'nocivo',\n  'nodo',\n  'nome',\n  'nomina',\n  'nordico',\n  'normale',\n  'norvegese',\n  'nostrano',\n  'notare',\n  'notizia',\n  'notturno',\n  'novella',\n  'nucleo',\n  'nulla',\n  'numero',\n  'nuovo',\n  'nutrire',\n  'nuvola',\n  'nuziale',\n  'oasi',\n  'obbedire',\n  'obbligo',\n  'obelisco',\n  'oblio',\n  'obolo',\n  'obsoleto',\n  'occasione',\n  'occhio',\n  'occidente',\n  'occorrere',\n  'occultare',\n  'ocra',\n  'oculato',\n  'odierno',\n  'odorare',\n  'offerta',\n  'offrire',\n  'offuscato',\n  'oggetto',\n  'oggi',\n  'ognuno',\n  'olandese',\n  'olfatto',\n  'oliato',\n  'oliva',\n  'ologramma',\n  'oltre',\n  'omaggio',\n  'ombelico',\n  'ombra',\n  'omega',\n  'omissione',\n  'ondoso',\n  'onere',\n  'onice',\n  'onnivoro',\n  'onorevole',\n  'onta',\n  'operato',\n  'opinione',\n  'opposto',\n  'oracolo',\n  'orafo',\n  'ordine',\n  'orecchino',\n  'orefice',\n  'orfano',\n  'organico',\n  'origine',\n  'orizzonte',\n  'orma',\n  'ormeggio',\n  'ornativo',\n  'orologio',\n  'orrendo',\n  'orribile',\n  'ortensia',\n  'ortica',\n  'orzata',\n  'orzo',\n  'osare',\n  'oscurare',\n  'osmosi',\n  'ospedale',\n  'ospite',\n  'ossa',\n  'ossidare',\n  'ostacolo',\n  'oste',\n  'otite',\n  'otre',\n  'ottagono',\n  'ottimo',\n  'ottobre',\n  'ovale',\n  'ovest',\n  'ovino',\n  'oviparo',\n  'ovocito',\n  'ovunque',\n  'ovviare',\n  'ozio',\n  'pacchetto',\n  'pace',\n  'pacifico',\n  'padella',\n  'padrone',\n  'paese',\n  'paga',\n  'pagina',\n  'palazzina',\n  'palesare',\n  'pallido',\n  'palo',\n  'palude',\n  'pandoro',\n  'pannello',\n  'paolo',\n  'paonazzo',\n  'paprica',\n  'parabola',\n  'parcella',\n  'parere',\n  'pargolo',\n  'pari',\n  'parlato',\n  'parola',\n  'partire',\n  'parvenza',\n  'parziale',\n  'passivo',\n  'pasticca',\n  'patacca',\n  'patologia',\n  'pattume',\n  'pavone',\n  'peccato',\n  'pedalare',\n  'pedonale',\n  'peggio',\n  'peloso',\n  'penare',\n  'pendice',\n  'penisola',\n  'pennuto',\n  'penombra',\n  'pensare',\n  'pentola',\n  'pepe',\n  'pepita',\n  'perbene',\n  'percorso',\n  'perdonato',\n  'perforare',\n  'pergamena',\n  'periodo',\n  'permesso',\n  'perno',\n  'perplesso',\n  'persuaso',\n  'pertugio',\n  'pervaso',\n  'pesatore',\n  'pesista',\n  'peso',\n  'pestifero',\n  'petalo',\n  'pettine',\n  'petulante',\n  'pezzo',\n  'piacere',\n  'pianta',\n  'piattino',\n  'piccino',\n  'picozza',\n  'piega',\n  'pietra',\n  'piffero',\n  'pigiama',\n  'pigolio',\n  'pigro',\n  'pila',\n  'pilifero',\n  'pillola',\n  'pilota',\n  'pimpante',\n  'pineta',\n  'pinna',\n  'pinolo',\n  'pioggia',\n  'piombo',\n  'piramide',\n  'piretico',\n  'pirite',\n  'pirolisi',\n  'pitone',\n  'pizzico',\n  'placebo',\n  'planare',\n  'plasma',\n  'platano',\n  'plenario',\n  'pochezza',\n  'poderoso',\n  'podismo',\n  'poesia',\n  'poggiare',\n  'polenta',\n  'poligono',\n  'pollice',\n  'polmonite',\n  'polpetta',\n  'polso',\n  'poltrona',\n  'polvere',\n  'pomice',\n  'pomodoro',\n  'ponte',\n  'popoloso',\n  'porfido',\n  'poroso',\n  'porpora',\n  'porre',\n  'portata',\n  'posa',\n  'positivo',\n  'possesso',\n  'postulato',\n  'potassio',\n  'potere',\n  'pranzo',\n  'prassi',\n  'pratica',\n  'precluso',\n  'predica',\n  'prefisso',\n  'pregiato',\n  'prelievo',\n  'premere',\n  'prenotare',\n  'preparato',\n  'presenza',\n  'pretesto',\n  'prevalso',\n  'prima',\n  'principe',\n  'privato',\n  'problema',\n  'procura',\n  'produrre',\n  'profumo',\n  'progetto',\n  'prolunga',\n  'promessa',\n  'pronome',\n  'proposta',\n  'proroga',\n  'proteso',\n  'prova',\n  'prudente',\n  'prugna',\n  'prurito',\n  'psiche',\n  'pubblico',\n  'pudica',\n  'pugilato',\n  'pugno',\n  'pulce',\n  'pulito',\n  'pulsante',\n  'puntare',\n  'pupazzo',\n  'pupilla',\n  'puro',\n  'quadro',\n  'qualcosa',\n  'quasi',\n  'querela',\n  'quota',\n  'raccolto',\n  'raddoppio',\n  'radicale',\n  'radunato',\n  'raffica',\n  'ragazzo',\n  'ragione',\n  'ragno',\n  'ramarro',\n  'ramingo',\n  'ramo',\n  'randagio',\n  'rantolare',\n  'rapato',\n  'rapina',\n  'rappreso',\n  'rasatura',\n  'raschiato',\n  'rasente',\n  'rassegna',\n  'rastrello',\n  'rata',\n  'ravveduto',\n  'reale',\n  'recepire',\n  'recinto',\n  'recluta',\n  'recondito',\n  'recupero',\n  'reddito',\n  'redimere',\n  'regalato',\n  'registro',\n  'regola',\n  'regresso',\n  'relazione',\n  'remare',\n  'remoto',\n  'renna',\n  'replica',\n  'reprimere',\n  'reputare',\n  'resa',\n  'residente',\n  'responso',\n  'restauro',\n  'rete',\n  'retina',\n  'retorica',\n  'rettifica',\n  'revocato',\n  'riassunto',\n  'ribadire',\n  'ribelle',\n  'ribrezzo',\n  'ricarica',\n  'ricco',\n  'ricevere',\n  'riciclato',\n  'ricordo',\n  'ricreduto',\n  'ridicolo',\n  'ridurre',\n  'rifasare',\n  'riflesso',\n  'riforma',\n  'rifugio',\n  'rigare',\n  'rigettato',\n  'righello',\n  'rilassato',\n  'rilevato',\n  'rimanere',\n  'rimbalzo',\n  'rimedio',\n  'rimorchio',\n  'rinascita',\n  'rincaro',\n  'rinforzo',\n  'rinnovo',\n  'rinomato',\n  'rinsavito',\n  'rintocco',\n  'rinuncia',\n  'rinvenire',\n  'riparato',\n  'ripetuto',\n  'ripieno',\n  'riportare',\n  'ripresa',\n  'ripulire',\n  'risata',\n  'rischio',\n  'riserva',\n  'risibile',\n  'riso',\n  'rispetto',\n  'ristoro',\n  'risultato',\n  'risvolto',\n  'ritardo',\n  'ritegno',\n  'ritmico',\n  'ritrovo',\n  'riunione',\n  'riva',\n  'riverso',\n  'rivincita',\n  'rivolto',\n  'rizoma',\n  'roba',\n  'robotico',\n  'robusto',\n  'roccia',\n  'roco',\n  'rodaggio',\n  'rodere',\n  'roditore',\n  'rogito',\n  'rollio',\n  'romantico',\n  'rompere',\n  'ronzio',\n  'rosolare',\n  'rospo',\n  'rotante',\n  'rotondo',\n  'rotula',\n  'rovescio',\n  'rubizzo',\n  'rubrica',\n  'ruga',\n  'rullino',\n  'rumine',\n  'rumoroso',\n  'ruolo',\n  'rupe',\n  'russare',\n  'rustico',\n  'sabato',\n  'sabbiare',\n  'sabotato',\n  'sagoma',\n  'salasso',\n  'saldatura',\n  'salgemma',\n  'salivare',\n  'salmone',\n  'salone',\n  'saltare',\n  'saluto',\n  'salvo',\n  'sapere',\n  'sapido',\n  'saporito',\n  'saraceno',\n  'sarcasmo',\n  'sarto',\n  'sassoso',\n  'satellite',\n  'satira',\n  'satollo',\n  'saturno',\n  'savana',\n  'savio',\n  'saziato',\n  'sbadiglio',\n  'sbalzo',\n  'sbancato',\n  'sbarra',\n  'sbattere',\n  'sbavare',\n  'sbendare',\n  'sbirciare',\n  'sbloccato',\n  'sbocciato',\n  'sbrinare',\n  'sbruffone',\n  'sbuffare',\n  'scabroso',\n  'scadenza',\n  'scala',\n  'scambiare',\n  'scandalo',\n  'scapola',\n  'scarso',\n  'scatenare',\n  'scavato',\n  'scelto',\n  'scenico',\n  'scettro',\n  'scheda',\n  'schiena',\n  'sciarpa',\n  'scienza',\n  'scindere',\n  'scippo',\n  'sciroppo',\n  'scivolo',\n  'sclerare',\n  'scodella',\n  'scolpito',\n  'scomparto',\n  'sconforto',\n  'scoprire',\n  'scorta',\n  'scossone',\n  'scozzese',\n  'scriba',\n  'scrollare',\n  'scrutinio',\n  'scuderia',\n  'scultore',\n  'scuola',\n  'scuro',\n  'scusare',\n  'sdebitare',\n  'sdoganare',\n  'seccatura',\n  'secondo',\n  'sedano',\n  'seggiola',\n  'segnalato',\n  'segregato',\n  'seguito',\n  'selciato',\n  'selettivo',\n  'sella',\n  'selvaggio',\n  'semaforo',\n  'sembrare',\n  'seme',\n  'seminato',\n  'sempre',\n  'senso',\n  'sentire',\n  'sepolto',\n  'sequenza',\n  'serata',\n  'serbato',\n  'sereno',\n  'serio',\n  'serpente',\n  'serraglio',\n  'servire',\n  'sestina',\n  'setola',\n  'settimana',\n  'sfacelo',\n  'sfaldare',\n  'sfamato',\n  'sfarzoso',\n  'sfaticato',\n  'sfera',\n  'sfida',\n  'sfilato',\n  'sfinge',\n  'sfocato',\n  'sfoderare',\n  'sfogo',\n  'sfoltire',\n  'sforzato',\n  'sfratto',\n  'sfruttato',\n  'sfuggito',\n  'sfumare',\n  'sfuso',\n  'sgabello',\n  'sgarbato',\n  'sgonfiare',\n  'sgorbio',\n  'sgrassato',\n  'sguardo',\n  'sibilo',\n  'siccome',\n  'sierra',\n  'sigla',\n  'signore',\n  'silenzio',\n  'sillaba',\n  'simbolo',\n  'simpatico',\n  'simulato',\n  'sinfonia',\n  'singolo',\n  'sinistro',\n  'sino',\n  'sintesi',\n  'sinusoide',\n  'sipario',\n  'sisma',\n  'sistole',\n  'situato',\n  'slitta',\n  'slogatura',\n  'sloveno',\n  'smarrito',\n  'smemorato',\n  'smentito',\n  'smeraldo',\n  'smilzo',\n  'smontare',\n  'smottato',\n  'smussato',\n  'snellire',\n  'snervato',\n  'snodo',\n  'sobbalzo',\n  'sobrio',\n  'soccorso',\n  'sociale',\n  'sodale',\n  'soffitto',\n  'sogno',\n  'soldato',\n  'solenne',\n  'solido',\n  'sollazzo',\n  'solo',\n  'solubile',\n  'solvente',\n  'somatico',\n  'somma',\n  'sonda',\n  'sonetto',\n  'sonnifero',\n  'sopire',\n  'soppeso',\n  'sopra',\n  'sorgere',\n  'sorpasso',\n  'sorriso',\n  'sorso',\n  'sorteggio',\n  'sorvolato',\n  'sospiro',\n  'sosta',\n  'sottile',\n  'spada',\n  'spalla',\n  'spargere',\n  'spatola',\n  'spavento',\n  'spazzola',\n  'specie',\n  'spedire',\n  'spegnere',\n  'spelatura',\n  'speranza',\n  'spessore',\n  'spettrale',\n  'spezzato',\n  'spia',\n  'spigoloso',\n  'spillato',\n  'spinoso',\n  'spirale',\n  'splendido',\n  'sportivo',\n  'sposo',\n  'spranga',\n  'sprecare',\n  'spronato',\n  'spruzzo',\n  'spuntino',\n  'squillo',\n  'sradicare',\n  'srotolato',\n  'stabile',\n  'stacco',\n  'staffa',\n  'stagnare',\n  'stampato',\n  'stantio',\n  'starnuto',\n  'stasera',\n  'statuto',\n  'stelo',\n  'steppa',\n  'sterzo',\n  'stiletto',\n  'stima',\n  'stirpe',\n  'stivale',\n  'stizzoso',\n  'stonato',\n  'storico',\n  'strappo',\n  'stregato',\n  'stridulo',\n  'strozzare',\n  'strutto',\n  'stuccare',\n  'stufo',\n  'stupendo',\n  'subentro',\n  'succoso',\n  'sudore',\n  'suggerito',\n  'sugo',\n  'sultano',\n  'suonare',\n  'superbo',\n  'supporto',\n  'surgelato',\n  'surrogato',\n  'sussurro',\n  'sutura',\n  'svagare',\n  'svedese',\n  'sveglio',\n  'svelare',\n  'svenuto',\n  'svezia',\n  'sviluppo',\n  'svista',\n  'svizzera',\n  'svolta',\n  'svuotare',\n  'tabacco',\n  'tabulato',\n  'tacciare',\n  'taciturno',\n  'tale',\n  'talismano',\n  'tampone',\n  'tannino',\n  'tara',\n  'tardivo',\n  'targato',\n  'tariffa',\n  'tarpare',\n  'tartaruga',\n  'tasto',\n  'tattico',\n  'taverna',\n  'tavolata',\n  'tazza',\n  'teca',\n  'tecnico',\n  'telefono',\n  'temerario',\n  'tempo',\n  'temuto',\n  'tendone',\n  'tenero',\n  'tensione',\n  'tentacolo',\n  'teorema',\n  'terme',\n  'terrazzo',\n  'terzetto',\n  'tesi',\n  'tesserato',\n  'testato',\n  'tetro',\n  'tettoia',\n  'tifare',\n  'tigella',\n  'timbro',\n  'tinto',\n  'tipico',\n  'tipografo',\n  'tiraggio',\n  'tiro',\n  'titanio',\n  'titolo',\n  'titubante',\n  'tizio',\n  'tizzone',\n  'toccare',\n  'tollerare',\n  'tolto',\n  'tombola',\n  'tomo',\n  'tonfo',\n  'tonsilla',\n  'topazio',\n  'topologia',\n  'toppa',\n  'torba',\n  'tornare',\n  'torrone',\n  'tortora',\n  'toscano',\n  'tossire',\n  'tostatura',\n  'totano',\n  'trabocco',\n  'trachea',\n  'trafila',\n  'tragedia',\n  'tralcio',\n  'tramonto',\n  'transito',\n  'trapano',\n  'trarre',\n  'trasloco',\n  'trattato',\n  'trave',\n  'treccia',\n  'tremolio',\n  'trespolo',\n  'tributo',\n  'tricheco',\n  'trifoglio',\n  'trillo',\n  'trincea',\n  'trio',\n  'tristezza',\n  'triturato',\n  'trivella',\n  'tromba',\n  'trono',\n  'troppo',\n  'trottola',\n  'trovare',\n  'truccato',\n  'tubatura',\n  'tuffato',\n  'tulipano',\n  'tumulto',\n  'tunisia',\n  'turbare',\n  'turchino',\n  'tuta',\n  'tutela',\n  'ubicato',\n  'uccello',\n  'uccisore',\n  'udire',\n  'uditivo',\n  'uffa',\n  'ufficio',\n  'uguale',\n  'ulisse',\n  'ultimato',\n  'umano',\n  'umile',\n  'umorismo',\n  'uncinetto',\n  'ungere',\n  'ungherese',\n  'unicorno',\n  'unificato',\n  'unisono',\n  'unitario',\n  'unte',\n  'uovo',\n  'upupa',\n  'uragano',\n  'urgenza',\n  'urlo',\n  'usanza',\n  'usato',\n  'uscito',\n  'usignolo',\n  'usuraio',\n  'utensile',\n  'utilizzo',\n  'utopia',\n  'vacante',\n  'vaccinato',\n  'vagabondo',\n  'vagliato',\n  'valanga',\n  'valgo',\n  'valico',\n  'valletta',\n  'valoroso',\n  'valutare',\n  'valvola',\n  'vampata',\n  'vangare',\n  'vanitoso',\n  'vano',\n  'vantaggio',\n  'vanvera',\n  'vapore',\n  'varano',\n  'varcato',\n  'variante',\n  'vasca',\n  'vedetta',\n  'vedova',\n  'veduto',\n  'vegetale',\n  'veicolo',\n  'velcro',\n  'velina',\n  'velluto',\n  'veloce',\n  'venato',\n  'vendemmia',\n  'vento',\n  'verace',\n  'verbale',\n  'vergogna',\n  'verifica',\n  'vero',\n  'verruca',\n  'verticale',\n  'vescica',\n  'vessillo',\n  'vestale',\n  'veterano',\n  'vetrina',\n  'vetusto',\n  'viandante',\n  'vibrante',\n  'vicenda',\n  'vichingo',\n  'vicinanza',\n  'vidimare',\n  'vigilia',\n  'vigneto',\n  'vigore',\n  'vile',\n  'villano',\n  'vimini',\n  'vincitore',\n  'viola',\n  'vipera',\n  'virgola',\n  'virologo',\n  'virulento',\n  'viscoso',\n  'visione',\n  'vispo',\n  'vissuto',\n  'visura',\n  'vita',\n  'vitello',\n  'vittima',\n  'vivanda',\n  'vivido',\n  'viziare',\n  'voce',\n  'voga',\n  'volatile',\n  'volere',\n  'volpe',\n  'voragine',\n  'vulcano',\n  'zampogna',\n  'zanna',\n  'zappato',\n  'zattera',\n  'zavorra',\n  'zefiro',\n  'zelante',\n  'zelo',\n  'zenzero',\n  'zerbino',\n  'zibetto',\n  'zinco',\n  'zircone',\n  'zitto',\n  'zolla',\n  'zotico',\n  'zucchero',\n  'zufolo',\n  'zulu',\n  'zuppa'\n];\n","'use strict';\n\nmodule.exports = [\n  'あいこくしん',\n  'あいさつ',\n  'あいだ',\n  'あおぞら',\n  'あかちゃん',\n  'あきる',\n  'あけがた',\n  'あける',\n  'あこがれる',\n  'あさい',\n  'あさひ',\n  'あしあと',\n  'あじわう',\n  'あずかる',\n  'あずき',\n  'あそぶ',\n  'あたえる',\n  'あたためる',\n  'あたりまえ',\n  'あたる',\n  'あつい',\n  'あつかう',\n  'あっしゅく',\n  'あつまり',\n  'あつめる',\n  'あてな',\n  'あてはまる',\n  'あひる',\n  'あぶら',\n  'あぶる',\n  'あふれる',\n  'あまい',\n  'あまど',\n  'あまやかす',\n  'あまり',\n  'あみもの',\n  'あめりか',\n  'あやまる',\n  'あゆむ',\n  'あらいぐま',\n  'あらし',\n  'あらすじ',\n  'あらためる',\n  'あらゆる',\n  'あらわす',\n  'ありがとう',\n  'あわせる',\n  'あわてる',\n  'あんい',\n  'あんがい',\n  'あんこ',\n  'あんぜん',\n  'あんてい',\n  'あんない',\n  'あんまり',\n  'いいだす',\n  'いおん',\n  'いがい',\n  'いがく',\n  'いきおい',\n  'いきなり',\n  'いきもの',\n  'いきる',\n  'いくじ',\n  'いくぶん',\n  'いけばな',\n  'いけん',\n  'いこう',\n  'いこく',\n  'いこつ',\n  'いさましい',\n  'いさん',\n  'いしき',\n  'いじゅう',\n  'いじょう',\n  'いじわる',\n  'いずみ',\n  'いずれ',\n  'いせい',\n  'いせえび',\n  'いせかい',\n  'いせき',\n  'いぜん',\n  'いそうろう',\n  'いそがしい',\n  'いだい',\n  'いだく',\n  'いたずら',\n  'いたみ',\n  'いたりあ',\n  'いちおう',\n  'いちじ',\n  'いちど',\n  'いちば',\n  'いちぶ',\n  'いちりゅう',\n  'いつか',\n  'いっしゅん',\n  'いっせい',\n  'いっそう',\n  'いったん',\n  'いっち',\n  'いってい',\n  'いっぽう',\n  'いてざ',\n  'いてん',\n  'いどう',\n  'いとこ',\n  'いない',\n  'いなか',\n  'いねむり',\n  'いのち',\n  'いのる',\n  'いはつ',\n  'いばる',\n  'いはん',\n  'いびき',\n  'いひん',\n  'いふく',\n  'いへん',\n  'いほう',\n  'いみん',\n  'いもうと',\n  'いもたれ',\n  'いもり',\n  'いやがる',\n  'いやす',\n  'いよかん',\n  'いよく',\n  'いらい',\n  'いらすと',\n  'いりぐち',\n  'いりょう',\n  'いれい',\n  'いれもの',\n  'いれる',\n  'いろえんぴつ',\n  'いわい',\n  'いわう',\n  'いわかん',\n  'いわば',\n  'いわゆる',\n  'いんげんまめ',\n  'いんさつ',\n  'いんしょう',\n  'いんよう',\n  'うえき',\n  'うえる',\n  'うおざ',\n  'うがい',\n  'うかぶ',\n  'うかべる',\n  'うきわ',\n  'うくらいな',\n  'うくれれ',\n  'うけたまわる',\n  'うけつけ',\n  'うけとる',\n  'うけもつ',\n  'うける',\n  'うごかす',\n  'うごく',\n  'うこん',\n  'うさぎ',\n  'うしなう',\n  'うしろがみ',\n  'うすい',\n  'うすぎ',\n  'うすぐらい',\n  'うすめる',\n  'うせつ',\n  'うちあわせ',\n  'うちがわ',\n  'うちき',\n  'うちゅう',\n  'うっかり',\n  'うつくしい',\n  'うったえる',\n  'うつる',\n  'うどん',\n  'うなぎ',\n  'うなじ',\n  'うなずく',\n  'うなる',\n  'うねる',\n  'うのう',\n  'うぶげ',\n  'うぶごえ',\n  'うまれる',\n  'うめる',\n  'うもう',\n  'うやまう',\n  'うよく',\n  'うらがえす',\n  'うらぐち',\n  'うらない',\n  'うりあげ',\n  'うりきれ',\n  'うるさい',\n  'うれしい',\n  'うれゆき',\n  'うれる',\n  'うろこ',\n  'うわき',\n  'うわさ',\n  'うんこう',\n  'うんちん',\n  'うんてん',\n  'うんどう',\n  'えいえん',\n  'えいが',\n  'えいきょう',\n  'えいご',\n  'えいせい',\n  'えいぶん',\n  'えいよう',\n  'えいわ',\n  'えおり',\n  'えがお',\n  'えがく',\n  'えきたい',\n  'えくせる',\n  'えしゃく',\n  'えすて',\n  'えつらん',\n  'えのぐ',\n  'えほうまき',\n  'えほん',\n  'えまき',\n  'えもじ',\n  'えもの',\n  'えらい',\n  'えらぶ',\n  'えりあ',\n  'えんえん',\n  'えんかい',\n  'えんぎ',\n  'えんげき',\n  'えんしゅう',\n  'えんぜつ',\n  'えんそく',\n  'えんちょう',\n  'えんとつ',\n  'おいかける',\n  'おいこす',\n  'おいしい',\n  'おいつく',\n  'おうえん',\n  'おうさま',\n  'おうじ',\n  'おうせつ',\n  'おうたい',\n  'おうふく',\n  'おうべい',\n  'おうよう',\n  'おえる',\n  'おおい',\n  'おおう',\n  'おおどおり',\n  'おおや',\n  'おおよそ',\n  'おかえり',\n  'おかず',\n  'おがむ',\n  'おかわり',\n  'おぎなう',\n  'おきる',\n  'おくさま',\n  'おくじょう',\n  'おくりがな',\n  'おくる',\n  'おくれる',\n  'おこす',\n  'おこなう',\n  'おこる',\n  'おさえる',\n  'おさない',\n  'おさめる',\n  'おしいれ',\n  'おしえる',\n  'おじぎ',\n  'おじさん',\n  'おしゃれ',\n  'おそらく',\n  'おそわる',\n  'おたがい',\n  'おたく',\n  'おだやか',\n  'おちつく',\n  'おっと',\n  'おつり',\n  'おでかけ',\n  'おとしもの',\n  'おとなしい',\n  'おどり',\n  'おどろかす',\n  'おばさん',\n  'おまいり',\n  'おめでとう',\n  'おもいで',\n  'おもう',\n  'おもたい',\n  'おもちゃ',\n  'おやつ',\n  'おやゆび',\n  'およぼす',\n  'おらんだ',\n  'おろす',\n  'おんがく',\n  'おんけい',\n  'おんしゃ',\n  'おんせん',\n  'おんだん',\n  'おんちゅう',\n  'おんどけい',\n  'かあつ',\n  'かいが',\n  'がいき',\n  'がいけん',\n  'がいこう',\n  'かいさつ',\n  'かいしゃ',\n  'かいすいよく',\n  'かいぜん',\n  'かいぞうど',\n  'かいつう',\n  'かいてん',\n  'かいとう',\n  'かいふく',\n  'がいへき',\n  'かいほう',\n  'かいよう',\n  'がいらい',\n  'かいわ',\n  'かえる',\n  'かおり',\n  'かかえる',\n  'かがく',\n  'かがし',\n  'かがみ',\n  'かくご',\n  'かくとく',\n  'かざる',\n  'がぞう',\n  'かたい',\n  'かたち',\n  'がちょう',\n  'がっきゅう',\n  'がっこう',\n  'がっさん',\n  'がっしょう',\n  'かなざわし',\n  'かのう',\n  'がはく',\n  'かぶか',\n  'かほう',\n  'かほご',\n  'かまう',\n  'かまぼこ',\n  'かめれおん',\n  'かゆい',\n  'かようび',\n  'からい',\n  'かるい',\n  'かろう',\n  'かわく',\n  'かわら',\n  'がんか',\n  'かんけい',\n  'かんこう',\n  'かんしゃ',\n  'かんそう',\n  'かんたん',\n  'かんち',\n  'がんばる',\n  'きあい',\n  'きあつ',\n  'きいろ',\n  'ぎいん',\n  'きうい',\n  'きうん',\n  'きえる',\n  'きおう',\n  'きおく',\n  'きおち',\n  'きおん',\n  'きかい',\n  'きかく',\n  'きかんしゃ',\n  'ききて',\n  'きくばり',\n  'きくらげ',\n  'きけんせい',\n  'きこう',\n  'きこえる',\n  'きこく',\n  'きさい',\n  'きさく',\n  'きさま',\n  'きさらぎ',\n  'ぎじかがく',\n  'ぎしき',\n  'ぎじたいけん',\n  'ぎじにってい',\n  'ぎじゅつしゃ',\n  'きすう',\n  'きせい',\n  'きせき',\n  'きせつ',\n  'きそう',\n  'きぞく',\n  'きぞん',\n  'きたえる',\n  'きちょう',\n  'きつえん',\n  'ぎっちり',\n  'きつつき',\n  'きつね',\n  'きてい',\n  'きどう',\n  'きどく',\n  'きない',\n  'きなが',\n  'きなこ',\n  'きぬごし',\n  'きねん',\n  'きのう',\n  'きのした',\n  'きはく',\n  'きびしい',\n  'きひん',\n  'きふく',\n  'きぶん',\n  'きぼう',\n  'きほん',\n  'きまる',\n  'きみつ',\n  'きむずかしい',\n  'きめる',\n  'きもだめし',\n  'きもち',\n  'きもの',\n  'きゃく',\n  'きやく',\n  'ぎゅうにく',\n  'きよう',\n  'きょうりゅう',\n  'きらい',\n  'きらく',\n  'きりん',\n  'きれい',\n  'きれつ',\n  'きろく',\n  'ぎろん',\n  'きわめる',\n  'ぎんいろ',\n  'きんかくじ',\n  'きんじょ',\n  'きんようび',\n  'ぐあい',\n  'くいず',\n  'くうかん',\n  'くうき',\n  'くうぐん',\n  'くうこう',\n  'ぐうせい',\n  'くうそう',\n  'ぐうたら',\n  'くうふく',\n  'くうぼ',\n  'くかん',\n  'くきょう',\n  'くげん',\n  'ぐこう',\n  'くさい',\n  'くさき',\n  'くさばな',\n  'くさる',\n  'くしゃみ',\n  'くしょう',\n  'くすのき',\n  'くすりゆび',\n  'くせげ',\n  'くせん',\n  'ぐたいてき',\n  'くださる',\n  'くたびれる',\n  'くちこみ',\n  'くちさき',\n  'くつした',\n  'ぐっすり',\n  'くつろぐ',\n  'くとうてん',\n  'くどく',\n  'くなん',\n  'くねくね',\n  'くのう',\n  'くふう',\n  'くみあわせ',\n  'くみたてる',\n  'くめる',\n  'くやくしょ',\n  'くらす',\n  'くらべる',\n  'くるま',\n  'くれる',\n  'くろう',\n  'くわしい',\n  'ぐんかん',\n  'ぐんしょく',\n  'ぐんたい',\n  'ぐんて',\n  'けあな',\n  'けいかく',\n  'けいけん',\n  'けいこ',\n  'けいさつ',\n  'げいじゅつ',\n  'けいたい',\n  'げいのうじん',\n  'けいれき',\n  'けいろ',\n  'けおとす',\n  'けおりもの',\n  'げきか',\n  'げきげん',\n  'げきだん',\n  'げきちん',\n  'げきとつ',\n  'げきは',\n  'げきやく',\n  'げこう',\n  'げこくじょう',\n  'げざい',\n  'けさき',\n  'げざん',\n  'けしき',\n  'けしごむ',\n  'けしょう',\n  'げすと',\n  'けたば',\n  'けちゃっぷ',\n  'けちらす',\n  'けつあつ',\n  'けつい',\n  'けつえき',\n  'けっこん',\n  'けつじょ',\n  'けっせき',\n  'けってい',\n  'けつまつ',\n  'げつようび',\n  'げつれい',\n  'けつろん',\n  'げどく',\n  'けとばす',\n  'けとる',\n  'けなげ',\n  'けなす',\n  'けなみ',\n  'けぬき',\n  'げねつ',\n  'けねん',\n  'けはい',\n  'げひん',\n  'けぶかい',\n  'げぼく',\n  'けまり',\n  'けみかる',\n  'けむし',\n  'けむり',\n  'けもの',\n  'けらい',\n  'けろけろ',\n  'けわしい',\n  'けんい',\n  'けんえつ',\n  'けんお',\n  'けんか',\n  'げんき',\n  'けんげん',\n  'けんこう',\n  'けんさく',\n  'けんしゅう',\n  'けんすう',\n  'げんそう',\n  'けんちく',\n  'けんてい',\n  'けんとう',\n  'けんない',\n  'けんにん',\n  'げんぶつ',\n  'けんま',\n  'けんみん',\n  'けんめい',\n  'けんらん',\n  'けんり',\n  'こあくま',\n  'こいぬ',\n  'こいびと',\n  'ごうい',\n  'こうえん',\n  'こうおん',\n  'こうかん',\n  'ごうきゅう',\n  'ごうけい',\n  'こうこう',\n  'こうさい',\n  'こうじ',\n  'こうすい',\n  'ごうせい',\n  'こうそく',\n  'こうたい',\n  'こうちゃ',\n  'こうつう',\n  'こうてい',\n  'こうどう',\n  'こうない',\n  'こうはい',\n  'ごうほう',\n  'ごうまん',\n  'こうもく',\n  'こうりつ',\n  'こえる',\n  'こおり',\n  'ごかい',\n  'ごがつ',\n  'ごかん',\n  'こくご',\n  'こくさい',\n  'こくとう',\n  'こくない',\n  'こくはく',\n  'こぐま',\n  'こけい',\n  'こける',\n  'ここのか',\n  'こころ',\n  'こさめ',\n  'こしつ',\n  'こすう',\n  'こせい',\n  'こせき',\n  'こぜん',\n  'こそだて',\n  'こたい',\n  'こたえる',\n  'こたつ',\n  'こちょう',\n  'こっか',\n  'こつこつ',\n  'こつばん',\n  'こつぶ',\n  'こてい',\n  'こてん',\n  'ことがら',\n  'ことし',\n  'ことば',\n  'ことり',\n  'こなごな',\n  'こねこね',\n  'このまま',\n  'このみ',\n  'このよ',\n  'ごはん',\n  'こひつじ',\n  'こふう',\n  'こふん',\n  'こぼれる',\n  'ごまあぶら',\n  'こまかい',\n  'ごますり',\n  'こまつな',\n  'こまる',\n  'こむぎこ',\n  'こもじ',\n  'こもち',\n  'こもの',\n  'こもん',\n  'こやく',\n  'こやま',\n  'こゆう',\n  'こゆび',\n  'こよい',\n  'こよう',\n  'こりる',\n  'これくしょん',\n  'ころっけ',\n  'こわもて',\n  'こわれる',\n  'こんいん',\n  'こんかい',\n  'こんき',\n  'こんしゅう',\n  'こんすい',\n  'こんだて',\n  'こんとん',\n  'こんなん',\n  'こんびに',\n  'こんぽん',\n  'こんまけ',\n  'こんや',\n  'こんれい',\n  'こんわく',\n  'ざいえき',\n  'さいかい',\n  'さいきん',\n  'ざいげん',\n  'ざいこ',\n  'さいしょ',\n  'さいせい',\n  'ざいたく',\n  'ざいちゅう',\n  'さいてき',\n  'ざいりょう',\n  'さうな',\n  'さかいし',\n  'さがす',\n  'さかな',\n  'さかみち',\n  'さがる',\n  'さぎょう',\n  'さくし',\n  'さくひん',\n  'さくら',\n  'さこく',\n  'さこつ',\n  'さずかる',\n  'ざせき',\n  'さたん',\n  'さつえい',\n  'ざつおん',\n  'ざっか',\n  'ざつがく',\n  'さっきょく',\n  'ざっし',\n  'さつじん',\n  'ざっそう',\n  'さつたば',\n  'さつまいも',\n  'さてい',\n  'さといも',\n  'さとう',\n  'さとおや',\n  'さとし',\n  'さとる',\n  'さのう',\n  'さばく',\n  'さびしい',\n  'さべつ',\n  'さほう',\n  'さほど',\n  'さます',\n  'さみしい',\n  'さみだれ',\n  'さむけ',\n  'さめる',\n  'さやえんどう',\n  'さゆう',\n  'さよう',\n  'さよく',\n  'さらだ',\n  'ざるそば',\n  'さわやか',\n  'さわる',\n  'さんいん',\n  'さんか',\n  'さんきゃく',\n  'さんこう',\n  'さんさい',\n  'ざんしょ',\n  'さんすう',\n  'さんせい',\n  'さんそ',\n  'さんち',\n  'さんま',\n  'さんみ',\n  'さんらん',\n  'しあい',\n  'しあげ',\n  'しあさって',\n  'しあわせ',\n  'しいく',\n  'しいん',\n  'しうち',\n  'しえい',\n  'しおけ',\n  'しかい',\n  'しかく',\n  'じかん',\n  'しごと',\n  'しすう',\n  'じだい',\n  'したうけ',\n  'したぎ',\n  'したて',\n  'したみ',\n  'しちょう',\n  'しちりん',\n  'しっかり',\n  'しつじ',\n  'しつもん',\n  'してい',\n  'してき',\n  'してつ',\n  'じてん',\n  'じどう',\n  'しなぎれ',\n  'しなもの',\n  'しなん',\n  'しねま',\n  'しねん',\n  'しのぐ',\n  'しのぶ',\n  'しはい',\n  'しばかり',\n  'しはつ',\n  'しはらい',\n  'しはん',\n  'しひょう',\n  'しふく',\n  'じぶん',\n  'しへい',\n  'しほう',\n  'しほん',\n  'しまう',\n  'しまる',\n  'しみん',\n  'しむける',\n  'じむしょ',\n  'しめい',\n  'しめる',\n  'しもん',\n  'しゃいん',\n  'しゃうん',\n  'しゃおん',\n  'じゃがいも',\n  'しやくしょ',\n  'しゃくほう',\n  'しゃけん',\n  'しゃこ',\n  'しゃざい',\n  'しゃしん',\n  'しゃせん',\n  'しゃそう',\n  'しゃたい',\n  'しゃちょう',\n  'しゃっきん',\n  'じゃま',\n  'しゃりん',\n  'しゃれい',\n  'じゆう',\n  'じゅうしょ',\n  'しゅくはく',\n  'じゅしん',\n  'しゅっせき',\n  'しゅみ',\n  'しゅらば',\n  'じゅんばん',\n  'しょうかい',\n  'しょくたく',\n  'しょっけん',\n  'しょどう',\n  'しょもつ',\n  'しらせる',\n  'しらべる',\n  'しんか',\n  'しんこう',\n  'じんじゃ',\n  'しんせいじ',\n  'しんちく',\n  'しんりん',\n  'すあげ',\n  'すあし',\n  'すあな',\n  'ずあん',\n  'すいえい',\n  'すいか',\n  'すいとう',\n  'ずいぶん',\n  'すいようび',\n  'すうがく',\n  'すうじつ',\n  'すうせん',\n  'すおどり',\n  'すきま',\n  'すくう',\n  'すくない',\n  'すける',\n  'すごい',\n  'すこし',\n  'ずさん',\n  'すずしい',\n  'すすむ',\n  'すすめる',\n  'すっかり',\n  'ずっしり',\n  'ずっと',\n  'すてき',\n  'すてる',\n  'すねる',\n  'すのこ',\n  'すはだ',\n  'すばらしい',\n  'ずひょう',\n  'ずぶぬれ',\n  'すぶり',\n  'すふれ',\n  'すべて',\n  'すべる',\n  'ずほう',\n  'すぼん',\n  'すまい',\n  'すめし',\n  'すもう',\n  'すやき',\n  'すらすら',\n  'するめ',\n  'すれちがう',\n  'すろっと',\n  'すわる',\n  'すんぜん',\n  'すんぽう',\n  'せあぶら',\n  'せいかつ',\n  'せいげん',\n  'せいじ',\n  'せいよう',\n  'せおう',\n  'せかいかん',\n  'せきにん',\n  'せきむ',\n  'せきゆ',\n  'せきらんうん',\n  'せけん',\n  'せこう',\n  'せすじ',\n  'せたい',\n  'せたけ',\n  'せっかく',\n  'せっきゃく',\n  'ぜっく',\n  'せっけん',\n  'せっこつ',\n  'せっさたくま',\n  'せつぞく',\n  'せつだん',\n  'せつでん',\n  'せっぱん',\n  'せつび',\n  'せつぶん',\n  'せつめい',\n  'せつりつ',\n  'せなか',\n  'せのび',\n  'せはば',\n  'せびろ',\n  'せぼね',\n  'せまい',\n  'せまる',\n  'せめる',\n  'せもたれ',\n  'せりふ',\n  'ぜんあく',\n  'せんい',\n  'せんえい',\n  'せんか',\n  'せんきょ',\n  'せんく',\n  'せんげん',\n  'ぜんご',\n  'せんさい',\n  'せんしゅ',\n  'せんすい',\n  'せんせい',\n  'せんぞ',\n  'せんたく',\n  'せんちょう',\n  'せんてい',\n  'せんとう',\n  'せんぬき',\n  'せんねん',\n  'せんぱい',\n  'ぜんぶ',\n  'ぜんぽう',\n  'せんむ',\n  'せんめんじょ',\n  'せんもん',\n  'せんやく',\n  'せんゆう',\n  'せんよう',\n  'ぜんら',\n  'ぜんりゃく',\n  'せんれい',\n  'せんろ',\n  'そあく',\n  'そいとげる',\n  'そいね',\n  'そうがんきょう',\n  'そうき',\n  'そうご',\n  'そうしん',\n  'そうだん',\n  'そうなん',\n  'そうび',\n  'そうめん',\n  'そうり',\n  'そえもの',\n  'そえん',\n  'そがい',\n  'そげき',\n  'そこう',\n  'そこそこ',\n  'そざい',\n  'そしな',\n  'そせい',\n  'そせん',\n  'そそぐ',\n  'そだてる',\n  'そつう',\n  'そつえん',\n  'そっかん',\n  'そつぎょう',\n  'そっけつ',\n  'そっこう',\n  'そっせん',\n  'そっと',\n  'そとがわ',\n  'そとづら',\n  'そなえる',\n  'そなた',\n  'そふぼ',\n  'そぼく',\n  'そぼろ',\n  'そまつ',\n  'そまる',\n  'そむく',\n  'そむりえ',\n  'そめる',\n  'そもそも',\n  'そよかぜ',\n  'そらまめ',\n  'そろう',\n  'そんかい',\n  'そんけい',\n  'そんざい',\n  'そんしつ',\n  'そんぞく',\n  'そんちょう',\n  'ぞんび',\n  'ぞんぶん',\n  'そんみん',\n  'たあい',\n  'たいいん',\n  'たいうん',\n  'たいえき',\n  'たいおう',\n  'だいがく',\n  'たいき',\n  'たいぐう',\n  'たいけん',\n  'たいこ',\n  'たいざい',\n  'だいじょうぶ',\n  'だいすき',\n  'たいせつ',\n  'たいそう',\n  'だいたい',\n  'たいちょう',\n  'たいてい',\n  'だいどころ',\n  'たいない',\n  'たいねつ',\n  'たいのう',\n  'たいはん',\n  'だいひょう',\n  'たいふう',\n  'たいへん',\n  'たいほ',\n  'たいまつばな',\n  'たいみんぐ',\n  'たいむ',\n  'たいめん',\n  'たいやき',\n  'たいよう',\n  'たいら',\n  'たいりょく',\n  'たいる',\n  'たいわん',\n  'たうえ',\n  'たえる',\n  'たおす',\n  'たおる',\n  'たおれる',\n  'たかい',\n  'たかね',\n  'たきび',\n  'たくさん',\n  'たこく',\n  'たこやき',\n  'たさい',\n  'たしざん',\n  'だじゃれ',\n  'たすける',\n  'たずさわる',\n  'たそがれ',\n  'たたかう',\n  'たたく',\n  'ただしい',\n  'たたみ',\n  'たちばな',\n  'だっかい',\n  'だっきゃく',\n  'だっこ',\n  'だっしゅつ',\n  'だったい',\n  'たてる',\n  'たとえる',\n  'たなばた',\n  'たにん',\n  'たぬき',\n  'たのしみ',\n  'たはつ',\n  'たぶん',\n  'たべる',\n  'たぼう',\n  'たまご',\n  'たまる',\n  'だむる',\n  'ためいき',\n  'ためす',\n  'ためる',\n  'たもつ',\n  'たやすい',\n  'たよる',\n  'たらす',\n  'たりきほんがん',\n  'たりょう',\n  'たりる',\n  'たると',\n  'たれる',\n  'たれんと',\n  'たろっと',\n  'たわむれる',\n  'だんあつ',\n  'たんい',\n  'たんおん',\n  'たんか',\n  'たんき',\n  'たんけん',\n  'たんご',\n  'たんさん',\n  'たんじょうび',\n  'だんせい',\n  'たんそく',\n  'たんたい',\n  'だんち',\n  'たんてい',\n  'たんとう',\n  'だんな',\n  'たんにん',\n  'だんねつ',\n  'たんのう',\n  'たんぴん',\n  'だんぼう',\n  'たんまつ',\n  'たんめい',\n  'だんれつ',\n  'だんろ',\n  'だんわ',\n  'ちあい',\n  'ちあん',\n  'ちいき',\n  'ちいさい',\n  'ちえん',\n  'ちかい',\n  'ちから',\n  'ちきゅう',\n  'ちきん',\n  'ちけいず',\n  'ちけん',\n  'ちこく',\n  'ちさい',\n  'ちしき',\n  'ちしりょう',\n  'ちせい',\n  'ちそう',\n  'ちたい',\n  'ちたん',\n  'ちちおや',\n  'ちつじょ',\n  'ちてき',\n  'ちてん',\n  'ちぬき',\n  'ちぬり',\n  'ちのう',\n  'ちひょう',\n  'ちへいせん',\n  'ちほう',\n  'ちまた',\n  'ちみつ',\n  'ちみどろ',\n  'ちめいど',\n  'ちゃんこなべ',\n  'ちゅうい',\n  'ちゆりょく',\n  'ちょうし',\n  'ちょさくけん',\n  'ちらし',\n  'ちらみ',\n  'ちりがみ',\n  'ちりょう',\n  'ちるど',\n  'ちわわ',\n  'ちんたい',\n  'ちんもく',\n  'ついか',\n  'ついたち',\n  'つうか',\n  'つうじょう',\n  'つうはん',\n  'つうわ',\n  'つかう',\n  'つかれる',\n  'つくね',\n  'つくる',\n  'つけね',\n  'つける',\n  'つごう',\n  'つたえる',\n  'つづく',\n  'つつじ',\n  'つつむ',\n  'つとめる',\n  'つながる',\n  'つなみ',\n  'つねづね',\n  'つのる',\n  'つぶす',\n  'つまらない',\n  'つまる',\n  'つみき',\n  'つめたい',\n  'つもり',\n  'つもる',\n  'つよい',\n  'つるぼ',\n  'つるみく',\n  'つわもの',\n  'つわり',\n  'てあし',\n  'てあて',\n  'てあみ',\n  'ていおん',\n  'ていか',\n  'ていき',\n  'ていけい',\n  'ていこく',\n  'ていさつ',\n  'ていし',\n  'ていせい',\n  'ていたい',\n  'ていど',\n  'ていねい',\n  'ていひょう',\n  'ていへん',\n  'ていぼう',\n  'てうち',\n  'ておくれ',\n  'てきとう',\n  'てくび',\n  'でこぼこ',\n  'てさぎょう',\n  'てさげ',\n  'てすり',\n  'てそう',\n  'てちがい',\n  'てちょう',\n  'てつがく',\n  'てつづき',\n  'でっぱ',\n  'てつぼう',\n  'てつや',\n  'でぬかえ',\n  'てぬき',\n  'てぬぐい',\n  'てのひら',\n  'てはい',\n  'てぶくろ',\n  'てふだ',\n  'てほどき',\n  'てほん',\n  'てまえ',\n  'てまきずし',\n  'てみじか',\n  'てみやげ',\n  'てらす',\n  'てれび',\n  'てわけ',\n  'てわたし',\n  'でんあつ',\n  'てんいん',\n  'てんかい',\n  'てんき',\n  'てんぐ',\n  'てんけん',\n  'てんごく',\n  'てんさい',\n  'てんし',\n  'てんすう',\n  'でんち',\n  'てんてき',\n  'てんとう',\n  'てんない',\n  'てんぷら',\n  'てんぼうだい',\n  'てんめつ',\n  'てんらんかい',\n  'でんりょく',\n  'でんわ',\n  'どあい',\n  'といれ',\n  'どうかん',\n  'とうきゅう',\n  'どうぐ',\n  'とうし',\n  'とうむぎ',\n  'とおい',\n  'とおか',\n  'とおく',\n  'とおす',\n  'とおる',\n  'とかい',\n  'とかす',\n  'ときおり',\n  'ときどき',\n  'とくい',\n  'とくしゅう',\n  'とくてん',\n  'とくに',\n  'とくべつ',\n  'とけい',\n  'とける',\n  'とこや',\n  'とさか',\n  'としょかん',\n  'とそう',\n  'とたん',\n  'とちゅう',\n  'とっきゅう',\n  'とっくん',\n  'とつぜん',\n  'とつにゅう',\n  'とどける',\n  'ととのえる',\n  'とない',\n  'となえる',\n  'となり',\n  'とのさま',\n  'とばす',\n  'どぶがわ',\n  'とほう',\n  'とまる',\n  'とめる',\n  'ともだち',\n  'ともる',\n  'どようび',\n  'とらえる',\n  'とんかつ',\n  'どんぶり',\n  'ないかく',\n  'ないこう',\n  'ないしょ',\n  'ないす',\n  'ないせん',\n  'ないそう',\n  'なおす',\n  'ながい',\n  'なくす',\n  'なげる',\n  'なこうど',\n  'なさけ',\n  'なたでここ',\n  'なっとう',\n  'なつやすみ',\n  'ななおし',\n  'なにごと',\n  'なにもの',\n  'なにわ',\n  'なのか',\n  'なふだ',\n  'なまいき',\n  'なまえ',\n  'なまみ',\n  'なみだ',\n  'なめらか',\n  'なめる',\n  'なやむ',\n  'ならう',\n  'ならび',\n  'ならぶ',\n  'なれる',\n  'なわとび',\n  'なわばり',\n  'にあう',\n  'にいがた',\n  'にうけ',\n  'におい',\n  'にかい',\n  'にがて',\n  'にきび',\n  'にくしみ',\n  'にくまん',\n  'にげる',\n  'にさんかたんそ',\n  'にしき',\n  'にせもの',\n  'にちじょう',\n  'にちようび',\n  'にっか',\n  'にっき',\n  'にっけい',\n  'にっこう',\n  'にっさん',\n  'にっしょく',\n  'にっすう',\n  'にっせき',\n  'にってい',\n  'になう',\n  'にほん',\n  'にまめ',\n  'にもつ',\n  'にやり',\n  'にゅういん',\n  'にりんしゃ',\n  'にわとり',\n  'にんい',\n  'にんか',\n  'にんき',\n  'にんげん',\n  'にんしき',\n  'にんずう',\n  'にんそう',\n  'にんたい',\n  'にんち',\n  'にんてい',\n  'にんにく',\n  'にんぷ',\n  'にんまり',\n  'にんむ',\n  'にんめい',\n  'にんよう',\n  'ぬいくぎ',\n  'ぬかす',\n  'ぬぐいとる',\n  'ぬぐう',\n  'ぬくもり',\n  'ぬすむ',\n  'ぬまえび',\n  'ぬめり',\n  'ぬらす',\n  'ぬんちゃく',\n  'ねあげ',\n  'ねいき',\n  'ねいる',\n  'ねいろ',\n  'ねぐせ',\n  'ねくたい',\n  'ねくら',\n  'ねこぜ',\n  'ねこむ',\n  'ねさげ',\n  'ねすごす',\n  'ねそべる',\n  'ねだん',\n  'ねつい',\n  'ねっしん',\n  'ねつぞう',\n  'ねったいぎょ',\n  'ねぶそく',\n  'ねふだ',\n  'ねぼう',\n  'ねほりはほり',\n  'ねまき',\n  'ねまわし',\n  'ねみみ',\n  'ねむい',\n  'ねむたい',\n  'ねもと',\n  'ねらう',\n  'ねわざ',\n  'ねんいり',\n  'ねんおし',\n  'ねんかん',\n  'ねんきん',\n  'ねんぐ',\n  'ねんざ',\n  'ねんし',\n  'ねんちゃく',\n  'ねんど',\n  'ねんぴ',\n  'ねんぶつ',\n  'ねんまつ',\n  'ねんりょう',\n  'ねんれい',\n  'のいず',\n  'のおづま',\n  'のがす',\n  'のきなみ',\n  'のこぎり',\n  'のこす',\n  'のこる',\n  'のせる',\n  'のぞく',\n  'のぞむ',\n  'のたまう',\n  'のちほど',\n  'のっく',\n  'のばす',\n  'のはら',\n  'のべる',\n  'のぼる',\n  'のみもの',\n  'のやま',\n  'のらいぬ',\n  'のらねこ',\n  'のりもの',\n  'のりゆき',\n  'のれん',\n  'のんき',\n  'ばあい',\n  'はあく',\n  'ばあさん',\n  'ばいか',\n  'ばいく',\n  'はいけん',\n  'はいご',\n  'はいしん',\n  'はいすい',\n  'はいせん',\n  'はいそう',\n  'はいち',\n  'ばいばい',\n  'はいれつ',\n  'はえる',\n  'はおる',\n  'はかい',\n  'ばかり',\n  'はかる',\n  'はくしゅ',\n  'はけん',\n  'はこぶ',\n  'はさみ',\n  'はさん',\n  'はしご',\n  'ばしょ',\n  'はしる',\n  'はせる',\n  'ぱそこん',\n  'はそん',\n  'はたん',\n  'はちみつ',\n  'はつおん',\n  'はっかく',\n  'はづき',\n  'はっきり',\n  'はっくつ',\n  'はっけん',\n  'はっこう',\n  'はっさん',\n  'はっしん',\n  'はったつ',\n  'はっちゅう',\n  'はってん',\n  'はっぴょう',\n  'はっぽう',\n  'はなす',\n  'はなび',\n  'はにかむ',\n  'はぶらし',\n  'はみがき',\n  'はむかう',\n  'はめつ',\n  'はやい',\n  'はやし',\n  'はらう',\n  'はろうぃん',\n  'はわい',\n  'はんい',\n  'はんえい',\n  'はんおん',\n  'はんかく',\n  'はんきょう',\n  'ばんぐみ',\n  'はんこ',\n  'はんしゃ',\n  'はんすう',\n  'はんだん',\n  'ぱんち',\n  'ぱんつ',\n  'はんてい',\n  'はんとし',\n  'はんのう',\n  'はんぱ',\n  'はんぶん',\n  'はんぺん',\n  'はんぼうき',\n  'はんめい',\n  'はんらん',\n  'はんろん',\n  'ひいき',\n  'ひうん',\n  'ひえる',\n  'ひかく',\n  'ひかり',\n  'ひかる',\n  'ひかん',\n  'ひくい',\n  'ひけつ',\n  'ひこうき',\n  'ひこく',\n  'ひさい',\n  'ひさしぶり',\n  'ひさん',\n  'びじゅつかん',\n  'ひしょ',\n  'ひそか',\n  'ひそむ',\n  'ひたむき',\n  'ひだり',\n  'ひたる',\n  'ひつぎ',\n  'ひっこし',\n  'ひっし',\n  'ひつじゅひん',\n  'ひっす',\n  'ひつぜん',\n  'ぴったり',\n  'ぴっちり',\n  'ひつよう',\n  'ひてい',\n  'ひとごみ',\n  'ひなまつり',\n  'ひなん',\n  'ひねる',\n  'ひはん',\n  'ひびく',\n  'ひひょう',\n  'ひほう',\n  'ひまわり',\n  'ひまん',\n  'ひみつ',\n  'ひめい',\n  'ひめじし',\n  'ひやけ',\n  'ひやす',\n  'ひよう',\n  'びょうき',\n  'ひらがな',\n  'ひらく',\n  'ひりつ',\n  'ひりょう',\n  'ひるま',\n  'ひるやすみ',\n  'ひれい',\n  'ひろい',\n  'ひろう',\n  'ひろき',\n  'ひろゆき',\n  'ひんかく',\n  'ひんけつ',\n  'ひんこん',\n  'ひんしゅ',\n  'ひんそう',\n  'ぴんち',\n  'ひんぱん',\n  'びんぼう',\n  'ふあん',\n  'ふいうち',\n  'ふうけい',\n  'ふうせん',\n  'ぷうたろう',\n  'ふうとう',\n  'ふうふ',\n  'ふえる',\n  'ふおん',\n  'ふかい',\n  'ふきん',\n  'ふくざつ',\n  'ふくぶくろ',\n  'ふこう',\n  'ふさい',\n  'ふしぎ',\n  'ふじみ',\n  'ふすま',\n  'ふせい',\n  'ふせぐ',\n  'ふそく',\n  'ぶたにく',\n  'ふたん',\n  'ふちょう',\n  'ふつう',\n  'ふつか',\n  'ふっかつ',\n  'ふっき',\n  'ふっこく',\n  'ぶどう',\n  'ふとる',\n  'ふとん',\n  'ふのう',\n  'ふはい',\n  'ふひょう',\n  'ふへん',\n  'ふまん',\n  'ふみん',\n  'ふめつ',\n  'ふめん',\n  'ふよう',\n  'ふりこ',\n  'ふりる',\n  'ふるい',\n  'ふんいき',\n  'ぶんがく',\n  'ぶんぐ',\n  'ふんしつ',\n  'ぶんせき',\n  'ふんそう',\n  'ぶんぽう',\n  'へいあん',\n  'へいおん',\n  'へいがい',\n  'へいき',\n  'へいげん',\n  'へいこう',\n  'へいさ',\n  'へいしゃ',\n  'へいせつ',\n  'へいそ',\n  'へいたく',\n  'へいてん',\n  'へいねつ',\n  'へいわ',\n  'へきが',\n  'へこむ',\n  'べにいろ',\n  'べにしょうが',\n  'へらす',\n  'へんかん',\n  'べんきょう',\n  'べんごし',\n  'へんさい',\n  'へんたい',\n  'べんり',\n  'ほあん',\n  'ほいく',\n  'ぼうぎょ',\n  'ほうこく',\n  'ほうそう',\n  'ほうほう',\n  'ほうもん',\n  'ほうりつ',\n  'ほえる',\n  'ほおん',\n  'ほかん',\n  'ほきょう',\n  'ぼきん',\n  'ほくろ',\n  'ほけつ',\n  'ほけん',\n  'ほこう',\n  'ほこる',\n  'ほしい',\n  'ほしつ',\n  'ほしゅ',\n  'ほしょう',\n  'ほせい',\n  'ほそい',\n  'ほそく',\n  'ほたて',\n  'ほたる',\n  'ぽちぶくろ',\n  'ほっきょく',\n  'ほっさ',\n  'ほったん',\n  'ほとんど',\n  'ほめる',\n  'ほんい',\n  'ほんき',\n  'ほんけ',\n  'ほんしつ',\n  'ほんやく',\n  'まいにち',\n  'まかい',\n  'まかせる',\n  'まがる',\n  'まける',\n  'まこと',\n  'まさつ',\n  'まじめ',\n  'ますく',\n  'まぜる',\n  'まつり',\n  'まとめ',\n  'まなぶ',\n  'まぬけ',\n  'まねく',\n  'まほう',\n  'まもる',\n  'まゆげ',\n  'まよう',\n  'まろやか',\n  'まわす',\n  'まわり',\n  'まわる',\n  'まんが',\n  'まんきつ',\n  'まんぞく',\n  'まんなか',\n  'みいら',\n  'みうち',\n  'みえる',\n  'みがく',\n  'みかた',\n  'みかん',\n  'みけん',\n  'みこん',\n  'みじかい',\n  'みすい',\n  'みすえる',\n  'みせる',\n  'みっか',\n  'みつかる',\n  'みつける',\n  'みてい',\n  'みとめる',\n  'みなと',\n  'みなみかさい',\n  'みねらる',\n  'みのう',\n  'みのがす',\n  'みほん',\n  'みもと',\n  'みやげ',\n  'みらい',\n  'みりょく',\n  'みわく',\n  'みんか',\n  'みんぞく',\n  'むいか',\n  'むえき',\n  'むえん',\n  'むかい',\n  'むかう',\n  'むかえ',\n  'むかし',\n  'むぎちゃ',\n  'むける',\n  'むげん',\n  'むさぼる',\n  'むしあつい',\n  'むしば',\n  'むじゅん',\n  'むしろ',\n  'むすう',\n  'むすこ',\n  'むすぶ',\n  'むすめ',\n  'むせる',\n  'むせん',\n  'むちゅう',\n  'むなしい',\n  'むのう',\n  'むやみ',\n  'むよう',\n  'むらさき',\n  'むりょう',\n  'むろん',\n  'めいあん',\n  'めいうん',\n  'めいえん',\n  'めいかく',\n  'めいきょく',\n  'めいさい',\n  'めいし',\n  'めいそう',\n  'めいぶつ',\n  'めいれい',\n  'めいわく',\n  'めぐまれる',\n  'めざす',\n  'めした',\n  'めずらしい',\n  'めだつ',\n  'めまい',\n  'めやす',\n  'めんきょ',\n  'めんせき',\n  'めんどう',\n  'もうしあげる',\n  'もうどうけん',\n  'もえる',\n  'もくし',\n  'もくてき',\n  'もくようび',\n  'もちろん',\n  'もどる',\n  'もらう',\n  'もんく',\n  'もんだい',\n  'やおや',\n  'やける',\n  'やさい',\n  'やさしい',\n  'やすい',\n  'やすたろう',\n  'やすみ',\n  'やせる',\n  'やそう',\n  'やたい',\n  'やちん',\n  'やっと',\n  'やっぱり',\n  'やぶる',\n  'やめる',\n  'ややこしい',\n  'やよい',\n  'やわらかい',\n  'ゆうき',\n  'ゆうびんきょく',\n  'ゆうべ',\n  'ゆうめい',\n  'ゆけつ',\n  'ゆしゅつ',\n  'ゆせん',\n  'ゆそう',\n  'ゆたか',\n  'ゆちゃく',\n  'ゆでる',\n  'ゆにゅう',\n  'ゆびわ',\n  'ゆらい',\n  'ゆれる',\n  'ようい',\n  'ようか',\n  'ようきゅう',\n  'ようじ',\n  'ようす',\n  'ようちえん',\n  'よかぜ',\n  'よかん',\n  'よきん',\n  'よくせい',\n  'よくぼう',\n  'よけい',\n  'よごれる',\n  'よさん',\n  'よしゅう',\n  'よそう',\n  'よそく',\n  'よっか',\n  'よてい',\n  'よどがわく',\n  'よねつ',\n  'よやく',\n  'よゆう',\n  'よろこぶ',\n  'よろしい',\n  'らいう',\n  'らくがき',\n  'らくご',\n  'らくさつ',\n  'らくだ',\n  'らしんばん',\n  'らせん',\n  'らぞく',\n  'らたい',\n  'らっか',\n  'られつ',\n  'りえき',\n  'りかい',\n  'りきさく',\n  'りきせつ',\n  'りくぐん',\n  'りくつ',\n  'りけん',\n  'りこう',\n  'りせい',\n  'りそう',\n  'りそく',\n  'りてん',\n  'りねん',\n  'りゆう',\n  'りゅうがく',\n  'りよう',\n  'りょうり',\n  'りょかん',\n  'りょくちゃ',\n  'りょこう',\n  'りりく',\n  'りれき',\n  'りろん',\n  'りんご',\n  'るいけい',\n  'るいさい',\n  'るいじ',\n  'るいせき',\n  'るすばん',\n  'るりがわら',\n  'れいかん',\n  'れいぎ',\n  'れいせい',\n  'れいぞうこ',\n  'れいとう',\n  'れいぼう',\n  'れきし',\n  'れきだい',\n  'れんあい',\n  'れんけい',\n  'れんこん',\n  'れんさい',\n  'れんしゅう',\n  'れんぞく',\n  'れんらく',\n  'ろうか',\n  'ろうご',\n  'ろうじん',\n  'ろうそく',\n  'ろくが',\n  'ろこつ',\n  'ろじうら',\n  'ろしゅつ',\n  'ろせん',\n  'ろてん',\n  'ろめん',\n  'ろれつ',\n  'ろんぎ',\n  'ろんぱ',\n  'ろんぶん',\n  'ろんり',\n  'わかす',\n  'わかめ',\n  'わかやま',\n  'わかれる',\n  'わしつ',\n  'わじまし',\n  'わすれもの',\n  'わらう',\n  'われる'\n];\n","'use strict';\n\nmodule.exports = [\n  'ábaco',\n  'abdomen',\n  'abeja',\n  'abierto',\n  'abogado',\n  'abono',\n  'aborto',\n  'abrazo',\n  'abrir',\n  'abuelo',\n  'abuso',\n  'acabar',\n  'academia',\n  'acceso',\n  'acción',\n  'aceite',\n  'acelga',\n  'acento',\n  'aceptar',\n  'ácido',\n  'aclarar',\n  'acné',\n  'acoger',\n  'acoso',\n  'activo',\n  'acto',\n  'actriz',\n  'actuar',\n  'acudir',\n  'acuerdo',\n  'acusar',\n  'adicto',\n  'admitir',\n  'adoptar',\n  'adorno',\n  'aduana',\n  'adulto',\n  'aéreo',\n  'afectar',\n  'afición',\n  'afinar',\n  'afirmar',\n  'ágil',\n  'agitar',\n  'agonía',\n  'agosto',\n  'agotar',\n  'agregar',\n  'agrio',\n  'agua',\n  'agudo',\n  'águila',\n  'aguja',\n  'ahogo',\n  'ahorro',\n  'aire',\n  'aislar',\n  'ajedrez',\n  'ajeno',\n  'ajuste',\n  'alacrán',\n  'alambre',\n  'alarma',\n  'alba',\n  'álbum',\n  'alcalde',\n  'aldea',\n  'alegre',\n  'alejar',\n  'alerta',\n  'aleta',\n  'alfiler',\n  'alga',\n  'algodón',\n  'aliado',\n  'aliento',\n  'alivio',\n  'alma',\n  'almeja',\n  'almíbar',\n  'altar',\n  'alteza',\n  'altivo',\n  'alto',\n  'altura',\n  'alumno',\n  'alzar',\n  'amable',\n  'amante',\n  'amapola',\n  'amargo',\n  'amasar',\n  'ámbar',\n  'ámbito',\n  'ameno',\n  'amigo',\n  'amistad',\n  'amor',\n  'amparo',\n  'amplio',\n  'ancho',\n  'anciano',\n  'ancla',\n  'andar',\n  'andén',\n  'anemia',\n  'ángulo',\n  'anillo',\n  'ánimo',\n  'anís',\n  'anotar',\n  'antena',\n  'antiguo',\n  'antojo',\n  'anual',\n  'anular',\n  'anuncio',\n  'añadir',\n  'añejo',\n  'año',\n  'apagar',\n  'aparato',\n  'apetito',\n  'apio',\n  'aplicar',\n  'apodo',\n  'aporte',\n  'apoyo',\n  'aprender',\n  'aprobar',\n  'apuesta',\n  'apuro',\n  'arado',\n  'araña',\n  'arar',\n  'árbitro',\n  'árbol',\n  'arbusto',\n  'archivo',\n  'arco',\n  'arder',\n  'ardilla',\n  'arduo',\n  'área',\n  'árido',\n  'aries',\n  'armonía',\n  'arnés',\n  'aroma',\n  'arpa',\n  'arpón',\n  'arreglo',\n  'arroz',\n  'arruga',\n  'arte',\n  'artista',\n  'asa',\n  'asado',\n  'asalto',\n  'ascenso',\n  'asegurar',\n  'aseo',\n  'asesor',\n  'asiento',\n  'asilo',\n  'asistir',\n  'asno',\n  'asombro',\n  'áspero',\n  'astilla',\n  'astro',\n  'astuto',\n  'asumir',\n  'asunto',\n  'atajo',\n  'ataque',\n  'atar',\n  'atento',\n  'ateo',\n  'ático',\n  'atleta',\n  'átomo',\n  'atraer',\n  'atroz',\n  'atún',\n  'audaz',\n  'audio',\n  'auge',\n  'aula',\n  'aumento',\n  'ausente',\n  'autor',\n  'aval',\n  'avance',\n  'avaro',\n  'ave',\n  'avellana',\n  'avena',\n  'avestruz',\n  'avión',\n  'aviso',\n  'ayer',\n  'ayuda',\n  'ayuno',\n  'azafrán',\n  'azar',\n  'azote',\n  'azúcar',\n  'azufre',\n  'azul',\n  'baba',\n  'babor',\n  'bache',\n  'bahía',\n  'baile',\n  'bajar',\n  'balanza',\n  'balcón',\n  'balde',\n  'bambú',\n  'banco',\n  'banda',\n  'baño',\n  'barba',\n  'barco',\n  'barniz',\n  'barro',\n  'báscula',\n  'bastón',\n  'basura',\n  'batalla',\n  'batería',\n  'batir',\n  'batuta',\n  'baúl',\n  'bazar',\n  'bebé',\n  'bebida',\n  'bello',\n  'besar',\n  'beso',\n  'bestia',\n  'bicho',\n  'bien',\n  'bingo',\n  'blanco',\n  'bloque',\n  'blusa',\n  'boa',\n  'bobina',\n  'bobo',\n  'boca',\n  'bocina',\n  'boda',\n  'bodega',\n  'boina',\n  'bola',\n  'bolero',\n  'bolsa',\n  'bomba',\n  'bondad',\n  'bonito',\n  'bono',\n  'bonsái',\n  'borde',\n  'borrar',\n  'bosque',\n  'bote',\n  'botín',\n  'bóveda',\n  'bozal',\n  'bravo',\n  'brazo',\n  'brecha',\n  'breve',\n  'brillo',\n  'brinco',\n  'brisa',\n  'broca',\n  'broma',\n  'bronce',\n  'brote',\n  'bruja',\n  'brusco',\n  'bruto',\n  'buceo',\n  'bucle',\n  'bueno',\n  'buey',\n  'bufanda',\n  'bufón',\n  'búho',\n  'buitre',\n  'bulto',\n  'burbuja',\n  'burla',\n  'burro',\n  'buscar',\n  'butaca',\n  'buzón',\n  'caballo',\n  'cabeza',\n  'cabina',\n  'cabra',\n  'cacao',\n  'cadáver',\n  'cadena',\n  'caer',\n  'café',\n  'caída',\n  'caimán',\n  'caja',\n  'cajón',\n  'cal',\n  'calamar',\n  'calcio',\n  'caldo',\n  'calidad',\n  'calle',\n  'calma',\n  'calor',\n  'calvo',\n  'cama',\n  'cambio',\n  'camello',\n  'camino',\n  'campo',\n  'cáncer',\n  'candil',\n  'canela',\n  'canguro',\n  'canica',\n  'canto',\n  'caña',\n  'cañón',\n  'caoba',\n  'caos',\n  'capaz',\n  'capitán',\n  'capote',\n  'captar',\n  'capucha',\n  'cara',\n  'carbón',\n  'cárcel',\n  'careta',\n  'carga',\n  'cariño',\n  'carne',\n  'carpeta',\n  'carro',\n  'carta',\n  'casa',\n  'casco',\n  'casero',\n  'caspa',\n  'castor',\n  'catorce',\n  'catre',\n  'caudal',\n  'causa',\n  'cazo',\n  'cebolla',\n  'ceder',\n  'cedro',\n  'celda',\n  'célebre',\n  'celoso',\n  'célula',\n  'cemento',\n  'ceniza',\n  'centro',\n  'cerca',\n  'cerdo',\n  'cereza',\n  'cero',\n  'cerrar',\n  'certeza',\n  'césped',\n  'cetro',\n  'chacal',\n  'chaleco',\n  'champú',\n  'chancla',\n  'chapa',\n  'charla',\n  'chico',\n  'chiste',\n  'chivo',\n  'choque',\n  'choza',\n  'chuleta',\n  'chupar',\n  'ciclón',\n  'ciego',\n  'cielo',\n  'cien',\n  'cierto',\n  'cifra',\n  'cigarro',\n  'cima',\n  'cinco',\n  'cine',\n  'cinta',\n  'ciprés',\n  'circo',\n  'ciruela',\n  'cisne',\n  'cita',\n  'ciudad',\n  'clamor',\n  'clan',\n  'claro',\n  'clase',\n  'clave',\n  'cliente',\n  'clima',\n  'clínica',\n  'cobre',\n  'cocción',\n  'cochino',\n  'cocina',\n  'coco',\n  'código',\n  'codo',\n  'cofre',\n  'coger',\n  'cohete',\n  'cojín',\n  'cojo',\n  'cola',\n  'colcha',\n  'colegio',\n  'colgar',\n  'colina',\n  'collar',\n  'colmo',\n  'columna',\n  'combate',\n  'comer',\n  'comida',\n  'cómodo',\n  'compra',\n  'conde',\n  'conejo',\n  'conga',\n  'conocer',\n  'consejo',\n  'contar',\n  'copa',\n  'copia',\n  'corazón',\n  'corbata',\n  'corcho',\n  'cordón',\n  'corona',\n  'correr',\n  'coser',\n  'cosmos',\n  'costa',\n  'cráneo',\n  'cráter',\n  'crear',\n  'crecer',\n  'creído',\n  'crema',\n  'cría',\n  'crimen',\n  'cripta',\n  'crisis',\n  'cromo',\n  'crónica',\n  'croqueta',\n  'crudo',\n  'cruz',\n  'cuadro',\n  'cuarto',\n  'cuatro',\n  'cubo',\n  'cubrir',\n  'cuchara',\n  'cuello',\n  'cuento',\n  'cuerda',\n  'cuesta',\n  'cueva',\n  'cuidar',\n  'culebra',\n  'culpa',\n  'culto',\n  'cumbre',\n  'cumplir',\n  'cuna',\n  'cuneta',\n  'cuota',\n  'cupón',\n  'cúpula',\n  'curar',\n  'curioso',\n  'curso',\n  'curva',\n  'cutis',\n  'dama',\n  'danza',\n  'dar',\n  'dardo',\n  'dátil',\n  'deber',\n  'débil',\n  'década',\n  'decir',\n  'dedo',\n  'defensa',\n  'definir',\n  'dejar',\n  'delfín',\n  'delgado',\n  'delito',\n  'demora',\n  'denso',\n  'dental',\n  'deporte',\n  'derecho',\n  'derrota',\n  'desayuno',\n  'deseo',\n  'desfile',\n  'desnudo',\n  'destino',\n  'desvío',\n  'detalle',\n  'detener',\n  'deuda',\n  'día',\n  'diablo',\n  'diadema',\n  'diamante',\n  'diana',\n  'diario',\n  'dibujo',\n  'dictar',\n  'diente',\n  'dieta',\n  'diez',\n  'difícil',\n  'digno',\n  'dilema',\n  'diluir',\n  'dinero',\n  'directo',\n  'dirigir',\n  'disco',\n  'diseño',\n  'disfraz',\n  'diva',\n  'divino',\n  'doble',\n  'doce',\n  'dolor',\n  'domingo',\n  'don',\n  'donar',\n  'dorado',\n  'dormir',\n  'dorso',\n  'dos',\n  'dosis',\n  'dragón',\n  'droga',\n  'ducha',\n  'duda',\n  'duelo',\n  'dueño',\n  'dulce',\n  'dúo',\n  'duque',\n  'durar',\n  'dureza',\n  'duro',\n  'ébano',\n  'ebrio',\n  'echar',\n  'eco',\n  'ecuador',\n  'edad',\n  'edición',\n  'edificio',\n  'editor',\n  'educar',\n  'efecto',\n  'eficaz',\n  'eje',\n  'ejemplo',\n  'elefante',\n  'elegir',\n  'elemento',\n  'elevar',\n  'elipse',\n  'élite',\n  'elixir',\n  'elogio',\n  'eludir',\n  'embudo',\n  'emitir',\n  'emoción',\n  'empate',\n  'empeño',\n  'empleo',\n  'empresa',\n  'enano',\n  'encargo',\n  'enchufe',\n  'encía',\n  'enemigo',\n  'enero',\n  'enfado',\n  'enfermo',\n  'engaño',\n  'enigma',\n  'enlace',\n  'enorme',\n  'enredo',\n  'ensayo',\n  'enseñar',\n  'entero',\n  'entrar',\n  'envase',\n  'envío',\n  'época',\n  'equipo',\n  'erizo',\n  'escala',\n  'escena',\n  'escolar',\n  'escribir',\n  'escudo',\n  'esencia',\n  'esfera',\n  'esfuerzo',\n  'espada',\n  'espejo',\n  'espía',\n  'esposa',\n  'espuma',\n  'esquí',\n  'estar',\n  'este',\n  'estilo',\n  'estufa',\n  'etapa',\n  'eterno',\n  'ética',\n  'etnia',\n  'evadir',\n  'evaluar',\n  'evento',\n  'evitar',\n  'exacto',\n  'examen',\n  'exceso',\n  'excusa',\n  'exento',\n  'exigir',\n  'exilio',\n  'existir',\n  'éxito',\n  'experto',\n  'explicar',\n  'exponer',\n  'extremo',\n  'fábrica',\n  'fábula',\n  'fachada',\n  'fácil',\n  'factor',\n  'faena',\n  'faja',\n  'falda',\n  'fallo',\n  'falso',\n  'faltar',\n  'fama',\n  'familia',\n  'famoso',\n  'faraón',\n  'farmacia',\n  'farol',\n  'farsa',\n  'fase',\n  'fatiga',\n  'fauna',\n  'favor',\n  'fax',\n  'febrero',\n  'fecha',\n  'feliz',\n  'feo',\n  'feria',\n  'feroz',\n  'fértil',\n  'fervor',\n  'festín',\n  'fiable',\n  'fianza',\n  'fiar',\n  'fibra',\n  'ficción',\n  'ficha',\n  'fideo',\n  'fiebre',\n  'fiel',\n  'fiera',\n  'fiesta',\n  'figura',\n  'fijar',\n  'fijo',\n  'fila',\n  'filete',\n  'filial',\n  'filtro',\n  'fin',\n  'finca',\n  'fingir',\n  'finito',\n  'firma',\n  'flaco',\n  'flauta',\n  'flecha',\n  'flor',\n  'flota',\n  'fluir',\n  'flujo',\n  'flúor',\n  'fobia',\n  'foca',\n  'fogata',\n  'fogón',\n  'folio',\n  'folleto',\n  'fondo',\n  'forma',\n  'forro',\n  'fortuna',\n  'forzar',\n  'fosa',\n  'foto',\n  'fracaso',\n  'frágil',\n  'franja',\n  'frase',\n  'fraude',\n  'freír',\n  'freno',\n  'fresa',\n  'frío',\n  'frito',\n  'fruta',\n  'fuego',\n  'fuente',\n  'fuerza',\n  'fuga',\n  'fumar',\n  'función',\n  'funda',\n  'furgón',\n  'furia',\n  'fusil',\n  'fútbol',\n  'futuro',\n  'gacela',\n  'gafas',\n  'gaita',\n  'gajo',\n  'gala',\n  'galería',\n  'gallo',\n  'gamba',\n  'ganar',\n  'gancho',\n  'ganga',\n  'ganso',\n  'garaje',\n  'garza',\n  'gasolina',\n  'gastar',\n  'gato',\n  'gavilán',\n  'gemelo',\n  'gemir',\n  'gen',\n  'género',\n  'genio',\n  'gente',\n  'geranio',\n  'gerente',\n  'germen',\n  'gesto',\n  'gigante',\n  'gimnasio',\n  'girar',\n  'giro',\n  'glaciar',\n  'globo',\n  'gloria',\n  'gol',\n  'golfo',\n  'goloso',\n  'golpe',\n  'goma',\n  'gordo',\n  'gorila',\n  'gorra',\n  'gota',\n  'goteo',\n  'gozar',\n  'grada',\n  'gráfico',\n  'grano',\n  'grasa',\n  'gratis',\n  'grave',\n  'grieta',\n  'grillo',\n  'gripe',\n  'gris',\n  'grito',\n  'grosor',\n  'grúa',\n  'grueso',\n  'grumo',\n  'grupo',\n  'guante',\n  'guapo',\n  'guardia',\n  'guerra',\n  'guía',\n  'guiño',\n  'guion',\n  'guiso',\n  'guitarra',\n  'gusano',\n  'gustar',\n  'haber',\n  'hábil',\n  'hablar',\n  'hacer',\n  'hacha',\n  'hada',\n  'hallar',\n  'hamaca',\n  'harina',\n  'haz',\n  'hazaña',\n  'hebilla',\n  'hebra',\n  'hecho',\n  'helado',\n  'helio',\n  'hembra',\n  'herir',\n  'hermano',\n  'héroe',\n  'hervir',\n  'hielo',\n  'hierro',\n  'hígado',\n  'higiene',\n  'hijo',\n  'himno',\n  'historia',\n  'hocico',\n  'hogar',\n  'hoguera',\n  'hoja',\n  'hombre',\n  'hongo',\n  'honor',\n  'honra',\n  'hora',\n  'hormiga',\n  'horno',\n  'hostil',\n  'hoyo',\n  'hueco',\n  'huelga',\n  'huerta',\n  'hueso',\n  'huevo',\n  'huida',\n  'huir',\n  'humano',\n  'húmedo',\n  'humilde',\n  'humo',\n  'hundir',\n  'huracán',\n  'hurto',\n  'icono',\n  'ideal',\n  'idioma',\n  'ídolo',\n  'iglesia',\n  'iglú',\n  'igual',\n  'ilegal',\n  'ilusión',\n  'imagen',\n  'imán',\n  'imitar',\n  'impar',\n  'imperio',\n  'imponer',\n  'impulso',\n  'incapaz',\n  'índice',\n  'inerte',\n  'infiel',\n  'informe',\n  'ingenio',\n  'inicio',\n  'inmenso',\n  'inmune',\n  'innato',\n  'insecto',\n  'instante',\n  'interés',\n  'íntimo',\n  'intuir',\n  'inútil',\n  'invierno',\n  'ira',\n  'iris',\n  'ironía',\n  'isla',\n  'islote',\n  'jabalí',\n  'jabón',\n  'jamón',\n  'jarabe',\n  'jardín',\n  'jarra',\n  'jaula',\n  'jazmín',\n  'jefe',\n  'jeringa',\n  'jinete',\n  'jornada',\n  'joroba',\n  'joven',\n  'joya',\n  'juerga',\n  'jueves',\n  'juez',\n  'jugador',\n  'jugo',\n  'juguete',\n  'juicio',\n  'junco',\n  'jungla',\n  'junio',\n  'juntar',\n  'júpiter',\n  'jurar',\n  'justo',\n  'juvenil',\n  'juzgar',\n  'kilo',\n  'koala',\n  'labio',\n  'lacio',\n  'lacra',\n  'lado',\n  'ladrón',\n  'lagarto',\n  'lágrima',\n  'laguna',\n  'laico',\n  'lamer',\n  'lámina',\n  'lámpara',\n  'lana',\n  'lancha',\n  'langosta',\n  'lanza',\n  'lápiz',\n  'largo',\n  'larva',\n  'lástima',\n  'lata',\n  'látex',\n  'latir',\n  'laurel',\n  'lavar',\n  'lazo',\n  'leal',\n  'lección',\n  'leche',\n  'lector',\n  'leer',\n  'legión',\n  'legumbre',\n  'lejano',\n  'lengua',\n  'lento',\n  'leña',\n  'león',\n  'leopardo',\n  'lesión',\n  'letal',\n  'letra',\n  'leve',\n  'leyenda',\n  'libertad',\n  'libro',\n  'licor',\n  'líder',\n  'lidiar',\n  'lienzo',\n  'liga',\n  'ligero',\n  'lima',\n  'límite',\n  'limón',\n  'limpio',\n  'lince',\n  'lindo',\n  'línea',\n  'lingote',\n  'lino',\n  'linterna',\n  'líquido',\n  'liso',\n  'lista',\n  'litera',\n  'litio',\n  'litro',\n  'llaga',\n  'llama',\n  'llanto',\n  'llave',\n  'llegar',\n  'llenar',\n  'llevar',\n  'llorar',\n  'llover',\n  'lluvia',\n  'lobo',\n  'loción',\n  'loco',\n  'locura',\n  'lógica',\n  'logro',\n  'lombriz',\n  'lomo',\n  'lonja',\n  'lote',\n  'lucha',\n  'lucir',\n  'lugar',\n  'lujo',\n  'luna',\n  'lunes',\n  'lupa',\n  'lustro',\n  'luto',\n  'luz',\n  'maceta',\n  'macho',\n  'madera',\n  'madre',\n  'maduro',\n  'maestro',\n  'mafia',\n  'magia',\n  'mago',\n  'maíz',\n  'maldad',\n  'maleta',\n  'malla',\n  'malo',\n  'mamá',\n  'mambo',\n  'mamut',\n  'manco',\n  'mando',\n  'manejar',\n  'manga',\n  'maniquí',\n  'manjar',\n  'mano',\n  'manso',\n  'manta',\n  'mañana',\n  'mapa',\n  'máquina',\n  'mar',\n  'marco',\n  'marea',\n  'marfil',\n  'margen',\n  'marido',\n  'mármol',\n  'marrón',\n  'martes',\n  'marzo',\n  'masa',\n  'máscara',\n  'masivo',\n  'matar',\n  'materia',\n  'matiz',\n  'matriz',\n  'máximo',\n  'mayor',\n  'mazorca',\n  'mecha',\n  'medalla',\n  'medio',\n  'médula',\n  'mejilla',\n  'mejor',\n  'melena',\n  'melón',\n  'memoria',\n  'menor',\n  'mensaje',\n  'mente',\n  'menú',\n  'mercado',\n  'merengue',\n  'mérito',\n  'mes',\n  'mesón',\n  'meta',\n  'meter',\n  'método',\n  'metro',\n  'mezcla',\n  'miedo',\n  'miel',\n  'miembro',\n  'miga',\n  'mil',\n  'milagro',\n  'militar',\n  'millón',\n  'mimo',\n  'mina',\n  'minero',\n  'mínimo',\n  'minuto',\n  'miope',\n  'mirar',\n  'misa',\n  'miseria',\n  'misil',\n  'mismo',\n  'mitad',\n  'mito',\n  'mochila',\n  'moción',\n  'moda',\n  'modelo',\n  'moho',\n  'mojar',\n  'molde',\n  'moler',\n  'molino',\n  'momento',\n  'momia',\n  'monarca',\n  'moneda',\n  'monja',\n  'monto',\n  'moño',\n  'morada',\n  'morder',\n  'moreno',\n  'morir',\n  'morro',\n  'morsa',\n  'mortal',\n  'mosca',\n  'mostrar',\n  'motivo',\n  'mover',\n  'móvil',\n  'mozo',\n  'mucho',\n  'mudar',\n  'mueble',\n  'muela',\n  'muerte',\n  'muestra',\n  'mugre',\n  'mujer',\n  'mula',\n  'muleta',\n  'multa',\n  'mundo',\n  'muñeca',\n  'mural',\n  'muro',\n  'músculo',\n  'museo',\n  'musgo',\n  'música',\n  'muslo',\n  'nácar',\n  'nación',\n  'nadar',\n  'naipe',\n  'naranja',\n  'nariz',\n  'narrar',\n  'nasal',\n  'natal',\n  'nativo',\n  'natural',\n  'náusea',\n  'naval',\n  'nave',\n  'navidad',\n  'necio',\n  'néctar',\n  'negar',\n  'negocio',\n  'negro',\n  'neón',\n  'nervio',\n  'neto',\n  'neutro',\n  'nevar',\n  'nevera',\n  'nicho',\n  'nido',\n  'niebla',\n  'nieto',\n  'niñez',\n  'niño',\n  'nítido',\n  'nivel',\n  'nobleza',\n  'noche',\n  'nómina',\n  'noria',\n  'norma',\n  'norte',\n  'nota',\n  'noticia',\n  'novato',\n  'novela',\n  'novio',\n  'nube',\n  'nuca',\n  'núcleo',\n  'nudillo',\n  'nudo',\n  'nuera',\n  'nueve',\n  'nuez',\n  'nulo',\n  'número',\n  'nutria',\n  'oasis',\n  'obeso',\n  'obispo',\n  'objeto',\n  'obra',\n  'obrero',\n  'observar',\n  'obtener',\n  'obvio',\n  'oca',\n  'ocaso',\n  'océano',\n  'ochenta',\n  'ocho',\n  'ocio',\n  'ocre',\n  'octavo',\n  'octubre',\n  'oculto',\n  'ocupar',\n  'ocurrir',\n  'odiar',\n  'odio',\n  'odisea',\n  'oeste',\n  'ofensa',\n  'oferta',\n  'oficio',\n  'ofrecer',\n  'ogro',\n  'oído',\n  'oír',\n  'ojo',\n  'ola',\n  'oleada',\n  'olfato',\n  'olivo',\n  'olla',\n  'olmo',\n  'olor',\n  'olvido',\n  'ombligo',\n  'onda',\n  'onza',\n  'opaco',\n  'opción',\n  'ópera',\n  'opinar',\n  'oponer',\n  'optar',\n  'óptica',\n  'opuesto',\n  'oración',\n  'orador',\n  'oral',\n  'órbita',\n  'orca',\n  'orden',\n  'oreja',\n  'órgano',\n  'orgía',\n  'orgullo',\n  'oriente',\n  'origen',\n  'orilla',\n  'oro',\n  'orquesta',\n  'oruga',\n  'osadía',\n  'oscuro',\n  'osezno',\n  'oso',\n  'ostra',\n  'otoño',\n  'otro',\n  'oveja',\n  'óvulo',\n  'óxido',\n  'oxígeno',\n  'oyente',\n  'ozono',\n  'pacto',\n  'padre',\n  'paella',\n  'página',\n  'pago',\n  'país',\n  'pájaro',\n  'palabra',\n  'palco',\n  'paleta',\n  'pálido',\n  'palma',\n  'paloma',\n  'palpar',\n  'pan',\n  'panal',\n  'pánico',\n  'pantera',\n  'pañuelo',\n  'papá',\n  'papel',\n  'papilla',\n  'paquete',\n  'parar',\n  'parcela',\n  'pared',\n  'parir',\n  'paro',\n  'párpado',\n  'parque',\n  'párrafo',\n  'parte',\n  'pasar',\n  'paseo',\n  'pasión',\n  'paso',\n  'pasta',\n  'pata',\n  'patio',\n  'patria',\n  'pausa',\n  'pauta',\n  'pavo',\n  'payaso',\n  'peatón',\n  'pecado',\n  'pecera',\n  'pecho',\n  'pedal',\n  'pedir',\n  'pegar',\n  'peine',\n  'pelar',\n  'peldaño',\n  'pelea',\n  'peligro',\n  'pellejo',\n  'pelo',\n  'peluca',\n  'pena',\n  'pensar',\n  'peñón',\n  'peón',\n  'peor',\n  'pepino',\n  'pequeño',\n  'pera',\n  'percha',\n  'perder',\n  'pereza',\n  'perfil',\n  'perico',\n  'perla',\n  'permiso',\n  'perro',\n  'persona',\n  'pesa',\n  'pesca',\n  'pésimo',\n  'pestaña',\n  'pétalo',\n  'petróleo',\n  'pez',\n  'pezuña',\n  'picar',\n  'pichón',\n  'pie',\n  'piedra',\n  'pierna',\n  'pieza',\n  'pijama',\n  'pilar',\n  'piloto',\n  'pimienta',\n  'pino',\n  'pintor',\n  'pinza',\n  'piña',\n  'piojo',\n  'pipa',\n  'pirata',\n  'pisar',\n  'piscina',\n  'piso',\n  'pista',\n  'pitón',\n  'pizca',\n  'placa',\n  'plan',\n  'plata',\n  'playa',\n  'plaza',\n  'pleito',\n  'pleno',\n  'plomo',\n  'pluma',\n  'plural',\n  'pobre',\n  'poco',\n  'poder',\n  'podio',\n  'poema',\n  'poesía',\n  'poeta',\n  'polen',\n  'policía',\n  'pollo',\n  'polvo',\n  'pomada',\n  'pomelo',\n  'pomo',\n  'pompa',\n  'poner',\n  'porción',\n  'portal',\n  'posada',\n  'poseer',\n  'posible',\n  'poste',\n  'potencia',\n  'potro',\n  'pozo',\n  'prado',\n  'precoz',\n  'pregunta',\n  'premio',\n  'prensa',\n  'preso',\n  'previo',\n  'primo',\n  'príncipe',\n  'prisión',\n  'privar',\n  'proa',\n  'probar',\n  'proceso',\n  'producto',\n  'proeza',\n  'profesor',\n  'programa',\n  'prole',\n  'promesa',\n  'pronto',\n  'propio',\n  'próximo',\n  'prueba',\n  'público',\n  'puchero',\n  'pudor',\n  'pueblo',\n  'puerta',\n  'puesto',\n  'pulga',\n  'pulir',\n  'pulmón',\n  'pulpo',\n  'pulso',\n  'puma',\n  'punto',\n  'puñal',\n  'puño',\n  'pupa',\n  'pupila',\n  'puré',\n  'quedar',\n  'queja',\n  'quemar',\n  'querer',\n  'queso',\n  'quieto',\n  'química',\n  'quince',\n  'quitar',\n  'rábano',\n  'rabia',\n  'rabo',\n  'ración',\n  'radical',\n  'raíz',\n  'rama',\n  'rampa',\n  'rancho',\n  'rango',\n  'rapaz',\n  'rápido',\n  'rapto',\n  'rasgo',\n  'raspa',\n  'rato',\n  'rayo',\n  'raza',\n  'razón',\n  'reacción',\n  'realidad',\n  'rebaño',\n  'rebote',\n  'recaer',\n  'receta',\n  'rechazo',\n  'recoger',\n  'recreo',\n  'recto',\n  'recurso',\n  'red',\n  'redondo',\n  'reducir',\n  'reflejo',\n  'reforma',\n  'refrán',\n  'refugio',\n  'regalo',\n  'regir',\n  'regla',\n  'regreso',\n  'rehén',\n  'reino',\n  'reír',\n  'reja',\n  'relato',\n  'relevo',\n  'relieve',\n  'relleno',\n  'reloj',\n  'remar',\n  'remedio',\n  'remo',\n  'rencor',\n  'rendir',\n  'renta',\n  'reparto',\n  'repetir',\n  'reposo',\n  'reptil',\n  'res',\n  'rescate',\n  'resina',\n  'respeto',\n  'resto',\n  'resumen',\n  'retiro',\n  'retorno',\n  'retrato',\n  'reunir',\n  'revés',\n  'revista',\n  'rey',\n  'rezar',\n  'rico',\n  'riego',\n  'rienda',\n  'riesgo',\n  'rifa',\n  'rígido',\n  'rigor',\n  'rincón',\n  'riñón',\n  'río',\n  'riqueza',\n  'risa',\n  'ritmo',\n  'rito',\n  'rizo',\n  'roble',\n  'roce',\n  'rociar',\n  'rodar',\n  'rodeo',\n  'rodilla',\n  'roer',\n  'rojizo',\n  'rojo',\n  'romero',\n  'romper',\n  'ron',\n  'ronco',\n  'ronda',\n  'ropa',\n  'ropero',\n  'rosa',\n  'rosca',\n  'rostro',\n  'rotar',\n  'rubí',\n  'rubor',\n  'rudo',\n  'rueda',\n  'rugir',\n  'ruido',\n  'ruina',\n  'ruleta',\n  'rulo',\n  'rumbo',\n  'rumor',\n  'ruptura',\n  'ruta',\n  'rutina',\n  'sábado',\n  'saber',\n  'sabio',\n  'sable',\n  'sacar',\n  'sagaz',\n  'sagrado',\n  'sala',\n  'saldo',\n  'salero',\n  'salir',\n  'salmón',\n  'salón',\n  'salsa',\n  'salto',\n  'salud',\n  'salvar',\n  'samba',\n  'sanción',\n  'sandía',\n  'sanear',\n  'sangre',\n  'sanidad',\n  'sano',\n  'santo',\n  'sapo',\n  'saque',\n  'sardina',\n  'sartén',\n  'sastre',\n  'satán',\n  'sauna',\n  'saxofón',\n  'sección',\n  'seco',\n  'secreto',\n  'secta',\n  'sed',\n  'seguir',\n  'seis',\n  'sello',\n  'selva',\n  'semana',\n  'semilla',\n  'senda',\n  'sensor',\n  'señal',\n  'señor',\n  'separar',\n  'sepia',\n  'sequía',\n  'ser',\n  'serie',\n  'sermón',\n  'servir',\n  'sesenta',\n  'sesión',\n  'seta',\n  'setenta',\n  'severo',\n  'sexo',\n  'sexto',\n  'sidra',\n  'siesta',\n  'siete',\n  'siglo',\n  'signo',\n  'sílaba',\n  'silbar',\n  'silencio',\n  'silla',\n  'símbolo',\n  'simio',\n  'sirena',\n  'sistema',\n  'sitio',\n  'situar',\n  'sobre',\n  'socio',\n  'sodio',\n  'sol',\n  'solapa',\n  'soldado',\n  'soledad',\n  'sólido',\n  'soltar',\n  'solución',\n  'sombra',\n  'sondeo',\n  'sonido',\n  'sonoro',\n  'sonrisa',\n  'sopa',\n  'soplar',\n  'soporte',\n  'sordo',\n  'sorpresa',\n  'sorteo',\n  'sostén',\n  'sótano',\n  'suave',\n  'subir',\n  'suceso',\n  'sudor',\n  'suegra',\n  'suelo',\n  'sueño',\n  'suerte',\n  'sufrir',\n  'sujeto',\n  'sultán',\n  'sumar',\n  'superar',\n  'suplir',\n  'suponer',\n  'supremo',\n  'sur',\n  'surco',\n  'sureño',\n  'surgir',\n  'susto',\n  'sutil',\n  'tabaco',\n  'tabique',\n  'tabla',\n  'tabú',\n  'taco',\n  'tacto',\n  'tajo',\n  'talar',\n  'talco',\n  'talento',\n  'talla',\n  'talón',\n  'tamaño',\n  'tambor',\n  'tango',\n  'tanque',\n  'tapa',\n  'tapete',\n  'tapia',\n  'tapón',\n  'taquilla',\n  'tarde',\n  'tarea',\n  'tarifa',\n  'tarjeta',\n  'tarot',\n  'tarro',\n  'tarta',\n  'tatuaje',\n  'tauro',\n  'taza',\n  'tazón',\n  'teatro',\n  'techo',\n  'tecla',\n  'técnica',\n  'tejado',\n  'tejer',\n  'tejido',\n  'tela',\n  'teléfono',\n  'tema',\n  'temor',\n  'templo',\n  'tenaz',\n  'tender',\n  'tener',\n  'tenis',\n  'tenso',\n  'teoría',\n  'terapia',\n  'terco',\n  'término',\n  'ternura',\n  'terror',\n  'tesis',\n  'tesoro',\n  'testigo',\n  'tetera',\n  'texto',\n  'tez',\n  'tibio',\n  'tiburón',\n  'tiempo',\n  'tienda',\n  'tierra',\n  'tieso',\n  'tigre',\n  'tijera',\n  'tilde',\n  'timbre',\n  'tímido',\n  'timo',\n  'tinta',\n  'tío',\n  'típico',\n  'tipo',\n  'tira',\n  'tirón',\n  'titán',\n  'títere',\n  'título',\n  'tiza',\n  'toalla',\n  'tobillo',\n  'tocar',\n  'tocino',\n  'todo',\n  'toga',\n  'toldo',\n  'tomar',\n  'tono',\n  'tonto',\n  'topar',\n  'tope',\n  'toque',\n  'tórax',\n  'torero',\n  'tormenta',\n  'torneo',\n  'toro',\n  'torpedo',\n  'torre',\n  'torso',\n  'tortuga',\n  'tos',\n  'tosco',\n  'toser',\n  'tóxico',\n  'trabajo',\n  'tractor',\n  'traer',\n  'tráfico',\n  'trago',\n  'traje',\n  'tramo',\n  'trance',\n  'trato',\n  'trauma',\n  'trazar',\n  'trébol',\n  'tregua',\n  'treinta',\n  'tren',\n  'trepar',\n  'tres',\n  'tribu',\n  'trigo',\n  'tripa',\n  'triste',\n  'triunfo',\n  'trofeo',\n  'trompa',\n  'tronco',\n  'tropa',\n  'trote',\n  'trozo',\n  'truco',\n  'trueno',\n  'trufa',\n  'tubería',\n  'tubo',\n  'tuerto',\n  'tumba',\n  'tumor',\n  'túnel',\n  'túnica',\n  'turbina',\n  'turismo',\n  'turno',\n  'tutor',\n  'ubicar',\n  'úlcera',\n  'umbral',\n  'unidad',\n  'unir',\n  'universo',\n  'uno',\n  'untar',\n  'uña',\n  'urbano',\n  'urbe',\n  'urgente',\n  'urna',\n  'usar',\n  'usuario',\n  'útil',\n  'utopía',\n  'uva',\n  'vaca',\n  'vacío',\n  'vacuna',\n  'vagar',\n  'vago',\n  'vaina',\n  'vajilla',\n  'vale',\n  'válido',\n  'valle',\n  'valor',\n  'válvula',\n  'vampiro',\n  'vara',\n  'variar',\n  'varón',\n  'vaso',\n  'vecino',\n  'vector',\n  'vehículo',\n  'veinte',\n  'vejez',\n  'vela',\n  'velero',\n  'veloz',\n  'vena',\n  'vencer',\n  'venda',\n  'veneno',\n  'vengar',\n  'venir',\n  'venta',\n  'venus',\n  'ver',\n  'verano',\n  'verbo',\n  'verde',\n  'vereda',\n  'verja',\n  'verso',\n  'verter',\n  'vía',\n  'viaje',\n  'vibrar',\n  'vicio',\n  'víctima',\n  'vida',\n  'vídeo',\n  'vidrio',\n  'viejo',\n  'viernes',\n  'vigor',\n  'vil',\n  'villa',\n  'vinagre',\n  'vino',\n  'viñedo',\n  'violín',\n  'viral',\n  'virgo',\n  'virtud',\n  'visor',\n  'víspera',\n  'vista',\n  'vitamina',\n  'viudo',\n  'vivaz',\n  'vivero',\n  'vivir',\n  'vivo',\n  'volcán',\n  'volumen',\n  'volver',\n  'voraz',\n  'votar',\n  'voto',\n  'voz',\n  'vuelo',\n  'vulgar',\n  'yacer',\n  'yate',\n  'yegua',\n  'yema',\n  'yerno',\n  'yeso',\n  'yodo',\n  'yoga',\n  'yogur',\n  'zafiro',\n  'zanja',\n  'zapato',\n  'zarza',\n  'zona',\n  'zorro',\n  'zumo',\n  'zurdo'\n];\n","/*!\n * wordlist.js - wordlists for bcoin\n * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nexports.get = function get(name) {\n  switch (name) {\n    case 'simplified chinese':\n      return require('./words/chinese-simplified.js');\n    case 'traditional chinese':\n      return require('./words/chinese-traditional.js');\n    case 'english':\n      return require('./words/english.js');\n    case 'french':\n      return require('./words/french.js');\n    case 'italian':\n      return require('./words/italian.js');\n    case 'japanese':\n      return require('./words/japanese.js');\n    case 'spanish':\n      return require('./words/spanish.js');\n    default:\n      throw new Error(`Unknown language: ${name}.`);\n  }\n};\n","/*!\n * nfkd.js - unicode normalization for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * Normalize unicode string.\n * @alias module:utils.nfkd\n * @param {String} str\n * @returns {String}\n */\n\nfunction nfkd(str) {\n  return str.normalize('NFKD');\n}\n\n/*\n * Expose\n */\n\nmodule.exports = nfkd;\n","/*!\n * mnemonic.js - hd mnemonics for bcoin\n * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst sha256 = require('../bcrypto/sha256');\nconst cleanse = require('../bcrypto/cleanse');\nconst random = require('../bcrypto/random');\nconst pbkdf2 = require('../bcrypto/pbkdf2');\nconst sha512 = require('../bcrypto/sha512');\nconst wordlist = require('./wordlist');\nconst common = require('./common');\nconst nfkd = require('./nfkd');\nconst {inspectSymbol} = require('../utils');\n\n/*\n * Constants\n */\n\nconst wordlistCache = Object.create(null);\n\n/**\n * HD Mnemonic\n * @alias module:hd.Mnemonic\n */\n\nclass Mnemonic {\n  /**\n   * Create a mnemonic.\n   * @constructor\n   * @param {Object} options\n   * @param {Number?} options.bit - Bits of entropy (Must\n   * be a multiple of 8) (default=128).\n   * @param {Buffer?} options.entropy - Entropy bytes. Will\n   * be generated with `options.bits` bits of entropy\n   * if not present.\n   * @param {String?} options.phrase - Mnemonic phrase (will\n   * be generated if not present).\n   * @param {String?} options.language - Language.\n   */\n\n  constructor(options) {\n    this.bits = common.MIN_ENTROPY;\n    this.language = 'english';\n    this.entropy = null;\n    this.phrase = null;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    if (typeof options === 'string')\n      options = { phrase: options };\n\n    if (options.bits != null) {\n      assert((options.bits & 0xffff) === options.bits);\n      assert(options.bits >= common.MIN_ENTROPY);\n      assert(options.bits <= common.MAX_ENTROPY);\n      assert(options.bits % 32 === 0);\n      this.bits = options.bits;\n    }\n\n    if (options.language) {\n      assert(typeof options.language === 'string');\n      assert(Mnemonic.languages.indexOf(options.language) !== -1);\n      this.language = options.language;\n    }\n\n    if (options.phrase) {\n      this.fromPhrase(options.phrase);\n      return this;\n    }\n\n    if (options.entropy) {\n      this.fromEntropy(options.entropy);\n      return this;\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate mnemonic from options.\n   * @param {Object} options\n   * @returns {Mnemonic}\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Destroy the mnemonic (zeroes entropy).\n   */\n\n  destroy() {\n    this.bits = common.MIN_ENTROPY;\n    this.language = 'english';\n    if (this.entropy) {\n      cleanse(this.entropy);\n      this.entropy = null;\n    }\n    this.phrase = null;\n  }\n\n  /**\n   * Generate the seed.\n   * @param {String?} passphrase\n   * @returns {Buffer} pbkdf2 seed.\n   */\n\n  toSeed(passphrase) {\n    if (!passphrase)\n      passphrase = '';\n\n    const phrase = nfkd(this.getPhrase());\n    const passwd = nfkd(`mnemonic${passphrase}`);\n\n    return pbkdf2.derive(sha512,\n      Buffer.from(phrase, 'utf8'),\n      Buffer.from(passwd, 'utf8'),\n      2048, 64);\n  }\n\n  /**\n   * Get or generate entropy.\n   * @returns {Buffer}\n   */\n\n  getEntropy() {\n    if (!this.entropy)\n      this.entropy = random.randomBytes(this.bits / 8);\n\n    assert(this.bits / 8 === this.entropy.length);\n\n    return this.entropy;\n  }\n\n  /**\n   * Generate a mnemonic phrase from chosen language.\n   * @returns {String}\n   */\n\n  getPhrase() {\n    if (this.phrase)\n      return this.phrase;\n\n    // Include the first `ENT / 32` bits\n    // of the hash (the checksum).\n    const wbits = this.bits + (this.bits / 32);\n\n    // Get entropy and checksum.\n    const entropy = this.getEntropy();\n    const chk = sha256.digest(entropy);\n\n    // Append the hash to the entropy to\n    // make things easy when grabbing\n    // the checksum bits.\n    const size = Math.ceil(wbits / 8);\n    const data = Buffer.allocUnsafe(size);\n    entropy.copy(data, 0);\n    chk.copy(data, entropy.length);\n\n    // Build the mnemonic by reading\n    // 11 bit indexes from the entropy.\n    const list = Mnemonic.getWordlist(this.language);\n\n    let phrase = [];\n    for (let i = 0; i < wbits / 11; i++) {\n      let index = 0;\n      for (let j = 0; j < 11; j++) {\n        const pos = i * 11 + j;\n        const bit = pos % 8;\n        const oct = (pos - bit) / 8;\n        index <<= 1;\n        index |= (data[oct] >>> (7 - bit)) & 1;\n      }\n      phrase.push(list.words[index]);\n    }\n\n    // Japanese likes double-width spaces.\n    if (this.language === 'japanese')\n      phrase = phrase.join('\\u3000');\n    else\n      phrase = phrase.join(' ');\n\n    this.phrase = phrase;\n\n    return phrase;\n  }\n\n  /**\n   * Inject properties from phrase.\n   * @private\n   * @param {String} phrase\n   */\n\n  fromPhrase(phrase) {\n    assert(typeof phrase === 'string');\n    assert(phrase.length <= 1000);\n\n    const words = phrase.trim().split(/[\\s\\u3000]+/);\n    const wbits = words.length * 11;\n    const cbits = wbits % 32;\n\n    assert(cbits !== 0, 'Invalid checksum.');\n\n    const bits = wbits - cbits;\n\n    assert(bits >= common.MIN_ENTROPY);\n    assert(bits <= common.MAX_ENTROPY);\n    assert(bits % 32 === 0);\n\n    const size = Math.ceil(wbits / 8);\n    const data = Buffer.allocUnsafe(size);\n    data.fill(0);\n\n    const lang = Mnemonic.getLanguage(words[0]);\n    const list = Mnemonic.getWordlist(lang);\n\n    // Rebuild entropy bytes.\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      const index = list.map[word];\n\n      if (index == null)\n        throw new Error('Could not find word.');\n\n      for (let j = 0; j < 11; j++) {\n        const pos = i * 11 + j;\n        const bit = pos % 8;\n        const oct = (pos - bit) / 8;\n        const val = (index >>> (10 - j)) & 1;\n        data[oct] |= val << (7 - bit);\n      }\n    }\n\n    const cbytes = Math.ceil(cbits / 8);\n    const entropy = data.slice(0, data.length - cbytes);\n    const chk1 = data.slice(data.length - cbytes);\n    const chk2 = sha256.digest(entropy);\n\n    // Verify checksum.\n    for (let i = 0; i < cbits; i++) {\n      const bit = i % 8;\n      const oct = (i - bit) / 8;\n      const b1 = (chk1[oct] >>> (7 - bit)) & 1;\n      const b2 = (chk2[oct] >>> (7 - bit)) & 1;\n      if (b1 !== b2)\n        throw new Error('Invalid checksum.');\n    }\n\n    assert(bits / 8 === entropy.length);\n\n    this.bits = bits;\n    this.language = lang;\n    this.entropy = entropy;\n    this.phrase = phrase;\n\n    return this;\n  }\n\n  /**\n   * Instantiate mnemonic from a phrase (validates checksum).\n   * @param {String} phrase\n   * @returns {Mnemonic}\n   * @throws on bad checksum\n   */\n\n  static fromPhrase(phrase) {\n    return new this().fromPhrase(phrase);\n  }\n\n  /**\n   * Inject properties from entropy.\n   * @private\n   * @param {Buffer} entropy\n   * @param {String?} lang\n   */\n\n  fromEntropy(entropy, lang) {\n    assert(Buffer.isBuffer(entropy));\n    assert(entropy.length * 8 >= common.MIN_ENTROPY);\n    assert(entropy.length * 8 <= common.MAX_ENTROPY);\n    assert((entropy.length * 8) % 32 === 0);\n    assert(!lang || Mnemonic.languages.indexOf(lang) !== -1);\n\n    this.entropy = entropy;\n    this.bits = entropy.length * 8;\n\n    if (lang)\n      this.language = lang;\n\n    return this;\n  }\n\n  /**\n   * Instantiate mnemonic from entropy.\n   * @param {Buffer} entropy\n   * @param {String?} lang\n   * @returns {Mnemonic}\n   */\n\n  static fromEntropy(entropy, lang) {\n    return new this().fromEntropy(entropy, lang);\n  }\n\n  /**\n   * Determine a single word's language.\n   * @param {String} word\n   * @returns {String} Language.\n   * @throws on not found.\n   */\n\n  static getLanguage(word) {\n    for (const lang of Mnemonic.languages) {\n      const list = Mnemonic.getWordlist(lang);\n      if (list.map[word] != null)\n        return lang;\n    }\n\n    throw new Error('Could not determine language.');\n  }\n\n  /**\n   * Retrieve the wordlist for a language.\n   * @param {String} lang\n   * @returns {Object}\n   */\n\n  static getWordlist(lang) {\n    const cache = wordlistCache[lang];\n\n    if (cache)\n      return cache;\n\n    const words = wordlist.get(lang);\n    const list = new WordList(words);\n\n    wordlistCache[lang] = list;\n\n    return list;\n  }\n\n  /**\n   * Convert mnemonic to a json-friendly object.\n   * @returns {Object}\n   */\n\n  toJSON() {\n    return {\n      bits: this.bits,\n      language: this.language,\n      entropy: this.getEntropy().toString('hex'),\n      phrase: this.getPhrase()\n    };\n  }\n\n  /**\n   * Inject properties from json object.\n   * @private\n   * @param {Object} json\n   */\n\n  fromJSON(json) {\n    assert(json);\n    assert((json.bits & 0xffff) === json.bits);\n    assert(typeof json.language === 'string');\n    assert(typeof json.entropy === 'string');\n    assert(typeof json.phrase === 'string');\n    assert(json.bits >= common.MIN_ENTROPY);\n    assert(json.bits <= common.MAX_ENTROPY);\n    assert(json.bits % 32 === 0);\n    assert(json.bits / 8 === json.entropy.length / 2);\n\n    this.bits = json.bits;\n    this.language = json.language;\n    this.entropy = Buffer.from(json.entropy, 'hex');\n    this.phrase = json.phrase;\n\n    return this;\n  }\n\n  /**\n   * Instantiate mnemonic from json object.\n   * @param {Object} json\n   * @returns {Mnemonic}\n   */\n\n  static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n  /**\n   * Calculate serialization size.\n   * @returns {Number}\n   */\n\n  getSize() {\n    let size = 0;\n    size += 3;\n    size += this.getEntropy().length;\n    return size;\n  }\n\n  /**\n   * Write the mnemonic to a buffer writer.\n   * @params {BufferWriter} bw\n   */\n\n  toWriter(bw) {\n    const lang = Mnemonic.languages.indexOf(this.language);\n\n    assert(lang !== -1);\n\n    bw.writeU16(this.bits);\n    bw.writeU8(lang);\n    bw.writeBytes(this.getEntropy());\n\n    return bw;\n  }\n\n  /**\n   * Serialize mnemonic.\n   * @returns {Buffer}\n   */\n\n  toRaw(writer) {\n    const size = this.getSize();\n    return this.toWriter(bio.write(size)).render();\n  }\n\n  /**\n   * Inject properties from buffer reader.\n   * @private\n   * @param {BufferReader} br\n   */\n\n  fromReader(br) {\n    const bits = br.readU16();\n\n    assert(bits >= common.MIN_ENTROPY);\n    assert(bits <= common.MAX_ENTROPY);\n    assert(bits % 32 === 0);\n\n    const language = Mnemonic.languages[br.readU8()];\n    assert(language);\n\n    this.bits = bits;\n    this.language = language;\n    this.entropy = br.readBytes(bits / 8);\n\n    return this;\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    return this.fromReader(bio.read(data));\n  }\n\n  /**\n   * Instantiate mnemonic from buffer reader.\n   * @param {BufferReader} br\n   * @returns {Mnemonic}\n   */\n\n  static fromReader(br) {\n    return new this().fromReader(br);\n  }\n\n  /**\n   * Instantiate mnemonic from serialized data.\n   * @param {Buffer} data\n   * @returns {Mnemonic}\n   */\n\n  static fromRaw(data) {\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Convert the mnemonic to a string.\n   * @returns {String}\n   */\n\n  toString() {\n    return this.getPhrase();\n  }\n\n  /**\n   * Inspect the mnemonic.\n   * @returns {String}\n   */\n\n  [inspectSymbol]() {\n    return `<Mnemonic: ${this.getPhrase()}>`;\n  }\n\n  /**\n   * Test whether an object is a Mnemonic.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isMnemonic(obj) {\n    return obj instanceof Mnemonic;\n  }\n}\n\n/**\n * List of languages.\n * @const {String[]}\n * @default\n */\n\nMnemonic.languages = [\n  'simplified chinese',\n  'traditional chinese',\n  'english',\n  'french',\n  'italian',\n  'japanese',\n  'spanish'\n];\n\n/**\n * Word List\n * @ignore\n */\n\nclass WordList {\n  /**\n   * Create word list.\n   * @constructor\n   * @ignore\n   * @param {Array} words\n   */\n\n  constructor(words) {\n    this.words = words;\n    this.map = Object.create(null);\n\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      this.map[word] = i;\n    }\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Mnemonic;\n","/*!\n * public.js - hd public keys for bcoin\n * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst {base58} = require('bstring');\nconst sha512 = require('../bcrypto/sha512');\nconst hash160 = require('../bcrypto/hash160');\nconst hash256 = require('../bcrypto/hash256');\nconst cleanse = require('../bcrypto/cleanse');\nconst secp256k1 = require('../bcrypto/secp256k1');\nconst Network = require('../protocol/network');\nconst consensus = require('../protocol/consensus');\nconst common = require('./common');\n\n/**\n * HDPublicKey\n * @alias module:hd.PublicKey\n * @property {Number} depth\n * @property {Number} parentFingerPrint\n * @property {Number} childIndex\n * @property {Buffer} chainCode\n * @property {Buffer} publicKey\n */\n\nclass HDPublicKey {\n  /**\n   * Create an HD public key.\n   * @constructor\n   * @param {Object|Base58String} options\n   * @param {Base58String?} options.xkey - Serialized base58 key.\n   * @param {Number?} options.depth\n   * @param {Number?} options.parentFingerPrint\n   * @param {Number?} options.childIndex\n   * @param {Buffer?} options.chainCode\n   * @param {Buffer?} options.publicKey\n   */\n\n  constructor(options) {\n    this.depth = 0;\n    this.parentFingerPrint = 0;\n    this.childIndex = 0;\n    this.chainCode = consensus.ZERO_HASH;\n    this.publicKey = common.ZERO_KEY;\n\n    this.fingerPrint = -1;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    assert(options, 'No options for HDPublicKey');\n    assert((options.depth & 0xff) === options.depth);\n    assert((options.parentFingerPrint >>> 0) === options.parentFingerPrint);\n    assert((options.childIndex >>> 0) === options.childIndex);\n    assert(Buffer.isBuffer(options.chainCode));\n    assert(Buffer.isBuffer(options.publicKey));\n\n    this.depth = options.depth;\n    this.parentFingerPrint = options.parentFingerPrint;\n    this.childIndex = options.childIndex;\n    this.chainCode = options.chainCode;\n    this.publicKey = options.publicKey;\n\n    return this;\n  }\n\n  /**\n   * Instantiate HD public key from options object.\n   * @param {Object} options\n   * @returns {HDPublicKey}\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Get HD public key (self).\n   * @returns {HDPublicKey}\n   */\n\n  toPublic() {\n    return this;\n  }\n\n  /**\n   * Get cached base58 xprivkey (always null here).\n   * @returns {null}\n   */\n\n  xprivkey(network) {\n    return null;\n  }\n\n  /**\n   * Get cached base58 xpubkey.\n   * @returns {Base58String}\n   */\n\n  xpubkey(network) {\n    return this.toBase58(network);\n  }\n\n  /**\n   * Destroy the key (zeroes chain code and pubkey).\n   */\n\n  destroy() {\n    this.depth = 0;\n    this.childIndex = 0;\n    this.parentFingerPrint = 0;\n\n    cleanse(this.chainCode);\n    cleanse(this.publicKey);\n\n    this.fingerPrint = -1;\n  }\n\n  /**\n   * Derive a child key.\n   * @param {Number} index - Derivation index.\n   * @param {Boolean?} hardened - Whether the derivation\n   * should be hardened (throws if true).\n   * @returns {HDPrivateKey}\n   * @throws on `hardened`\n   */\n\n  derive(index, hardened) {\n    assert(typeof index === 'number');\n\n    if ((index >>> 0) !== index)\n      throw new Error('Index out of range.');\n\n    if ((index & common.HARDENED) || hardened)\n      throw new Error('Cannot derive hardened.');\n\n    if (this.depth >= 0xff)\n      throw new Error('Depth too high.');\n\n    const id = this.getID(index);\n    const cache = common.cache.get(id);\n\n    if (cache)\n      return cache;\n\n    const bw = bio.pool(37);\n\n    bw.writeBytes(this.publicKey);\n    bw.writeU32BE(index);\n\n    const data = bw.render();\n\n    const hash = sha512.mac(data, this.chainCode);\n    const left = hash.slice(0, 32);\n    const right = hash.slice(32, 64);\n\n    let key;\n    try {\n      key = secp256k1.publicKeyTweakAdd(this.publicKey, left, true);\n    } catch (e) {\n      return this.derive(index + 1);\n    }\n\n    if (this.fingerPrint === -1) {\n      const fp = hash160.digest(this.publicKey);\n      this.fingerPrint = fp.readUInt32BE(0, true);\n    }\n\n    const child = new this.constructor();\n    child.depth = this.depth + 1;\n    child.parentFingerPrint = this.fingerPrint;\n    child.childIndex = index;\n    child.chainCode = right;\n    child.publicKey = key;\n\n    common.cache.set(id, child);\n\n    return child;\n  }\n\n  /**\n   * Unique HD key ID.\n   * @private\n   * @param {Number} index\n   * @returns {String}\n   */\n\n  getID(index) {\n    return 'b' + this.publicKey.toString('hex') + index;\n  }\n\n  /**\n   * Derive a BIP44 account key (does not derive, only ensures account key).\n   * @method\n   * @param {Number} purpose\n   * @param {Number} type\n   * @param {Number} account\n   * @returns {HDPublicKey}\n   * @throws Error if key is not already an account key.\n   */\n\n  deriveAccount(purpose, type, account) {\n    assert((purpose >>> 0) === purpose);\n    assert((type >>> 0) === type);\n    assert((account >>> 0) === account);\n    assert(this.isAccount(account), 'Cannot derive account index.');\n    return this;\n  }\n\n  /**\n   * Test whether the key is a master key.\n   * @method\n   * @returns {Boolean}\n   */\n\n  isMaster() {\n    return common.isMaster(this);\n  }\n\n  /**\n   * Test whether the key is (most likely) a BIP44 account key.\n   * @method\n   * @param {Number?} account\n   * @returns {Boolean}\n   */\n\n  isAccount(account) {\n    return common.isAccount(this, account);\n  }\n\n  /**\n   * Test whether a string is a valid path.\n   * @param {String} path\n   * @param {Boolean?} hardened\n   * @returns {Boolean}\n   */\n\n  static isValidPath(path) {\n    try {\n      common.parsePath(path, false);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Derive a key from a derivation path.\n   * @param {String} path\n   * @returns {HDPublicKey}\n   * @throws Error if `path` is not a valid path.\n   * @throws Error if hardened.\n   */\n\n  derivePath(path) {\n    const indexes = common.parsePath(path, false);\n\n    let key = this;\n\n    for (const index of indexes)\n      key = key.derive(index);\n\n    return key;\n  }\n\n  /**\n   * Compare a key against an object.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  equals(obj) {\n    assert(HDPublicKey.isHDPublicKey(obj));\n\n    return this.depth === obj.depth\n      && this.parentFingerPrint === obj.parentFingerPrint\n      && this.childIndex === obj.childIndex\n      && this.chainCode.equals(obj.chainCode)\n      && this.publicKey.equals(obj.publicKey);\n  }\n\n  /**\n   * Compare a key against an object.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  compare(key) {\n    assert(HDPublicKey.isHDPublicKey(key));\n\n    let cmp = this.depth - key.depth;\n\n    if (cmp !== 0)\n      return cmp;\n\n    cmp = this.parentFingerPrint - key.parentFingerPrint;\n\n    if (cmp !== 0)\n      return cmp;\n\n    cmp = this.childIndex - key.childIndex;\n\n    if (cmp !== 0)\n      return cmp;\n\n    cmp = this.chainCode.compare(key.chainCode);\n\n    if (cmp !== 0)\n      return cmp;\n\n    cmp = this.publicKey.compare(key.publicKey);\n\n    if (cmp !== 0)\n      return cmp;\n\n    return 0;\n  }\n\n  /**\n   * Convert key to a more json-friendly object.\n   * @returns {Object}\n   */\n\n  toJSON(network) {\n    return {\n      xpubkey: this.xpubkey(network)\n    };\n  }\n\n  /**\n   * Inject properties from json object.\n   * @private\n   * @param {Object} json\n   * @param {Network?} network\n   */\n\n  fromJSON(json, network) {\n    assert(json.xpubkey, 'Could not handle HD key JSON.');\n    this.fromBase58(json.xpubkey, network);\n    return this;\n  }\n\n  /**\n   * Instantiate an HDPublicKey from a jsonified key object.\n   * @param {Object} json - The jsonified transaction object.\n   * @param {Network?} network\n   * @returns {HDPrivateKey}\n   */\n\n  static fromJSON(json, network) {\n    return new this().fromJSON(json, network);\n  }\n\n  /**\n   * Test whether an object is in the form of a base58 xpubkey.\n   * @param {String} data\n   * @param {(Network|NetworkType)?} network\n   * @returns {Boolean}\n   */\n\n  static isBase58(data, network) {\n    if (typeof data !== 'string')\n      return false;\n\n    if (data.length < 4)\n      return false;\n\n    const prefix = data.substring(0, 4);\n\n    try {\n      Network.fromPublic58(prefix, network);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Test whether a buffer has a valid network prefix.\n   * @param {Buffer} data\n   * @param {(Network|NetworkType)?} network\n   * @returns {NetworkType}\n   */\n\n  static isRaw(data, network) {\n    if (!Buffer.isBuffer(data))\n      return false;\n\n    if (data.length < 4)\n      return false;\n\n    const version = data.readUInt32BE(0, true);\n\n    try {\n      Network.fromPublic(version, network);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Inject properties from a base58 key.\n   * @private\n   * @param {Base58String} xkey\n   * @param {Network?} network\n   */\n\n  fromBase58(xkey, network) {\n    assert(typeof xkey === 'string');\n    return this.fromRaw(base58.decode(xkey), network);\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {BufferReader} br\n   * @param {(Network|NetworkType)?} network\n   */\n\n  fromReader(br, network) {\n    const version = br.readU32BE();\n\n    Network.fromPublic(version, network);\n\n    this.depth = br.readU8();\n    this.parentFingerPrint = br.readU32BE();\n    this.childIndex = br.readU32BE();\n    this.chainCode = br.readBytes(32);\n    this.publicKey = br.readBytes(33);\n\n    br.verifyChecksum(hash256.digest);\n\n    return this;\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   * @param {(Network|NetworkType)?} network\n   */\n\n  fromRaw(data, network) {\n    return this.fromReader(bio.read(data), network);\n  }\n\n  /**\n   * Serialize key data to base58 extended key.\n   * @param {(Network|NetworkType)?} network\n   * @returns {Base58String}\n   */\n\n  toBase58(network) {\n    return base58.encode(this.toRaw(network));\n  }\n\n  /**\n   * Write the key to a buffer writer.\n   * @param {BufferWriter} bw\n   * @param {(Network|NetworkType)?} network\n   */\n\n  toWriter(bw, network) {\n    network = Network.get(network);\n\n    bw.writeU32BE(network.keyPrefix.xpubkey);\n    bw.writeU8(this.depth);\n    bw.writeU32BE(this.parentFingerPrint);\n    bw.writeU32BE(this.childIndex);\n    bw.writeBytes(this.chainCode);\n    bw.writeBytes(this.publicKey);\n    bw.writeChecksum(hash256.digest);\n\n    return bw;\n  }\n\n  /**\n   * Calculate serialization size.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return 82;\n  }\n\n  /**\n   * Serialize the key.\n   * @param {(Network|NetworkType)?} network\n   * @returns {Buffer}\n   */\n\n  toRaw(network) {\n    return this.toWriter(bio.write(82), network).render();\n  }\n\n  /**\n   * Instantiate an HD public key from a base58 string.\n   * @param {Base58String} xkey\n   * @param {Network?} network\n   * @returns {HDPublicKey}\n   */\n\n  static fromBase58(xkey, network) {\n    return new this().fromBase58(xkey, network);\n  }\n\n  /**\n   * Instantiate key from serialized data.\n   * @param {BufferReader} br\n   * @param {(Network|NetworkType)?} network\n   * @returns {HDPublicKey}\n   */\n\n  static fromReader(br, network) {\n    return new this().fromReader(br, network);\n  }\n\n  /**\n   * Instantiate key from serialized data.\n   * @param {Buffer} data\n   * @param {(Network|NetworkType)?} network\n   * @returns {HDPublicKey}\n   */\n\n  static fromRaw(data, network) {\n    return new this().fromRaw(data, network);\n  }\n\n  /**\n   * Test whether an object is a HDPublicKey.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isHDPublicKey(obj) {\n    return obj instanceof HDPublicKey;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = HDPublicKey;\n","/*!\n * private.js - hd private keys for bcoin\n * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst {base58} = require('bstring');\nconst sha512 = require('../bcrypto/sha512');\nconst hash160 = require('../bcrypto/hash160');\nconst hash256 = require('../bcrypto/hash256');\nconst cleanse = require('../bcrypto/cleanse');\nconst random = require('../bcrypto/random');\nconst secp256k1 = require('../bcrypto/secp256k1');\nconst Network = require('../protocol/network');\nconst consensus = require('../protocol/consensus');\nconst common = require('./common');\nconst Mnemonic = require('./mnemonic');\nconst HDPublicKey = require('./public');\n\n/*\n * Constants\n */\n\nconst SEED_SALT = Buffer.from('Bitcoin seed', 'ascii');\n\n/**\n * HDPrivateKey\n * @alias module:hd.PrivateKey\n * @property {Number} depth\n * @property {Number} parentFingerPrint\n * @property {Number} childIndex\n * @property {Buffer} chainCode\n * @property {Buffer} privateKey\n */\n\nclass HDPrivateKey {\n  /**\n   * Create an hd private key.\n   * @constructor\n   * @param {Object|String} options\n   * @param {Number?} options.depth\n   * @param {Number?} options.parentFingerPrint\n   * @param {Number?} options.childIndex\n   * @param {Buffer?} options.chainCode\n   * @param {Buffer?} options.privateKey\n   */\n\n  constructor(options) {\n    this.depth = 0;\n    this.parentFingerPrint = 0;\n    this.childIndex = 0;\n    this.chainCode = consensus.ZERO_HASH;\n    this.privateKey = consensus.ZERO_HASH;\n\n    this.publicKey = common.ZERO_KEY;\n    this.fingerPrint = -1;\n\n    this._hdPublicKey = null;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    assert(options, 'No options for HD private key.');\n    assert((options.depth & 0xff) === options.depth);\n    assert((options.parentFingerPrint >>> 0) === options.parentFingerPrint);\n    assert((options.childIndex >>> 0) === options.childIndex);\n    assert(Buffer.isBuffer(options.chainCode));\n    assert(Buffer.isBuffer(options.privateKey));\n\n    this.depth = options.depth;\n    this.parentFingerPrint = options.parentFingerPrint;\n    this.childIndex = options.childIndex;\n    this.chainCode = options.chainCode;\n    this.privateKey = options.privateKey;\n    this.publicKey = secp256k1.publicKeyCreate(options.privateKey, true);\n\n    return this;\n  }\n\n  /**\n   * Instantiate HD private key from options object.\n   * @param {Object} options\n   * @returns {HDPrivateKey}\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Get HD public key.\n   * @returns {HDPublicKey}\n   */\n\n  toPublic() {\n    let key = this._hdPublicKey;\n\n    if (!key) {\n      key = new HDPublicKey();\n      key.depth = this.depth;\n      key.parentFingerPrint = this.parentFingerPrint;\n      key.childIndex = this.childIndex;\n      key.chainCode = this.chainCode;\n      key.publicKey = this.publicKey;\n      this._hdPublicKey = key;\n    }\n\n    return key;\n  }\n\n  /**\n   * Get cached base58 xprivkey.\n   * @returns {Base58String}\n   */\n\n  xprivkey(network) {\n    return this.toBase58(network);\n  }\n\n  /**\n   * Get cached base58 xpubkey.\n   * @returns {Base58String}\n   */\n\n  xpubkey(network) {\n    return this.toPublic().xpubkey(network);\n  }\n\n  /**\n   * Destroy the key (zeroes chain code, privkey, and pubkey).\n   * @param {Boolean} pub - Destroy hd public key as well.\n   */\n\n  destroy(pub) {\n    this.depth = 0;\n    this.childIndex = 0;\n    this.parentFingerPrint = 0;\n\n    cleanse(this.chainCode);\n    cleanse(this.privateKey);\n    cleanse(this.publicKey);\n\n    this.fingerPrint = -1;\n\n    if (this._hdPublicKey) {\n      if (pub)\n        this._hdPublicKey.destroy();\n      this._hdPublicKey = null;\n    }\n  }\n\n  /**\n   * Derive a child key.\n   * @param {Number} index - Derivation index.\n   * @param {Boolean?} hardened - Whether the derivation should be hardened.\n   * @returns {HDPrivateKey}\n   */\n\n  derive(index, hardened) {\n    assert(typeof index === 'number');\n\n    if ((index >>> 0) !== index)\n      throw new Error('Index out of range.');\n\n    if (this.depth >= 0xff)\n      throw new Error('Depth too high.');\n\n    if (hardened) {\n      index |= common.HARDENED;\n      index >>>= 0;\n    }\n\n    const id = this.getID(index);\n    const cache = common.cache.get(id);\n\n    if (cache)\n      return cache;\n\n    const bw = bio.pool(37);\n\n    if (index & common.HARDENED) {\n      bw.writeU8(0);\n      bw.writeBytes(this.privateKey);\n      bw.writeU32BE(index);\n    } else {\n      bw.writeBytes(this.publicKey);\n      bw.writeU32BE(index);\n    }\n\n    const data = bw.render();\n\n    const hash = sha512.mac(data, this.chainCode);\n    const left = hash.slice(0, 32);\n    const right = hash.slice(32, 64);\n\n    let key;\n    try {\n      key = secp256k1.privateKeyTweakAdd(this.privateKey, left);\n    } catch (e) {\n      return this.derive(index + 1);\n    }\n\n    if (this.fingerPrint === -1) {\n      const fp = hash160.digest(this.publicKey);\n      this.fingerPrint = fp.readUInt32BE(0, true);\n    }\n\n    const child = new this.constructor();\n    child.depth = this.depth + 1;\n    child.parentFingerPrint = this.fingerPrint;\n    child.childIndex = index;\n    child.chainCode = right;\n    child.privateKey = key;\n    child.publicKey = secp256k1.publicKeyCreate(key, true);\n\n    common.cache.set(id, child);\n\n    return child;\n  }\n\n  /**\n   * Unique HD key ID.\n   * @private\n   * @param {Number} index\n   * @returns {String}\n   */\n\n  getID(index) {\n    return 'v' + this.publicKey.toString('hex') + index;\n  }\n\n  /**\n   * Derive a BIP44 account key.\n   * @param {Number} purpose\n   * @param {Number} type\n   * @param {Number} account\n   * @returns {HDPrivateKey}\n   * @throws Error if key is not a master key.\n   */\n\n  deriveAccount(purpose, type, account) {\n    assert((purpose >>> 0) === purpose, 'Purpose must be a number.');\n    assert((type >>> 0) === type, 'Account index must be a number.');\n    assert((account >>> 0) === account, 'Account index must be a number.');\n    assert(this.isMaster(), 'Cannot derive account index.');\n    return this\n      .derive(purpose, true)\n      .derive(type, true)\n      .derive(account, true);\n  }\n\n  /**\n   * Test whether the key is a master key.\n   * @returns {Boolean}\n   */\n\n  isMaster() {\n    return common.isMaster(this);\n  }\n\n  /**\n   * Test whether the key is (most likely) a BIP44 account key.\n   * @param {Number?} account\n   * @returns {Boolean}\n   */\n\n  isAccount(account) {\n    return common.isAccount(this, account);\n  }\n\n  /**\n   * Test whether an object is in the form of a base58 xprivkey.\n   * @param {String} data\n   * @param {Network?} network\n   * @returns {Boolean}\n   */\n\n  static isBase58(data, network) {\n    if (typeof data !== 'string')\n      return false;\n\n    if (data.length < 4)\n      return false;\n\n    const prefix = data.substring(0, 4);\n\n    try {\n      Network.fromPrivate58(prefix, network);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Test whether a buffer has a valid network prefix.\n   * @param {Buffer} data\n   * @param {Network?} network\n   * @returns {Boolean}\n   */\n\n  static isRaw(data, network) {\n    if (!Buffer.isBuffer(data))\n      return false;\n\n    if (data.length < 4)\n      return false;\n\n    const version = data.readUInt32BE(0, true);\n\n    try {\n      Network.fromPrivate(version, network);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Test whether a string is a valid path.\n   * @param {String} path\n   * @returns {Boolean}\n   */\n\n  static isValidPath(path) {\n    try {\n      common.parsePath(path, true);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Derive a key from a derivation path.\n   * @param {String} path\n   * @returns {HDPrivateKey}\n   * @throws Error if `path` is not a valid path.\n   */\n\n  derivePath(path) {\n    const indexes = common.parsePath(path, true);\n\n    let key = this;\n\n    for (const index of indexes)\n      key = key.derive(index);\n\n    return key;\n  }\n\n  /**\n   * Compare a key against an object.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  equals(obj) {\n    assert(HDPrivateKey.isHDPrivateKey(obj));\n\n    return this.depth === obj.depth\n      && this.parentFingerPrint === obj.parentFingerPrint\n      && this.childIndex === obj.childIndex\n      && this.chainCode.equals(obj.chainCode)\n      && this.privateKey.equals(obj.privateKey);\n  }\n\n  /**\n   * Compare a key against an object.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  compare(key) {\n    assert(HDPrivateKey.isHDPrivateKey(key));\n\n    let cmp = this.depth - key.depth;\n\n    if (cmp !== 0)\n      return cmp;\n\n    cmp = this.parentFingerPrint - key.parentFingerPrint;\n\n    if (cmp !== 0)\n      return cmp;\n\n    cmp = this.childIndex - key.childIndex;\n\n    if (cmp !== 0)\n      return cmp;\n\n    cmp = this.chainCode.compare(key.chainCode);\n\n    if (cmp !== 0)\n      return cmp;\n\n    cmp = this.privateKey.compare(key.privateKey);\n\n    if (cmp !== 0)\n      return cmp;\n\n    return 0;\n  }\n\n  /**\n   * Inject properties from seed.\n   * @private\n   * @param {Buffer} seed\n   */\n\n  fromSeed(seed) {\n    assert(Buffer.isBuffer(seed));\n\n    if (seed.length * 8 < common.MIN_ENTROPY\n        || seed.length * 8 > common.MAX_ENTROPY) {\n      throw new Error('Entropy not in range.');\n    }\n\n    const hash = sha512.mac(seed, SEED_SALT);\n    const left = hash.slice(0, 32);\n    const right = hash.slice(32, 64);\n\n    // Only a 1 in 2^127 chance of happening.\n    if (!secp256k1.privateKeyVerify(left))\n      throw new Error('Master private key is invalid.');\n\n    this.depth = 0;\n    this.parentFingerPrint = 0;\n    this.childIndex = 0;\n    this.chainCode = right;\n    this.privateKey = left;\n    this.publicKey = secp256k1.publicKeyCreate(left, true);\n\n    return this;\n  }\n\n  /**\n   * Instantiate an hd private key from a 512 bit seed.\n   * @param {Buffer} seed\n   * @returns {HDPrivateKey}\n   */\n\n  static fromSeed(seed) {\n    return new this().fromSeed(seed);\n  }\n\n  /**\n   * Inject properties from a mnemonic.\n   * @private\n   * @param {Mnemonic} mnemonic\n   * @param {String?} passphrase\n   */\n\n  fromMnemonic(mnemonic, passphrase) {\n    assert(mnemonic instanceof Mnemonic);\n    return this.fromSeed(mnemonic.toSeed(passphrase));\n  }\n\n  /**\n   * Instantiate an hd private key from a mnemonic.\n   * @param {Mnemonic} mnemonic\n   * @param {String?} passphrase\n   * @returns {HDPrivateKey}\n   */\n\n  static fromMnemonic(mnemonic, passphrase) {\n    return new this().fromMnemonic(mnemonic, passphrase);\n  }\n\n  /**\n   * Inject properties from a mnemonic.\n   * @private\n   * @param {String} mnemonic\n   */\n\n  fromPhrase(phrase) {\n    const mnemonic = Mnemonic.fromPhrase(phrase);\n    this.fromMnemonic(mnemonic);\n    return this;\n  }\n\n  /**\n   * Instantiate an hd private key from a phrase.\n   * @param {String} phrase\n   * @returns {HDPrivateKey}\n   */\n\n  static fromPhrase(phrase) {\n    return new this().fromPhrase(phrase);\n  }\n\n  /**\n   * Inject properties from privateKey and entropy.\n   * @private\n   * @param {Buffer} key\n   * @param {Buffer} entropy\n   */\n\n  fromKey(key, entropy) {\n    assert(Buffer.isBuffer(key) && key.length === 32);\n    assert(Buffer.isBuffer(entropy) && entropy.length === 32);\n    this.depth = 0;\n    this.parentFingerPrint = 0;\n    this.childIndex = 0;\n    this.chainCode = entropy;\n    this.privateKey = key;\n    this.publicKey = secp256k1.publicKeyCreate(key, true);\n    return this;\n  }\n\n  /**\n   * Create an hd private key from a key and entropy bytes.\n   * @param {Buffer} key\n   * @param {Buffer} entropy\n   * @returns {HDPrivateKey}\n   */\n\n  static fromKey(key, entropy) {\n    return new this().fromKey(key, entropy);\n  }\n\n  /**\n   * Generate an hd private key.\n   * @returns {HDPrivateKey}\n   */\n\n  static generate() {\n    const key = secp256k1.privateKeyGenerate();\n    const entropy = random.randomBytes(32);\n    return HDPrivateKey.fromKey(key, entropy);\n  }\n\n  /**\n   * Inject properties from base58 key.\n   * @private\n   * @param {Base58String} xkey\n   * @param {Network?} network\n   */\n\n  fromBase58(xkey, network) {\n    assert(typeof xkey === 'string');\n    return this.fromRaw(base58.decode(xkey), network);\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {BufferReader} br\n   * @param {(Network|NetworkType)?} network\n   */\n\n  fromReader(br, network) {\n    const version = br.readU32BE();\n\n    Network.fromPrivate(version, network);\n\n    this.depth = br.readU8();\n    this.parentFingerPrint = br.readU32BE();\n    this.childIndex = br.readU32BE();\n    this.chainCode = br.readBytes(32);\n    assert(br.readU8() === 0);\n    this.privateKey = br.readBytes(32);\n    this.publicKey = secp256k1.publicKeyCreate(this.privateKey, true);\n\n    br.verifyChecksum(hash256.digest);\n\n    return this;\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   * @param {(Network|NetworkType)?} network\n   */\n\n  fromRaw(data, network) {\n    return this.fromReader(bio.read(data), network);\n  }\n\n  /**\n   * Serialize key to a base58 string.\n   * @param {(Network|NetworkType)?} network\n   * @returns {Base58String}\n   */\n\n  toBase58(network) {\n    return base58.encode(this.toRaw(network));\n  }\n\n  /**\n   * Calculate serialization size.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return 82;\n  }\n\n  /**\n   * Write the key to a buffer writer.\n   * @param {BufferWriter} bw\n   * @param {(Network|NetworkType)?} network\n   */\n\n  toWriter(bw, network) {\n    network = Network.get(network);\n\n    bw.writeU32BE(network.keyPrefix.xprivkey);\n    bw.writeU8(this.depth);\n    bw.writeU32BE(this.parentFingerPrint);\n    bw.writeU32BE(this.childIndex);\n    bw.writeBytes(this.chainCode);\n    bw.writeU8(0);\n    bw.writeBytes(this.privateKey);\n    bw.writeChecksum(hash256.digest);\n\n    return bw;\n  }\n\n  /**\n   * Serialize the key.\n   * @param {(Network|NetworkType)?} network\n   * @returns {Buffer}\n   */\n\n  toRaw(network) {\n    return this.toWriter(bio.write(82), network).render();\n  }\n\n  /**\n   * Instantiate an HD private key from a base58 string.\n   * @param {Base58String} xkey\n   * @param {Network?} network\n   * @returns {HDPrivateKey}\n   */\n\n  static fromBase58(xkey, network) {\n    return new this().fromBase58(xkey, network);\n  }\n\n  /**\n   * Instantiate key from buffer reader.\n   * @param {BufferReader} br\n   * @param {(Network|NetworkType)?} network\n   * @returns {HDPrivateKey}\n   */\n\n  static fromReader(br, network) {\n    return new this().fromReader(br, network);\n  }\n\n  /**\n   * Instantiate key from serialized data.\n   * @param {Buffer} data\n   * @param {(Network|NetworkType)?} network\n   * @returns {HDPrivateKey}\n   */\n\n  static fromRaw(data, network) {\n    return new this().fromRaw(data, network);\n  }\n\n  /**\n   * Convert key to a more json-friendly object.\n   * @returns {Object}\n   */\n\n  toJSON(network) {\n    return {\n      xprivkey: this.xprivkey(network)\n    };\n  }\n\n  /**\n   * Inject properties from json object.\n   * @private\n   * @param {Object} json\n   * @param {Network?} network\n   */\n\n  fromJSON(json, network) {\n    assert(json.xprivkey, 'Could not handle key JSON.');\n\n    this.fromBase58(json.xprivkey, network);\n\n    return this;\n  }\n\n  /**\n   * Instantiate an HDPrivateKey from a jsonified key object.\n   * @param {Object} json - The jsonified key object.\n   * @param {Network?} network\n   * @returns {HDPrivateKey}\n   */\n\n  static fromJSON(json, network) {\n    return new this().fromJSON(json, network);\n  }\n\n  /**\n   * Test whether an object is an HDPrivateKey.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isHDPrivateKey(obj) {\n    return obj instanceof HDPrivateKey;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = HDPrivateKey;\n","/*!\n * hd.js - hd keys for bcoin\n * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst common = require('./common');\nconst Mnemonic = require('./mnemonic');\nconst HDPrivateKey = require('./private');\nconst HDPublicKey = require('./public');\nconst wordlist = require('./wordlist');\n\n/**\n * @exports hd\n */\n\nconst HD = exports;\n\n/**\n * Instantiate an HD key (public or private) from an base58 string.\n * @param {Base58String} xkey\n * @param {Network?} network\n * @returns {HDPrivateKey|HDPublicKey}\n */\n\nHD.fromBase58 = function fromBase58(xkey, network) {\n  if (HDPrivateKey.isBase58(xkey))\n    return HDPrivateKey.fromBase58(xkey, network);\n  return HDPublicKey.fromBase58(xkey, network);\n};\n\n/**\n * Generate an {@link HDPrivateKey}.\n * @param {Object} options\n * @param {Buffer?} options.privateKey\n * @param {Buffer?} options.entropy\n * @returns {HDPrivateKey}\n */\n\nHD.generate = function generate() {\n  return HDPrivateKey.generate();\n};\n\n/**\n * Generate an {@link HDPrivateKey} from a seed.\n * @param {Object|Mnemonic|Buffer} options - seed,\n * mnemonic, mnemonic options.\n * @returns {HDPrivateKey}\n */\n\nHD.fromSeed = function fromSeed(options) {\n  return HDPrivateKey.fromSeed(options);\n};\n\n/**\n * Instantiate an hd private key from a mnemonic.\n * @param {Mnemonic|Object} mnemonic\n * @returns {HDPrivateKey}\n */\n\nHD.fromMnemonic = function fromMnemonic(options) {\n  return HDPrivateKey.fromMnemonic(options);\n};\n\n/**\n * Instantiate an HD key from a jsonified key object.\n * @param {Object} json - The jsonified transaction object.\n * @param {Network?} network\n * @returns {HDPrivateKey|HDPublicKey}\n */\n\nHD.fromJSON = function fromJSON(json, network) {\n  if (json.xprivkey)\n    return HDPrivateKey.fromJSON(json, network);\n  return HDPublicKey.fromJSON(json, network);\n};\n\n/**\n * Instantiate an HD key from serialized data.\n * @param {Buffer} data\n * @param {Network?} network\n * @returns {HDPrivateKey|HDPublicKey}\n */\n\nHD.fromRaw = function fromRaw(data, network) {\n  if (HDPrivateKey.isRaw(data, network))\n    return HDPrivateKey.fromRaw(data, network);\n  return HDPublicKey.fromRaw(data, network);\n};\n\n/**\n * Generate an hdkey from any number of options.\n * @param {Object|Mnemonic|Buffer} options - mnemonic, mnemonic\n * options, seed, or base58 key.\n * @param {(Network|NetworkType)?} network\n * @returns {HDPrivateKey|HDPublicKey}\n */\n\nHD.from = function from(options, network) {\n  assert(options, 'Options required.');\n\n  if (HD.isHD(options))\n    return options;\n\n  if (HD.isBase58(options, network))\n    return HD.fromBase58(options, network);\n\n  if (HD.isRaw(options, network))\n    return HD.fromRaw(options, network);\n\n  if (options && typeof options === 'object')\n    return HD.fromMnemonic(options);\n\n  throw new Error('Cannot create HD key from bad options.');\n};\n\n/**\n * Test whether an object is in the form of a base58 hd key.\n * @param {String} data\n * @param {Network?} network\n * @returns {Boolean}\n */\n\nHD.isBase58 = function isBase58(data, network) {\n  return HDPrivateKey.isBase58(data, network)\n    || HDPublicKey.isBase58(data, network);\n};\n\n/**\n * Test whether an object is in the form of a serialized hd key.\n * @param {Buffer} data\n * @param {Network?} network\n * @returns {NetworkType}\n */\n\nHD.isRaw = function isRaw(data, network) {\n  return HDPrivateKey.isRaw(data, network)\n    || HDPublicKey.isRaw(data, network);\n};\n\n/**\n * Test whether an object is an HD key.\n * @param {Object} obj\n * @returns {Boolean}\n */\n\nHD.isHD = function isHD(obj) {\n  return HDPrivateKey.isHDPrivateKey(obj)\n    || HDPublicKey.isHDPublicKey(obj);\n};\n\n/**\n * Test whether an object is an HD private key.\n * @param {Object} obj\n * @returns {Boolean}\n */\n\nHD.isPrivate = function isPrivate(obj) {\n  return HDPrivateKey.isHDPrivateKey(obj);\n};\n\n/**\n * Test whether an object is an HD public key.\n * @param {Object} obj\n * @returns {Boolean}\n */\n\nHD.isPublic = function isPublic(obj) {\n  return HDPublicKey.isHDPublicKey(obj);\n};\n\n/*\n * Expose\n */\n\nHD.common = common;\nHD.HD = HD;\nHD.Mnemonic = Mnemonic;\nHD.PrivateKey = HDPrivateKey;\nHD.PublicKey = HDPublicKey;\nHD.HDPrivateKey = HDPrivateKey;\nHD.HDPublicKey = HDPublicKey;\nHD.wordlist = wordlist;\n","/*!\n * hd/index.js - hd keys for bcoin\n * Copyright (c) 2014-2016, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nmodule.exports = require('./hd');\n","/*!\n * invitem.js - inv item object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst bio = require('bufio');\nconst util = require('../utils/util');\n\n/**\n * Inv Item\n * @alias module:primitives.InvItem\n * @constructor\n * @property {InvType} type\n * @property {Hash} hash\n */\n\nclass InvItem {\n  /**\n   * Create an inv item.\n   * @constructor\n   * @param {Number} type\n   * @param {Hash} hash\n   */\n\n  constructor(type, hash) {\n    this.type = type;\n    this.hash = hash;\n  }\n\n  /**\n   * Write inv item to buffer writer.\n   * @param {BufferWriter} bw\n   */\n\n  getSize() {\n    return 36;\n  }\n\n  /**\n   * Write inv item to buffer writer.\n   * @param {BufferWriter} bw\n   */\n\n  toWriter(bw) {\n    bw.writeU32(this.type);\n    bw.writeHash(this.hash);\n    return bw;\n  }\n\n  /**\n   * Serialize inv item.\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    return this.toWriter(bio.write(36)).render();\n  }\n\n  /**\n   * Inject properties from buffer reader.\n   * @private\n   * @param {BufferReader} br\n   */\n\n  fromReader(br) {\n    this.type = br.readU32();\n    this.hash = br.readHash();\n    return this;\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    return this.fromReader(bio.read(data));\n  }\n\n  /**\n   * Instantiate inv item from buffer reader.\n   * @param {BufferReader} br\n   * @returns {InvItem}\n   */\n\n  static fromReader(br) {\n    return new this().fromReader(br);\n  }\n\n  /**\n   * Instantiate inv item from serialized data.\n   * @param {Buffer} data\n   * @param {String?} enc\n   * @returns {InvItem}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Test whether the inv item is a block.\n   * @returns {Boolean}\n   */\n\n  isBlock() {\n    switch (this.type) {\n      case InvItem.types.BLOCK:\n      case InvItem.types.FILTERED_BLOCK:\n      case InvItem.types.CMPCT_BLOCK:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Test whether the inv item is a tx.\n   * @returns {Boolean}\n   */\n\n  isTX() {\n    switch (this.type) {\n      case InvItem.types.TX:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Get little-endian hash.\n   * @returns {Hash}\n   */\n\n  rhash() {\n    return util.revHex(this.hash);\n  }\n}\n\n/**\n * Inv types.\n * @enum {Number}\n * @default\n */\n\nInvItem.types = {\n  TX: 1,\n  BLOCK: 2,\n  FILTERED_BLOCK: 3,\n  CMPCT_BLOCK: 4\n};\n\n/**\n * Inv types by value.\n * @const {Object}\n */\n\nInvItem.typesByVal = {\n  1: 'TX',\n  2: 'BLOCK',\n  3: 'FILTERED_BLOCK',\n  4: 'CMPCT_BLOCK'\n};\n\n/*\n * Expose\n */\n\nmodule.exports = InvItem;\n","/*!\n * abstractblock.js - abstract block object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst hash256 = require('../bcrypto/hash256');\nconst bio = require('bufio');\nconst util = require('../utils/util');\nconst InvItem = require('./invitem');\nconst consensus = require('../protocol/consensus');\n\n/**\n * Abstract Block\n * The class which all block-like objects inherit from.\n * @alias module:primitives.AbstractBlock\n * @abstract\n * @property {Number} version\n * @property {Hash} prevBlock\n * @property {Hash} merkleRoot\n * @property {Number} time\n * @property {Number} bits\n * @property {Number} nonce\n */\n\nclass AbstractBlock {\n  /**\n   * Create an abstract block.\n   * @constructor\n   */\n\n  constructor() {\n    this.version = 1;\n    this.prevBlock = consensus.ZERO_HASH;\n    this.merkleRoot = consensus.ZERO_HASH;\n    this.time = 0;\n    this.bits = 0;\n    this.nonce = 0;\n\n    this.mutable = false;\n\n    this._hash = null;\n    this._hhash = null;\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  parseOptions(options) {\n    assert(options, 'Block data is required.');\n    assert((options.version >>> 0) === options.version);\n    assert(Buffer.isBuffer(options.prevBlock));\n    assert(Buffer.isBuffer(options.merkleRoot));\n    assert((options.time >>> 0) === options.time);\n    assert((options.bits >>> 0) === options.bits);\n    assert((options.nonce >>> 0) === options.nonce);\n\n    this.version = options.version;\n    this.prevBlock = options.prevBlock;\n    this.merkleRoot = options.merkleRoot;\n    this.time = options.time;\n    this.bits = options.bits;\n    this.nonce = options.nonce;\n\n    if (options.mutable != null) {\n      assert(typeof options.mutable === 'boolean');\n      this.mutable = options.mutable;\n    }\n\n    return this;\n  }\n\n  /**\n   * Inject properties from json object.\n   * @private\n   * @param {Object} json\n   */\n\n  parseJSON(json) {\n    assert(json, 'Block data is required.');\n    assert((json.version >>> 0) === json.version);\n    assert(typeof json.prevBlock === 'string');\n    assert(typeof json.merkleRoot === 'string');\n    assert((json.time >>> 0) === json.time);\n    assert((json.bits >>> 0) === json.bits);\n    assert((json.nonce >>> 0) === json.nonce);\n\n    this.version = json.version;\n    this.prevBlock = util.fromRev(json.prevBlock);\n    this.merkleRoot = util.fromRev(json.merkleRoot);\n    this.time = json.time;\n    this.bits = json.bits;\n    this.nonce = json.nonce;\n\n    return this;\n  }\n\n  /**\n   * Test whether the block is a memblock.\n   * @returns {Boolean}\n   */\n\n  isMemory() {\n    return false;\n  }\n\n  /**\n   * Clear any cached values (abstract).\n   */\n\n  _refresh() {\n    this._hash = null;\n    this._hhash = null;\n  }\n\n  /**\n   * Clear any cached values.\n   */\n\n  refresh() {\n    return this._refresh();\n  }\n\n  /**\n   * Hash the block headers.\n   * @param {String?} enc - Can be `'hex'` or `null`.\n   * @returns {Hash|Buffer} hash\n   */\n\n  hash(enc) {\n    let h = this._hash;\n\n    if (!h) {\n      h = hash256.digest(this.toHead());\n      if (!this.mutable)\n        this._hash = h;\n    }\n\n    if (enc === 'hex') {\n      let hex = this._hhash;\n      if (!hex) {\n        hex = h.toString('hex');\n        if (!this.mutable)\n          this._hhash = hex;\n      }\n      h = hex;\n    }\n\n    return h;\n  }\n\n  /**\n   * Serialize the block headers.\n   * @returns {Buffer}\n   */\n\n  toHead() {\n    return this.writeHead(bio.write(80)).render();\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromHead(data) {\n    return this.readHead(bio.read(data));\n  }\n\n  /**\n   * Serialize the block headers.\n   * @param {BufferWriter} bw\n   */\n\n  writeHead(bw) {\n    bw.writeU32(this.version);\n    bw.writeHash(this.prevBlock);\n    bw.writeHash(this.merkleRoot);\n    bw.writeU32(this.time);\n    bw.writeU32(this.bits);\n    bw.writeU32(this.nonce);\n    return bw;\n  }\n\n  /**\n   * Parse the block headers.\n   * @param {BufferReader} br\n   */\n\n  readHead(br) {\n    this.version = br.readU32();\n    this.prevBlock = br.readHash();\n    this.merkleRoot = br.readHash();\n    this.time = br.readU32();\n    this.bits = br.readU32();\n    this.nonce = br.readU32();\n    return this;\n  }\n\n  /**\n   * Verify the block.\n   * @returns {Boolean}\n   */\n\n  verify() {\n    if (!this.verifyPOW())\n      return false;\n\n    if (!this.verifyBody())\n      return false;\n\n    return true;\n  }\n\n  /**\n   * Verify proof-of-work.\n   * @returns {Boolean}\n   */\n\n  verifyPOW() {\n    return consensus.verifyPOW(this.hash(), this.bits);\n  }\n\n  /**\n   * Verify the block.\n   * @returns {Boolean}\n   */\n\n  verifyBody() {\n    throw new Error('Abstract method.');\n  }\n\n  /**\n   * Get little-endian block hash.\n   * @returns {Hash}\n   */\n\n  rhash() {\n    return util.revHex(this.hash());\n  }\n\n  /**\n   * Convert the block to an inv item.\n   * @returns {InvItem}\n   */\n\n  toInv() {\n    return new InvItem(InvItem.types.BLOCK, this.hash());\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = AbstractBlock;\n","/*!\n * merkle.js - merkle trees for bcrypto\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on bitcoin/bitcoin:\n *   Copyright (c) 2009-2019, The Bitcoin Core Developers (MIT License).\n *   Copyright (c) 2009-2019, The Bitcoin Developers (MIT License).\n *   https://github.com/bitcoin/bitcoin\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\n\n// Notes about unbalanced merkle trees:\n//\n// Bitcoin hashes odd nodes with themselves,\n// allowing an attacker to add a duplicate\n// TXID, creating an even number of leaves\n// and computing the same root (CVE-2012-2459).\n// In contrast, RFC 6962 simply propagates\n// odd nodes up.\n//\n// RFC 6962:\n//\n//              R\n//             / \\\n//            /   \\\n//           /     \\\n//          /       \\\n//         /         \\\n//        k           j <-- same as below\n//       / \\          |\n//      /   \\         |\n//     /     \\        |\n//    h       i       j\n//   / \\     / \\     / \\\n//  a   b   c   d   e   f\n//\n// Bitcoin Behavior:\n//\n//              R\n//             / \\\n//            /   \\\n//           /     \\\n//          /       \\\n//         /         \\\n//        k           l <-- HASH(j || j)\n//       / \\          |\n//      /   \\         |\n//     /     \\        |\n//    h       i       j\n//   / \\     / \\     / \\\n//  a   b   c   d   e   f\n//\n// This creates a situation where these leaves:\n//\n//        R\n//       / \\\n//      /   \\\n//     /     \\\n//    d       e <-- HASH(c || c)\n//   / \\     / \\\n//  a   b   c   c\n//\n// Compute the same root as:\n//\n//       R\n//      / \\\n//     /   \\\n//    d     e <-- HASH(c || c)\n//   / \\    |\n//  a   b   c\n//\n// Why does this matter? Duplicate TXIDs are\n// invalid right? They're spending the same\n// inputs! The problem arises in certain\n// implementation optimizations which may\n// mark a block hash invalid. In other words,\n// an invalid block shares the same block\n// hash as a valid one!\n//\n// See:\n//   https://tools.ietf.org/html/rfc6962#section-2.1\n//   https://nvd.nist.gov/vuln/detail/CVE-2012-2459\n//   https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-2459\n//   https://bitcointalk.org/?topic=81749\n\n/**\n * Build a merkle tree from leaves.\n * @param {Object} alg\n * @param {Buffer[]} leaves\n * @returns {Array} [nodes, malleated]\n */\n\nfunction createTree(alg, leaves) {\n  assert(alg && typeof alg.root === 'function');\n  assert(Array.isArray(leaves));\n\n  const nodes = new Array(leaves.length);\n\n  for (let i = 0; i < leaves.length; i++)\n    nodes[i] = leaves[i];\n\n  let size = nodes.length;\n  let malleated = false;\n  let i = 0;\n\n  if (size === 0) {\n    nodes.push(alg.zero);\n    return [nodes, malleated];\n  }\n\n  while (size > 1) {\n    for (let j = 0; j < size; j += 2) {\n      const k = Math.min(j + 1, size - 1);\n      const left = nodes[i + j];\n      const right = nodes[i + k];\n\n      if (k === j + 1 && k + 1 === size\n          && left.equals(right)) {\n        malleated = true;\n      }\n\n      const hash = alg.root(left, right);\n\n      nodes.push(hash);\n    }\n\n    i += size;\n\n    size = (size + 1) >>> 1;\n  }\n\n  return [nodes, malleated];\n}\n\n/**\n * Calculate merkle root from leaves.\n * @param {Object} alg\n * @param {Buffer[]} leaves\n * @returns {Array} [root, malleated]\n */\n\nfunction createRoot(alg, leaves) {\n  assert(alg && typeof alg.root === 'function');\n  assert(Array.isArray(leaves));\n\n  const [nodes, malleated] = createTree(alg, leaves);\n  const root = nodes[nodes.length - 1];\n\n  return [root, malleated];\n}\n\n/**\n * Collect a merkle branch from vector index.\n * @param {Object} alg\n * @param {Number} index\n * @param {Buffer[]} leaves\n * @returns {Buffer[]} branch\n */\n\nfunction createBranch(alg, index, leaves) {\n  assert(alg && typeof alg.root === 'function');\n  assert((index >>> 0) === index);\n  assert(Array.isArray(leaves));\n  assert(index < leaves.length);\n\n  let size = leaves.length;\n\n  const [nodes] = createTree(alg, leaves);\n  const branch = [];\n\n  let i = 0;\n\n  while (size > 1) {\n    const j = Math.min(index ^ 1, size - 1);\n\n    branch.push(nodes[i + j]);\n\n    index >>>= 1;\n\n    i += size;\n\n    size = (size + 1) >>> 1;\n  }\n\n  return branch;\n}\n\n/**\n * Derive merkle root from branch.\n * @param {Object} alg\n * @param {Buffer} hash\n * @param {Buffer[]} branch\n * @param {Number} index\n * @returns {Buffer} root\n */\n\nfunction deriveRoot(alg, hash, branch, index) {\n  assert(alg && typeof alg.root === 'function');\n  assert(Buffer.isBuffer(hash));\n  assert(Array.isArray(branch));\n  assert((index >>> 0) === index);\n\n  let root = hash;\n\n  for (const hash of branch) {\n    if ((index & 1) && hash.equals(root))\n      return alg.zero;\n\n    if (index & 1)\n      root = alg.root(hash, root);\n    else\n      root = alg.root(root, hash);\n\n    index >>>= 1;\n  }\n\n  return root;\n}\n\n/*\n * Expose\n */\n\nexports.createTree = createTree;\nexports.createRoot = createRoot;\nexports.createBranch = createBranch;\nexports.deriveRoot = deriveRoot;","/*!\n * input.js - input object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst Network = require('../protocol/network');\nconst Script = require('../script/script');\nconst Outpoint = require('./outpoint');\nconst {inspectSymbol} = require('../utils');\n\n\n/**\n * Input\n * Represents a transaction input.\n * @alias module:primitives.Input\n * @property {Outpoint} prevout - Outpoint.\n * @property {Script} script - Input script / scriptSig.\n * @property {Number} sequence - nSequence.\n */\n\nclass Input {\n  /**\n   * Create transaction input.\n   * @constructor\n   * @param {Object} options\n   */\n\n  constructor(options) {\n    this.prevout = new Outpoint();\n    this.script = new Script();\n    this.sequence = 0xffffffff;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    assert(options, 'Input data is required.');\n\n    this.prevout.fromOptions(options.prevout);\n\n    if (options.script)\n      this.script.fromOptions(options.script);\n\n    if (options.sequence != null) {\n      assert((options.sequence >>> 0) === options.sequence,\n        'Sequence must be a uint32.');\n      this.sequence = options.sequence;\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate an Input from options object.\n   * @param {Object} options\n   * @returns {Input}\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Clone the input.\n   * @returns {Input}\n   */\n\n  clone() {\n    const input = new this.constructor();\n    input.prevout = this.prevout;\n    input.script.inject(this.script);\n    input.sequence = this.sequence;\n    return input;\n  }\n\n  /**\n   * Test equality against another input.\n   * @param {Input} input\n   * @returns {Boolean}\n   */\n\n  equals(input) {\n    assert(Input.isInput(input));\n    return this.prevout.equals(input.prevout);\n  }\n\n  /**\n   * Compare against another input (BIP69).\n   * @param {Input} input\n   * @returns {Number}\n   */\n\n  compare(input) {\n    assert(Input.isInput(input));\n    return this.prevout.compare(input.prevout);\n  }\n\n  /**\n   * Get the previous output script type as a string.\n   * Will \"guess\" based on the input script and/or\n   * witness if coin is not available.\n   * @param {Coin?} coin\n   * @returns {ScriptType} type\n   */\n\n  getType(coin) {\n    if (this.isCoinbase())\n      return 'coinbase';\n\n    if (coin)\n      return coin.getType();\n\n    const type = this.script.getInputType();\n\n    return Script.typesByVal[type].toLowerCase();\n  }\n\n  /**\n   * Get the redeem script.\n   * @param {Coin?} coin\n   * @returns {Script?} Redeem script.\n   */\n\n  getRedeem(coin) {\n    if (this.isCoinbase())\n      return null;\n\n    if (!coin) {\n      if (this.script.isScripthashInput())\n        return this.script.getRedeem();\n\n      return null;\n    }\n\n    let prev = coin.script;\n    let redeem = null;\n\n    if (prev.isScripthash()) {\n      prev = this.script.getRedeem();\n      redeem = prev;\n    }\n\n    return redeem;\n  }\n\n  /**\n   * Get the redeem script type.\n   * @param {Coin?} coin\n   * @returns {String} subtype\n   */\n\n  getSubtype(coin) {\n    if (this.isCoinbase())\n      return null;\n\n    const redeem = this.getRedeem(coin);\n\n    if (!redeem)\n      return null;\n\n    const type = redeem.getType();\n\n    return Script.typesByVal[type].toLowerCase();\n  }\n\n  /**\n   * Get the previous output script's address. Will \"guess\"\n   * based on the input script and/or witness if coin\n   * is not available.\n   * @param {Coin?} coin\n   * @returns {Address?} addr\n   */\n\n  getAddress(coin) {\n    if (this.isCoinbase())\n      return null;\n\n    if (coin)\n      return coin.getAddress();\n\n    if (this.script.code.length > 0)\n      return this.script.getInputAddress();\n\n    return null;\n  }\n\n  /**\n   * Get the address hash.\n   * @param {Coin?} coin\n   * @param {String?} enc\n   * @returns {Hash} hash\n   */\n\n  getHash(coin, enc) {\n    const addr = this.getAddress(coin);\n\n    if (!addr)\n      return null;\n\n    return addr.getHash(enc);\n  }\n\n  /**\n   * Test to see if nSequence is equal to uint32max.\n   * @returns {Boolean}\n   */\n\n  isFinal() {\n    return this.sequence === 0xffffffff;\n  }\n\n  /**\n   * Test to see if nSequence is less than 0xfffffffe.\n   * @returns {Boolean}\n   */\n\n  isRBF() {\n    return this.sequence < 0xfffffffe;\n  }\n\n  /**\n   * Test to see if outpoint is null.\n   * @returns {Boolean}\n   */\n\n  isCoinbase() {\n    return this.prevout.isNull();\n  }\n\n  /**\n   * Convert the input to a more user-friendly object.\n   * @returns {Object}\n   */\n\n  [inspectSymbol]() {\n    return this.format();\n  }\n\n  /**\n   * Convert the input to a more user-friendly object.\n   * @param {Coin?} coin\n   * @returns {Object}\n   */\n\n  format(coin) {\n    return {\n      type: this.getType(coin),\n      subtype: this.getSubtype(coin),\n      address: this.getAddress(coin),\n      script: this.script,\n      redeem: this.getRedeem(coin),\n      sequence: this.sequence,\n      prevout: this.prevout,\n      coin: coin || null\n    };\n  }\n\n  /**\n   * Convert the input to an object suitable\n   * for JSON serialization.\n   * @returns {Object}\n   */\n\n  toJSON(network, coin) {\n    return this.getJSON();\n  }\n\n  /**\n   * Convert the input to an object suitable\n   * for JSON serialization. Note that the hashes\n   * will be reversed to abide by bitcoind's legacy\n   * of little-endian uint256s.\n   * @param {Network} network\n   * @param {Coin} coin\n   * @returns {Object}\n   */\n\n  getJSON(network, coin) {\n    network = Network.get(network);\n\n    let addr;\n    if (!coin) {\n      addr = this.getAddress();\n      if (addr)\n        addr = addr.toString(network);\n    }\n\n    return {\n      prevout: this.prevout.toJSON(),\n      script: this.script.toJSON(),\n      sequence: this.sequence,\n      address: addr,\n      coin: coin ? coin.getJSON(network, true) : undefined\n    };\n  }\n\n  /**\n   * Inject properties from a JSON object.\n   * @private\n   * @param {Object} json\n   */\n\n  fromJSON(json) {\n    assert(json, 'Input data is required.');\n    assert((json.sequence >>> 0) === json.sequence,\n      'Sequence must be a uint32.');\n    this.prevout.fromJSON(json.prevout);\n    this.script.fromJSON(json.script);\n    this.sequence = json.sequence;\n    return this;\n  }\n\n  /**\n   * Instantiate an Input from a jsonified input object.\n   * @param {Object} json - The jsonified input object.\n   * @returns {Input}\n   */\n\n  static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n  /**\n   * Calculate size of serialized input.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return 40 + this.script.getVarSize();\n  }\n\n  /**\n   * Serialize the input.\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {Buffer|String}\n   */\n\n  toRaw() {\n    const size = this.getSize();\n    return this.toWriter(bio.write(size)).render();\n  }\n\n  /**\n   * Write the input to a buffer writer.\n   * @param {BufferWriter} bw\n   */\n\n  toWriter(bw) {\n    this.prevout.toWriter(bw);\n    bw.writeVarBytes(this.script.toRaw());\n    bw.writeU32(this.sequence);\n    return bw;\n  }\n\n  /**\n   * Inject properties from buffer reader.\n   * @private\n   * @param {BufferReader} br\n   */\n\n  fromReader(br) {\n    this.prevout.fromReader(br);\n    this.script.fromRaw(br.readVarBytes());\n    this.sequence = br.readU32();\n    return this;\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    return this.fromReader(bio.read(data));\n  }\n\n  /**\n   * Instantiate an input from a buffer reader.\n   * @param {BufferReader} br\n   * @returns {Input}\n   */\n\n  static fromReader(br) {\n    return new this().fromReader(br);\n  }\n\n  /**\n   * Instantiate an input from a serialized Buffer.\n   * @param {Buffer} data\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {Input}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Inject properties from outpoint.\n   * @private\n   * @param {Outpoint} outpoint\n   */\n\n  fromOutpoint(outpoint) {\n    assert(Buffer.isBuffer(outpoint.hash));\n    assert(typeof outpoint.index === 'number');\n    this.prevout.hash = outpoint.hash;\n    this.prevout.index = outpoint.index;\n    return this;\n  }\n\n  /**\n   * Instantiate input from outpoint.\n   * @param {Outpoint}\n   * @returns {Input}\n   */\n\n  static fromOutpoint(outpoint) {\n    return new this().fromOutpoint(outpoint);\n  }\n\n  /**\n   * Inject properties from coin.\n   * @private\n   * @param {Coin} coin\n   */\n\n  fromCoin(coin) {\n    assert(Buffer.isBuffer(coin.hash));\n    assert(typeof coin.index === 'number');\n    this.prevout.hash = coin.hash;\n    this.prevout.index = coin.index;\n    return this;\n  }\n\n  /**\n   * Instantiate input from coin.\n   * @param {Coin}\n   * @returns {Input}\n   */\n\n  static fromCoin(coin) {\n    return new this().fromCoin(coin);\n  }\n\n  /**\n   * Inject properties from transaction.\n   * @private\n   * @param {TX} tx\n   * @param {Number} index\n   */\n\n  fromTX(tx, index) {\n    assert(tx);\n    assert(typeof index === 'number');\n    assert(index >= 0 && index < tx.outputs.length);\n    this.prevout.hash = tx.hash();\n    this.prevout.index = index;\n    return this;\n  }\n\n  /**\n   * Instantiate input from tx.\n   * @param {TX} tx\n   * @param {Number} index\n   * @returns {Input}\n   */\n\n  static fromTX(tx, index) {\n    return new this().fromTX(tx, index);\n  }\n\n  /**\n   * Test an object to see if it is an Input.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isInput(obj) {\n    return obj instanceof Input;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Input;\n","/*!\n * tx.js - transaction object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst hash256 = require('../bcrypto/hash256');\nconst secp256k1 = require('../bcrypto/secp256k1');\nconst {BufferSet} = require('buffer-map');\nconst util = require('../utils/util');\nconst Amount = require('../btc/amount');\nconst Network = require('../protocol/network');\nconst Script = require('../script/script');\nconst SLP = require('../script/slp');\nconst Input = require('./input');\nconst Output = require('./output');\nconst Outpoint = require('./outpoint');\nconst InvItem = require('./invitem');\nconst consensus = require('../protocol/consensus');\nconst policy = require('../protocol/policy');\nconst ScriptError = require('../script/scripterror');\nconst {encoding} = bio;\nconst {hashType} = Script;\nconst common = require('../script/common');\nconst {inspectSymbol} = require('../utils');\n\n/**\n * TX\n * A static transaction object.\n * @alias module:primitives.TX\n * @property {Number} version\n * @property {Input[]} inputs\n * @property {Output[]} outputs\n * @property {Number} locktime\n * @property {SlpTokenRecord?} slpToken\n */\n\nclass TX {\n  /**\n   * Create a transaction.\n   * @constructor\n   * @param {Object?} options\n   */\n\n  constructor(options) {\n    this.version = 1;\n    this.inputs = [];\n    this.outputs = [];\n    this.locktime = 0;\n\n    this.mutable = false;\n\n    this._hash = null;\n    this._hhash = null;\n\n    this._raw = null;\n    this._offset = -1;\n    this._block = false;\n    this._size = -1;\n    this._sigops = -1;\n\n    this._hashPrevouts = null;\n    this._hashSequence = null;\n    this._hashOutputs = null;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    assert(options, 'TX data is required.');\n\n    if (options.version != null) {\n      assert((options.version >>> 0) === options.version,\n        'Version must be a uint32.');\n      this.version = options.version;\n    }\n\n    if (options.inputs) {\n      assert(Array.isArray(options.inputs), 'Inputs must be an array.');\n      for (const input of options.inputs)\n        this.inputs.push(new Input(input));\n    }\n\n    if (options.outputs) {\n      assert(Array.isArray(options.outputs), 'Outputs must be an array.');\n      for (const output of options.outputs)\n        this.outputs.push(new Output(output));\n    }\n\n    if (options.locktime != null) {\n      assert((options.locktime >>> 0) === options.locktime,\n        'Locktime must be a uint32.');\n      this.locktime = options.locktime;\n    }\n\n    if (options.slpToken) {\n      if (options.slpToken.constructor === SLP.TokenRecord().constructor) {\n        this.slpToken = options.slpToken;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate TX from options object.\n   * @param {Object} options\n   * @returns {TX}\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Clone the transaction.\n   * @returns {TX}\n   */\n\n  clone() {\n    return new this.constructor().inject(this);\n  }\n\n  /**\n   * Inject properties from tx.\n   * Used for cloning.\n   * @private\n   * @param {TX} tx\n   * @returns {TX}\n   */\n\n  inject(tx) {\n    this.version = tx.version;\n\n    for (const input of tx.inputs)\n      this.inputs.push(input.clone());\n\n    for (const output of tx.outputs)\n      this.outputs.push(output.clone());\n\n    this.locktime = tx.locktime;\n\n    return this;\n  }\n\n  /**\n   * Clear any cached values.\n   */\n\n  refresh() {\n    this._hash = null;\n    this._hhash = null;\n\n    this._raw = null;\n    this._size = -1;\n    this._offset = -1;\n    this._block = false;\n    this._sigops = -1;\n\n    this._hashPrevouts = null;\n    this._hashSequence = null;\n    this._hashOutputs = null;\n  }\n\n  /**\n   * Hash the transaction with the non-witness serialization.\n   * @param {String?} enc - Can be `'hex'` or `null`.\n   * @returns {Hash|Buffer} hash\n   */\n\n  hash(enc) {\n    let h = this._hash;\n\n    if (!h) {\n      h = hash256.digest(this.toRaw());\n      if (!this.mutable)\n        this._hash = h;\n    }\n\n    if (enc === 'hex') {\n      let hex = this._hhash;\n      if (!hex) {\n        hex = h.toString('hex');\n        if (!this.mutable)\n          this._hhash = hex;\n      }\n      h = hex;\n    }\n\n    return h;\n  }\n\n  /**\n   * Serialize the transaction. Note\n   * that this is cached.\n   * @returns {Buffer} Serialized transaction.\n   */\n\n  toRaw() {\n    return this.frame().data;\n  }\n\n  /**\n   * Write the transaction to a buffer writer.\n   * @param {BufferWriter} bw\n   * @param {Boolean} block\n   */\n\n  toWriter(bw, block) {\n    if (this.mutable)\n      return this.writeNormal(bw);\n\n    if (block) {\n      this._offset = bw.offset;\n      this._block = true;\n    }\n\n    bw.writeBytes(this.toRaw());\n\n    return bw;\n  }\n\n  /**\n   * Serialize the transaction. Note\n   * that this is cached.\n   * @private\n   * @returns {RawTX}\n   */\n\n  frame() {\n    if (this.mutable) {\n      assert(!this._raw);\n      return this.frameNormal();\n    }\n\n    if (this._raw) {\n      assert(this._size >= 0);\n      const raw = new RawTX(this._size);\n      raw.data = this._raw;\n      return raw;\n    }\n\n    const raw = this.frameNormal();\n\n    this._raw = raw.data;\n    this._size = raw.size;\n\n    return raw;\n  }\n\n  /**\n   * Return the offset and size of the transaction. Useful\n   * when the transaction is deserialized within a block.\n   * @returns {Object} contains `size` and `offset`.\n   */\n\n  getPosition() {\n    if (!(this._block && this._offset > 80))\n      console.log(this);\n    assert(this._block && this._offset > 80, 'Position not available.');\n\n    return {\n      offset: this._offset,\n      size: this._size\n    };\n  }\n\n  /**\n   * Calculate the real size of the transaction.\n   * @returns {Number} size\n   */\n\n  getSize() {\n    if (this.mutable)\n      return this.getNormalSizes().size;\n    return this.frame().size;\n  }\n\n  /**\n   * Get the signature hash of the transaction for signing verifying.\n   * @param {Number} index - Index of input being signed/verified.\n   * @param {Script} prev - Previous output script or redeem script.\n   * @param {Amount} value - Previous output value.\n   * @param {SighashType} type - Sighash type.\n   * @param {Number} flags - Script flags.\n   * @returns {Buffer} Signature hash.\n   */\n\n  signatureHash(index, prev, value, type, flags) {\n    assert(index >= 0 && index < this.inputs.length);\n    assert(prev instanceof Script);\n    assert(typeof value === 'number');\n    assert(typeof type === 'number');\n\n    if (flags == null)\n      flags = Script.flags.STANDARD_VERIFY_FLAGS;\n\n    if (flags & Script.flags.VERIFY_REPLAY_PROTECTION) {\n      const newForkValue = (common.getHashTypeForkValue(type) ^ 0xdead);\n      type = common.hashTypeWithForkValue(type, newForkValue | 0xff0000);\n    }\n\n    if ((type & Script.hashType.SIGHASH_FORKID)\n        && (flags & Script.flags.VERIFY_SIGHASH_FORKID)) {\n      return this.signatureHashV1(index, prev, value, type);\n    }\n\n    return this.signatureHashV0(index, prev, type);\n  }\n\n  /**\n   * Legacy sighashing -- O(n^2).\n   * @private\n   * @param {Number} index\n   * @param {Script} prev\n   * @param {SighashType} type\n   * @returns {Buffer}\n   */\n\n  signatureHashV0(index, prev, type) {\n    if ((type & 0x1f) === hashType.SINGLE) {\n      // Bitcoind used to return 1 as an error code:\n      // it ended up being treated like a hash.\n      if (index >= this.outputs.length) {\n        const hash = Buffer.alloc(32, 0x00);\n        hash[0] = 0x01;\n        return hash;\n      }\n    }\n\n    // Remove all code separators.\n    prev = prev.removeSeparators();\n\n    // Calculate buffer size.\n    const size = this.hashSize(index, prev, type);\n    const bw = bio.pool(size);\n\n    bw.writeU32(this.version);\n\n    // Serialize inputs.\n    if (type & hashType.ANYONECANPAY) {\n      // Serialize only the current\n      // input if ANYONECANPAY.\n      const input = this.inputs[index];\n\n      // Count.\n      bw.writeVarint(1);\n\n      // Outpoint.\n      input.prevout.toWriter(bw);\n\n      // Replace script with previous\n      // output script if current index.\n      bw.writeVarBytes(prev.toRaw());\n      bw.writeU32(input.sequence);\n    } else {\n      bw.writeVarint(this.inputs.length);\n      for (let i = 0; i < this.inputs.length; i++) {\n        const input = this.inputs[i];\n\n        // Outpoint.\n        input.prevout.toWriter(bw);\n\n        // Replace script with previous\n        // output script if current index.\n        if (i === index) {\n          bw.writeVarBytes(prev.toRaw());\n          bw.writeU32(input.sequence);\n          continue;\n        }\n\n        // Script is null.\n        bw.writeVarint(0);\n\n        // Sequences are 0 if NONE or SINGLE.\n        switch (type & 0x1f) {\n          case hashType.NONE:\n          case hashType.SINGLE:\n            bw.writeU32(0);\n            break;\n          default:\n            bw.writeU32(input.sequence);\n            break;\n        }\n      }\n    }\n\n    // Serialize outputs.\n    switch (type & 0x1f) {\n      case hashType.NONE: {\n        // No outputs if NONE.\n        bw.writeVarint(0);\n        break;\n      }\n      case hashType.SINGLE: {\n        const output = this.outputs[index];\n\n        // Drop all outputs after the\n        // current input index if SINGLE.\n        bw.writeVarint(index + 1);\n\n        for (let i = 0; i < index; i++) {\n          // Null all outputs not at\n          // current input index.\n          bw.writeI64(-1);\n          bw.writeVarint(0);\n        }\n\n        // Regular serialization\n        // at current input index.\n        output.toWriter(bw);\n\n        break;\n      }\n      default: {\n        // Regular output serialization if ALL.\n        bw.writeVarint(this.outputs.length);\n        for (const output of this.outputs)\n          output.toWriter(bw);\n        break;\n      }\n    }\n\n    bw.writeU32(this.locktime);\n\n    // Append the hash type.\n    bw.writeU32(type);\n\n    return hash256.digest(bw.render());\n  }\n\n  /**\n   * Calculate sighash size.\n   * @private\n   * @param {Number} index\n   * @param {Script} prev\n   * @param {Number} type\n   * @returns {Number}\n   */\n\n  hashSize(index, prev, type) {\n    let size = 0;\n\n    size += 4;\n\n    if (type & hashType.ANYONECANPAY) {\n      size += 1;\n      size += 36;\n      size += prev.getVarSize();\n      size += 4;\n    } else {\n      size += encoding.sizeVarint(this.inputs.length);\n      size += 41 * (this.inputs.length - 1);\n      size += 36;\n      size += prev.getVarSize();\n      size += 4;\n    }\n\n    switch (type & 0x1f) {\n      case hashType.NONE:\n        size += 1;\n        break;\n      case hashType.SINGLE:\n        size += encoding.sizeVarint(index + 1);\n        size += 9 * index;\n        size += this.outputs[index].getSize();\n        break;\n      default:\n        size += encoding.sizeVarint(this.outputs.length);\n        for (const output of this.outputs)\n          size += output.getSize();\n        break;\n    }\n\n    size += 8;\n\n    return size;\n  }\n\n  /**\n   * Witness sighashing -- O(n).\n   * @private\n   * @param {Number} index\n   * @param {Script} prev\n   * @param {Amount} value\n   * @param {SighashType} type\n   * @returns {Buffer}\n   */\n\n  signatureHashV1(index, prev, value, type) {\n    const input = this.inputs[index];\n    let prevouts = consensus.ZERO_HASH;\n    let sequences = consensus.ZERO_HASH;\n    let outputs = consensus.ZERO_HASH;\n\n    if (!(type & hashType.ANYONECANPAY)) {\n      if (this._hashPrevouts) {\n        prevouts = this._hashPrevouts;\n      } else {\n        const bw = bio.pool(this.inputs.length * 36);\n\n        for (const input of this.inputs)\n          input.prevout.toWriter(bw);\n\n        prevouts = hash256.digest(bw.render());\n\n        if (!this.mutable)\n          this._hashPrevouts = prevouts;\n      }\n    }\n\n    if (!(type & hashType.ANYONECANPAY)\n        && (type & 0x1f) !== hashType.SINGLE\n        && (type & 0x1f) !== hashType.NONE) {\n      if (this._hashSequence) {\n        sequences = this._hashSequence;\n      } else {\n        const bw = bio.pool(this.inputs.length * 4);\n\n        for (const input of this.inputs)\n          bw.writeU32(input.sequence);\n\n        sequences = hash256.digest(bw.render());\n\n        if (!this.mutable)\n          this._hashSequence = sequences;\n      }\n    }\n\n    if ((type & 0x1f) !== hashType.SINGLE\n        && (type & 0x1f) !== hashType.NONE) {\n      if (this._hashOutputs) {\n        outputs = this._hashOutputs;\n      } else {\n        let size = 0;\n\n        for (const output of this.outputs)\n          size += output.getSize();\n\n        const bw = bio.pool(size);\n\n        for (const output of this.outputs)\n          output.toWriter(bw);\n\n        outputs = hash256.digest(bw.render());\n\n        if (!this.mutable)\n          this._hashOutputs = outputs;\n      }\n    } else if ((type & 0x1f) === hashType.SINGLE) {\n      if (index < this.outputs.length) {\n        const output = this.outputs[index];\n        outputs = hash256.digest(output.toRaw());\n      }\n    }\n\n    const size = 156 + prev.getVarSize();\n    const bw = bio.pool(size);\n\n    bw.writeU32(this.version);\n    bw.writeBytes(prevouts);\n    bw.writeBytes(sequences);\n    bw.writeHash(input.prevout.hash);\n    bw.writeU32(input.prevout.index);\n    bw.writeVarBytes(prev.toRaw());\n    bw.writeI64(value);\n    bw.writeU32(input.sequence);\n    bw.writeBytes(outputs);\n    bw.writeU32(this.locktime);\n    bw.writeU32(type);\n\n    return hash256.digest(bw.render());\n  }\n\n  /**\n   * Verify signature.\n   * @param {Number} index\n   * @param {Script} prev\n   * @param {Amount} value\n   * @param {Buffer} sig\n   * @param {Buffer} key\n   * @param {Number} flags\n   * @returns {Boolean}\n   */\n\n  checksig(index, prev, value, sig, key, flags) {\n    if (sig.length === 0)\n      return false;\n\n    const type = sig[sig.length - 1];\n    const hash = this.signatureHash(index, prev, value, type, flags);\n\n    let res;\n\n    if (common.isSchnorr(sig)) {\n      res = secp256k1.schnorrVerify(hash, sig.slice(0, -1), key)\n    } else {\n      res = secp256k1.verifyDER(hash, sig.slice(0, -1), key);\n    }\n\n    return res;\n  }\n\n  /**\n   * Create a signature suitable for inserting into scriptSigs.\n   * @param {Number} index - Index of input being signed.\n   * @param {Script} prev - Previous output script or redeem script.\n   * @param {Amount} value - Previous output value.\n   * @param {Buffer} key\n   * @param {SighashType} type\n   * @param {Number} flags - Script flags.\n   * @returns {Buffer} Signature in SCHNORR / DER format.\n   */\n\n  signature(index, prev, value, key, type, flags) {\n    let sig;\n\n    if (type == null)\n      type = hashType.ALL;\n\n    if (flags == null)\n      flags = Script.flags.VERIFY_SIGHASH_FORKID;\n\n    const hash = this.signatureHash(index, prev, value, type, flags);\n\n    const DER = secp256k1.signDER(hash, key);\n    const SCHNORR = secp256k1.schnorrSign(hash, key);\n\n    if (common.isSchnorr(SCHNORR)) {\n      sig = SCHNORR;\n    } else {\n      sig = DER;\n    }\n    const bw = bio.write(sig.length + 1);\n\n    bw.writeBytes(sig);\n    bw.writeU8(type);\n\n    return bw.render();\n  }\n\n  /**\n   * Create a signature suitable for inserting into scriptSigs.\n   * @param {Number} index - Index of input being signed.\n   * @param {Script} prev - Previous output script or redeem script.\n   * @param {Amount} value - Previous output value.\n   * @param {Buffer} key\n   * @param {SighashType} type\n   * @param {Number} flags - Script flags.\n   * @returns {Buffer} Signature in Schnorr format.\n   */\n\n  schnorrSignature(index, prev, value, key, type, flags) {\n    if (type == null)\n      type = hashType.ALL;\n\n    if (flags == null)\n      flags = Script.flags.VERIFY_SIGHASH_FORKID;\n\n    const hash = this.signatureHash(index, prev, value, type, flags);\n    const sig = secp256k1.schnorrSign(hash, key);\n    const bw = bio.write(sig.length + 1);\n\n    bw.writeBytes(sig);\n    bw.writeU8(type);\n\n    return bw.render();\n  }\n\n  /**\n   * Verify all transaction inputs.\n   * @param {CoinView} view\n   * @param {VerifyFlags?} [flags=STANDARD_VERIFY_FLAGS]\n   * @throws {ScriptError} on invalid inputs\n   */\n\n  check(view, flags) {\n    if (this.inputs.length === 0)\n      throw new ScriptError('UNKNOWN_ERROR', 'No inputs.');\n\n    if (this.isCoinbase())\n      return;\n\n    for (let i = 0; i < this.inputs.length; i++) {\n      const {prevout} = this.inputs[i];\n      const coin = view.getOutput(prevout);\n\n      if (!coin)\n        throw new ScriptError('UNKNOWN_ERROR', 'No coin available.');\n\n      this.checkInput(i, coin, flags);\n    }\n  }\n\n  /**\n   * Verify a transaction input.\n   * @param {Number} index - Index of output being\n   * verified.\n   * @param {Coin|Output} coin - Previous output.\n   * @param {VerifyFlags} [flags=STANDARD_VERIFY_FLAGS]\n   * @throws {ScriptError} on invalid input\n   */\n\n  checkInput(index, coin, flags) {\n    const input = this.inputs[index];\n\n    assert(input, 'Input does not exist.');\n    assert(coin, 'No coin passed.');\n\n    Script.verify(\n      input.script,\n      null,\n      coin.script,\n      this,\n      index,\n      coin.value,\n      flags\n    );\n  }\n\n  /**\n   * Verify the transaction inputs on the worker pool\n   * (if workers are enabled).\n   * @param {CoinView} view\n   * @param {VerifyFlags?} [flags=STANDARD_VERIFY_FLAGS]\n   * @param {WorkerPool?} pool\n   * @returns {Promise}\n   */\n\n  async checkAsync(view, flags, pool) {\n    if (this.inputs.length === 0)\n      throw new ScriptError('UNKNOWN_ERROR', 'No inputs.');\n\n    if (this.isCoinbase())\n      return;\n\n    if (!pool) {\n      this.check(view, flags);\n      return;\n    }\n\n    await pool.check(this, view, flags);\n  }\n\n  /**\n   * Verify a transaction input asynchronously.\n   * @param {Number} index - Index of output being\n   * verified.\n   * @param {Coin|Output} coin - Previous output.\n   * @param {VerifyFlags} [flags=STANDARD_VERIFY_FLAGS]\n   * @param {WorkerPool?} pool\n   * @returns {Promise}\n   */\n\n  async checkInputAsync(index, coin, flags, pool) {\n    const input = this.inputs[index];\n\n    assert(input, 'Input does not exist.');\n    assert(coin, 'No coin passed.');\n\n    if (!pool) {\n      this.checkInput(index, coin, flags);\n      return;\n    }\n\n    await pool.checkInput(this, index, coin, flags);\n  }\n\n  /**\n   * Verify all transaction inputs.\n   * @param {CoinView} view\n   * @param {VerifyFlags?} [flags=STANDARD_VERIFY_FLAGS]\n   * @returns {Boolean} Whether the inputs are valid.\n   */\n\n  verify(view, flags) {\n    try {\n      this.check(view, flags);\n    } catch (e) {\n      if (e.type === 'ScriptError')\n        return false;\n      throw e;\n    }\n    return true;\n  }\n\n  /**\n   * Verify a transaction input.\n   * @param {Number} index - Index of output being\n   * verified.\n   * @param {Coin|Output} coin - Previous output.\n   * @param {VerifyFlags} [flags=STANDARD_VERIFY_FLAGS]\n   * @returns {Boolean} Whether the input is valid.\n   */\n\n  verifyInput(index, coin, flags) {\n    try {\n      this.checkInput(index, coin, flags);\n    } catch (e) {\n      if (e.type === 'ScriptError')\n        return false;\n      throw e;\n    }\n    return true;\n  }\n\n  /**\n   * Verify the transaction inputs on the worker pool\n   * (if workers are enabled).\n   * @param {CoinView} view\n   * @param {VerifyFlags?} [flags=STANDARD_VERIFY_FLAGS]\n   * @param {WorkerPool?} pool\n   * @returns {Promise}\n   */\n\n  async verifyAsync(view, flags, pool) {\n    try {\n      await this.checkAsync(view, flags, pool);\n    } catch (e) {\n      if (e.type === 'ScriptError')\n        return false;\n      throw e;\n    }\n    return true;\n  }\n\n  /**\n   * Verify a transaction input asynchronously.\n   * @param {Number} index - Index of output being\n   * verified.\n   * @param {Coin|Output} coin - Previous output.\n   * @param {VerifyFlags} [flags=STANDARD_VERIFY_FLAGS]\n   * @param {WorkerPool?} pool\n   * @returns {Promise}\n   */\n\n  async verifyInputAsync(index, coin, flags, pool) {\n    try {\n      await this.checkInput(index, coin, flags, pool);\n    } catch (e) {\n      if (e.type === 'ScriptError')\n        return false;\n      throw e;\n    }\n    return true;\n  }\n\n  /**\n   * Test whether the transaction is a coinbase\n   * by examining the inputs.\n   * @returns {Boolean}\n   */\n\n  isCoinbase() {\n    return this.inputs.length === 1 && this.inputs[0].prevout.isNull();\n  }\n\n  /**\n   * Test whether the transaction is replaceable.\n   * @returns {Boolean}\n   */\n\n  isRBF() {\n    // Core doesn't do this, but it should:\n    if (this.version === 2)\n      return false;\n\n    for (const input of this.inputs) {\n      if (input.isRBF())\n        return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Calculate the fee for the transaction.\n   * @param {CoinView} view\n   * @returns {Amount} fee (zero if not all coins are available).\n   */\n\n  getFee(view) {\n    if (!this.hasCoins(view))\n      return 0;\n\n    return this.getInputValue(view) - this.getOutputValue();\n  }\n\n  /**\n   * Calculate the total input value.\n   * @param {CoinView} view\n   * @returns {Amount} value\n   */\n\n  getInputValue(view) {\n    let total = 0;\n\n    for (const {prevout} of this.inputs) {\n      const coin = view.getOutput(prevout);\n\n      if (!coin)\n        return 0;\n\n      total += coin.value;\n    }\n\n    return total;\n  }\n\n  /**\n   * Calculate the total output value.\n   * @returns {Amount} value\n   */\n\n  getOutputValue() {\n    let total = 0;\n\n    for (const output of this.outputs)\n      total += output.value;\n\n    return total;\n  }\n\n  /**\n   * Get all input addresses.\n   * @private\n   * @param {CoinView} view\n   * @returns {Array} [addrs, table]\n   */\n\n  _getInputAddresses(view) {\n    const table = new BufferSet();\n    const addrs = [];\n\n    if (this.isCoinbase())\n      return [addrs, table];\n\n    for (const input of this.inputs) {\n      const coin = view ? view.getOutputFor(input) : null;\n      const addr = input.getAddress(coin);\n\n      if (!addr)\n        continue;\n\n      const hash = addr.getHash();\n\n      if (!table.has(hash)) {\n        table.add(hash);\n        addrs.push(addr);\n      }\n    }\n\n    return [addrs, table];\n  }\n\n  /**\n   * Get all output addresses.\n   * @private\n   * @returns {Array} [addrs, table]\n   */\n\n  _getOutputAddresses() {\n    const table = new BufferSet();\n    const addrs = [];\n\n    for (const output of this.outputs) {\n      const addr = output.getAddress();\n\n      if (!addr)\n        continue;\n\n      const hash = addr.getHash();\n\n      if (!table.has(hash)) {\n        table.add(hash);\n        addrs.push(addr);\n      }\n    }\n\n    return [addrs, table];\n  }\n\n  /**\n   * Get all addresses.\n   * @private\n   * @param {CoinView} view\n   * @returns {Array} [addrs, table]\n   */\n\n  _getAddresses(view) {\n    const [addrs, table] = this._getInputAddresses(view);\n    const output = this.getOutputAddresses();\n\n    for (const addr of output) {\n      const hash = addr.getHash();\n\n      if (!table.has(hash)) {\n        table.add(hash);\n        addrs.push(addr);\n      }\n    }\n\n    return [addrs, table];\n  }\n\n  /**\n   * Get all input addresses.\n   * @param {CoinView|null} view\n   * @returns {Address[]} addresses\n   */\n\n  getInputAddresses(view) {\n    const [addrs] = this._getInputAddresses(view);\n    return addrs;\n  }\n\n  /**\n   * Get all output addresses.\n   * @returns {Address[]} addresses\n   */\n\n  getOutputAddresses() {\n    const [addrs] = this._getOutputAddresses();\n    return addrs;\n  }\n\n  /**\n   * Get all addresses.\n   * @param {CoinView|null} view\n   * @returns {Address[]} addresses\n   */\n\n  getAddresses(view) {\n    const [addrs] = this._getAddresses(view);\n    return addrs;\n  }\n\n  /**\n   * Get all input address hashes.\n   * @param {CoinView|null} view\n   * @returns {Hash[]} hashes\n   */\n\n  getInputHashes(view, enc) {\n    const [, table] = this._getInputAddresses(view);\n\n    if (enc !== 'hex')\n      return table.toArray();\n\n    return table.toArray().map(h => h.toString('hex'));\n  }\n\n  /**\n   * Get all output address hashes.\n   * @returns {Hash[]} hashes\n   */\n\n  getOutputHashes(enc) {\n    const [, table] = this._getOutputAddresses();\n\n    if (enc !== 'hex')\n      return table.toArray();\n\n    return table.toArray().map(h => h.toString('hex'));\n  }\n\n  /**\n   * Get all address hashes.\n   * @param {CoinView|null} view\n   * @returns {Hash[]} hashes\n   */\n\n  getHashes(view, enc) {\n    const [, table] = this._getAddresses(view);\n\n    if (enc !== 'hex')\n      return table.toArray();\n\n    return table.toArray().map(h => h.toString('hex'));\n  }\n\n  /**\n   * Test whether the transaction has\n   * all coins available.\n   * @param {CoinView} view\n   * @returns {Boolean}\n   */\n\n  hasCoins(view) {\n    if (this.inputs.length === 0)\n      return false;\n\n    for (const {prevout} of this.inputs) {\n      if (!view.hasEntry(prevout))\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Check finality of transaction by examining\n   * nLocktime and nSequence values.\n   * @example\n   * tx.isFinal(chain.height + 1, network.now());\n   * @param {Number} height - Height at which to test. This\n   * is usually the chain height, or the chain height + 1\n   * when the transaction entered the mempool.\n   * @param {Number} time - Time at which to test. This is\n   * usually the chain tip's parent's median time, or the\n   * time at which the transaction entered the mempool. If\n   * MEDIAN_TIME_PAST is enabled this will be the median\n   * time of the chain tip's previous entry's median time.\n   * @returns {Boolean}\n   */\n\n  isFinal(height, time) {\n    const THRESHOLD = consensus.LOCKTIME_THRESHOLD;\n\n    if (this.locktime === 0)\n      return true;\n\n    if (this.locktime < (this.locktime < THRESHOLD ? height : time))\n      return true;\n\n    for (const input of this.inputs) {\n      if (input.sequence !== 0xffffffff)\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Verify the absolute locktime of a transaction.\n   * Called by OP_CHECKLOCKTIMEVERIFY.\n   * @param {Number} index - Index of input being verified.\n   * @param {Number} predicate - Locktime to verify against.\n   * @returns {Boolean}\n   */\n\n  verifyLocktime(index, predicate) {\n    const THRESHOLD = consensus.LOCKTIME_THRESHOLD;\n    const input = this.inputs[index];\n\n    assert(input, 'Input does not exist.');\n    assert(predicate >= 0, 'Locktime must be non-negative.');\n\n    // Locktimes must be of the same type (blocks or seconds).\n    if ((this.locktime < THRESHOLD) !== (predicate < THRESHOLD))\n      return false;\n\n    if (predicate > this.locktime)\n      return false;\n\n    if (input.sequence === 0xffffffff)\n      return false;\n\n    return true;\n  }\n\n  /**\n   * Verify the relative locktime of an input.\n   * Called by OP_CHECKSEQUENCEVERIFY.\n   * @param {Number} index - Index of input being verified.\n   * @param {Number} predicate - Relative locktime to verify against.\n   * @returns {Boolean}\n   */\n\n  verifySequence(index, predicate) {\n    const DISABLE_FLAG = consensus.SEQUENCE_DISABLE_FLAG;\n    const TYPE_FLAG = consensus.SEQUENCE_TYPE_FLAG;\n    const MASK = consensus.SEQUENCE_MASK;\n    const input = this.inputs[index];\n\n    assert(input, 'Input does not exist.');\n    assert(predicate >= 0, 'Locktime must be non-negative.');\n\n    // For future softfork capability.\n    if (predicate & DISABLE_FLAG)\n      return true;\n\n    // Version must be >=2.\n    if (this.version < 2)\n      return false;\n\n    // Cannot use the disable flag without\n    // the predicate also having the disable\n    // flag (for future softfork capability).\n    if (input.sequence & DISABLE_FLAG)\n      return false;\n\n    // Locktimes must be of the same type (blocks or seconds).\n    if ((input.sequence & TYPE_FLAG) !== (predicate & TYPE_FLAG))\n      return false;\n\n    if ((predicate & MASK) > (input.sequence & MASK))\n      return false;\n\n    return true;\n  }\n\n  /**\n   * Calculate legacy (inaccurate) sigop count.\n   * @returns {Number} sigop count\n   */\n\n  getLegacySigops() {\n    if (this._sigops !== -1)\n      return this._sigops;\n\n    let total = 0;\n\n    for (const input of this.inputs)\n      total += input.script.getSigops(false);\n\n    for (const output of this.outputs)\n      total += output.script.getSigops(false);\n\n    if (!this.mutable)\n      this._sigops = total;\n\n    return total;\n  }\n\n  /**\n   * Calculate accurate sigop count, taking into account redeem scripts.\n   * @param {CoinView} view\n   * @param {VerifyFlags} flags\n   * @returns {Number} sigop count\n   */\n\n  getScripthashSigops(view, flags) {\n    if (this.isCoinbase())\n      return 0;\n\n    let total = 0;\n\n    for (const input of this.inputs) {\n      const coin = view.getOutputFor(input);\n\n      if (!coin)\n        continue;\n\n      if (!coin.script.isScripthash())\n        continue;\n\n      total += coin.script.getScripthashSigops(input.script, flags);\n    }\n\n    return total;\n  }\n\n  /**\n   * Calculate sigops count.\n   * @param {CoinView} view\n   * @param {VerifyFlags?} flags\n   * @returns {Number} sigop count\n   */\n\n  getSigopsCount(view, flags) {\n    if (flags === null)\n      flags = Script.flags.STANDARD_VERIFY_FLAGS;\n\n    let cost = this.getLegacySigops();\n\n    if (flags & Script.flags.VERIFY_P2SH)\n      cost += this.getScripthashSigops(view, flags);\n\n    return cost;\n  }\n\n  /**\n   * Calculate sigop count.\n   * @param {CoinView} view\n   * @param {VerifyFlags?} flags\n   * @returns {Number} sigop count\n   */\n\n  getSigops(view, flags) {\n    return this.getSigopsCount(view, flags);\n  }\n\n  /**\n   * Non-contextual sanity checks for the transaction.\n   * Will mostly verify coin and output values.\n   * @see CheckTransaction()\n   * @returns {Array} [result, reason, score]\n   */\n\n  isSane() {\n    const [valid] = this.checkSanity();\n    return valid;\n  }\n\n  /**\n   * Non-contextual sanity checks for the transaction.\n   * Will mostly verify coin and output values.\n   * @see CheckTransaction()\n   * @returns {Array} [valid, reason, score]\n   */\n\n  checkSanity() {\n    if (this.inputs.length === 0)\n      return [false, 'bad-txns-vin-empty', 100];\n\n    if (this.outputs.length === 0)\n      return [false, 'bad-txns-vout-empty', 100];\n\n    if (this.getSize() > consensus.MAX_TX_SIZE)\n      return [false, 'bad-txns-oversize', 100];\n\n    let total = 0;\n\n    for (const output of this.outputs) {\n      if (output.value < 0)\n        return [false, 'bad-txns-vout-negative', 100];\n\n      if (output.value > consensus.MAX_MONEY)\n        return [false, 'bad-txns-vout-toolarge', 100];\n\n      total += output.value;\n\n      if (total < 0 || total > consensus.MAX_MONEY)\n        return [false, 'bad-txns-txouttotal-toolarge', 100];\n    }\n\n    const prevout = new BufferSet();\n\n    for (const input of this.inputs) {\n      const key = input.prevout.toKey();\n\n      if (prevout.has(key))\n        return [false, 'bad-txns-inputs-duplicate', 100];\n\n      prevout.add(key);\n    }\n\n    if (this.isCoinbase()) {\n      const size = this.inputs[0].script.getSize();\n      if (size < 2 || size > consensus.MAX_COINBASE_SCRIPTSIG_SIZE)\n        return [false, 'bad-cb-length', 100];\n    } else {\n      for (const input of this.inputs) {\n        if (input.prevout.isNull())\n          return [false, 'bad-txns-prevout-null', 10];\n      }\n    }\n\n    return [true, 'valid', 0];\n  }\n\n  /**\n   * Non-contextual checks to determine whether the\n   * transaction has all standard output script\n   * types and standard input script size with only\n   * pushdatas in the code.\n   * Will mostly verify coin and output values.\n   * @see IsStandardTx()\n   * @returns {Array} [valid, reason, score]\n   */\n\n  isStandard() {\n    const [valid] = this.checkStandard();\n    return valid;\n  }\n\n  /**\n   * Non-contextual checks to determine whether the\n   * transaction has all standard output script\n   * types and standard input script size with only\n   * pushdatas in the code.\n   * Will mostly verify coin and output values.\n   * @see IsStandardTx()\n   * @returns {Array} [valid, reason, score]\n   */\n\n  checkStandard() {\n    if (this.version < 1 || this.version > policy.MAX_TX_VERSION)\n      return [false, 'version', 0];\n\n    // MAX_STANDARD_TX_SIZE\n    if (this.getSize() >= policy.MAX_TX_SIZE)\n      return [false, 'tx-size', 0];\n\n    for (const input of this.inputs) {\n      if (input.script.getSize() > 1650)\n        return [false, 'scriptsig-size', 0];\n\n      if (!input.script.isPushOnly())\n        return [false, 'scriptsig-not-pushonly', 0];\n    }\n\n    let nulldata = 0;\n\n    for (const output of this.outputs) {\n      if (!output.script.isStandard())\n        return [false, 'scriptpubkey', 0];\n\n      if (output.script.isNulldata()) {\n        nulldata++;\n        continue;\n      }\n\n      if (output.script.isMultisig() && !policy.BARE_MULTISIG)\n        return [false, 'bare-multisig', 0];\n\n      if (output.isDust(policy.MIN_RELAY))\n        return [false, 'dust', 0];\n    }\n\n    if (nulldata > 1)\n      return [false, 'multi-op-return', 0];\n\n    return [true, 'valid', 0];\n  }\n\n  /**\n   * Perform contextual checks to verify coin and input\n   * script standardness (including the redeem script).\n   * @see AreInputsStandard()\n   * @param {CoinView} view\n   * @param {VerifyFlags?} flags\n   * @returns {Boolean}\n   */\n\n  hasStandardInputs(view) {\n    if (this.isCoinbase())\n      return true;\n\n    for (const input of this.inputs) {\n      const coin = view.getOutputFor(input);\n\n      if (!coin)\n        return false;\n\n      if (coin.script.isPubkeyhash())\n        continue;\n\n      if (coin.script.isScripthash()) {\n        const redeem = input.script.getRedeem();\n\n        if (!redeem)\n          return false;\n\n        if (redeem.getSigops(true) > policy.MAX_P2SH_SIGOPS)\n          return false;\n\n        continue;\n      }\n\n      if (coin.script.isUnknown())\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Perform contextual checks to verify input, output,\n   * and fee values, as well as coinbase spend maturity\n   * (coinbases can only be spent 100 blocks or more\n   * after they're created). Note that this function is\n   * consensus critical.\n   * @param {CoinView} view\n   * @param {Number} height - Height at which the\n   * transaction is being spent. In the mempool this is\n   * the chain height plus one at the time it entered the pool.\n   * @returns {Boolean}\n   */\n\n  verifyInputs(view, height) {\n    const [fee] = this.checkInputs(view, height);\n    return fee !== -1;\n  }\n\n  /**\n   * Perform contextual checks to verify input, output,\n   * and fee values, as well as coinbase spend maturity\n   * (coinbases can only be spent 100 blocks or more\n   * after they're created). Note that this function is\n   * consensus critical.\n   * @param {CoinView} view\n   * @param {Number} height - Height at which the\n   * transaction is being spent. In the mempool this is\n   * the chain height plus one at the time it entered the pool.\n   * @returns {Array} [fee, reason, score]\n   */\n\n  checkInputs(view, height) {\n    assert(typeof height === 'number');\n\n    let total = 0;\n\n    for (const {prevout} of this.inputs) {\n      const entry = view.getEntry(prevout);\n\n      if (!entry)\n        return [-1, 'bad-txns-inputs-missingorspent', 0];\n\n      if (entry.coinbase) {\n        if (height - entry.height < consensus.COINBASE_MATURITY)\n          return [-1, 'bad-txns-premature-spend-of-coinbase', 0];\n      }\n\n      const coin = view.getOutput(prevout);\n      assert(coin);\n\n      if (coin.value < 0 || coin.value > consensus.MAX_MONEY)\n        return [-1, 'bad-txns-inputvalues-outofrange', 100];\n\n      total += coin.value;\n\n      if (total < 0 || total > consensus.MAX_MONEY)\n        return [-1, 'bad-txns-inputvalues-outofrange', 100];\n    }\n\n    // Overflows already checked in `isSane()`.\n    const value = this.getOutputValue();\n\n    if (total < value)\n      return [-1, 'bad-txns-in-belowout', 100];\n\n    const fee = total - value;\n\n    if (fee < 0)\n      return [-1, 'bad-txns-fee-negative', 100];\n\n    if (fee > consensus.MAX_MONEY)\n      return [-1, 'bad-txns-fee-outofrange', 100];\n\n    return [fee, 'valid', 0];\n  }\n\n  /**\n   * Calculate the modified size of the transaction. This\n   * is used in the mempool for calculating priority.\n   * @param {Number?} size - The size to modify. If not present,\n   * virtual size will be used.\n   * @returns {Number} Modified size.\n   */\n\n  getModifiedSize(size) {\n    if (size == null)\n      size = this.getSize();\n\n    for (const input of this.inputs) {\n      const offset = 41 + Math.min(110, input.script.getSize());\n      if (size > offset)\n        size -= offset;\n    }\n\n    return size;\n  }\n\n  /**\n   * Calculate the transaction priority.\n   * @param {CoinView} view\n   * @param {Number} height\n   * @param {Number?} size - Size to calculate priority\n   * based on. If not present, virtual size will be used.\n   * @returns {Number}\n   */\n\n  getPriority(view, height, size) {\n    assert(typeof height === 'number', 'Must pass in height.');\n\n    if (this.isCoinbase())\n      return 0;\n\n    if (size == null)\n      size = this.getSize();\n\n    let sum = 0;\n\n    for (const {prevout} of this.inputs) {\n      const coin = view.getOutput(prevout);\n\n      if (!coin)\n        continue;\n\n      const coinHeight = view.getHeight(prevout);\n\n      if (coinHeight === -1)\n        continue;\n\n      if (coinHeight <= height) {\n        const age = height - coinHeight;\n        sum += coin.value * age;\n      }\n    }\n\n    return Math.floor(sum / size);\n  }\n\n  /**\n   * Calculate the transaction's on-chain value.\n   * @param {CoinView} view\n   * @returns {Number}\n   */\n\n  getChainValue(view) {\n    if (this.isCoinbase())\n      return 0;\n\n    let value = 0;\n\n    for (const {prevout} of this.inputs) {\n      const coin = view.getOutput(prevout);\n\n      if (!coin)\n        continue;\n\n      const height = view.getHeight(prevout);\n\n      if (height === -1)\n        continue;\n\n      value += coin.value;\n    }\n\n    return value;\n  }\n\n  /**\n   * Determine whether the transaction is above the\n   * free threshold in priority. A transaction which\n   * passed this test is most likely relayable\n   * without a fee.\n   * @param {CoinView} view\n   * @param {Number?} height - If not present, tx\n   * height or network height will be used.\n   * @param {Number?} size - If not present, modified\n   * size will be calculated and used.\n   * @returns {Boolean}\n   */\n\n  isFree(view, height, size) {\n    const priority = this.getPriority(view, height, size);\n    return priority > policy.FREE_THRESHOLD;\n  }\n\n  /**\n   * Calculate minimum fee in order for the transaction\n   * to be relayable (not the constant min relay fee).\n   * @param {Number?} size - If not present, max size\n   * estimation will be calculated and used.\n   * @param {Rate?} rate - Rate of satoshi per kB.\n   * @returns {Amount} fee\n   */\n\n  getMinFee(size, rate) {\n    if (size == null)\n      size = this.getSize();\n\n    return policy.getMinFee(size, rate);\n  }\n\n  /**\n   * Calculate the minimum fee in order for the transaction\n   * to be relayable, but _round to the nearest kilobyte\n   * when taking into account size.\n   * @param {Number?} size - If not present, max size\n   * estimation will be calculated and used.\n   * @param {Rate?} rate - Rate of satoshi per kB.\n   * @returns {Amount} fee\n   */\n\n  getRoundFee(size, rate) {\n    if (size == null)\n      size = this.getSize();\n\n    return policy.getRoundFee(size, rate);\n  }\n\n  /**\n   * Calculate the transaction's rate based on size\n   * and fees. Size will be calculated if not present.\n   * @param {CoinView} view\n   * @param {Number?} size\n   * @returns {Rate}\n   */\n\n  getRate(view, size) {\n    const fee = this.getFee(view);\n\n    if (fee < 0)\n      return 0;\n\n    if (size == null)\n      size = this.getSize();\n\n    return policy.getRate(size, fee);\n  }\n\n  /**\n   * Get all unique outpoint hashes.\n   * @returns {Hash[]} Outpoint hashes.\n   */\n\n  getPrevout() {\n    if (this.isCoinbase())\n      return [];\n\n    const prevout = new BufferSet();\n\n    for (const input of this.inputs)\n      prevout.add(input.prevout.hash);\n\n    return prevout.toArray();\n  }\n\n  /**\n   * Test a transaction against a bloom filter using\n   * the BIP37 matching algorithm. Note that this may\n   * update the filter depending on what the `update`\n   * value is.\n   * @see \"Filter matching algorithm\":\n   * @see https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki\n   * @param {BloomFilter} filter\n   * @returns {Boolean} True if the transaction matched.\n   */\n\n  isWatched(filter) {\n    let found = false;\n\n    // 1. Test the tx hash\n    if (filter.test(this.hash()))\n      found = true;\n\n    // 2. Test data elements in output scripts\n    //    (may need to update filter on match)\n    for (let i = 0; i < this.outputs.length; i++) {\n      const output = this.outputs[i];\n      // Test the output script\n      if (output.script.test(filter)) {\n        if (filter.update === 1 /* ALL */) {\n          const prevout = Outpoint.fromTX(this, i);\n          filter.add(prevout.toRaw());\n        } else if (filter.update === 2 /* PUBKEY_ONLY */) {\n          if (output.script.isPubkey() || output.script.isMultisig()) {\n            const prevout = Outpoint.fromTX(this, i);\n            filter.add(prevout.toRaw());\n          }\n        }\n        found = true;\n      }\n    }\n\n    if (found)\n      return found;\n\n    // 3. Test prev_out structure\n    // 4. Test data elements in input scripts\n    for (const input of this.inputs) {\n      const prevout = input.prevout;\n\n      // Test the COutPoint structure\n      if (filter.test(prevout.toRaw()))\n        return true;\n\n      // Test the input script\n      if (input.script.test(filter))\n        return true;\n    }\n\n    // 5. No match\n    return false;\n  }\n\n  /**\n   * Get little-endian tx hash.\n   * @returns {Hash}\n   */\n\n  rhash() {\n    return util.revHex(this.hash());\n  }\n\n  /**\n   * Get little-endian tx hash.\n   * @returns {Hash}\n   */\n\n  txid() {\n    return this.rhash();\n  }\n\n  /**\n   * Convert the tx to an inv item.\n   * @returns {InvItem}\n   */\n\n  toInv() {\n    return new InvItem(InvItem.types.TX, this.hash());\n  }\n\n  /**\n   * Inspect the transaction and return a more\n   * user-friendly representation of the data.\n   * @returns {Object}\n   */\n\n  [inspectSymbol]() {\n    return this.format();\n  }\n\n  /**\n   * Inspect the transaction and return a more\n   * user-friendly representation of the data.\n   * @param {CoinView} view\n   * @param {ChainEntry} entry\n   * @param {Number} index\n   * @returns {Object}\n   */\n\n  format(view, entry, index) {\n    let rate = 0;\n    let fee = 0;\n    let height = -1;\n    let block = null;\n    let time = 0;\n    let date = null;\n\n    if (view) {\n      fee = this.getFee(view);\n      rate = this.getRate(view);\n\n      // Rate can exceed 53 bits in testing.\n      if (!Number.isSafeInteger(rate))\n        rate = 0;\n    }\n\n    if (entry) {\n      height = entry.height;\n      block = util.revHex(entry.hash);\n      time = entry.time;\n      date = util.date(time);\n    }\n\n    if (index == null)\n      index = -1;\n\n    const hr = {\n      hash: this.txid(),\n      size: this.getSize(),\n      value: Amount.btc(this.getOutputValue()),\n      fee: Amount.btc(fee),\n      rate: Amount.btc(rate),\n      minFee: Amount.btc(this.getMinFee()),\n      height: height,\n      block: block,\n      time: time,\n      date: date,\n      index: index,\n      version: this.version,\n      inputs: this.inputs.map((input) => {\n        const coin = view ? view.getOutputFor(input) : null;\n        return input.format(coin);\n      }),\n      outputs: this.outputs,\n      locktime: this.locktime\n    };\n\n    if (this.slpToken) {\n      return {\n        ...hr,\n        slpToken: this.slpToken\n      };\n    }\n    return hr;\n  }\n\n  /**\n   * Convert the transaction to an object suitable\n   * for JSON serialization.\n   * @returns {Object}\n   */\n\n  toJSON() {\n    return this.getJSON();\n  }\n\n  /**\n   * Convert the transaction to an object suitable\n   * for JSON serialization. Note that the hashes\n   * will be reversed to abide by bitcoind's legacy\n   * of little-endian uint256s.\n   * @param {Network} network\n   * @param {CoinView} view\n   * @param {ChainEntry} entry\n   * @param {Number} index\n   * @returns {Object}\n   */\n\n  getJSON(network, view, entry, index) {\n    let rate, fee, height, block, time, date;\n\n    if (view) {\n      fee = this.getFee(view);\n      rate = this.getRate(view);\n\n      // Rate can exceed 53 bits in testing.\n      if (!Number.isSafeInteger(rate))\n        rate = 0;\n    }\n\n    if (entry) {\n      height = entry.height;\n      block = util.revHex(entry.hash);\n      time = entry.time;\n      date = util.date(time);\n    }\n\n    network = Network.get(network);\n\n    const json = {\n      hash: this.txid(),\n      fee: fee,\n      rate: rate,\n      mtime: util.now(),\n      height: height,\n      block: block,\n      time: time,\n      date: date,\n      index: index,\n      version: this.version,\n      inputs: this.inputs.map((input) => {\n        const coin = view ? view.getCoinFor(input) : null;\n        return input.getJSON(network, coin);\n      }),\n      outputs: this.outputs.map((output) => {\n        return output.getJSON(network);\n      }),\n      locktime: this.locktime,\n      hex: this.toRaw().toString('hex')\n    };\n\n    if (this.slpToken) {\n      return {\n        ...json,\n        slpToken: this.slpToken.getJSON()\n      };\n    }\n    return json;\n  }\n\n  /**\n   * Inject properties from a json object.\n   * @private\n   * @param {Object} json\n   */\n\n  fromJSON(json) {\n    assert(json, 'TX data is required.');\n    assert((json.version >>> 0) === json.version, 'Version must be a uint32.');\n    assert(Array.isArray(json.inputs), 'Inputs must be an array.');\n    assert(Array.isArray(json.outputs), 'Outputs must be an array.');\n    assert((json.locktime >>> 0) === json.locktime,\n      'Locktime must be a uint32.');\n\n    this.version = json.version;\n\n    for (const input of json.inputs)\n      this.inputs.push(Input.fromJSON(input));\n\n    for (const output of json.outputs)\n      this.outputs.push(Output.fromJSON(output));\n\n    this.locktime = json.locktime;\n\n    if (json.slpToken)\n      this.slpToken = SLP.TokenRecord().fromJSON(json.slpToken)\n\n    return this;\n  }\n\n  /**\n   * Instantiate a transaction from a\n   * jsonified transaction object.\n   * @param {Object} json - The jsonified transaction object.\n   * @returns {TX}\n   */\n\n  static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n  /**\n   * Instantiate a transaction from a serialized Buffer.\n   * @param {Buffer} data\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {TX}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Instantiate a transaction from a buffer reader.\n   * @param {BufferReader} br\n   * @param {Boolean} block\n   * @returns {TX}\n   */\n\n  static fromReader(br, block) {\n    return new this().fromReader(br, block);\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    return this.fromReader(bio.read(data));\n  }\n\n  /**\n   * Inject properties from buffer reader.\n   * @private\n   * @param {BufferReader} br\n   * @param {Boolean} block\n   */\n\n  fromReader(br, block) {\n    const start = br.start();\n\n    this.version = br.readU32();\n\n    const inCount = br.readVarint();\n\n    for (let i = 0; i < inCount; i++)\n      this.inputs.push(Input.fromReader(br));\n\n    const outCount = br.readVarint();\n\n    for (let i = 0; i < outCount; i++)\n      this.outputs.push(Output.fromReader(br));\n\n    this.locktime = br.readU32();\n\n    if (block) {\n      this._offset = start;\n      this._block = true;\n    }\n\n    if (!this.mutable) {\n      this._raw = br.endData();\n      this._size = this._raw.length;\n    } else {\n      br.end();\n    }\n\n    return this;\n  }\n\n  /**\n   * Serialize transaction without witness.\n   * @private\n   * @returns {RawTX}\n   */\n\n  frameNormal() {\n    const raw = this.getNormalSizes();\n    const bw = bio.write(raw.size);\n    this.writeNormal(bw);\n    raw.data = bw.render();\n    return raw;\n  }\n\n  /**\n   * Serialize transaction without witness.\n   * @private\n   * @param {BufferWriter} bw\n   * @returns {RawTX}\n   */\n\n  writeNormal(bw) {\n    if (this.inputs.length === 0 && this.outputs.length !== 0)\n      throw new Error('Cannot serialize zero-input tx.');\n\n    bw.writeU32(this.version);\n\n    bw.writeVarint(this.inputs.length);\n\n    for (const input of this.inputs)\n      input.toWriter(bw);\n\n    bw.writeVarint(this.outputs.length);\n\n    for (const output of this.outputs)\n      output.toWriter(bw);\n\n    bw.writeU32(this.locktime);\n\n    return bw;\n  }\n\n  /**\n   * Calculate the real size of the transaction\n   * without the witness vector.\n   * @returns {RawTX}\n   */\n\n  getNormalSizes() {\n    let base = 0;\n\n    base += 4;\n\n    base += encoding.sizeVarint(this.inputs.length);\n\n    for (const input of this.inputs)\n      base += input.getSize();\n\n    base += encoding.sizeVarint(this.outputs.length);\n\n    for (const output of this.outputs)\n      base += output.getSize();\n\n    base += 4;\n\n    return new RawTX(base, 0);\n  }\n\n  /**\n   * Test whether an object is a TX.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isTX(obj) {\n    return obj instanceof TX;\n  }\n}\n\n/*\n * Helpers\n */\n\nclass RawTX {\n  constructor(size) {\n    this.data = null;\n    this.size = size;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = TX;\n","/*!\n * headers.js - headers object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst bio = require('bufio');\nconst util = require('../utils/util');\nconst AbstractBlock = require('./abstractblock');\nconst {inspectSymbol} = require('../utils');\n\n/**\n * Headers\n * Represents block headers obtained\n * from the network via `headers`.\n * @alias module:primitives.Headers\n * @extends AbstractBlock\n */\n\nclass Headers extends AbstractBlock {\n  /**\n   * Create headers.\n   * @constructor\n   * @param {Object} options\n   */\n\n  constructor(options) {\n    super();\n\n    if (options)\n      this.parseOptions(options);\n  }\n\n  /**\n   * Perform non-contextual\n   * verification on the headers.\n   * @returns {Boolean}\n   */\n\n  verifyBody() {\n    return true;\n  }\n\n  /**\n   * Get size of the headers.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return 81;\n  }\n\n  /**\n   * Serialize the headers to a buffer writer.\n   * @param {BufferWriter} bw\n   */\n\n  toWriter(bw) {\n    this.writeHead(bw);\n    bw.writeVarint(0);\n    return bw;\n  }\n\n  /**\n   * Serialize the headers.\n   * @returns {Buffer|String}\n   */\n\n  toRaw() {\n    const size = this.getSize();\n    return this.toWriter(bio.write(size)).render();\n  }\n\n  /**\n   * Inject properties from buffer reader.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromReader(br) {\n    this.readHead(br);\n    br.readVarint();\n    return this;\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    return this.fromReader(bio.read(data));\n  }\n\n  /**\n   * Instantiate headers from buffer reader.\n   * @param {BufferReader} br\n   * @returns {Headers}\n   */\n\n  static fromReader(br) {\n    return new this().fromReader(br);\n  }\n\n  /**\n   * Instantiate headers from serialized data.\n   * @param {Buffer} data\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {Headers}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Instantiate headers from serialized data.\n   * @param {Buffer} data\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {Headers}\n   */\n\n  static fromHead(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new this().fromHead(data);\n  }\n\n  /**\n   * Instantiate headers from a chain entry.\n   * @param {ChainEntry} entry\n   * @returns {Headers}\n   */\n\n  static fromEntry(entry) {\n    const headers = new this();\n    headers.version = entry.version;\n    headers.prevBlock = entry.prevBlock;\n    headers.merkleRoot = entry.merkleRoot;\n    headers.time = entry.time;\n    headers.bits = entry.bits;\n    headers.nonce = entry.nonce;\n    headers._hash = entry.hash;\n    headers._hhash = entry.hash;\n    return headers;\n  }\n\n  /**\n   * Convert the block to a headers object.\n   * @returns {Headers}\n   */\n\n  toHeaders() {\n    return this;\n  }\n\n  /**\n   * Convert the block to a headers object.\n   * @param {Block|MerkleBlock} block\n   * @returns {Headers}\n   */\n\n  static fromBlock(block) {\n    const headers = new this(block);\n    headers._hash = block._hash;\n    headers._hhash = block._hhash;\n    return headers;\n  }\n\n  /**\n   * Convert the block to an object suitable\n   * for JSON serialization.\n   * @returns {Object}\n   */\n\n  toJSON() {\n    return this.getJSON();\n  }\n\n  /**\n   * Convert the block to an object suitable\n   * for JSON serialization. Note that the hashes\n   * will be reversed to abide by bitcoind's legacy\n   * of little-endian uint256s.\n   * @param {Network} network\n   * @param {CoinView} view\n   * @param {Number} height\n   * @returns {Object}\n   */\n\n  getJSON(network, view, height) {\n    return {\n      hash: this.rhash(),\n      height: height,\n      version: this.version,\n      prevBlock: util.revHex(this.prevBlock),\n      merkleRoot: util.revHex(this.merkleRoot),\n      time: this.time,\n      bits: this.bits,\n      nonce: this.nonce\n    };\n  }\n\n  /**\n   * Inject properties from json object.\n   * @private\n   * @param {Object} json\n   */\n\n  fromJSON(json) {\n    this.parseJSON(json);\n    return this;\n  }\n\n  /**\n   * Instantiate a merkle block from a jsonified block object.\n   * @param {Object} json - The jsonified block object.\n   * @returns {Headers}\n   */\n\n  static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n  /**\n   * Inspect the headers and return a more\n   * user-friendly representation of the data.\n   * @returns {Object}\n   */\n\n  [inspectSymbol]() {\n    return this.format();\n  }\n\n  /**\n   * Inspect the headers and return a more\n   * user-friendly representation of the data.\n   * @param {CoinView} view\n   * @param {Number} height\n   * @returns {Object}\n   */\n\n  format(view, height) {\n    return {\n      hash: this.rhash(),\n      height: height != null ? height : -1,\n      date: util.date(this.time),\n      version: this.version.toString(16),\n      prevBlock: util.revHex(this.prevBlock),\n      merkleRoot: util.revHex(this.merkleRoot),\n      time: this.time,\n      bits: this.bits,\n      nonce: this.nonce\n    };\n  }\n\n  /**\n   * Test an object to see if it is a Headers object.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isHeaders(obj) {\n    return obj instanceof Headers;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Headers;\n","/*!\n * merkleblock.js - merkleblock object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst {BufferMap, BufferSet} = require('buffer-map');\nconst util = require('../utils/util');\nconst hash256 = require('../bcrypto/hash256');\nconst consensus = require('../protocol/consensus');\nconst AbstractBlock = require('./abstractblock');\nconst Headers = require('./headers');\nconst DUMMY = Buffer.from([0]);\nconst {encoding} = bio;\nconst {inspectSymbol} = require('../utils');\n\n/**\n * Merkle Block\n * Represents a merkle (filtered) block.\n * @alias module:primitives.MerkleBlock\n * @extends AbstractBlock\n */\n\nclass MerkleBlock extends AbstractBlock {\n  /**\n   * Create a merkle block.\n   * @constructor\n   * @param {Object} options\n   */\n\n  constructor(options) {\n    super();\n\n    this.txs = [];\n    this.hashes = [];\n    this.flags = DUMMY;\n\n    this.totalTX = 0;\n    this._tree = null;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    this.parseOptions(options);\n\n    assert(options, 'MerkleBlock data is required.');\n    assert(Array.isArray(options.hashes));\n    assert(Buffer.isBuffer(options.flags));\n    assert((options.totalTX >>> 0) === options.totalTX);\n\n    if (options.hashes) {\n      for (const hash of options.hashes) {\n        assert(Buffer.isBuffer(hash));\n        this.hashes.push(hash);\n      }\n    }\n\n    if (options.flags) {\n      assert(Buffer.isBuffer(options.flags));\n      this.flags = options.flags;\n    }\n\n    if (options.totalTX != null) {\n      assert((options.totalTX >>> 0) === options.totalTX);\n      this.totalTX = options.totalTX;\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate merkle block from options object.\n   * @param {Object} options\n   * @returns {MerkleBlock}\n   */\n\n  static fromOptions(data) {\n    return new this().fromOptions(data);\n  }\n\n  /**\n   * Clear any cached values.\n   * @param {Boolean?} all - Clear transactions.\n   */\n\n  refresh(all) {\n    this._refresh();\n    this._tree = null;\n\n    if (!all)\n      return;\n\n    for (const tx of this.txs)\n      tx.refresh();\n  }\n\n  /**\n   * Test the block's _matched_ transaction vector against a hash.\n   * @param {Hash} hash\n   * @returns {Boolean}\n   */\n\n  hasTX(hash) {\n    return this.indexOf(hash) !== -1;\n  }\n\n  /**\n   * Test the block's _matched_ transaction vector against a hash.\n   * @param {Hash} hash\n   * @returns {Number} Index.\n   */\n\n  indexOf(hash) {\n    const tree = this.getTree();\n    const index = tree.map.get(hash);\n\n    if (index == null)\n      return -1;\n\n    return index;\n  }\n\n  /**\n   * Verify the partial merkletree.\n   * @private\n   * @returns {Boolean}\n   */\n\n  verifyBody() {\n    const [valid] = this.checkBody();\n    return valid;\n  }\n\n  /**\n   * Verify the partial merkletree.\n   * @private\n   * @returns {Array} [valid, reason, score]\n   */\n\n  checkBody() {\n    const tree = this.getTree();\n\n    if (!tree.root.equals(this.merkleRoot))\n      return [false, 'bad-txnmrklroot', 100];\n\n    return [true, 'valid', 0];\n  }\n\n  /**\n   * Extract the matches from partial merkle\n   * tree and calculate merkle root.\n   * @returns {Object}\n   */\n\n  getTree() {\n    if (!this._tree) {\n      try {\n        this._tree = this.extractTree();\n      } catch (e) {\n        this._tree = new PartialTree();\n      }\n    }\n    return this._tree;\n  }\n\n  /**\n   * Extract the matches from partial merkle\n   * tree and calculate merkle root.\n   * @private\n   * @returns {Object}\n   */\n\n  extractTree() {\n    const matches = [];\n    const indexes = [];\n    const map = new BufferMap();\n    const hashes = this.hashes;\n    const flags = this.flags;\n    const totalTX = this.totalTX;\n\n    let bitsUsed = 0;\n    let hashUsed = 0;\n    let failed = false;\n    let height = 0;\n\n    const width = (height) => {\n      return (totalTX + (1 << height) - 1) >>> height;\n    };\n\n    const traverse = (height, pos) => {\n      if (bitsUsed >= flags.length * 8) {\n        failed = true;\n        return consensus.ZERO_HASH;\n      }\n\n      const parent = (flags[bitsUsed / 8 | 0] >>> (bitsUsed % 8)) & 1;\n\n      bitsUsed += 1;\n\n      if (height === 0 || !parent) {\n        if (hashUsed >= hashes.length) {\n          failed = true;\n          return consensus.ZERO_HASH;\n        }\n\n        const hash = hashes[hashUsed];\n\n        hashUsed += 1;\n\n        if (height === 0 && parent) {\n          matches.push(hash);\n          indexes.push(pos);\n          map.set(hash, pos);\n        }\n\n        return hash;\n      }\n\n      const left = traverse(height - 1, pos * 2);\n      let right;\n\n      if (pos * 2 + 1 < width(height - 1)) {\n        right = traverse(height - 1, pos * 2 + 1);\n        if (right.equals(left))\n          failed = true;\n      } else {\n        right = left;\n      }\n\n      return hash256.root(left, right);\n    };\n\n    if (totalTX === 0)\n      throw new Error('Zero transactions.');\n\n    // FIXME: Track the maximum block size we've seen and use it here.\n\n    if (hashes.length > totalTX)\n      throw new Error('Too many hashes.');\n\n    if (flags.length * 8 < hashes.length)\n      throw new Error('Flags too small.');\n\n    while (width(height) > 1)\n      height += 1;\n\n    const root = traverse(height, 0);\n\n    if (failed)\n      throw new Error('Mutated merkle tree.');\n\n    if (((bitsUsed + 7) / 8 | 0) !== flags.length)\n      throw new Error('Too many flag bits.');\n\n    if (hashUsed !== hashes.length)\n      throw new Error('Incorrect number of hashes.');\n\n    return new PartialTree(root, matches, indexes, map);\n  }\n\n  /**\n   * Extract the coinbase height (always -1).\n   * @returns {Number}\n   */\n\n  getCoinbaseHeight() {\n    return -1;\n  }\n\n  /**\n   * Inspect the block and return a more\n   * user-friendly representation of the data.\n   * @returns {Object}\n   */\n\n  [inspectSymbol]() {\n    return this.format();\n  }\n\n  /**\n   * Inspect the block and return a more\n   * user-friendly representation of the data.\n   * @param {CoinView} view\n   * @param {Number} height\n   * @returns {Object}\n   */\n\n  format(view, height) {\n    return {\n      hash: this.rhash(),\n      height: height != null ? height : -1,\n      date: util.date(this.time),\n      version: this.version.toString(16),\n      prevBlock: util.revHex(this.prevBlock),\n      merkleRoot: util.revHex(this.merkleRoot),\n      time: this.time,\n      bits: this.bits,\n      nonce: this.nonce,\n      totalTX: this.totalTX,\n      hashes: this.hashes.map((hash) => {\n        return hash.toString('hex');\n      }),\n      flags: this.flags,\n      map: this.getTree().map,\n      txs: this.txs.length\n    };\n  }\n\n  /**\n   * Get merkleblock size.\n   * @returns {Number} Size.\n   */\n\n  getSize() {\n    let size = 0;\n    size += 80;\n    size += 4;\n    size += encoding.sizeVarint(this.hashes.length);\n    size += this.hashes.length * 32;\n    size += encoding.sizeVarint(this.flags.length);\n    size += this.flags.length;\n    return size;\n  }\n\n  /**\n   * Write the merkleblock to a buffer writer.\n   * @param {BufferWriter} bw\n   */\n\n  toWriter(bw) {\n    this.writeHead(bw);\n\n    bw.writeU32(this.totalTX);\n\n    bw.writeVarint(this.hashes.length);\n\n    for (const hash of this.hashes)\n      bw.writeHash(hash);\n\n    bw.writeVarBytes(this.flags);\n\n    return bw;\n  }\n\n  /**\n   * Serialize the merkleblock.\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {Buffer|String}\n   */\n\n  toRaw() {\n    const size = this.getSize();\n    return this.toWriter(bio.write(size)).render();\n  }\n\n  /**\n   * Inject properties from buffer reader.\n   * @private\n   * @param {BufferReader} br\n   */\n\n  fromReader(br) {\n    this.readHead(br);\n\n    this.totalTX = br.readU32();\n\n    const count = br.readVarint();\n\n    for (let i = 0; i < count; i++)\n      this.hashes.push(br.readHash());\n\n    this.flags = br.readVarBytes();\n\n    return this;\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    return this.fromReader(bio.read(data));\n  }\n\n  /**\n   * Instantiate a merkleblock from a buffer reader.\n   * @param {BufferReader} br\n   * @returns {MerkleBlock}\n   */\n\n  static fromReader(br) {\n    return new this().fromReader(br);\n  }\n\n  /**\n   * Instantiate a merkleblock from a serialized data.\n   * @param {Buffer} data\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {MerkleBlock}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Convert the block to an object suitable\n   * for JSON serialization.\n   * @returns {Object}\n   */\n\n  toJSON() {\n    return this.getJSON();\n  }\n\n  /**\n   * Convert the block to an object suitable\n   * for JSON serialization. Note that the hashes\n   * will be reversed to abide by bitcoind's legacy\n   * of little-endian uint256s.\n   * @param {Network} network\n   * @param {CoinView} view\n   * @param {Number} height\n   * @returns {Object}\n   */\n\n  getJSON(network, view, height) {\n    return {\n      hash: this.rhash(),\n      height: height,\n      version: this.version,\n      prevBlock: util.revHex(this.prevBlock),\n      merkleRoot: util.revHex(this.merkleRoot),\n      time: this.time,\n      bits: this.bits,\n      nonce: this.nonce,\n      totalTX: this.totalTX,\n      hashes: this.hashes.map((hash) => {\n        return util.revHex(hash);\n      }),\n      flags: this.flags.toString('hex')\n    };\n  }\n\n  /**\n   * Inject properties from json object.\n   * @private\n   * @param {Object} json\n   */\n\n  fromJSON(json) {\n    assert(json, 'MerkleBlock data is required.');\n    assert(Array.isArray(json.hashes));\n    assert(typeof json.flags === 'string');\n    assert((json.totalTX >>> 0) === json.totalTX);\n\n    this.parseJSON(json);\n\n    for (const hash of json.hashes)\n      this.hashes.push(util.fromRev(hash));\n\n    this.flags = Buffer.from(json.flags, 'hex');\n\n    this.totalTX = json.totalTX;\n\n    return this;\n  }\n\n  /**\n   * Instantiate a merkle block from a jsonified block object.\n   * @param {Object} json - The jsonified block object.\n   * @returns {MerkleBlock}\n   */\n\n  static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n  /**\n   * Create a merkleblock from a {@link Block} object, passing\n   * it through a filter first. This will build the partial\n   * merkle tree.\n   * @param {Block} block\n   * @param {Bloom} filter\n   * @returns {MerkleBlock}\n   */\n\n  static fromBlock(block, filter) {\n    const matches = [];\n\n    for (const tx of block.txs)\n      matches.push(tx.isWatched(filter) ? 1 : 0);\n\n    return this.fromMatches(block, matches);\n  }\n\n  /**\n   * Create a merkleblock from an array of txids.\n   * This will build the partial merkle tree.\n   * @param {Block} block\n   * @param {Hash[]} hashes\n   * @returns {MerkleBlock}\n   */\n\n  static fromHashes(block, hashes) {\n    const filter = new BufferSet();\n\n    for (const hash of hashes)\n      filter.add(hash);\n\n    const matches = [];\n\n    for (const tx of block.txs) {\n      const hash = tx.hash();\n      matches.push(filter.has(hash) ? 1 : 0);\n    }\n\n    return this.fromMatches(block, matches);\n  }\n\n  /**\n   * Create a merkleblock from an array of matches.\n   * This will build the partial merkle tree.\n   * @param {Block} block\n   * @param {Number[]} matches\n   * @returns {MerkleBlock}\n   */\n\n  static fromMatches(block, matches) {\n    const txs = [];\n    const leaves = [];\n    const bits = [];\n    const hashes = [];\n    const totalTX = block.txs.length;\n    let height = 0;\n\n    const width = (height) => {\n      return (totalTX + (1 << height) - 1) >>> height;\n    };\n\n    const hash = (height, pos, leaves) => {\n      if (height === 0)\n        return leaves[pos];\n\n      const left = hash(height - 1, pos * 2, leaves);\n      let right;\n\n      if (pos * 2 + 1 < width(height - 1))\n        right = hash(height - 1, pos * 2 + 1, leaves);\n      else\n        right = left;\n\n      return hash256.root(left, right);\n    };\n\n    const traverse = (height, pos, leaves, matches) => {\n      let parent = 0;\n\n      for (let p = pos << height; p < ((pos + 1) << height) && p < totalTX; p++)\n        parent |= matches[p];\n\n      bits.push(parent);\n\n      if (height === 0 || !parent) {\n        hashes.push(hash(height, pos, leaves));\n        return;\n      }\n\n      traverse(height - 1, pos * 2, leaves, matches);\n\n      if (pos * 2 + 1 < width(height - 1))\n        traverse(height - 1, pos * 2 + 1, leaves, matches);\n    };\n\n    for (let i = 0; i < block.txs.length; i++) {\n      const tx = block.txs[i];\n\n      if (matches[i])\n        txs.push(tx);\n\n      leaves.push(tx.hash());\n    }\n\n    while (width(height) > 1)\n      height += 1;\n\n    traverse(height, 0, leaves, matches);\n\n    const flags = Buffer.allocUnsafe((bits.length + 7) / 8 | 0);\n    flags.fill(0);\n\n    for (let p = 0; p < bits.length; p++)\n      flags[p / 8 | 0] |= bits[p] << (p % 8);\n\n    const merkle = new this();\n    merkle._hash = block._hash;\n    merkle._hhash = block._hhash;\n    merkle.version = block.version;\n    merkle.prevBlock = block.prevBlock;\n    merkle.merkleRoot = block.merkleRoot;\n    merkle.time = block.time;\n    merkle.bits = block.bits;\n    merkle.nonce = block.nonce;\n    merkle.totalTX = totalTX;\n    merkle.hashes = hashes;\n    merkle.flags = flags;\n    merkle.txs = txs;\n\n    return merkle;\n  }\n\n  /**\n   * Test whether an object is a MerkleBlock.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isMerkleBlock(obj) {\n    return obj instanceof MerkleBlock;\n  }\n\n  /**\n   * Convert the block to a headers object.\n   * @returns {Headers}\n   */\n\n  toHeaders() {\n    return Headers.fromBlock(this);\n  }\n}\n\n/*\n * Helpers\n */\n\nclass PartialTree {\n  constructor(root, matches, indexes, map) {\n    this.root = root || consensus.ZERO_HASH;\n    this.matches = matches || [];\n    this.indexes = indexes || [];\n    this.map = map || new BufferMap();\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = MerkleBlock;\n","/*!\n * block.js - block object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst {BufferSet} = require('buffer-map');\nconst hash256 = require('../bcrypto/hash256');\nconst merkle = require('../bcrypto/merkle');\nconst consensus = require('../protocol/consensus');\nconst AbstractBlock = require('./abstractblock');\nconst TX = require('./tx');\nconst MerkleBlock = require('./merkleblock');\nconst Headers = require('./headers');\nconst Network = require('../protocol/network');\nconst util = require('../utils/util');\nconst {encoding} = bio;\nconst {inspectSymbol} = require('../utils');\n\n/**\n * Block\n * Represents a full block.\n * @alias module:primitives.Block\n * @extends AbstractBlock\n */\n\nclass Block extends AbstractBlock {\n  /**\n   * Create a block.\n   * @constructor\n   * @param {Object} options\n   */\n\n  constructor(options) {\n    super();\n\n    this.txs = [];\n\n    this._raw = null;\n    this._size = -1;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    this.parseOptions(options);\n\n    if (options.txs) {\n      assert(Array.isArray(options.txs));\n      for (const tx of options.txs) {\n        assert(tx instanceof TX);\n        this.txs.push(tx);\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate block from options.\n   * @param {Object} options\n   * @returns {Block}\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Clear any cached values.\n   * @param {Boolean?} all - Clear transactions.\n   */\n\n  refresh(all) {\n    this._refresh();\n\n    this._raw = null;\n    this._size = -1;\n\n    if (!all)\n      return this;\n\n    for (const tx of this.txs)\n      tx.refresh();\n\n    return this;\n  }\n\n  /**\n   * Serialize the block.\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    return this.frame().data;\n  }\n\n  /**\n   * Check if block has been serialized.\n   * @returns {Buffer}\n   */\n\n  hasRaw() {\n    return Boolean(this._raw);\n  }\n\n  /**\n   * Serialize the block.\n   * @returns {Buffer}\n   */\n\n  toNormal() {\n    return this.toRaw();\n  }\n\n  /**\n   * Serialize the block.\n   * @param {BufferWriter} bw\n   */\n\n  toWriter(bw) {\n    if (this.mutable)\n      return this.writeNormal(bw);\n\n    const raw = this.frame();\n    bw.writeBytes(raw.data);\n\n    return bw;\n  }\n\n  /**\n   * Serialize the block.\n   * @param {BufferWriter} bw\n   */\n\n  toNormalWriter(bw) {\n    return this.toWriter(bw);\n  }\n\n  /**\n   * Get the raw block serialization.\n   * @private\n   * @returns {RawBlock}\n   */\n\n  frame() {\n    if (this.mutable) {\n      assert(!this._raw);\n      return this.frameNormal();\n    }\n\n    if (this._raw) {\n      assert(this._size >= 0);\n      const raw = new RawBlock(this._size);\n      raw.data = this._raw;\n      return raw;\n    }\n\n    const raw = this.frameNormal();\n\n    this._raw = raw.data;\n    this._size = raw.size;\n\n    return raw;\n  }\n\n  /**\n   * Calculate real block size.\n   * @returns {Object} Contains `size`\n   */\n\n  getSize() {\n    if (this.mutable)\n      return this.getNormalSizes().size;\n    return this.frame().size;\n  }\n\n  /**\n   * Test the block's transaction vector against a hash.\n   * @param {Hash} hash\n   * @returns {Boolean}\n   */\n\n  hasTX(hash) {\n    return this.indexOf(hash) !== -1;\n  }\n\n  /**\n   * Find the index of a transaction in the block.\n   * @param {Hash} hash\n   * @returns {Number} index (-1 if not present).\n   */\n\n  indexOf(hash) {\n    for (let i = 0; i < this.txs.length; i++) {\n      const tx = this.txs[i];\n      if (tx.hash().equals(hash))\n        return i;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Calculate merkle root. Returns null\n   * if merkle tree has been malleated.\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {Hash|null}\n   */\n\n  createMerkleRoot(enc) {\n    const leaves = [];\n\n    for (const tx of this.txs)\n      leaves.push(tx.hash());\n\n    const [root, malleated] = merkle.createRoot(hash256, leaves);\n\n    if (malleated)\n      return null;\n\n    return enc === 'hex' ? root.toString('hex') : root;\n  }\n\n  /**\n   * Retrieve the merkle root from the block header.\n   * @param {String?} enc\n   * @returns {Hash}\n   */\n\n  getMerkleRoot(enc) {\n    if (enc === 'hex')\n      return this.merkleRoot.toString('hex');\n    return this.merkleRoot;\n  }\n\n  /**\n   * Do non-contextual verification on the block. Including checking the block\n   * size, the coinbase and the merkle root. This is consensus-critical.\n   * @returns {Boolean}\n   */\n\n  verifyBody() {\n    const [valid] = this.checkBody();\n    return valid;\n  }\n\n  /**\n   * Do non-contextual verification on the block. Including checking the block\n   * size, the coinbase and the merkle root. This is consensus-critical.\n   * @param {Boolean?} skipSigops\n   * @returns {Array} [valid, reason, score]\n   */\n\n  checkBody(skipSigops) {\n    // Check base size.\n    //  MIN_TRANSACTION_SIZE = 100;\n    if (this.txs.length === 0\n        || this.txs.length > consensus.MAX_FORK_BLOCK_SIZE / 10\n        || this.getSize() > consensus.MAX_FORK_BLOCK_SIZE) {\n      return [false, 'bad-blk-length', 100];\n    }\n\n    // First TX must be a coinbase.\n    if (this.txs.length === 0 || !this.txs[0].isCoinbase())\n      return [false, 'bad-cb-missing', 100];\n\n    // Check merkle root.\n    const root = this.createMerkleRoot();\n\n    // If the merkle is mutated,\n    // we have duplicate txs.\n    if (!root)\n      return [false, 'bad-txns-duplicate', 100];\n\n    if (!this.merkleRoot.equals(root))\n      return [false, 'bad-txnmrklroot', 100];\n\n    // Test all transactions.\n    const size = this.getSize();\n\n    let sigops = 0;\n\n    for (let i = 0; i < this.txs.length; i++) {\n      const tx = this.txs[i];\n\n      // The rest of the txs must not be coinbases.\n      if (i > 0 && tx.isCoinbase())\n        return [false, 'bad-cb-multiple', 100];\n\n      // Sanity checks.\n      const [valid, reason, score] = tx.checkSanity();\n\n      if (!valid)\n        return [valid, reason, score];\n\n      // Count legacy sigops (do not count scripthash).\n      sigops += tx.getLegacySigops();\n      if (!skipSigops && sigops > consensus.maxBlockSigops(size))\n        return [false, 'bad-blk-sigops', 100];\n    }\n\n    return [true, 'valid', 0];\n  }\n\n  /**\n   * Retrieve the coinbase height from the coinbase input script.\n   * @returns {Number} height (-1 if not present).\n   */\n\n  getCoinbaseHeight() {\n    if (this.version < 2)\n      return -1;\n\n    if (this.txs.length === 0)\n      return -1;\n\n    const coinbase = this.txs[0];\n\n    if (coinbase.inputs.length === 0)\n      return -1;\n\n    return coinbase.inputs[0].script.getCoinbaseHeight();\n  }\n\n  /**\n   * Get the \"claimed\" reward by the coinbase.\n   * @returns {Amount} claimed\n   */\n\n  getClaimed() {\n    assert(this.txs.length > 0);\n    assert(this.txs[0].isCoinbase());\n    return this.txs[0].getOutputValue();\n  }\n\n  /**\n   * Get all unique outpoint hashes in the\n   * block. Coinbases are ignored.\n   * @returns {Hash[]} Outpoint hashes.\n   */\n\n  getPrevout() {\n    const prevout = new BufferSet();\n\n    for (let i = 1; i < this.txs.length; i++) {\n      const tx = this.txs[i];\n\n      for (const input of tx.inputs)\n        prevout.add(input.prevout.hash);\n    }\n\n    return prevout.toArray();\n  }\n\n  /**\n   * Inspect the block and return a more\n   * user-friendly representation of the data.\n   * @returns {Object}\n   */\n\n  [inspectSymbol]() {\n    return this.format();\n  }\n\n  /**\n   * Inspect the block and return a more\n   * user-friendly representation of the data.\n   * @param {CoinView} view\n   * @param {Number} height\n   * @returns {Object}\n   */\n\n  format(view, height) {\n    return {\n      hash: this.rhash(),\n      height: height != null ? height : -1,\n      size: this.getSize(),\n      date: util.date(this.time),\n      version: this.version.toString(16),\n      prevBlock: util.revHex(this.prevBlock),\n      merkleRoot: util.revHex(this.merkleRoot),\n      time: this.time,\n      bits: this.bits,\n      nonce: this.nonce,\n      txs: this.txs.map((tx, i) => {\n        return tx.format(view, null, i);\n      })\n    };\n  }\n\n  /**\n   * Convert the block to an object suitable\n   * for JSON serialization.\n   * @returns {Object}\n   */\n\n  toJSON() {\n    return this.getJSON();\n  }\n\n  /**\n   * Convert the block to an object suitable\n   * for JSON serialization. Note that the hashes\n   * will be reversed to abide by bitcoind's legacy\n   * of little-endian uint256s.\n   * @param {Network} network\n   * @param {CoinView} view\n   * @param {Number} height\n   * @param {Number} depth\n   * @returns {Object}\n   */\n\n  getJSON(network, view, height, depth) {\n    network = Network.get(network);\n    return {\n      hash: this.rhash(),\n      height: height,\n      depth: depth,\n      version: this.version,\n      prevBlock: util.revHex(this.prevBlock),\n      merkleRoot: util.revHex(this.merkleRoot),\n      time: this.time,\n      bits: this.bits,\n      nonce: this.nonce,\n      txs: this.txs.map((tx, i) => {\n        return tx.getJSON(network, view, null, i);\n      })\n    };\n  }\n\n  /**\n   * Inject properties from json object.\n   * @private\n   * @param {Object} json\n   */\n\n  fromJSON(json) {\n    assert(json, 'Block data is required.');\n    assert(Array.isArray(json.txs));\n\n    this.parseJSON(json);\n\n    for (const tx of json.txs)\n      this.txs.push(TX.fromJSON(tx));\n\n    return this;\n  }\n\n  /**\n   * Instantiate a block from a jsonified block object.\n   * @param {Object} json - The jsonified block object.\n   * @returns {Block}\n   */\n\n  static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromReader(br) {\n    br.start();\n\n    this.readHead(br);\n\n    const count = br.readVarint();\n\n    for (let i = 0; i < count; i++) {\n      const tx = TX.fromReader(br, true);\n      this.txs.push(tx);\n    }\n\n    if (!this.mutable) {\n      this._raw = br.endData();\n      this._size = this._raw.length;\n    }\n\n    return this;\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    return this.fromReader(bio.read(data));\n  }\n\n  /**\n   * Instantiate a block from a serialized Buffer.\n   * @param {Buffer} data\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {Block}\n   */\n\n  static fromReader(data) {\n    return new this().fromReader(data);\n  }\n\n  /**\n   * Instantiate a block from a serialized Buffer.\n   * @param {Buffer} data\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {Block}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Convert the Block to a MerkleBlock.\n   * @param {Bloom} filter - Bloom filter for transactions\n   * to match. The merkle block will contain only the\n   * matched transactions.\n   * @returns {MerkleBlock}\n   */\n\n  toMerkle(filter) {\n    return MerkleBlock.fromBlock(this, filter);\n  }\n\n  /**\n   * Serialze block data.\n   * @private\n   * @param {BufferWriter?} writer\n   * @returns {Buffer}\n   */\n\n  writeNormal(bw) {\n    this.writeHead(bw);\n\n    bw.writeVarint(this.txs.length);\n\n    for (const tx of this.txs)\n      tx.toWriter(bw);\n\n    return bw;\n  }\n\n  /**\n   * Serialze block data.\n   * @private\n   * @param {BufferWriter?} writer\n   * @returns {Buffer}\n   */\n\n  frameNormal() {\n    const raw = this.getNormalSizes();\n    const bw = bio.write(raw.size);\n    this.writeNormal(bw);\n    raw.data = bw.render();\n    return raw;\n  }\n\n  /**\n   * Convert the block to a headers object.\n   * @returns {Headers}\n   */\n\n  toHeaders() {\n    return Headers.fromBlock(this);\n  }\n\n  /**\n   * Get real block size.\n   * @returns {RawBlock}\n   */\n\n  getNormalSizes() {\n    let size = 0;\n\n    size += 80;\n    size += encoding.sizeVarint(this.txs.length);\n\n    for (const tx of this.txs)\n      size += tx.getSize();\n\n    return new RawBlock(size, 0);\n  }\n\n  /**\n   * Test whether an object is a Block.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isBlock(obj) {\n    return obj instanceof Block;\n  }\n}\n\n/*\n * Helpers\n */\n\nclass RawBlock {\n  constructor(size) {\n    this.data = null;\n    this.size = size;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Block;\n","/*!\n * keyring.js - keyring object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst {base58} = require('bstring');\nconst bio = require('bufio');\nconst hash160 = require('../bcrypto/hash160');\nconst hash256 = require('../bcrypto/hash256');\nconst Network = require('../protocol/network');\nconst Script = require('../script/script');\nconst Address = require('./address');\nconst Output = require('./output');\nconst secp256k1 = require('../bcrypto/secp256k1');\nconst {encoding} = bio;\nconst {inspectSymbol} = require('../utils');\n\n/*\n * Constants\n */\n\nconst ZERO_KEY = Buffer.alloc(33, 0x00);\n\n/**\n * Key Ring\n * Represents a key ring which amounts to an address.\n * @alias module:primitives.KeyRing\n */\n\nclass KeyRing {\n  /**\n   * Create a key ring.\n   * @constructor\n   * @param {Object} options\n   */\n\n  constructor(options) {\n    this.nested = false;\n    this.publicKey = ZERO_KEY;\n    this.privateKey = null;\n    this.script = null;\n\n    this._keyHash = null;\n    this._keyAddress = null;\n    this._scriptHash160 = null;\n    this._scriptAddress = null;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    let key = toKey(options);\n\n    if (Buffer.isBuffer(key))\n      return this.fromKey(key);\n\n    key = toKey(options.key);\n\n    if (options.publicKey)\n      key = toKey(options.publicKey);\n\n    if (options.privateKey)\n      key = toKey(options.privateKey);\n\n    const script = options.script;\n    const compress = options.compressed;\n\n    if (script)\n      return this.fromScript(key, script, compress);\n\n    return this.fromKey(key, compress);\n  }\n\n  /**\n   * Instantiate key ring from options.\n   * @param {Object} options\n   * @returns {KeyRing}\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Clear cached key/script hashes.\n   */\n\n  refresh() {\n    this._keyHash = null;\n    this._keyAddress = null;\n    this._scriptHash160 = null;\n    this._scriptAddress = null;\n  }\n\n  /**\n   * Inject data from private key.\n   * @private\n   * @param {Buffer} key\n   * @param {Boolean?} compress\n   */\n\n  fromPrivate(key, compress) {\n    assert(Buffer.isBuffer(key), 'Private key must be a buffer.');\n    assert(secp256k1.privateKeyVerify(key), 'Not a valid private key.');\n\n    this.privateKey = key;\n    this.publicKey = secp256k1.publicKeyCreate(key, compress !== false);\n\n    return this;\n  }\n\n  /**\n   * Instantiate keyring from a private key.\n   * @param {Buffer} key\n   * @param {Boolean?} compress\n   * @returns {KeyRing}\n   */\n\n  static fromPrivate(key, compress) {\n    return new this().fromPrivate(key, compress);\n  }\n\n  /**\n   * Inject data from public key.\n   * @private\n   * @param {Buffer} key\n   */\n\n  fromPublic(key) {\n    assert(Buffer.isBuffer(key), 'Public key must be a buffer.');\n    assert(secp256k1.publicKeyVerify(key), 'Not a valid public key.');\n    this.publicKey = key;\n    return this;\n  }\n\n  /**\n   * Generate a keyring.\n   * @private\n   * @param {Boolean?} compress\n   * @returns {KeyRing}\n   */\n\n  generate(compress) {\n    const key = secp256k1.privateKeyGenerate();\n    return this.fromKey(key, compress);\n  }\n\n  /**\n   * Generate a keyring.\n   * @param {Boolean?} compress\n   * @returns {KeyRing}\n   */\n\n  static generate(compress) {\n    return new this().generate(compress);\n  }\n\n  /**\n   * Instantiate keyring from a public key.\n   * @param {Buffer} publicKey\n   * @returns {KeyRing}\n   */\n\n  static fromPublic(key) {\n    return new this().fromPublic(key);\n  }\n\n  /**\n   * Inject data from public key.\n   * @private\n   * @param {Buffer} privateKey\n   * @param {Boolean?} compress\n   */\n\n  fromKey(key, compress) {\n    assert(Buffer.isBuffer(key), 'Key must be a buffer.');\n\n    if (key.length === 32)\n      return this.fromPrivate(key, compress !== false);\n\n    return this.fromPublic(key);\n  }\n\n  /**\n   * Instantiate keyring from a public key.\n   * @param {Buffer} publicKey\n   * @param {Boolean?} compress\n   * @returns {KeyRing}\n   */\n\n  static fromKey(key, compress) {\n    return new this().fromKey(key, compress);\n  }\n\n  /**\n   * Inject data from script.\n   * @private\n   * @param {Buffer} key\n   * @param {Script} script\n   * @param {Boolean?} compress\n   */\n\n  fromScript(key, script, compress) {\n    assert(script instanceof Script, 'Non-script passed into KeyRing.');\n\n    this.fromKey(key, compress);\n    this.script = script;\n\n    return this;\n  }\n\n  /**\n   * Instantiate keyring from script.\n   * @param {Buffer} key\n   * @param {Script} script\n   * @param {Boolean?} compress\n   * @returns {KeyRing}\n   */\n\n  static fromScript(key, script, compress) {\n    return new this().fromScript(key, script, compress);\n  }\n\n  /**\n   * Get ith public key from multisig script.\n   * @private\n   * @param {Script} script\n   * @param {Number} i\n   * @returns {KeyRing}\n   */\n\n  fromMultisigScript(script, i) {\n    assert(script instanceof Script, 'Non-script passed.');\n    assert(script.isMultisig(), 'Script must be multisig');\n\n    const n = script.getSmall(-2);\n    assert(i >= 1 && i <= n, 'Requested `i`th key, `n` available');\n\n    this.fromKey(script.code[i].toData());\n\n    return this;\n  }\n\n  /**\n   * Instantiate keyring from ith key in multisig script.\n   * @param {Script} script\n   * @param {Number} i\n   * @returns {KeyRing}\n   */\n\n  static fromMultisigScript(script, i) {\n    return new this().fromMultisigScript(script, i);\n  }\n\n  /**\n   * Calculate WIF serialization size.\n   * @returns {Number}\n   */\n\n  getSecretSize() {\n    let size = 0;\n\n    size += 1;\n    size += this.privateKey.length;\n\n    if (this.publicKey.length === 33)\n      size += 1;\n\n    size += 4;\n\n    return size;\n  }\n\n  /**\n   * Convert key to a CBitcoinSecret.\n   * @param {(Network|NetworkType)?} network\n   * @returns {Base58String}\n   */\n\n  toSecret(network) {\n    const size = this.getSecretSize();\n    const bw = bio.write(size);\n\n    assert(this.privateKey, 'Cannot serialize without private key.');\n\n    network = Network.get(network);\n\n    bw.writeU8(network.keyPrefix.privkey);\n    bw.writeBytes(this.privateKey);\n\n    if (this.publicKey.length === 33)\n      bw.writeU8(1);\n\n    bw.writeChecksum(hash256.digest);\n\n    return base58.encode(bw.render());\n  }\n\n  /**\n   * Inject properties from serialized CBitcoinSecret.\n   * @private\n   * @param {Base58String} secret\n   * @param {(Network|NetworkType)?} network\n   */\n\n  fromSecret(data, network) {\n    const br = bio.read(base58.decode(data), true);\n\n    const version = br.readU8();\n\n    Network.fromWIF(version, network);\n\n    const key = br.readBytes(32);\n\n    let compress = false;\n\n    if (br.left() > 4) {\n      assert(br.readU8() === 1, 'Bad compression flag.');\n      compress = true;\n    }\n\n    br.verifyChecksum(hash256.digest);\n\n    return this.fromPrivate(key, compress);\n  }\n\n  /**\n   * Instantiate a keyring from a serialized CBitcoinSecret.\n   * @param {Base58String} secret\n   * @param {(Network|NetworkType)?} network\n   * @returns {KeyRing}\n   */\n\n  static fromSecret(data, network) {\n    return new this().fromSecret(data, network);\n  }\n\n  /**\n   * Get private key.\n   * @param {String?} enc - Can be `\"hex\"`, `\"base58\"`, or `null`.\n   * @returns {Buffer} Private key.\n   */\n\n  getPrivateKey(enc, network) {\n    if (!this.privateKey)\n      return null;\n\n    if (enc === 'base58')\n      return this.toSecret(network);\n\n    if (enc === 'hex')\n      return this.privateKey.toString('hex');\n\n    return this.privateKey;\n  }\n\n  /**\n   * Get public key.\n   * @param {String?} enc - `\"hex\"` or `null`.\n   * @returns {Buffer}\n   */\n\n  getPublicKey(enc) {\n    if (enc === 'base58')\n      return base58.encode(this.publicKey);\n\n    if (enc === 'hex')\n      return this.publicKey.toString('hex');\n\n    return this.publicKey;\n  }\n\n  /**\n   * Get redeem script.\n   * @returns {Script}\n   */\n\n  getScript() {\n    return this.script;\n  }\n\n  /**\n   * Get scripthash.\n   * @param {String?} enc - `\"hex\"` or `null`.\n   * @returns {Buffer}\n   */\n\n  getScriptHash(enc) {\n    return this.getScriptHash160(enc);\n  }\n\n  /**\n   * Get ripemd160 scripthash.\n   * @param {String?} enc - `\"hex\"` or `null`.\n   * @returns {Buffer}\n   */\n\n  getScriptHash160(enc) {\n    if (!this.script)\n      return null;\n\n    if (!this._scriptHash160)\n      this._scriptHash160 = this.script.hash160();\n\n    return enc === 'hex'\n      ? this._scriptHash160.toString('hex')\n      : this._scriptHash160;\n  }\n\n  /**\n   * Get scripthash address.\n   * @param {String?} enc - `\"base58\"` or `null`.\n   * @returns {Address|AddressString}\n   */\n\n  getScriptAddress(enc, network) {\n    if (!this.script)\n      return null;\n\n    if (!this._scriptAddress) {\n      const hash = this.getScriptHash160();\n      const addr = Address.fromScripthash(hash);\n\n      this._scriptAddress = addr;\n    }\n\n    if (enc === 'base58')\n      return this._scriptAddress.toBase58(network);\n\n    if (enc === 'string')\n      return this._scriptAddress.toString(network);\n\n    return this._scriptAddress;\n  }\n\n  /**\n   * Get public key hash.\n   * @param {String?} enc - `\"hex\"` or `null`.\n   * @returns {Buffer}\n   */\n\n  getKeyHash(enc) {\n    if (!this._keyHash)\n      this._keyHash = hash160.digest(this.publicKey);\n\n    return enc === 'hex'\n      ? this._keyHash.toString('hex')\n      : this._keyHash;\n  }\n\n  /**\n   * Get pubkeyhash address.\n   * @param {String?} enc - `\"base58\"` or `null`.\n   * @returns {Address|AddressString}\n   */\n\n  getKeyAddress(enc, network) {\n    if (!this._keyAddress) {\n      const hash = this.getKeyHash();\n      const addr = Address.fromPubkeyhash(hash);\n\n      this._keyAddress = addr;\n    }\n\n    if (enc === 'base58')\n      return this._keyAddress.toBase58(network);\n\n    if (enc === 'string')\n      return this._keyAddress.toString(network);\n\n    return this._keyAddress;\n  }\n\n  /**\n   * Get hash.\n   * @param {String?} enc - `\"hex\"` or `null`.\n   * @returns {Buffer}\n   */\n\n  getHash(enc) {\n    if (this.script)\n      return this.getScriptHash(enc);\n\n    return this.getKeyHash(enc);\n  }\n\n  /**\n   * Get base58 address.\n   * @param {String?} enc - `\"base58\"` or `null`.\n   * @returns {Address|AddressString}\n   */\n\n  getAddress(enc, network) {\n    if (this.script)\n      return this.getScriptAddress(enc, network);\n\n    return this.getKeyAddress(enc, network);\n  }\n\n  /**\n   * Test an address hash against hash.\n   * @param {Buffer} hash\n   * @returns {Boolean}\n   */\n\n  ownHash(hash) {\n    if (!hash)\n      return false;\n\n    if (hash.equals(this.getKeyHash()))\n      return true;\n\n    if (this.script) {\n      if (hash.equals(this.getScriptHash()))\n        return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Check whether transaction output belongs to this address.\n   * @param {TX|Output} tx - Transaction or Output.\n   * @param {Number?} index - Output index.\n   * @returns {Boolean}\n   */\n\n  ownOutput(tx, index) {\n    let output;\n\n    if (tx instanceof Output) {\n      output = tx;\n    } else {\n      output = tx.outputs[index];\n      assert(output, 'Output does not exist.');\n    }\n\n    return this.ownHash(output.getHash());\n  }\n\n  /**\n   * Test a hash against script hashes to\n   * find the correct redeem script, if any.\n   * @param {Buffer} hash\n   * @returns {Script|null}\n   */\n\n  getRedeem(hash) {\n    if (this.script) {\n      if (hash.equals(this.getScriptHash160()))\n        return this.script;\n    }\n\n    return null;\n  }\n\n  /**\n   * Sign a message.\n   * @param {Buffer} msg\n   * @returns {Buffer} Signature in DER format.\n   */\n\n  sign(msg) {\n    assert(this.privateKey, 'Cannot sign without private key.');\n    return secp256k1.signDER(msg, this.privateKey);\n  }\n\n  /**\n   * Sign a message.\n   * @param {Buffer} msg\n   * @returns {Buffer} Signature in Schnorr format.\n   */\n\n  signSchnorr(msg) {\n    assert(this.privateKey, 'Cannot sign without private key.');\n    return secp256k1.schnorrSign(msg, this.privateKey);\n  }\n\n  /**\n   * Verify a message.\n   * @param {Buffer} msg\n   * @param {Buffer} sig - Signature in DER format.\n   * @returns {Boolean}\n   */\n\n  verify(msg, sig) {\n    return secp256k1.verifyDER(msg, sig, this.publicKey);\n  }\n\n  /**\n   * Verify a message.\n   * @param {Buffer} msg\n   * @param {Buffer} sig - Signature in Schnorr format.\n   * @returns {Boolean}\n   */\n\n  verifySchnorr(msg, sig) {\n    return secp256k1.schnorrVerify(msg, sig, this.publicKey);\n  }\n\n  /**\n   * Get witness program version.\n   * @returns {Number}\n   */\n\n  getVersion() {\n    return -1;\n  }\n\n  /**\n   * Get address type.\n   * @returns {ScriptType}\n   */\n\n  getType() {\n    if (this.script)\n      return Address.types.SCRIPTHASH;\n\n    return Address.types.PUBKEYHASH;\n  }\n\n  /**\n   * Inspect keyring.\n   * @returns {Object}\n   */\n\n  [inspectSymbol]() {\n    return this.toJSON();\n  }\n\n  /**\n   * Convert an KeyRing to a more json-friendly object.\n   * @returns {Object}\n   */\n\n  toJSON(network) {\n    return {\n      publicKey: this.publicKey.toString('hex'),\n      script: this.script ? this.script.toRaw().toString('hex') : null,\n      type: Address.typesByVal[this.getType()].toLowerCase(),\n      address: this.getAddress('string', network)\n    };\n  }\n\n  /**\n   * Inject properties from json object.\n   * @private\n   * @param {Object} json\n   */\n\n  fromJSON(json) {\n    assert(json);\n    assert(typeof json.publicKey === 'string');\n    assert(!json.script || typeof json.script === 'string');\n\n    this.publicKey = Buffer.from(json.publicKey, 'hex');\n\n    if (json.script)\n      this.script = Buffer.from(json.script, 'hex');\n\n    return this;\n  }\n\n  /**\n   * Instantiate an KeyRing from a jsonified transaction object.\n   * @param {Object} json - The jsonified transaction object.\n   * @returns {KeyRing}\n   */\n\n  static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n  /**\n   * Calculate serialization size.\n   * @returns {Number}\n   */\n\n  getSize() {\n    let size = 0;\n    size += 1;\n    if (this.privateKey) {\n      size += encoding.sizeVarBytes(this.privateKey);\n      size += 1;\n    } else {\n      size += encoding.sizeVarBytes(this.publicKey);\n    }\n    size += this.script ? this.script.getVarSize() : 1;\n    return size;\n  }\n\n  /**\n   * Write the keyring to a buffer writer.\n   * @param {BufferWriter} bw\n   */\n\n  toWriter(bw) {\n    const field = 0;\n\n    // we don't use field for now,\n    // we can use this for flags different\n    // flags in the future.\n    bw.writeU8(field);\n\n    if (this.privateKey) {\n      bw.writeVarBytes(this.privateKey);\n      bw.writeU8(this.publicKey.length === 33 ? 1 : 0);\n    } else {\n      bw.writeVarBytes(this.publicKey);\n    }\n\n    if (this.script)\n      bw.writeVarBytes(this.script.toRaw());\n    else\n      bw.writeVarint(0);\n\n    return bw;\n  }\n\n  /**\n   * Serialize the keyring.\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    const size = this.getSize();\n    return this.toWriter(bio.write(size)).render();\n  }\n\n  /**\n   * Inject properties from buffer reader.\n   * @private\n   * @param {BufferReader} br\n   */\n\n  fromReader(br) {\n    // we are not interested in flags.\n    br.readU8();\n\n    const key = br.readVarBytes();\n\n    if (key.length === 32) {\n      const compress = br.readU8() === 1;\n      this.privateKey = key;\n      this.publicKey = secp256k1.publicKeyCreate(key, compress);\n    } else {\n      this.publicKey = key;\n      assert(secp256k1.publicKeyVerify(key), 'Invalid public key.');\n    }\n\n    const script = br.readVarBytes();\n\n    if (script.length > 0)\n      this.script = Script.fromRaw(script);\n\n    return this;\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    return this.fromReader(bio.read(data));\n  }\n\n  /**\n   * Instantiate a keyring from buffer reader.\n   * @param {BufferReader} br\n   * @returns {KeyRing}\n   */\n\n  static fromReader(br) {\n    return new this().fromReader(br);\n  }\n\n  /**\n   * Instantiate a keyring from serialized data.\n   * @param {Buffer} data\n   * @returns {KeyRing}\n   */\n\n  static fromRaw(data) {\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Test whether an object is a KeyRing.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isKeyRing(obj) {\n    return obj instanceof KeyRing;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction toKey(opt) {\n  if (!opt)\n    return opt;\n\n  if (opt.privateKey)\n    return opt.privateKey;\n\n  if (opt.publicKey)\n    return opt.publicKey;\n\n  return opt;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = KeyRing;\n","/*!\n * memblock.js - memblock block object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst bio = require('bufio');\nconst AbstractBlock = require('./abstractblock');\nconst Block = require('./block');\nconst Headers = require('./headers');\nconst Script = require('../script/script');\nconst DUMMY = Buffer.alloc(0);\n\n/**\n * Mem Block\n * A block object which is essentially a \"placeholder\"\n * for a full {@link Block} object. The v8 garbage\n * collector's head will explode if there is too much\n * data on the javascript heap. Blocks can currently\n * be up to 1mb in size. In the future, they may be\n * 2mb, 8mb, or maybe 20mb, who knows? A MemBlock\n * is an optimization in Bcoin which defers parsing of\n * the serialized transactions (the block Buffer) until\n * the block has passed through the chain queue and\n * is about to enter the chain. This keeps a lot data\n * off of the javascript heap for most of the time a\n * block even exists in memory, and manages to keep a\n * lot of strain off of the garbage collector. Having\n * 500mb of blocks on the js heap would not be a good\n * thing.\n * @alias module:primitives.MemBlock\n * @extends AbstractBlock\n */\n\nclass MemBlock extends AbstractBlock {\n  /**\n   * Create a mem block.\n   * @constructor\n   */\n\n  constructor() {\n    super();\n\n    this._raw = DUMMY;\n  }\n\n  /**\n   * Test whether the block is a memblock.\n   * @returns {Boolean}\n   */\n\n  isMemory() {\n    return true;\n  }\n\n  /**\n   * Serialize the block headers.\n   * @returns {Buffer}\n   */\n\n  toHead() {\n    return this._raw.slice(0, 80);\n  }\n\n  /**\n   * Get the full block size.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return this._raw.length;\n  }\n\n  /**\n   * Verify the block.\n   * @returns {Boolean}\n   */\n\n  verifyBody() {\n    return true;\n  }\n\n  /**\n   * Retrieve the coinbase height\n   * from the coinbase input script.\n   * @returns {Number} height (-1 if not present).\n   */\n\n  getCoinbaseHeight() {\n    if (this.version < 2)\n      return -1;\n\n    try {\n      return this.parseCoinbaseHeight();\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  /**\n   * Parse the coinbase height\n   * from the coinbase input script.\n   * @private\n   * @returns {Number} height (-1 if not present).\n   */\n\n  parseCoinbaseHeight() {\n    const br = bio.read(this._raw, true);\n\n    br.seek(80);\n\n    const txCount = br.readVarint();\n\n    if (txCount === 0)\n      return -1;\n\n    br.seek(4);\n\n    let inCount = br.readVarint();\n\n    if (inCount === 0) {\n      if (br.readU8() !== 0)\n        inCount = br.readVarint();\n    }\n\n    if (inCount === 0)\n      return -1;\n\n    br.seek(36);\n\n    const script = br.readVarBytes();\n\n    return Script.getCoinbaseHeight(script);\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    const br = bio.read(data, true);\n\n    this.readHead(br);\n\n    this._raw = br.data;\n\n    return this;\n  }\n\n  /**\n   * Insantiate a memblock from serialized data.\n   * @param {Buffer} data\n   * @returns {MemBlock}\n   */\n\n  static fromRaw(data) {\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Return serialized block data.\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    return this._raw;\n  }\n\n  /**\n   * Parse the serialized block data\n   * and create an actual {@link Block}.\n   * @returns {Block}\n   * @throws Parse error\n   */\n\n  toBlock() {\n    const block = Block.fromRaw(this._raw);\n\n    block._hash = this._hash;\n    block._hhash = this._hhash;\n\n    return block;\n  }\n\n  /**\n   * Convert the block to a headers object.\n   * @returns {Headers}\n   */\n\n  toHeaders() {\n    return Headers.fromBlock(this);\n  }\n\n  /**\n   * Test whether an object is a MemBlock.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isMemBlock(obj) {\n    return obj instanceof MemBlock;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = MemBlock;\n","/*!\n * mtx.js - mutable transaction object for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst {encoding} = require('bufio');\nconst {BufferMap} = require('buffer-map');\nconst Script = require('../script/script');\nconst TX = require('./tx');\nconst Input = require('./input');\nconst Output = require('./output');\nconst Coin = require('./coin');\nconst Outpoint = require('./outpoint');\nconst CoinView = require('../coins/coinview');\nconst Address = require('./address');\nconst consensus = require('../protocol/consensus');\nconst policy = require('../protocol/policy');\nconst Amount = require('../btc/amount');\nconst Stack = require('../script/stack');\nconst util = require('../utils/util');\nconst {inspectSymbol} = require('../utils');\n\n/**\n * MTX\n * A mutable transaction object.\n * @alias module:primitives.MTX\n * @extends TX\n * @property {Number} changeIndex\n * @property {CoinView} view\n */\n\nclass MTX extends TX {\n  /**\n   * Create a mutable transaction.\n   * @alias module:primitives.MTX\n   * @constructor\n   * @param {Object} options\n   */\n\n  constructor(options) {\n    super();\n\n    this.mutable = true;\n    this.changeIndex = -1;\n    this.view = new CoinView();\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    if (options.version != null) {\n      assert((options.version >>> 0) === options.version,\n        'Version must a be uint32.');\n      this.version = options.version;\n    }\n\n    if (options.inputs) {\n      assert(Array.isArray(options.inputs), 'Inputs must be an array.');\n      for (const input of options.inputs)\n        this.addInput(input);\n    }\n\n    if (options.outputs) {\n      assert(Array.isArray(options.outputs), 'Outputs must be an array.');\n      for (const output of options.outputs)\n        this.addOutput(output);\n    }\n\n    if (options.locktime != null) {\n      assert((options.locktime >>> 0) === options.locktime,\n        'Locktime must be a uint32.');\n      this.locktime = options.locktime;\n    }\n\n    if (options.changeIndex != null) {\n      if (options.changeIndex !== -1) {\n        assert((options.changeIndex >>> 0) === options.changeIndex,\n          'Change index must be a uint32.');\n        this.changeIndex = options.changeIndex;\n      } else {\n        this.changeIndex = -1;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate MTX from options.\n   * @param {Object} options\n   * @returns {MTX}\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Clone the transaction. Note that\n   * this will not carry over the view.\n   * @returns {MTX}\n   */\n\n  clone() {\n    const mtx = new this.constructor();\n    mtx.inject(this);\n    mtx.changeIndex = this.changeIndex;\n    return mtx;\n  }\n\n  /**\n   * Add an input to the transaction.\n   * @param {Input|Object} options\n   * @returns {Input}\n   *\n   * @example\n   * mtx.addInput({ prevout: { hash: ... }, script: ... });\n   * mtx.addInput(new Input());\n   */\n\n  addInput(options) {\n    const input = Input.fromOptions(options);\n    this.inputs.push(input);\n    return input;\n  }\n\n  /**\n   * Add an outpoint as an input.\n   * @param {Outpoint|Object} outpoint\n   * @returns {Input}\n   *\n   * @example\n   * mtx.addOutpoint({ hash: ..., index: 0 });\n   * mtx.addOutpoint(new Outpoint(hash, index));\n   */\n\n  addOutpoint(outpoint) {\n    const prevout = Outpoint.fromOptions(outpoint);\n    const input = Input.fromOutpoint(prevout);\n    this.inputs.push(input);\n    return input;\n  }\n\n  /**\n   * Add a coin as an input. Note that this will\n   * add the coin to the internal coin viewpoint.\n   * @param {Coin} coin\n   * @returns {Input}\n   *\n   * @example\n   * mtx.addCoin(Coin.fromTX(tx, 0, -1));\n   */\n\n  addCoin(coin) {\n    assert(coin instanceof Coin, 'Cannot add non-coin.');\n\n    const input = Input.fromCoin(coin);\n\n    this.inputs.push(input);\n    this.view.addCoin(coin);\n\n    return input;\n  }\n\n  /**\n   * Add a transaction as an input. Note that\n   * this will add the coin to the internal\n   * coin viewpoint.\n   * @param {TX} tx\n   * @param {Number} index\n   * @param {Number?} height\n   * @returns {Input}\n   *\n   * @example\n   * mtx.addTX(tx, 0);\n   */\n\n  addTX(tx, index, height) {\n    assert(tx instanceof TX, 'Cannot add non-transaction.');\n\n    if (height == null)\n      height = -1;\n\n    const input = Input.fromTX(tx, index);\n\n    this.inputs.push(input);\n\n    this.view.addIndex(tx, index, height);\n\n    return input;\n  }\n\n  /**\n   * Add an output.\n   * @param {Address|Script|Output|Object} script - Script or output options.\n   * @param {Amount?} value\n   * @returns {Output}\n   *\n   * @example\n   * mtx.addOutput(new Output());\n   * mtx.addOutput({ address: ..., value: 100000 });\n   * mtx.addOutput(address, 100000);\n   * mtx.addOutput(script, 100000);\n   */\n\n  addOutput(script, value) {\n    let output;\n\n    if (value != null)\n      output = Output.fromScript(script, value);\n    else\n      output = Output.fromOptions(script);\n\n    this.outputs.push(output);\n\n    return output;\n  }\n\n  /**\n   * Verify all transaction inputs.\n   * @param {VerifyFlags} [flags=STANDARD_VERIFY_FLAGS]\n   * @returns {Boolean} Whether the inputs are valid.\n   * @throws {ScriptError} on invalid inputs\n   */\n\n  check(flags) {\n    return super.check(this.view, flags);\n  }\n\n  /**\n   * Verify the transaction inputs on the worker pool\n   * (if workers are enabled).\n   * @param {VerifyFlags?} [flags=STANDARD_VERIFY_FLAGS]\n   * @param {WorkerPool?} pool\n   * @returns {Promise}\n   */\n\n  checkAsync(flags, pool) {\n    return super.checkAsync(this.view, flags, pool);\n  }\n\n  /**\n   * Verify all transaction inputs.\n   * @param {VerifyFlags} [flags=STANDARD_VERIFY_FLAGS]\n   * @returns {Boolean} Whether the inputs are valid.\n   */\n\n  verify(flags) {\n    try {\n      this.check(flags);\n    } catch (e) {\n      if (e.type === 'ScriptError')\n        return false;\n      throw e;\n    }\n    return true;\n  }\n\n  /**\n   * Verify the transaction inputs on the worker pool\n   * (if workers are enabled).\n   * @param {VerifyFlags?} [flags=STANDARD_VERIFY_FLAGS]\n   * @param {WorkerPool?} pool\n   * @returns {Promise}\n   */\n\n  async verifyAsync(flags, pool) {\n    try {\n      await this.checkAsync(flags, pool);\n    } catch (e) {\n      if (e.type === 'ScriptError')\n        return false;\n      throw e;\n    }\n    return true;\n  }\n\n  /**\n   * Calculate the fee for the transaction.\n   * @returns {Amount} fee (zero if not all coins are available).\n   */\n\n  getFee() {\n    return super.getFee(this.view);\n  }\n\n  /**\n   * Calculate the total input value.\n   * @returns {Amount} value\n   */\n\n  getInputValue() {\n    return super.getInputValue(this.view);\n  }\n\n  /**\n   * Get all input addresses.\n   * @returns {Address[]} addresses\n   */\n\n  getInputAddresses() {\n    return super.getInputAddresses(this.view);\n  }\n\n  /**\n   * Get all addresses.\n   * @returns {Address[]} addresses\n   */\n\n  getAddresses() {\n    return super.getAddresses(this.view);\n  }\n\n  /**\n   * Get all input address hashes.\n   * @returns {Hash[]} hashes\n   */\n\n  getInputHashes(enc) {\n    return super.getInputHashes(this.view, enc);\n  }\n\n  /**\n   * Get all address hashes.\n   * @returns {Hash[]} hashes\n   */\n\n  getHashes(enc) {\n    return super.getHashes(this.view, enc);\n  }\n\n  /**\n   * Test whether the transaction has\n   * all coins available/filled.\n   * @returns {Boolean}\n   */\n\n  hasCoins() {\n    return super.hasCoins(this.view);\n  }\n\n  /**\n   * Calculate virtual sigop count.\n   * @param {VerifyFlags?} flags\n   * @returns {Number} sigop count\n   */\n\n  getSigops(flags) {\n    return super.getSigops(this.view, flags);\n  }\n\n  /**\n   *  Calculate sigops count.\n   *  @param {CoinView} view\n   *  @param {VerifyFlags?} flags\n   *  @returns {Number} sigop count\n   */\n\n  getSigopsCount(flags) {\n    return super.getSigopsCount(this.view, flags);\n  }\n\n  /**\n   * Perform contextual checks to verify input, output,\n   * and fee values, as well as coinbase spend maturity\n   * (coinbases can only be spent 100 blocks or more\n   * after they're created). Note that this function is\n   * consensus critical.\n   * @param {Number} height - Height at which the\n   * transaction is being spent. In the mempool this is\n   * the chain height plus one at the time it entered the pool.\n   * @returns {Boolean}\n   */\n\n  verifyInputs(height) {\n    const [fee] = this.checkInputs(height);\n    return fee !== -1;\n  }\n\n  /**\n   * Perform contextual checks to verify input, output,\n   * and fee values, as well as coinbase spend maturity\n   * (coinbases can only be spent 100 blocks or more\n   * after they're created). Note that this function is\n   * consensus critical.\n   * @param {Number} height - Height at which the\n   * transaction is being spent. In the mempool this is\n   * the chain height plus one at the time it entered the pool.\n   * @returns {Array} [fee, reason, score]\n   */\n\n  checkInputs(height) {\n    return super.checkInputs(this.view, height);\n  }\n\n  /**\n   * Build input script (or witness) templates (with\n   * OP_0 in place of signatures).\n   * @param {Number} index - Input index.\n   * @param {Coin|Output} coin\n   * @param {KeyRing} ring\n   * @returns {Boolean} Whether the script was able to be built.\n   */\n\n  scriptInput(index, coin, ring) {\n    const input = this.inputs[index];\n\n    assert(input, 'Input does not exist.');\n    assert(coin, 'No coin passed.');\n\n    // Don't bother with any below calculation\n    // if the output is already templated.\n    if (input.script.raw.length !== 0)\n      return true;\n\n    // Get the previous output's script\n    const prev = coin.script;\n\n    // This is easily the hardest part about\n    // building a transaction with segwit:\n    // figuring out where the redeem script\n    // and witness redeem scripts go.\n    const sh = prev.getScripthash();\n\n    if (sh) {\n      const redeem = ring.getRedeem(sh);\n\n      if (!redeem)\n        return false;\n\n      // Regular P2SH.\n      const vector = this.scriptVector(redeem, ring);\n\n      if (!vector)\n        return false;\n\n      vector.push(redeem.toRaw());\n\n      input.script.fromStack(vector);\n\n      return true;\n    }\n\n    const vector = this.scriptVector(prev, ring);\n\n    if (!vector)\n      return false;\n\n    input.script.fromStack(vector);\n\n    return true;\n  }\n\n  /**\n   * Build script for a single vector\n   * based on a previous script.\n   * @param {Script} prev\n   * @param {Buffer} ring\n   * @return {Stack}\n   */\n\n  scriptVector(prev, ring) {\n    // P2PK\n    const pk = prev.getPubkey();\n    if (pk) {\n      if (!pk.equals(ring.publicKey))\n        return null;\n\n      const stack = new Stack();\n\n      stack.pushInt(0);\n\n      return stack;\n    }\n\n    // P2PKH\n    const pkh = prev.getPubkeyhash();\n    if (pkh) {\n      if (!pkh.equals(ring.getKeyHash()))\n        return null;\n\n      const stack = new Stack();\n\n      stack.pushInt(0);\n      stack.pushData(ring.publicKey);\n\n      return stack;\n    }\n\n    // Multisig\n    const [, n] = prev.getMultisig();\n    if (n !== -1) {\n      if (prev.indexOf(ring.publicKey) === -1)\n        return null;\n\n      // Technically we should create m signature slots,\n      // but we create n signature slots so we can order\n      // the signatures properly.\n      const stack = new Stack();\n\n      stack.pushInt(0);\n\n      // Fill script with `n` signature slots.\n      for (let i = 0; i < n; i++)\n        stack.pushInt(0);\n\n      return stack;\n    }\n\n    return null;\n  }\n\n  /**\n   * Sign a transaction input on the worker pool\n   * (if workers are enabled).\n   * @param {Number} index\n   * @param {Coin|Output} coin\n   * @param {KeyRing} ring\n   * @param {SighashType?} type\n   * @param {WorkerPool?} pool\n   * @returns {Promise}\n   */\n\n  async signInputAsync(index, coin, ring, type, pool) {\n    if (!pool)\n      return this.signInput(index, coin, ring, type);\n\n    return await pool.signInput(this, index, coin, ring, type, pool);\n  }\n\n  /**\n   * Sign an input.\n   * @param {Number} index - Index of input being signed.\n   * @param {Coin|Output} coin\n   * @param {KeyRing} ring - Private key.\n   * @param {SighashType} type\n   * @returns {Boolean} Whether the input was able to be signed.\n   */\n\n  signInput(index, coin, ring, type) {\n    const input = this.inputs[index];\n    const key = ring.privateKey;\n\n    assert(input, 'Input does not exist.');\n    assert(coin, 'No coin passed.');\n\n    // Get the previous output's script\n    const value = coin.value;\n    let prev = coin.script;\n    const vector = input.script;\n    let redeem = false;\n\n    if (type == null)\n      type = Script.hashType.ALL;\n\n    type |= Script.hashType.SIGHASH_FORKID;\n    const flags = Script.flags.VERIFY_SIGHASH_FORKID;\n\n    // Grab regular p2sh redeem script.\n    if (prev.isScripthash()) {\n      prev = input.script.getRedeem();\n      if (!prev)\n        throw new Error('Input has not been templated.');\n      redeem = true;\n    }\n\n    // Create our signature.\n    const sig = this.signature(index, prev, value, key, type, flags);\n\n    if (redeem) {\n      const stack = vector.toStack();\n      const redeem = stack.pop();\n\n      const result = this.signVector(prev, stack, sig, ring);\n\n      if (!result)\n        return false;\n\n      result.push(redeem);\n\n      vector.fromStack(result);\n\n      return true;\n    }\n\n    const stack = vector.toStack();\n    const result = this.signVector(prev, stack, sig, ring);\n\n    if (!result)\n      return false;\n\n    vector.fromStack(result);\n\n    return true;\n  }\n\n  /**\n   * Add a signature to a vector\n   * based on a previous script.\n   * @param {Script} prev\n   * @param {Stack} vector\n   * @param {Buffer} sig\n   * @param {KeyRing} ring\n   * @return {Boolean}\n   */\n\n  signVector(prev, vector, sig, ring) {\n    // P2PK\n    const pk = prev.getPubkey();\n    if (pk) {\n      // Make sure the pubkey is ours.\n      if (!ring.publicKey.equals(pk))\n        return null;\n\n      if (vector.length === 0)\n        throw new Error('Input has not been templated.');\n\n      // Already signed.\n      if (vector.get(0).length > 0)\n        return vector;\n\n      vector.set(0, sig);\n\n      return vector;\n    }\n\n    // P2PKH\n    const pkh = prev.getPubkeyhash();\n    if (pkh) {\n      // Make sure the pubkey hash is ours.\n      if (!ring.getKeyHash().equals(pkh))\n        return null;\n\n      if (vector.length !== 2)\n        throw new Error('Input has not been templated.');\n\n      if (vector.get(1).length === 0)\n        throw new Error('Input has not been templated.');\n\n      // Already signed.\n      if (vector.get(0).length > 0)\n        return vector;\n\n      vector.set(0, sig);\n\n      return vector;\n    }\n\n    // Multisig\n    const [m, n] = prev.getMultisig();\n    if (m !== -1) {\n      if (vector.length < 2)\n        throw new Error('Input has not been templated.');\n\n      if (vector.get(0).length !== 0)\n        throw new Error('Input has not been templated.');\n\n      // Too many signature slots. Abort.\n      if (vector.length - 1 > n)\n        throw new Error('Input has not been templated.');\n\n      // Count the number of current signatures.\n      let total = 0;\n      for (let i = 1; i < vector.length; i++) {\n        const item = vector.get(i);\n        if (item.length > 0)\n          total += 1;\n      }\n\n      // Signatures are already finalized.\n      if (total === m && vector.length - 1 === m)\n        return vector;\n\n      // Add some signature slots for us to use if\n      // there was for some reason not enough.\n      while (vector.length - 1 < n)\n        vector.pushInt(0);\n\n      // Grab the redeem script's keys to figure\n      // out where our key should go.\n      const keys = [];\n      for (const op of prev.code) {\n        if (op.data)\n          keys.push(op.data);\n      }\n\n      // Find the key index so we can place\n      // the signature in the same index.\n      let keyIndex = -1;\n\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key.equals(ring.publicKey)) {\n          keyIndex = i;\n          break;\n        }\n      }\n\n      // Our public key is not in the prev_out\n      // script. We tried to sign a transaction\n      // that is not redeemable by us.\n      if (keyIndex === -1)\n        return null;\n\n      // Offset key index by one to turn it into\n      // \"sig index\". Accounts for OP_0 byte at\n      // the start.\n      keyIndex += 1;\n\n      // Add our signature to the correct slot\n      // and increment the total number of\n      // signatures.\n      if (keyIndex < vector.length && total < m) {\n        if (vector.get(keyIndex).length === 0) {\n          vector.set(keyIndex, sig);\n          total += 1;\n        }\n      }\n\n      // All signatures added. Finalize.\n      if (total >= m) {\n        // Remove empty slots left over.\n        for (let i = vector.length - 1; i >= 1; i--) {\n          const item = vector.get(i);\n          if (item.length === 0)\n            vector.remove(i);\n        }\n\n        // Remove signatures which are not required.\n        // This should never happen.\n        while (total > m) {\n          vector.pop();\n          total -= 1;\n        }\n\n        // Sanity checks.\n        assert(total === m);\n        assert(vector.length - 1 === m);\n      }\n\n      return vector;\n    }\n\n    return null;\n  }\n\n  /**\n   * Test whether the transaction is fully-signed.\n   * @returns {Boolean}\n   */\n\n  isSigned() {\n    for (let i = 0; i < this.inputs.length; i++) {\n      const {prevout} = this.inputs[i];\n      const coin = this.view.getOutput(prevout);\n\n      if (!coin)\n        return false;\n\n      if (!this.isInputSigned(i, coin))\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Test whether an input is fully-signed.\n   * @param {Number} index\n   * @param {Coin|Output} coin\n   * @returns {Boolean}\n   */\n\n  isInputSigned(index, coin) {\n    const input = this.inputs[index];\n\n    assert(input, 'Input does not exist.');\n    assert(coin, 'No coin passed.');\n\n    const vector = input.script;\n    let prev = coin.script;\n    let redeem = false;\n\n    // Grab redeem script if possible.\n    if (prev.isScripthash()) {\n      prev = input.script.getRedeem();\n      if (!prev)\n        return false;\n      redeem = true;\n    }\n\n    const stack = vector.toStack();\n\n    if (redeem)\n      stack.pop();\n\n    return this.isVectorSigned(prev, stack);\n  }\n\n  /**\n   * Test whether a vector is fully-signed.\n   * @param {Script} prev\n   * @param {Stack} vector\n   * @returns {Boolean}\n   */\n\n  isVectorSigned(prev, vector) {\n    if (prev.isPubkey()) {\n      if (vector.length !== 1)\n        return false;\n\n      if (vector.get(0).length === 0)\n        return false;\n\n      return true;\n    }\n\n    if (prev.isPubkeyhash()) {\n      if (vector.length !== 2)\n        return false;\n\n      if (vector.get(0).length === 0)\n        return false;\n\n      if (vector.get(1).length === 0)\n        return false;\n\n      return true;\n    }\n\n    const [m] = prev.getMultisig();\n\n    if (m !== -1) {\n      // Ensure we have the correct number\n      // of required signatures.\n      if (vector.length - 1 !== m)\n        return false;\n\n      // Ensure all members are signatures.\n      for (let i = 1; i < vector.length; i++) {\n        const item = vector.get(i);\n        if (item.length === 0)\n          return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Build input scripts (or witnesses).\n   * @param {KeyRing} ring - Address used to sign. The address\n   * must be able to redeem the coin.\n   * @returns {Number} Number of inputs templated.\n   */\n\n  template(ring) {\n    if (Array.isArray(ring)) {\n      let total = 0;\n      for (const key of ring)\n        total += this.template(key);\n      return total;\n    }\n\n    let total = 0;\n\n    for (let i = 0; i < this.inputs.length; i++) {\n      const {prevout} = this.inputs[i];\n      const coin = this.view.getOutput(prevout);\n\n      if (!coin)\n        continue;\n\n      if (!ring.ownOutput(coin))\n        continue;\n\n      // Build script for input\n      if (!this.scriptInput(i, coin, ring))\n        continue;\n\n      total += 1;\n    }\n\n    return total;\n  }\n\n  /**\n   * Built input scripts (or witnesses) and sign the inputs.\n   * @param {KeyRing} ring - Address used to sign. The address\n   * must be able to redeem the coin.\n   * @param {SighashType} type\n   * @returns {Number} Number of inputs signed.\n   */\n\n  sign(ring, type) {\n    if (Array.isArray(ring)) {\n      let total = 0;\n      for (const key of ring)\n        total += this.sign(key, type);\n      return total;\n    }\n\n    assert(ring.privateKey, 'No private key available.');\n\n    let total = 0;\n\n    for (let i = 0; i < this.inputs.length; i++) {\n      const {prevout} = this.inputs[i];\n      const coin = this.view.getOutput(prevout);\n\n      if (!coin)\n        continue;\n\n      if (!ring.ownOutput(coin))\n        continue;\n\n      // Build script for input\n      if (!this.scriptInput(i, coin, ring))\n        continue;\n\n      // Sign input\n      if (!this.signInput(i, coin, ring, type))\n        continue;\n\n      total += 1;\n    }\n\n    return total;\n  }\n\n  /**\n   * Sign the transaction inputs on the worker pool\n   * (if workers are enabled).\n   * @param {KeyRing} ring\n   * @param {SighashType?} type\n   * @param {WorkerPool?} pool\n   * @returns {Promise}\n   */\n\n  async signAsync(ring, type, pool) {\n    if (!pool)\n      return this.sign(ring, type);\n\n    return await pool.sign(this, ring, type);\n  }\n\n  /**\n   * Estimate maximum possible size.\n   * @param {Function?} estimate - Input script size estimator.\n   * @returns {Number}\n   */\n\n  async estimateSize(estimate) {\n    let total = 0;\n\n    // Calculate the size, minus the input scripts.\n    total += 4;\n    total += encoding.sizeVarint(this.inputs.length);\n    total += this.inputs.length * 40;\n\n    total += encoding.sizeVarint(this.outputs.length);\n\n    for (const output of this.outputs)\n      total += output.getSize();\n\n    total += 4;\n\n    // Add size for signatures and public keys\n    for (const {prevout} of this.inputs) {\n      const coin = this.view.getOutput(prevout);\n\n      // We're out of luck here.\n      // Just assume it's a p2pkh.\n      if (!coin) {\n        total += 110;\n        continue;\n      }\n\n      // Previous output script.\n      const prev = coin.script;\n\n      // P2PK\n      if (prev.isPubkey()) {\n        // varint script size\n        total += 1;\n        // OP_PUSHDATA0 [signature]\n        total += 1 + 73;\n        continue;\n      }\n\n      // P2PKH\n      if (prev.isPubkeyhash()) {\n        // varint script size\n        total += 1;\n        // OP_PUSHDATA0 [signature]\n        total += 1 + 73;\n        // OP_PUSHDATA0 [key]\n        total += 1 + 33;\n        continue;\n      }\n\n      const [m] = prev.getMultisig();\n      if (m !== -1) {\n        let size = 0;\n        // Bare Multisig\n        // OP_0\n        size += 1;\n        // OP_PUSHDATA0 [signature] ...\n        size += (1 + 73) * m;\n        // varint len\n        size += encoding.sizeVarint(size);\n        total += size;\n        continue;\n      }\n\n      // Call out to the custom estimator.\n      if (estimate) {\n        const size = await estimate(prev);\n        if (size !== -1) {\n          total += size;\n          continue;\n        }\n      }\n\n      // P2SH\n      if (prev.isScripthash()) {\n        // varint size\n        total += 1;\n        // 2-of-3 multisig input\n        total += 149;\n        continue;\n      }\n\n      // Unknown.\n      total += 110;\n    }\n\n    return total;\n  }\n\n  /**\n   * Select necessary coins based on total output value.\n   * @param {Coin[]} coins\n   * @param {Object?} options\n   * @returns {CoinSelection}\n   * @throws on not enough funds available.\n   */\n\n  selectCoins(coins, options) {\n    const selector = new CoinSelector(this, options);\n    return selector.select(coins);\n  }\n\n  /**\n   * Attempt to subtract a fee from a single output.\n   * @param {Number} index\n   * @param {Amount} fee\n   */\n\n  subtractIndex(index, fee) {\n    assert(typeof index === 'number');\n    assert(typeof fee === 'number');\n\n    const output = this.outputs[index];\n\n    if (!output)\n      throw new Error('Subtraction index does not exist.');\n\n    if (output.value < fee + output.getDustThreshold())\n      throw new Error('Could not subtract fee.');\n\n    output.value -= fee;\n  }\n\n  /**\n   * Attempt to subtract a fee from all outputs evenly.\n   * @param {Amount} fee\n   */\n\n  subtractFee(fee) {\n    assert(typeof fee === 'number');\n\n    let outputs = 0;\n\n    for (const output of this.outputs) {\n      // Ignore nulldatas and\n      // other OP_RETURN scripts.\n      if (output.script.isUnspendable())\n        continue;\n      outputs += 1;\n    }\n\n    if (outputs === 0)\n      throw new Error('Could not subtract fee.');\n\n    const left = fee % outputs;\n    const share = (fee - left) / outputs;\n\n    // First pass, remove even shares.\n    for (const output of this.outputs) {\n      if (output.script.isUnspendable())\n        continue;\n\n      if (output.value < share + output.getDustThreshold())\n        throw new Error('Could not subtract fee.');\n\n      output.value -= share;\n    }\n\n    // Second pass, remove the remainder\n    // for the one unlucky output.\n    for (const output of this.outputs) {\n      if (output.script.isUnspendable())\n        continue;\n\n      if (output.value >= left + output.getDustThreshold()) {\n        output.value -= left;\n        return;\n      }\n    }\n\n    throw new Error('Could not subtract fee.');\n  }\n\n  /**\n   * Select coins and fill the inputs.\n   * @param {Coin[]} coins\n   * @param {Object} options - See {@link MTX#selectCoins} options.\n   * @returns {CoinSelector}\n   */\n\n  async fund(coins, options) {\n    assert(options, 'Options are required.');\n    assert(options.changeAddress, 'Change address is required.');\n    assert(this.inputs.length === 0, 'TX is already funded.');\n\n    // Select necessary coins.\n    const select = await this.selectCoins(coins, options);\n\n    // Add coins to transaction.\n    for (const coin of select.chosen)\n      this.addCoin(coin);\n\n    // Attempt to subtract fee.\n    if (select.subtractFee) {\n      const index = select.subtractIndex;\n      if (index !== -1)\n        this.subtractIndex(index, select.fee);\n      else\n        this.subtractFee(select.fee);\n    }\n\n    // Add a change output.\n    const output = new Output();\n    output.value = select.change;\n    output.script.fromAddress(select.changeAddress);\n\n    if (output.isDust(policy.MIN_RELAY)) {\n      // Do nothing. Change is added to fee.\n      this.changeIndex = -1;\n      assert.strictEqual(this.getFee(), select.fee + select.change);\n    } else {\n      this.outputs.push(output);\n      this.changeIndex = this.outputs.length - 1;\n      assert.strictEqual(this.getFee(), select.fee);\n    }\n\n    return select;\n  }\n\n  /**\n   * Sort inputs and outputs according to BIP69.\n   * @see https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki\n   */\n\n  sortMembers() {\n    let changeOutput = null;\n\n    if (this.changeIndex !== -1) {\n      changeOutput = this.outputs[this.changeIndex];\n      assert(changeOutput);\n    }\n\n    this.inputs.sort(sortInputs);\n    this.outputs.sort(sortOutputs);\n\n    if (this.changeIndex !== -1) {\n      this.changeIndex = this.outputs.indexOf(changeOutput);\n      assert(this.changeIndex !== -1);\n    }\n  }\n\n  /**\n   * Avoid fee sniping.\n   * @param {Number} - Current chain height.\n   * @see bitcoin/src/wallet/wallet.cpp\n   */\n\n  avoidFeeSniping(height) {\n    assert(typeof height === 'number', 'Must pass in height.');\n\n    if ((Math.random() * 10 | 0) === 0) {\n      height -= Math.random() * 100 | 0;\n\n      if (height < 0)\n        height = 0;\n    }\n\n    this.setLocktime(height);\n  }\n\n  /**\n   * Set locktime and sequences appropriately.\n   * @param {Number} locktime\n   */\n\n  setLocktime(locktime) {\n    assert((locktime >>> 0) === locktime, 'Locktime must be a uint32.');\n    assert(this.inputs.length > 0, 'Cannot set sequence with no inputs.');\n\n    for (const input of this.inputs) {\n      if (input.sequence === 0xffffffff)\n        input.sequence = 0xfffffffe;\n    }\n\n    this.locktime = locktime;\n  }\n\n  /**\n   * Set sequence locktime.\n   * @param {Number} index - Input index.\n   * @param {Number} locktime\n   * @param {Boolean?} seconds\n   */\n\n  setSequence(index, locktime, seconds) {\n    const input = this.inputs[index];\n\n    assert(input, 'Input does not exist.');\n    assert((locktime >>> 0) === locktime, 'Locktime must be a uint32.');\n\n    this.version = 2;\n\n    if (seconds) {\n      locktime >>>= consensus.SEQUENCE_GRANULARITY;\n      locktime &= consensus.SEQUENCE_MASK;\n      locktime |= consensus.SEQUENCE_TYPE_FLAG;\n    } else {\n      locktime &= consensus.SEQUENCE_MASK;\n    }\n\n    input.sequence = locktime;\n  }\n\n  /**\n   * Inspect the transaction.\n   * @returns {Object}\n   */\n\n  [inspectSymbol]() {\n    return this.format();\n  }\n\n  /**\n   * Inspect the transaction.\n   * @returns {Object}\n   */\n\n  format() {\n    return super.format(this.view);\n  }\n\n  /**\n   * Convert transaction to JSON.\n   * @returns {Object}\n   */\n\n  toJSON() {\n    return super.toJSON(null, this.view);\n  }\n\n  /**\n   * Convert transaction to JSON.\n   * @param {Network} network\n   * @returns {Object}\n   */\n\n  getJSON(network) {\n    return super.getJSON(network, this.view);\n  }\n\n  /**\n   * Inject properties from a json object\n   * @param {Object} json\n   */\n\n  fromJSON(json) {\n    super.fromJSON(json);\n\n    for (let i = 0; i < json.inputs.length; i++) {\n      const input = json.inputs[i];\n      const {prevout} = input;\n\n      if (!input.coin)\n        continue;\n\n      const coin = Coin.fromJSON(input.coin);\n\n      coin.hash = util.fromRev(prevout.hash);\n      coin.index = prevout.index;\n\n      this.view.addCoin(coin);\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate a transaction from a\n   * jsonified transaction object.\n   * @param {Object} json - The jsonified transaction object.\n   * @returns {MTX}\n   */\n\n  static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n  /**\n   * Instantiate a transaction from a buffer reader.\n   * @param {BufferReader} br\n   * @returns {MTX}\n   */\n\n  static fromReader(br) {\n    return new this().fromReader(br);\n  }\n\n  /**\n   * Instantiate a transaction from a serialized Buffer.\n   * @param {Buffer} data\n   * @param {String?} enc - Encoding, can be `'hex'` or null.\n   * @returns {MTX}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Convert the MTX to a TX.\n   * @returns {TX}\n   */\n\n  toTX() {\n    return new TX().inject(this);\n  }\n\n  /**\n   * Convert the MTX to a TX.\n   * @returns {Array} [tx, view]\n   */\n\n  commit() {\n    return [this.toTX(), this.view];\n  }\n\n  /**\n   * Instantiate MTX from TX.\n   * @param {TX} tx\n   * @returns {MTX}\n   */\n\n  static fromTX(tx) {\n    return new this().inject(tx);\n  }\n\n  /**\n   * Test whether an object is an MTX.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isMTX(obj) {\n    return obj instanceof MTX;\n  }\n}\n\n/**\n * Coin Selector\n * @alias module:primitives.CoinSelector\n */\n\nclass CoinSelector {\n  /**\n   * Create a coin selector.\n   * @constructor\n   * @param {TX} tx\n   * @param {Object?} options\n   */\n\n  constructor(tx, options) {\n    this.tx = tx.clone();\n    this.coins = [];\n    this.outputValue = 0;\n    this.index = 0;\n    this.chosen = [];\n    this.change = 0;\n    this.fee = CoinSelector.MIN_FEE;\n\n    this.selection = 'value';\n    this.subtractFee = false;\n    this.subtractIndex = -1;\n    this.height = -1;\n    this.depth = -1;\n    this.hardFee = -1;\n    this.rate = CoinSelector.FEE_RATE;\n    this.maxFee = -1;\n    this.round = false;\n    this.changeAddress = null;\n    this.inputs = new BufferMap();\n\n    // Needed for size estimation.\n    this.estimate = null;\n\n    this.injectInputs();\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Initialize selector options.\n   * @param {Object} options\n   * @private\n   */\n\n  fromOptions(options) {\n    if (options.selection) {\n      assert(typeof options.selection === 'string');\n      this.selection = options.selection;\n    }\n\n    if (options.subtractFee != null) {\n      if (typeof options.subtractFee === 'number') {\n        assert(Number.isSafeInteger(options.subtractFee));\n        assert(options.subtractFee >= -1);\n        this.subtractIndex = options.subtractFee;\n        this.subtractFee = this.subtractIndex !== -1;\n      } else {\n        assert(typeof options.subtractFee === 'boolean');\n        this.subtractFee = options.subtractFee;\n      }\n    }\n\n    if (options.subtractIndex != null) {\n      assert(Number.isSafeInteger(options.subtractIndex));\n      assert(options.subtractIndex >= -1);\n      this.subtractIndex = options.subtractIndex;\n      this.subtractFee = this.subtractIndex !== -1;\n    }\n\n    if (options.height != null) {\n      assert(Number.isSafeInteger(options.height));\n      assert(options.height >= -1);\n      this.height = options.height;\n    }\n\n    if (options.confirmations != null) {\n      assert(Number.isSafeInteger(options.confirmations));\n      assert(options.confirmations >= -1);\n      this.depth = options.confirmations;\n    }\n\n    if (options.depth != null) {\n      assert(Number.isSafeInteger(options.depth));\n      assert(options.depth >= -1);\n      this.depth = options.depth;\n    }\n\n    if (options.hardFee != null) {\n      assert(Number.isSafeInteger(options.hardFee));\n      assert(options.hardFee >= -1);\n      this.hardFee = options.hardFee;\n    }\n\n    if (options.rate != null) {\n      assert(Number.isSafeInteger(options.rate));\n      assert(options.rate >= 0);\n      this.rate = options.rate;\n    }\n\n    if (options.maxFee != null) {\n      assert(Number.isSafeInteger(options.maxFee));\n      assert(options.maxFee >= -1);\n      this.maxFee = options.maxFee;\n    }\n\n    if (options.round != null) {\n      assert(typeof options.round === 'boolean');\n      this.round = options.round;\n    }\n\n    if (options.changeAddress) {\n      const addr = options.changeAddress;\n      if (typeof addr === 'string') {\n        this.changeAddress = Address.fromString(addr);\n      } else {\n        assert(addr instanceof Address);\n        this.changeAddress = addr;\n      }\n    }\n\n    if (options.estimate) {\n      assert(typeof options.estimate === 'function');\n      this.estimate = options.estimate;\n    }\n\n    if (options.inputs) {\n      assert(Array.isArray(options.inputs));\n      for (let i = 0; i < options.inputs.length; i++) {\n        const prevout = options.inputs[i];\n        assert(prevout && typeof prevout === 'object');\n        const {hash, index} = prevout;\n        assert(Buffer.isBuffer(hash));\n        assert(typeof index === 'number');\n        this.inputs.set(Outpoint.toKey(hash, index), i);\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Attempt to inject existing inputs.\n   * @private\n   */\n\n  injectInputs() {\n    if (this.tx.inputs.length > 0) {\n      for (let i = 0; i < this.tx.inputs.length; i++) {\n        const {prevout} = this.tx.inputs[i];\n        this.inputs.set(prevout.toKey(), i);\n      }\n    }\n  }\n\n  /**\n   * Initialize the selector with coins to select from.\n   * @param {Coin[]} coins\n   */\n\n  init(coins) {\n    this.coins = coins.slice();\n    this.outputValue = this.tx.getOutputValue();\n    this.index = 0;\n    this.chosen = [];\n    this.change = 0;\n    this.fee = CoinSelector.MIN_FEE;\n    this.tx.inputs.length = 0;\n\n    switch (this.selection) {\n      case 'all':\n      case 'random':\n        this.coins.sort(sortRandom);\n        break;\n      case 'age':\n        this.coins.sort(sortAge);\n        break;\n      case 'value':\n        this.coins.sort(sortValue);\n        break;\n      default:\n        throw new FundingError(`Bad selection type: ${this.selection}.`);\n    }\n  }\n\n  /**\n   * Calculate total value required.\n   * @returns {Amount}\n   */\n\n  total() {\n    if (this.subtractFee)\n      return this.outputValue;\n    return this.outputValue + this.fee;\n  }\n\n  /**\n   * Test whether the selector has\n   * completely funded the transaction.\n   * @returns {Boolean}\n   */\n\n  isFull() {\n    return this.tx.getInputValue() >= this.total();\n  }\n\n  /**\n   * Test whether a coin is spendable\n   * with regards to the options.\n   * @param {Coin} coin\n   * @returns {Boolean}\n   */\n\n  isSpendable(coin) {\n    if (this.tx.view.hasEntry(coin))\n      return false;\n\n    if (this.height === -1)\n      return true;\n\n    if (coin.coinbase) {\n      if (coin.height === -1)\n        return false;\n\n      if (this.height + 1 < coin.height + consensus.COINBASE_MATURITY)\n        return false;\n\n      return true;\n    }\n\n    if (this.depth === -1)\n      return true;\n\n    const depth = coin.getDepth(this.height);\n\n    if (depth < this.depth)\n      return false;\n\n    return true;\n  }\n\n  /**\n   * Get the current fee based on a size.\n   * @param {Number} size\n   * @returns {Amount}\n   */\n\n  getFee(size) {\n    // This is mostly here for testing.\n    // i.e. A fee rounded to the nearest\n    // kb is easier to predict ahead of time.\n    if (this.round) {\n      const fee = policy.getRoundFee(size, this.rate);\n      return Math.min(fee, CoinSelector.MAX_FEE);\n    }\n\n    const fee = policy.getMinFee(size, this.rate);\n    return Math.min(fee, CoinSelector.MAX_FEE);\n  }\n\n  /**\n   * Fund the transaction with more\n   * coins if the `output value + fee`\n   * total was updated.\n   */\n\n  fund() {\n    // Ensure all preferred inputs first.\n    if (this.inputs.size > 0) {\n      const coins = [];\n\n      for (let i = 0; i < this.inputs.size; i++)\n        coins.push(null);\n\n      for (const coin of this.coins) {\n        const {hash, index} = coin;\n        const key = Outpoint.toKey(hash, index);\n        const i = this.inputs.get(key);\n\n        if (i != null) {\n          coins[i] = coin;\n          this.inputs.delete(key);\n        }\n      }\n\n      if (this.inputs.size > 0)\n        throw new Error('Could not resolve preferred inputs.');\n\n      for (const coin of coins) {\n        this.tx.addCoin(coin);\n        this.chosen.push(coin);\n      }\n    }\n\n    while (this.index < this.coins.length) {\n      const coin = this.coins[this.index++];\n\n      if (!this.isSpendable(coin))\n        continue;\n\n      this.tx.addCoin(coin);\n      this.chosen.push(coin);\n\n      if (this.selection === 'all')\n        continue;\n\n      if (this.isFull())\n        break;\n    }\n  }\n\n  /**\n   * Initiate selection from `coins`.\n   * @param {Coin[]} coins\n   * @returns {CoinSelector}\n   */\n\n  async select(coins) {\n    this.init(coins);\n\n    if (this.hardFee !== -1) {\n      this.selectHard();\n    } else {\n      // This is potentially asynchronous:\n      // it may invoke the size estimator\n      // required for redeem scripts (we\n      // may be calling out to a wallet\n      // or something similar).\n      await this.selectEstimate();\n    }\n\n    if (!this.isFull()) {\n      // Still failing to get enough funds.\n      throw new FundingError(\n        'Not enough funds.',\n        this.tx.getInputValue(),\n        this.total());\n    }\n\n    // How much money is left after filling outputs.\n    this.change = this.tx.getInputValue() - this.total();\n\n    return this;\n  }\n\n  /**\n   * Initialize selection based on size estimate.\n   */\n\n  async selectEstimate() {\n    // Set minimum fee and do\n    // an initial round of funding.\n    this.fee = CoinSelector.MIN_FEE;\n    this.fund();\n\n    // Add dummy output for change.\n    const change = new Output();\n\n    if (this.changeAddress) {\n      change.script.fromAddress(this.changeAddress);\n    } else {\n      // In case we don't have a change address,\n      // we use a fake p2pkh output to gauge size.\n      change.script.fromPubkeyhash(Buffer.allocUnsafe(20));\n    }\n\n    this.tx.outputs.push(change);\n\n    // Keep recalculating the fee and funding\n    // until we reach some sort of equilibrium.\n    do {\n      const size = await this.tx.estimateSize(this.estimate);\n\n      this.fee = this.getFee(size);\n\n      if (this.maxFee > 0 && this.fee > this.maxFee)\n        throw new FundingError('Fee is too high.');\n\n      // Failed to get enough funds, add more coins.\n      if (!this.isFull())\n        this.fund();\n    } while (!this.isFull() && this.index < this.coins.length);\n  }\n\n  /**\n   * Initiate selection based on a hard fee.\n   */\n\n  selectHard() {\n    this.fee = Math.min(this.hardFee, CoinSelector.MAX_FEE);\n    this.fund();\n  }\n}\n\n/**\n * Default fee rate\n * for coin selection.\n * @const {Amount}\n * @default\n */\n\nCoinSelector.FEE_RATE = 10000;\n\n/**\n * Minimum fee to start with\n * during coin selection.\n * @const {Amount}\n * @default\n */\n\nCoinSelector.MIN_FEE = 10000;\n\n/**\n * Maximum fee to allow\n * after coin selection.\n * @const {Amount}\n * @default\n */\n\nCoinSelector.MAX_FEE = consensus.COIN / 10;\n\n/**\n * Funding Error\n * An error thrown from the coin selector.\n * @ignore\n * @extends Error\n * @property {String} message - Error message.\n * @property {Amount} availableFunds\n * @property {Amount} requiredFunds\n */\n\nclass FundingError extends Error {\n  /**\n   * Create a funding error.\n   * @constructor\n   * @param {String} msg\n   * @param {Amount} available\n   * @param {Amount} required\n   */\n\n  constructor(msg, available, required) {\n    super();\n\n    this.type = 'FundingError';\n    this.message = msg;\n    this.availableFunds = -1;\n    this.requiredFunds = -1;\n\n    if (available != null) {\n      this.message += ` (available=${Amount.btc(available)},`;\n      this.message += ` required=${Amount.btc(required)})`;\n      this.availableFunds = available;\n      this.requiredFunds = required;\n    }\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(this, FundingError);\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction sortAge(a, b) {\n  a = a.height === -1 ? 0x7fffffff : a.height;\n  b = b.height === -1 ? 0x7fffffff : b.height;\n  return a - b;\n}\n\nfunction sortRandom(a, b) {\n  return Math.random() > 0.5 ? 1 : -1;\n}\n\nfunction sortValue(a, b) {\n  if (a.height === -1 && b.height !== -1)\n    return 1;\n\n  if (a.height !== -1 && b.height === -1)\n    return -1;\n\n  return b.value - a.value;\n}\n\nfunction sortInputs(a, b) {\n  return a.compare(b);\n}\n\nfunction sortOutputs(a, b) {\n  return a.compare(b);\n}\n\n/*\n * Expose\n */\n\nexports = MTX;\nexports.MTX = MTX;\nexports.Selector = CoinSelector;\nexports.FundingError = FundingError;\n\nmodule.exports = exports;\n","/*!\n * txmeta.js - extended transaction object for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst bio = require('bufio');\nconst util = require('../utils/util');\nconst TX = require('./tx');\nconst {inspectSymbol} = require('../utils');\n\n/**\n * TXMeta\n * An extended transaction object.\n * @alias module:primitives.TXMeta\n */\n\nclass TXMeta {\n  /**\n   * Create an extended transaction.\n   * @constructor\n   * @param {Object?} options\n   */\n\n  constructor(options) {\n    this.tx = new TX();\n    this.mtime = util.now();\n    this.height = -1;\n    this.block = null;\n    this.time = 0;\n    this.index = -1;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromOptions(options) {\n    if (options.tx) {\n      assert(options.tx instanceof TX);\n      this.tx = options.tx;\n    }\n\n    if (options.mtime != null) {\n      assert((options.mtime >>> 0) === options.mtime);\n      this.mtime = options.mtime;\n    }\n\n    if (options.height != null) {\n      assert(Number.isSafeInteger(options.height));\n      this.height = options.height;\n    }\n\n    if (options.block !== undefined) {\n      assert(options.block == null || Buffer.isBuffer(options.block));\n      this.block = options.block;\n    }\n\n    if (options.time != null) {\n      assert((options.time >>> 0) === options.time);\n      this.time = options.time;\n    }\n\n    if (options.index != null) {\n      assert(Number.isSafeInteger(options.index));\n      this.index = options.index;\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate TXMeta from options.\n   * @param {Object} options\n   * @returns {TXMeta}\n   */\n\n  static fromOptions(options) {\n    return new this().fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options object.\n   * @private\n   * @param {Object} options\n   */\n\n  fromTX(tx, entry, index) {\n    this.tx = tx;\n    if (entry) {\n      this.height = entry.height;\n      this.block = entry.hash;\n      this.time = entry.time;\n      this.index = index;\n    }\n    return this;\n  }\n\n  /**\n   * Instantiate TXMeta from options.\n   * @param {Object} options\n   * @returns {TXMeta}\n   */\n\n  static fromTX(tx, entry, index) {\n    return new this().fromTX(tx, entry, index);\n  }\n\n  /**\n   * Inspect the transaction.\n   * @returns {Object}\n   */\n\n  [inspectSymbol]() {\n    return this.format();\n  }\n\n  /**\n   * Inspect the transaction.\n   * @returns {Object}\n   */\n\n  format(view) {\n    const data = this.tx.format(view, null, this.index);\n    data.mtime = this.mtime;\n    data.height = this.height;\n    data.block = this.block ? util.revHex(this.block) : null;\n    data.time = this.time;\n    return data;\n  }\n\n  /**\n   * Convert transaction to JSON.\n   * @returns {Object}\n   */\n\n  toJSON() {\n    return this.getJSON();\n  }\n\n  /**\n   * Convert the transaction to an object suitable\n   * for JSON serialization.\n   * @param {Network} network\n   * @param {CoinView} view\n   * @returns {Object}\n   */\n\n  getJSON(network, view, chainHeight) {\n    const json = this.tx.getJSON(network, view, null, this.index);\n    json.mtime = this.mtime;\n    json.height = this.height;\n    json.block = this.block ? util.revHex(this.block) : null;\n    json.time = this.time;\n    json.confirmations = 0;\n\n    if (chainHeight != null && this.height !== -1)\n      json.confirmations = chainHeight - this.height + 1;\n\n    return json;\n  }\n\n  /**\n   * Inject properties from a json object.\n   * @private\n   * @param {Object} json\n   */\n\n  fromJSON(json) {\n    this.tx.fromJSON(json);\n\n    assert((json.mtime >>> 0) === json.mtime);\n    assert(Number.isSafeInteger(json.height));\n    assert(!json.block || typeof json.block === 'string');\n    assert((json.time >>> 0) === json.time);\n    assert(Number.isSafeInteger(json.index));\n\n    this.mtime = json.mtime;\n    this.height = json.height;\n    this.block = util.fromRev(json.block);\n    this.index = json.index;\n\n    return this;\n  }\n\n  /**\n   * Instantiate a transaction from a\n   * jsonified transaction object.\n   * @param {Object} json - The jsonified transaction object.\n   * @returns {TX}\n   */\n\n  static fromJSON(json) {\n    return new this().fromJSON(json);\n  }\n\n  /**\n   * Calculate serialization size.\n   * @returns {Number}\n   */\n\n  getSize() {\n    let size = 0;\n\n    size += this.tx.getSize();\n    size += 4;\n\n    if (this.block) {\n      size += 1;\n      size += 32;\n      size += 4 * 3;\n    } else {\n      size += 1;\n    }\n\n    return size;\n  }\n\n  /**\n   * Serialize a transaction to \"extended format\".\n   * This is the serialization format bcoin uses internally\n   * to store transactions in the database. The extended\n   * serialization includes the height, block hash, index,\n   * timestamp, and pending-since time.\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    const size = this.getSize();\n    const bw = bio.write(size);\n\n    this.tx.toWriter(bw);\n\n    bw.writeU32(this.mtime);\n\n    if (this.block) {\n      bw.writeU8(1);\n      bw.writeHash(this.block);\n      bw.writeU32(this.height);\n      bw.writeU32(this.time);\n      bw.writeU32(this.index);\n    } else {\n      bw.writeU8(0);\n    }\n\n    return bw.render();\n  }\n\n  /**\n   * Inject properties from \"extended\" serialization format.\n   * @private\n   * @param {Buffer} data\n   */\n\n  fromRaw(data) {\n    const br = bio.read(data);\n\n    this.tx.fromReader(br);\n\n    this.mtime = br.readU32();\n\n    if (br.readU8() === 1) {\n      this.block = br.readHash();\n      this.height = br.readU32();\n      this.time = br.readU32();\n      this.index = br.readU32();\n      if (this.index === 0x7fffffff)\n        this.index = -1;\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate a transaction from a Buffer\n   * in \"extended\" serialization format.\n   * @param {Buffer} data\n   * @param {String?} enc - One of `\"hex\"` or `null`.\n   * @returns {TX}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new this().fromRaw(data);\n  }\n\n  /**\n   * Test whether an object is an TXMeta.\n   * @param {Object} obj\n   * @returns {Boolean}\n   */\n\n  static isTXMeta(obj) {\n    return obj instanceof TXMeta;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = TXMeta;\n","/*!\n * primitives/index.js - bitcoin primitives for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * @module primitives\n */\n\nexports.AbstractBlock = require('./abstractblock');\nexports.Address = require('./address');\nexports.Block = require('./block');\nexports.Coin = require('./coin');\nexports.Headers = require('./headers');\nexports.Input = require('./input');\nexports.InvItem = require('./invitem');\nexports.KeyRing = require('./keyring');\nexports.MemBlock = require('./memblock');\nexports.MerkleBlock = require('./merkleblock');\nexports.MTX = require('./mtx');\nexports.Outpoint = require('./outpoint');\nexports.Output = require('./output');\nexports.TX = require('./tx');\nexports.TXMeta = require('./txmeta');\n","/*!\n * errors.js - error objects for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * @module protocol/errors\n */\n\nconst assert = require('bsert');\n\n/**\n * Verify Error\n * An error thrown during verification. Can be either\n * a mempool transaction validation error or a blockchain\n * block verification error. Ultimately used to send\n * `reject` packets to peers.\n * @extends Error\n * @param {Block|TX} msg\n * @param {String} code - Reject packet code.\n * @param {String} reason - Reject packet reason.\n * @param {Number} score - Ban score increase\n * (can be -1 for no reject packet).\n * @param {Boolean} malleated\n */\n\nclass VerifyError extends Error {\n  /**\n   * Create a verify error.\n   * @constructor\n   * @param {Block|TX} msg\n   * @param {String} code - Reject packet code.\n   * @param {String} reason - Reject packet reason.\n   * @param {Number} score - Ban score increase\n   * (can be -1 for no reject packet).\n   * @param {Boolean} malleated\n   */\n\n  constructor(msg, code, reason, score, malleated) {\n    super();\n\n    assert(typeof code === 'string');\n    assert(typeof reason === 'string');\n    assert(score >= 0);\n\n    this.type = 'VerifyError';\n    this.message = '';\n    this.code = code;\n    this.reason = reason;\n    this.score = score;\n    this.hash = msg.hash();\n    this.malleated = malleated || false;\n\n    this.message = `Verification failure: ${reason}`\n      + ` (code=${code} score=${score} hash=${msg.rhash()})`;\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(this, VerifyError);\n  }\n}\n\n/*\n * Expose\n */\n\nexports.VerifyError = VerifyError;\n","/*!\n * protocol/index.js - protocol constants for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * @module protocol\n */\n\nexports.consensus = require('./consensus');\nexports.errors = require('./errors');\nexports.Network = require('./network');\nexports.networks = require('./networks');\nexports.policy = require('./policy');\nexports.timedata = require('./timedata');\n","/*!\n * sigcache.js - signature cache for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst {BufferMap} = require('buffer-map');\nconst secp256k1 = require('../bcrypto/secp256k1');\n\n/**\n * Signature cache.\n * @alias module:script.SigCache\n * @property {Number} size\n * @property {Hash[]} keys\n * @property {Object} valid\n */\n\nclass SigCache {\n  /**\n   * Create a signature cache.\n   * @constructor\n   * @param {Number} [size=10000]\n   */\n\n  constructor(size) {\n    if (size == null)\n      size = 10000;\n\n    assert((size >>> 0) === size);\n\n    this.size = size;\n    this.keys = [];\n    this.valid = new BufferMap();\n  }\n\n  /**\n   * Resize the sigcache.\n   * @param {Number} size\n   */\n\n  resize(size) {\n    assert((size >>> 0) === size);\n\n    this.size = size;\n    this.keys.length = 0;\n    this.valid.clear();\n  }\n\n  /**\n   * Add item to the sigcache.\n   * Potentially evict a random member.\n   * @param {Hash} msg - Sig hash.\n   * @param {Buffer} sig\n   * @param {Buffer} key\n   */\n\n  add(msg, sig, key) {\n    if (this.size === 0)\n      return;\n\n    this.valid.set(msg, new SigCacheEntry(sig, key));\n\n    if (this.keys.length >= this.size) {\n      const i = Math.floor(Math.random() * this.keys.length);\n      const k = this.keys[i];\n      this.valid.delete(k);\n      this.keys[i] = msg;\n    } else {\n      this.keys.push(msg);\n    }\n  }\n\n  /**\n   * Test whether the sig exists.\n   * @param {Hash} msg - Sig hash.\n   * @param {Buffer} sig\n   * @param {Buffer} key\n   * @returns {Boolean}\n   */\n\n  has(msg, sig, key) {\n    const entry = this.valid.get(msg);\n\n    if (!entry)\n      return false;\n\n    return entry.equals(sig, key);\n  }\n\n  /**\n   * Verify a signature, testing\n   * it against the cache first.\n   * @param {Buffer} msg\n   * @param {Buffer} sig\n   * @param {Buffer} key\n   * @returns {Boolean}\n   */\n\n  verify(msg, sig, key) {\n    if (this.size === 0)\n      return secp256k1.verifyDER(msg, sig, key);\n\n    if (this.has(msg, sig, key))\n      return true;\n\n    const result = secp256k1.verifyDER(msg, sig, key);\n\n    if (!result)\n      return false;\n\n    this.add(msg, sig, key);\n\n    return true;\n  }\n\n  /**\n   * Verify a schnorr signature, testing\n   * it against the cache first.\n   * @param {Buffer} msg\n   * @param {Buffer} sig\n   * @param {Buffer} key\n   * @returns {Boolean}\n   */\n\n  verifySchnorr(msg, sig, key) {\n    if (this.size === 0)\n      return secp256k1.schnorrVerify(msg, sig, key);\n\n    if (this.has(msg, sig, key))\n      return true;\n\n    const result = secp256k1.schnorrVerify(msg, sig, key);\n\n    if (!result)\n      return false;\n\n    this.add(msg, sig, key);\n\n    return true;\n  }\n}\n\n/**\n * Signature Cache Entry\n * @ignore\n * @property {Buffer} sig\n * @property {Buffer} key\n */\n\nclass SigCacheEntry {\n  /**\n   * Create a cache entry.\n   * @constructor\n   * @param {Buffer} sig\n   * @param {Buffer} key\n   */\n\n  constructor(sig, key) {\n    this.sig = Buffer.from(sig);\n    this.key = Buffer.from(key);\n  }\n\n  /**\n   * Compare an entry to a sig and key.\n   * @param {Buffer} sig\n   * @param {Buffer} key\n   * @returns {Boolean}\n   */\n\n  equals(sig, key) {\n    return this.sig.equals(sig) && this.key.equals(key);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = SigCache;\n","/*!\n * script/index.js - bitcoin scripting for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * @module script\n */\n\nexports.common = require('./common');\nexports.Opcode = require('./opcode');\nexports.Script = require('./script');\nexports.ScriptError = require('./scripterror');\nexports.ScriptNum = require('./scriptnum');\nexports.sigcache = require('./sigcache');\nexports.Stack = require('./stack');\nexports.Metrics = require('./metrics');\nexports.SLP = require('./slp');\n","/*!\n * aes.js - aes128/192/256 for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on openssl/openssl:\n *   Based on code entered into the public domain by Vincent Rijmen.\n *   https://github.com/openssl/openssl/blob/master/crypto/aes/aes_core.c\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n *   http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf\n *   https://github.com/openssl/openssl/blob/master/crypto/aes/aes_core.c\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Constants\n */\n\nconst TE0 = new Uint32Array([\n  0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d,\n  0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554,\n  0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d,\n  0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a,\n  0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87,\n  0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b,\n  0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea,\n  0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b,\n  0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a,\n  0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f,\n  0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108,\n  0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f,\n  0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e,\n  0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5,\n  0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d,\n  0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f,\n  0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e,\n  0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb,\n  0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce,\n  0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497,\n  0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c,\n  0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed,\n  0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b,\n  0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a,\n  0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16,\n  0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594,\n  0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81,\n  0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3,\n  0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a,\n  0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504,\n  0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163,\n  0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d,\n  0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f,\n  0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739,\n  0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47,\n  0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395,\n  0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f,\n  0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883,\n  0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c,\n  0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76,\n  0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e,\n  0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4,\n  0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6,\n  0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b,\n  0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7,\n  0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0,\n  0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25,\n  0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818,\n  0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72,\n  0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651,\n  0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21,\n  0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85,\n  0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa,\n  0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12,\n  0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0,\n  0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9,\n  0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133,\n  0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7,\n  0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920,\n  0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a,\n  0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17,\n  0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8,\n  0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11,\n  0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a\n]);\n\nconst TE1 = new Uint32Array([\n  0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b,\n  0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5,\n  0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b,\n  0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676,\n  0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d,\n  0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0,\n  0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf,\n  0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0,\n  0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626,\n  0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc,\n  0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1,\n  0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515,\n  0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3,\n  0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a,\n  0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2,\n  0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575,\n  0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a,\n  0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0,\n  0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3,\n  0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484,\n  0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded,\n  0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b,\n  0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939,\n  0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf,\n  0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb,\n  0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585,\n  0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f,\n  0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8,\n  0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f,\n  0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5,\n  0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121,\n  0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2,\n  0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec,\n  0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717,\n  0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d,\n  0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373,\n  0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc,\n  0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888,\n  0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414,\n  0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb,\n  0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a,\n  0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c,\n  0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262,\n  0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979,\n  0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d,\n  0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9,\n  0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea,\n  0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808,\n  0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e,\n  0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6,\n  0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f,\n  0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a,\n  0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666,\n  0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e,\n  0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9,\n  0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e,\n  0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111,\n  0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494,\n  0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9,\n  0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf,\n  0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d,\n  0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868,\n  0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f,\n  0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616\n]);\n\nconst TE2 = new Uint32Array([\n  0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b,\n  0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5,\n  0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b,\n  0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76,\n  0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d,\n  0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0,\n  0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af,\n  0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0,\n  0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26,\n  0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc,\n  0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1,\n  0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15,\n  0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3,\n  0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a,\n  0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2,\n  0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75,\n  0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a,\n  0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0,\n  0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3,\n  0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384,\n  0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed,\n  0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b,\n  0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239,\n  0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf,\n  0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb,\n  0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185,\n  0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f,\n  0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8,\n  0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f,\n  0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5,\n  0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221,\n  0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2,\n  0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec,\n  0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17,\n  0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d,\n  0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673,\n  0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc,\n  0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88,\n  0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814,\n  0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb,\n  0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a,\n  0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c,\n  0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462,\n  0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279,\n  0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d,\n  0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9,\n  0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea,\n  0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008,\n  0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e,\n  0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6,\n  0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f,\n  0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a,\n  0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66,\n  0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e,\n  0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9,\n  0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e,\n  0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211,\n  0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394,\n  0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9,\n  0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df,\n  0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d,\n  0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068,\n  0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f,\n  0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16\n]);\n\nconst TE3 = new Uint32Array([\n  0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6,\n  0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491,\n  0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56,\n  0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec,\n  0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa,\n  0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb,\n  0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45,\n  0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b,\n  0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c,\n  0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83,\n  0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9,\n  0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a,\n  0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d,\n  0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f,\n  0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf,\n  0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea,\n  0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34,\n  0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b,\n  0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d,\n  0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713,\n  0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1,\n  0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6,\n  0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72,\n  0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85,\n  0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed,\n  0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411,\n  0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe,\n  0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b,\n  0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05,\n  0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1,\n  0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342,\n  0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf,\n  0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3,\n  0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e,\n  0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a,\n  0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6,\n  0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3,\n  0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b,\n  0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28,\n  0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad,\n  0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14,\n  0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8,\n  0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4,\n  0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2,\n  0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da,\n  0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049,\n  0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf,\n  0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810,\n  0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c,\n  0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197,\n  0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e,\n  0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f,\n  0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc,\n  0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c,\n  0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069,\n  0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927,\n  0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322,\n  0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733,\n  0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9,\n  0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5,\n  0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a,\n  0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0,\n  0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e,\n  0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c\n]);\n\nconst TD0 = new Uint32Array([\n  0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96,\n  0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393,\n  0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25,\n  0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f,\n  0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1,\n  0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6,\n  0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da,\n  0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844,\n  0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd,\n  0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4,\n  0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45,\n  0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94,\n  0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7,\n  0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a,\n  0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5,\n  0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c,\n  0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1,\n  0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a,\n  0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75,\n  0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051,\n  0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46,\n  0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff,\n  0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77,\n  0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb,\n  0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000,\n  0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e,\n  0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927,\n  0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a,\n  0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e,\n  0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16,\n  0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d,\n  0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8,\n  0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd,\n  0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34,\n  0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163,\n  0xd731dcca, 0x42638510, 0x13972240, 0x84c61120,\n  0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d,\n  0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0,\n  0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422,\n  0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef,\n  0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36,\n  0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4,\n  0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662,\n  0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5,\n  0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3,\n  0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b,\n  0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8,\n  0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6,\n  0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6,\n  0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0,\n  0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815,\n  0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f,\n  0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df,\n  0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f,\n  0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e,\n  0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713,\n  0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89,\n  0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c,\n  0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf,\n  0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86,\n  0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f,\n  0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541,\n  0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190,\n  0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742\n]);\n\nconst TD1 = new Uint32Array([\n  0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e,\n  0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303,\n  0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c,\n  0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3,\n  0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0,\n  0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9,\n  0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259,\n  0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8,\n  0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971,\n  0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a,\n  0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f,\n  0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b,\n  0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8,\n  0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab,\n  0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708,\n  0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682,\n  0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2,\n  0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe,\n  0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb,\n  0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10,\n  0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd,\n  0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015,\n  0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e,\n  0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee,\n  0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000,\n  0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72,\n  0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39,\n  0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e,\n  0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91,\n  0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a,\n  0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17,\n  0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9,\n  0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60,\n  0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e,\n  0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1,\n  0xcad731dc, 0x10426385, 0x40139722, 0x2084c611,\n  0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1,\n  0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3,\n  0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964,\n  0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390,\n  0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b,\n  0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf,\n  0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46,\n  0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af,\n  0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512,\n  0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb,\n  0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a,\n  0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8,\n  0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c,\n  0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266,\n  0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8,\n  0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6,\n  0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604,\n  0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551,\n  0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41,\n  0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647,\n  0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c,\n  0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1,\n  0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737,\n  0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db,\n  0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340,\n  0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95,\n  0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1,\n  0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857\n]);\n\nconst TD2 = new Uint32Array([\n  0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27,\n  0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3,\n  0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502,\n  0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562,\n  0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe,\n  0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3,\n  0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552,\n  0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9,\n  0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9,\n  0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce,\n  0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253,\n  0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908,\n  0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b,\n  0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655,\n  0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337,\n  0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16,\n  0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69,\n  0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6,\n  0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6,\n  0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e,\n  0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6,\n  0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050,\n  0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9,\n  0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8,\n  0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000,\n  0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a,\n  0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d,\n  0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436,\n  0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b,\n  0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12,\n  0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b,\n  0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e,\n  0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f,\n  0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb,\n  0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4,\n  0xdccad731, 0x85104263, 0x22401397, 0x112084c6,\n  0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729,\n  0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1,\n  0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9,\n  0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233,\n  0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4,\n  0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad,\n  0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e,\n  0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3,\n  0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25,\n  0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b,\n  0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f,\n  0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15,\n  0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0,\n  0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2,\n  0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7,\n  0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791,\n  0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496,\n  0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665,\n  0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b,\n  0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6,\n  0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13,\n  0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47,\n  0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7,\n  0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844,\n  0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3,\n  0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d,\n  0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456,\n  0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8\n]);\n\nconst TD3 = new Uint32Array([\n  0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a,\n  0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b,\n  0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5,\n  0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5,\n  0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d,\n  0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b,\n  0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95,\n  0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e,\n  0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27,\n  0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d,\n  0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562,\n  0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9,\n  0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752,\n  0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66,\n  0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3,\n  0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced,\n  0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e,\n  0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4,\n  0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4,\n  0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd,\n  0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d,\n  0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60,\n  0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767,\n  0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79,\n  0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000,\n  0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c,\n  0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736,\n  0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24,\n  0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b,\n  0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c,\n  0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12,\n  0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814,\n  0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3,\n  0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b,\n  0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8,\n  0x31dccad7, 0x63851042, 0x97224013, 0xc6112084,\n  0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7,\n  0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077,\n  0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247,\n  0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22,\n  0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698,\n  0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f,\n  0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254,\n  0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582,\n  0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf,\n  0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb,\n  0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883,\n  0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef,\n  0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629,\n  0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035,\n  0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533,\n  0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17,\n  0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4,\n  0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46,\n  0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb,\n  0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d,\n  0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb,\n  0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a,\n  0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73,\n  0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678,\n  0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2,\n  0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff,\n  0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064,\n  0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0\n]);\n\nconst TD4 = new Uint8Array([\n  0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38,\n  0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb,\n  0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,\n  0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,\n  0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d,\n  0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n  0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2,\n  0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25,\n  0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,\n  0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,\n  0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda,\n  0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n  0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a,\n  0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06,\n  0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,\n  0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b,\n  0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea,\n  0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n  0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85,\n  0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e,\n  0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,\n  0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,\n  0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20,\n  0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n  0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31,\n  0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,\n  0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,\n  0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef,\n  0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0,\n  0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n  0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26,\n  0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d\n]);\n\nconst RCON = new Uint32Array([\n  0x01000000, 0x02000000, 0x04000000, 0x08000000,\n  0x10000000, 0x20000000, 0x40000000, 0x80000000,\n  0x1b000000, 0x36000000\n]);\n\n/**\n * AES\n */\n\nclass AES {\n  constructor(bits = 256) {\n    assert((bits >>> 0) === bits);\n\n    this.bits = bits;\n    this.rounds = getRounds(bits);\n    this.key = null;\n    this.encKey = null;\n    this.decKey = null;\n  }\n\n  get blockSize() {\n    return 16;\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n\n    if (key.length !== (this.bits >>> 3))\n      throw new Error('Invalid key size.');\n\n    this.destroy();\n    this.key = Buffer.from(key);\n    this.encKey = null;\n    this.decKey = null;\n\n    return this;\n  }\n\n  createEncryptKey() {\n    if (!this.key)\n      throw new Error('Cipher is not initialized.');\n\n    const ukey = this.key;\n\n    if (ukey.length !== (this.bits >>> 3))\n      throw new Error('Invalid key size.');\n\n    const key = new Uint32Array(60);\n\n    key[0] = readU32(ukey, 0);\n    key[1] = readU32(ukey, 4);\n    key[2] = readU32(ukey, 8);\n    key[3] = readU32(ukey, 12);\n\n    let p = 0;\n    let i = 0;\n\n    if (this.bits === 128) {\n      for (;;) {\n        const tmp = key[p + 3];\n\n        key[p + 4] = key[p]\n          ^ (TE2[(tmp >>> 16) & 0xff] & 0xff000000)\n          ^ (TE3[(tmp >>>  8) & 0xff] & 0x00ff0000)\n          ^ (TE0[(tmp >>>  0) & 0xff] & 0x0000ff00)\n          ^ (TE1[(tmp >>> 24) & 0xff] & 0x000000ff)\n          ^ RCON[i];\n\n        key[p + 5] = key[p + 1] ^ key[p + 4];\n        key[p + 6] = key[p + 2] ^ key[p + 5];\n        key[p + 7] = key[p + 3] ^ key[p + 6];\n\n        i += 1;\n\n        if (i === 10)\n          break;\n\n        p += 4;\n      }\n\n      return key;\n    }\n\n    key[p + 4] = readU32(ukey, 16);\n    key[p + 5] = readU32(ukey, 20);\n\n    if (this.bits === 192) {\n      for (;;) {\n        const tmp = key[p + 5];\n\n        key[p + 6] = key[p]\n          ^ (TE2[(tmp >>> 16) & 0xff] & 0xff000000)\n          ^ (TE3[(tmp >>>  8) & 0xff] & 0x00ff0000)\n          ^ (TE0[(tmp >>>  0) & 0xff] & 0x0000ff00)\n          ^ (TE1[(tmp >>> 24) & 0xff] & 0x000000ff)\n          ^ RCON[i];\n\n        key[p + 7] = key[p + 1] ^ key[p + 6];\n        key[p + 8] = key[p + 2] ^ key[p + 7];\n        key[p + 9] = key[p + 3] ^ key[p + 8];\n\n        i += 1;\n\n        if (i === 8)\n          break;\n\n        key[p + 10] = key[p + 4] ^ key[p + 9];\n        key[p + 11] = key[p + 5] ^ key[p + 10];\n        p += 6;\n      }\n\n      return key;\n    }\n\n    key[p + 6] = readU32(ukey, 24);\n    key[p + 7] = readU32(ukey, 28);\n\n    if (this.bits === 256) {\n      for (;;) {\n        let tmp = key[p + 7];\n\n        key[p + 8] = key[p]\n          ^ (TE2[(tmp >>> 16) & 0xff] & 0xff000000)\n          ^ (TE3[(tmp >>>  8) & 0xff] & 0x00ff0000)\n          ^ (TE0[(tmp >>>  0) & 0xff] & 0x0000ff00)\n          ^ (TE1[(tmp >>> 24) & 0xff] & 0x000000ff)\n          ^ RCON[i];\n\n        key[p + 9] = key[p + 1] ^ key[p + 8];\n        key[p + 10] = key[p + 2] ^ key[p + 9];\n        key[p + 11] = key[p + 3] ^ key[p + 10];\n\n        i += 1;\n\n        if (i === 7)\n          break;\n\n        tmp = key[p + 11];\n\n        key[p + 12] = key[p + 4]\n          ^ (TE2[(tmp >>> 24) & 0xff] & 0xff000000)\n          ^ (TE3[(tmp >>> 16) & 0xff] & 0x00ff0000)\n          ^ (TE0[(tmp >>>  8) & 0xff] & 0x0000ff00)\n          ^ (TE1[(tmp >>>  0) & 0xff] & 0x000000ff);\n\n        key[p + 13] = key[p +  5] ^ key[p + 12];\n        key[p + 14] = key[p +  6] ^ key[p + 13];\n        key[p + 15] = key[p +  7] ^ key[p + 14];\n\n        p += 8;\n      }\n\n      return key;\n    }\n\n    throw new Error('Bad key size.');\n  }\n\n  createDecryptKey() {\n    // First, start with an encryption schedule.\n    const key = this.createEncryptKey();\n\n    let p = 0;\n\n    // Invert the order of the round keys.\n    for (let i = 0, j = 4 * this.rounds; i < j; i += 4, j -= 4) {\n      let tmp = key[p + i + 0];\n\n      key[p + i + 0] = key[p + j + 0];\n      key[p + j + 0] = tmp;\n\n      tmp = key[p + i + 1];\n      key[p + i + 1] = key[p + j + 1];\n      key[p + j + 1] = tmp;\n\n      tmp = key[p + i + 2];\n      key[p + i + 2] = key[p + j + 2];\n      key[p + j + 2] = tmp;\n\n      tmp = key[p + i + 3];\n      key[p + i + 3] = key[p + j + 3];\n      key[p + j + 3] = tmp;\n    }\n\n    // Apply the inverse MixColumn transform to\n    // all round keys but the first and the last.\n    for (let i = 1; i < this.rounds; i++) {\n      p += 4;\n\n      key[p + 0] = TD0[TE1[(key[p + 0] >>> 24) & 0xff] & 0xff]\n                 ^ TD1[TE1[(key[p + 0] >>> 16) & 0xff] & 0xff]\n                 ^ TD2[TE1[(key[p + 0] >>>  8) & 0xff] & 0xff]\n                 ^ TD3[TE1[(key[p + 0] >>>  0) & 0xff] & 0xff];\n\n      key[p + 1] = TD0[TE1[(key[p + 1] >>> 24) & 0xff] & 0xff]\n                 ^ TD1[TE1[(key[p + 1] >>> 16) & 0xff] & 0xff]\n                 ^ TD2[TE1[(key[p + 1] >>>  8) & 0xff] & 0xff]\n                 ^ TD3[TE1[(key[p + 1] >>>  0) & 0xff] & 0xff];\n\n      key[p + 2] = TD0[TE1[(key[p + 2] >>> 24) & 0xff] & 0xff]\n                 ^ TD1[TE1[(key[p + 2] >>> 16) & 0xff] & 0xff]\n                 ^ TD2[TE1[(key[p + 2] >>>  8) & 0xff] & 0xff]\n                 ^ TD3[TE1[(key[p + 2] >>>  0) & 0xff] & 0xff];\n\n      key[p + 3] = TD0[TE1[(key[p + 3] >>> 24) & 0xff] & 0xff]\n                 ^ TD1[TE1[(key[p + 3] >>> 16) & 0xff] & 0xff]\n                 ^ TD2[TE1[(key[p + 3] >>>  8) & 0xff] & 0xff]\n                 ^ TD3[TE1[(key[p + 3] >>>  0) & 0xff] & 0xff];\n    }\n\n    return key;\n  }\n\n  getEncryptKey() {\n    if (!this.encKey)\n      this.encKey = this.createEncryptKey();\n    return this.encKey;\n  }\n\n  getDecryptKey() {\n    if (!this.decKey)\n      this.decKey = this.createDecryptKey();\n    return this.decKey;\n  }\n\n  encrypt(output, opos, input, ipos) {\n    const key = this.getEncryptKey();\n\n    // Map byte array block to cipher\n    // state and add initial round key.\n    let s0 = readU32(input, ipos +  0) ^ key[0];\n    let s1 = readU32(input, ipos +  4) ^ key[1];\n    let s2 = readU32(input, ipos +  8) ^ key[2];\n    let s3 = readU32(input, ipos + 12) ^ key[3];\n\n    // Nr - 1 full rounds\n    let r = this.rounds >>> 1;\n    let p = 0;\n    let t0, t1, t2, t3;\n\n    for (;;) {\n      t0 = TE0[(s0 >>> 24) & 0xff]\n         ^ TE1[(s1 >>> 16) & 0xff]\n         ^ TE2[(s2 >>>  8) & 0xff]\n         ^ TE3[(s3 >>>  0) & 0xff]\n         ^ key[p + 4];\n\n      t1 = TE0[(s1 >>> 24) & 0xff]\n         ^ TE1[(s2 >>> 16) & 0xff]\n         ^ TE2[(s3 >>>  8) & 0xff]\n         ^ TE3[(s0 >>>  0) & 0xff]\n         ^ key[p + 5];\n\n      t2 = TE0[(s2 >>> 24) & 0xff]\n         ^ TE1[(s3 >>> 16) & 0xff]\n         ^ TE2[(s0 >>>  8) & 0xff]\n         ^ TE3[(s1 >>>  0) & 0xff]\n         ^ key[p + 6];\n\n      t3 = TE0[(s3 >>> 24) & 0xff]\n         ^ TE1[(s0 >>> 16) & 0xff]\n         ^ TE2[(s1 >>>  8) & 0xff]\n         ^ TE3[(s2 >>>  0) & 0xff]\n         ^ key[p + 7];\n\n      p += 8;\n      r -= 1;\n\n      if (r === 0)\n        break;\n\n      s0 = TE0[(t0 >>> 24) & 0xff]\n         ^ TE1[(t1 >>> 16) & 0xff]\n         ^ TE2[(t2 >>>  8) & 0xff]\n         ^ TE3[(t3 >>>  0) & 0xff]\n         ^ key[p + 0];\n\n      s1 = TE0[(t1 >>> 24) & 0xff]\n         ^ TE1[(t2 >>> 16) & 0xff]\n         ^ TE2[(t3 >>>  8) & 0xff]\n         ^ TE3[(t0 >>>  0) & 0xff]\n         ^ key[p + 1];\n\n      s2 = TE0[(t2 >>> 24) & 0xff]\n         ^ TE1[(t3 >>> 16) & 0xff]\n         ^ TE2[(t0 >>>  8) & 0xff]\n         ^ TE3[(t1 >>>  0) & 0xff]\n         ^ key[p + 2];\n\n      s3 = TE0[(t3 >>> 24) & 0xff]\n         ^ TE1[(t0 >>> 16) & 0xff]\n         ^ TE2[(t1 >>>  8) & 0xff]\n         ^ TE3[(t2 >>>  0) & 0xff]\n         ^ key[p + 3];\n    }\n\n    // Apply last round and map cipher\n    // state to byte array block.\n    s0 = (TE2[(t0 >>> 24) & 0xff] & 0xff000000)\n       ^ (TE3[(t1 >>> 16) & 0xff] & 0x00ff0000)\n       ^ (TE0[(t2 >>>  8) & 0xff] & 0x0000ff00)\n       ^ (TE1[(t3 >>>  0) & 0xff] & 0x000000ff)\n       ^ key[p + 0];\n\n    s1 = (TE2[(t1 >>> 24) & 0xff] & 0xff000000)\n       ^ (TE3[(t2 >>> 16) & 0xff] & 0x00ff0000)\n       ^ (TE0[(t3 >>>  8) & 0xff] & 0x0000ff00)\n       ^ (TE1[(t0 >>>  0) & 0xff] & 0x000000ff)\n       ^ key[p + 1];\n\n    s2 = (TE2[(t2 >>> 24) & 0xff] & 0xff000000)\n       ^ (TE3[(t3 >>> 16) & 0xff] & 0x00ff0000)\n       ^ (TE0[(t0 >>>  8) & 0xff] & 0x0000ff00)\n       ^ (TE1[(t1 >>>  0) & 0xff] & 0x000000ff)\n       ^ key[p + 2];\n\n    s3 = (TE2[(t3 >>> 24) & 0xff] & 0xff000000)\n       ^ (TE3[(t0 >>> 16) & 0xff] & 0x00ff0000)\n       ^ (TE0[(t1 >>>  8) & 0xff] & 0x0000ff00)\n       ^ (TE1[(t2 >>>  0) & 0xff] & 0x000000ff)\n       ^ key[p + 3];\n\n    writeU32(output, s0, opos + 0);\n    writeU32(output, s1, opos + 4);\n    writeU32(output, s2, opos + 8);\n    writeU32(output, s3, opos + 12);\n\n    return this;\n  }\n\n  decrypt(output, opos, input, ipos) {\n    const key = this.getDecryptKey();\n\n    // Map byte array block to cipher\n    // state and add initial round key.\n    let s0 = readU32(input, ipos +  0) ^ key[0];\n    let s1 = readU32(input, ipos +  4) ^ key[1];\n    let s2 = readU32(input, ipos +  8) ^ key[2];\n    let s3 = readU32(input, ipos + 12) ^ key[3];\n\n    // Nr - 1 full rounds\n    let r = this.rounds >>> 1;\n    let p = 0;\n    let t0, t1, t2, t3;\n\n    for (;;) {\n      t0 = TD0[(s0 >>> 24) & 0xff]\n         ^ TD1[(s3 >>> 16) & 0xff]\n         ^ TD2[(s2 >>>  8) & 0xff]\n         ^ TD3[(s1 >>>  0) & 0xff]\n         ^ key[p + 4];\n\n      t1 = TD0[(s1 >>> 24) & 0xff]\n         ^ TD1[(s0 >>> 16) & 0xff]\n         ^ TD2[(s3 >>>  8) & 0xff]\n         ^ TD3[(s2 >>>  0) & 0xff]\n         ^ key[p + 5];\n\n      t2 = TD0[(s2 >>> 24) & 0xff]\n         ^ TD1[(s1 >>> 16) & 0xff]\n         ^ TD2[(s0 >>>  8) & 0xff]\n         ^ TD3[(s3 >>>  0) & 0xff]\n         ^ key[p + 6];\n\n      t3 = TD0[(s3 >>> 24) & 0xff]\n         ^ TD1[(s2 >>> 16) & 0xff]\n         ^ TD2[(s1 >>>  8) & 0xff]\n         ^ TD3[(s0 >>>  0) & 0xff]\n         ^ key[p + 7];\n\n      p += 8;\n      r -= 1;\n\n      if (r === 0)\n        break;\n\n      s0 = TD0[(t0 >>> 24) & 0xff]\n         ^ TD1[(t3 >>> 16) & 0xff]\n         ^ TD2[(t2 >>>  8) & 0xff]\n         ^ TD3[(t1 >>>  0) & 0xff]\n         ^ key[p + 0];\n\n      s1 = TD0[(t1 >>> 24) & 0xff]\n         ^ TD1[(t0 >>> 16) & 0xff]\n         ^ TD2[(t3 >>>  8) & 0xff]\n         ^ TD3[(t2 >>>  0) & 0xff]\n         ^ key[p + 1];\n\n      s2 = TD0[(t2 >>> 24) & 0xff]\n         ^ TD1[(t1 >>> 16) & 0xff]\n         ^ TD2[(t0 >>>  8) & 0xff]\n         ^ TD3[(t3 >>>  0) & 0xff]\n         ^ key[p + 2];\n\n      s3 = TD0[(t3 >>> 24) & 0xff]\n         ^ TD1[(t2 >>> 16) & 0xff]\n         ^ TD2[(t1 >>>  8) & 0xff]\n         ^ TD3[(t0 >>>  0) & 0xff]\n         ^ key[p + 3];\n    }\n\n    // Apply last round and map cipher\n    // state to byte array block.\n    s0 = (TD4[(t0 >>> 24) & 0xff] << 24)\n       ^ (TD4[(t3 >>> 16) & 0xff] << 16)\n       ^ (TD4[(t2 >>>  8) & 0xff] <<  8)\n       ^ (TD4[(t1 >>>  0) & 0xff] <<  0)\n       ^ key[p + 0];\n\n    s1 = (TD4[(t1 >>> 24) & 0xff] << 24)\n       ^ (TD4[(t0 >>> 16) & 0xff] << 16)\n       ^ (TD4[(t3 >>>  8) & 0xff] <<  8)\n       ^ (TD4[(t2 >>>  0) & 0xff] <<  0)\n       ^ key[p + 1];\n\n    s2 = (TD4[(t2 >>> 24) & 0xff] << 24)\n       ^ (TD4[(t1 >>> 16) & 0xff] << 16)\n       ^ (TD4[(t0 >>>  8) & 0xff] <<  8)\n       ^ (TD4[(t3 >>>  0) & 0xff] <<  0)\n       ^ key[p + 2];\n\n    s3 = (TD4[(t3 >>> 24) & 0xff] << 24)\n       ^ (TD4[(t2 >>> 16) & 0xff] << 16)\n       ^ (TD4[(t1 >>>  8) & 0xff] <<  8)\n       ^ (TD4[(t0 >>>  0) & 0xff] <<  0)\n       ^ key[p + 3];\n\n    writeU32(output, s0, opos + 0);\n    writeU32(output, s1, opos + 4);\n    writeU32(output, s2, opos + 8);\n    writeU32(output, s3, opos + 12);\n\n    return this;\n  }\n\n  destroy() {\n    if (this.key) {\n      for (let i = 0; i < this.key.length; i++)\n        this.key[i] = 0;\n    }\n\n    if (this.encKey) {\n      for (let i = 0; i < 60; i++)\n        this.encKey[i] = 0;\n    }\n\n    if (this.decKey) {\n      for (let i = 0; i < 60; i++)\n        this.decKey[i] = 0;\n    }\n\n    this.key = null;\n    this.encKey = null;\n    this.decKey = null;\n\n    return this;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction getRounds(bits) {\n  switch (bits) {\n    case 128:\n      return 10;\n    case 192:\n      return 12;\n    case 256:\n      return 14;\n    default:\n      throw new Error('Bad key size.');\n  }\n}\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off]);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num >>> 24;\n  dst[off++] = num >>> 16;\n  dst[off++] = num >>> 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = AES;","/*!\n * ghash.js - ghash for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Galois/Counter_Mode\n *   https://dx.doi.org/10.6028/NIST.SP.800-38D\n *   https://github.com/golang/go/blob/master/src/crypto/cipher/gcm.go\n *   https://github.com/golang/go/blob/master/src/crypto/cipher/gcm_test.go\n *   https://github.com/DaGenix/rust-crypto/blob/master/src/ghash.rs\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Constants\n */\n\nconst PADDING = Buffer.alloc(16, 0x00);\nconst FINALIZED = -1;\n\nconst REDUCTION = new Uint16Array([\n  0x0000, 0x1c20, 0x3840, 0x2460,\n  0x7080, 0x6ca0, 0x48c0, 0x54e0,\n  0xe100, 0xfd20, 0xd940, 0xc560,\n  0x9180, 0x8da0, 0xa9c0, 0xb5e0\n]);\n\n/**\n * GHASH\n */\n\nclass GHASH {\n  constructor() {\n    this.state = new Uint32Array(4);\n    this.block = Buffer.alloc(16);\n    this.size = FINALIZED;\n    this.adLen = 0;\n    this.ctLen = 0;\n    this.table = new Array(16);\n\n    for (let i = 0; i < 16; i++)\n      this.table[i] = new Uint32Array(4);\n  }\n\n  init(key) {\n    assert(Buffer.isBuffer(key));\n    assert(key.length === 16);\n\n    for (let i = 0; i < 4; i++)\n      this.state[i] = 0;\n\n    this.size = 0;\n    this.adLen = 0;\n    this.ctLen = 0;\n\n    for (let i = 0; i < 16; i++) {\n      for (let j = 0; j < 4; j++)\n        this.table[i][j] = 0;\n    }\n\n    const x = new Uint32Array(4);\n\n    x[1] = readU32(key, 0);\n    x[0] = readU32(key, 4);\n    x[3] = readU32(key, 8);\n    x[2] = readU32(key, 12);\n\n    this.table[reverse(1)] = x;\n\n    for (let i = 2; i < 16; i += 2) {\n      this.table[reverse(i)] = this.double(this.table[reverse(i >>> 1)]);\n      this.table[reverse(i + 1)] = this.add(this.table[reverse(i)], x);\n    }\n\n    return this;\n  }\n\n  absorb(data) {\n    this._absorb(data, data.length);\n    return this;\n  }\n\n  _absorb(data, len) {\n    assert(this.size !== FINALIZED, 'Context is not initialized.');\n\n    let pos = this.size & 15;\n    let off = 0;\n\n    this.size += len;\n\n    if (pos > 0) {\n      let want = 16 - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < 16)\n        return;\n\n      this.transform(this.block, 0);\n    }\n\n    while (len >= 16) {\n      this.transform(data, off);\n      off += 16;\n      len -= 16;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n  }\n\n  transform(block, off) {\n    this.state[1] ^= readU32(block, off + 0);\n    this.state[0] ^= readU32(block, off + 4);\n    this.state[3] ^= readU32(block, off + 8);\n    this.state[2] ^= readU32(block, off + 12);\n    this.mul(this.state);\n  }\n\n  pad() {\n    const pos = this.size & 15;\n\n    if (pos !== 0)\n      this._absorb(PADDING, 16 - pos);\n  }\n\n  aad(data) {\n    assert(Buffer.isBuffer(data));\n    assert(this.ctLen === 0);\n\n    this.adLen += data.length;\n\n    return this.absorb(data);\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (data.length === 0)\n      return this;\n\n    if (this.ctLen === 0)\n      this.pad();\n\n    this.ctLen += data.length;\n\n    return this.absorb(data);\n  }\n\n  final() {\n    const out = Buffer.alloc(16);\n\n    this.pad();\n\n    const adLen = this.adLen * 8;\n    const ctLen = this.ctLen * 8;\n\n    this.state[1] ^= hi32(adLen);\n    this.state[0] ^= lo32(adLen);\n    this.state[3] ^= hi32(ctLen);\n    this.state[2] ^= lo32(ctLen);\n\n    this.mul(this.state);\n\n    writeU32(out, this.state[1], 0);\n    writeU32(out, this.state[0], 4);\n    writeU32(out, this.state[3], 8);\n    writeU32(out, this.state[2], 12);\n\n    for (let i = 0; i < 4; i++)\n      this.state[i] = 0;\n\n    for (let i = 0; i < 16; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n    this.adLen = 0;\n    this.ctLen = 0;\n\n    for (let i = 0; i < 16; i++) {\n      for (let j = 0; j < 4; j++)\n        this.table[i][j] = 0;\n    }\n\n    return out;\n  }\n\n  destroy() {\n    for (let i = 0; i < 4; i++)\n      this.state[i] = 0;\n\n    for (let i = 0; i < 16; i++)\n      this.block[i] = 0;\n\n    this.size = FINALIZED;\n    this.adLen = 0;\n    this.ctLen = 0;\n\n    for (let i = 0; i < 16; i++) {\n      for (let j = 0; j < 4; j++)\n        this.table[i][j] = 0;\n    }\n  }\n\n  add(x, y) {\n    assert(x instanceof Uint32Array);\n    assert(x.length === 4);\n    assert(y instanceof Uint32Array);\n    assert(y.length === 4);\n\n    const z = new Uint32Array(4);\n\n    z[0] = x[0] ^ y[0];\n    z[1] = x[1] ^ y[1];\n    z[2] = x[2] ^ y[2];\n    z[3] = x[3] ^ y[3];\n\n    return z;\n  }\n\n  double(x) {\n    assert(x instanceof Uint32Array);\n    assert(x.length === 4);\n\n    const d = new Uint32Array(4);\n    const msb = (x[2] & 1) === 1;\n\n    let v;\n\n    d[3] = x[3];\n    d[2] = x[2];\n    v = d[3] & 1;\n    d[3] >>>= 1;\n    d[2] >>>= 1;\n    d[2] |= v << 31;\n\n    d[3] |= (x[0] & 1) << 31;\n\n    d[1] = x[1];\n    d[0] = x[0];\n    v = d[1] & 1;\n    d[1] >>>= 1;\n    d[0] >>>= 1;\n    d[0] |= v << 31;\n\n    if (msb) {\n      d[1] ^= 0xe1000000;\n      d[0] ^= 0x00000000;\n    }\n\n    return d;\n  }\n\n  mul(y) {\n    assert(y instanceof Uint32Array);\n    assert(y.length === 4);\n\n    const z = new Uint32Array(4);\n    const w = new Uint32Array(2);\n\n    let v, t;\n\n    for (let i = 0; i < 2; i++) {\n      w[0] = y[2];\n      w[1] = y[3];\n\n      if (i === 1) {\n        w[0] = y[0];\n        w[1] = y[1];\n      }\n\n      for (let j = 0; j < 64; j += 4) {\n        const msw = z[2] & 0x0f;\n\n        v = z[3] & 0x0f;\n        z[3] >>>= 4;\n        z[2] >>>= 4;\n        z[2] |= v << 28;\n\n        z[3] |= z[0] << 28;\n\n        v = z[1] & 0x0f;\n        z[1] >>>= 4;\n        z[0] >>>= 4;\n        z[0] |= v << 28;\n\n        z[1] ^= REDUCTION[msw] << 16;\n\n        t = this.table[w[0] & 0x0f];\n\n        z[0] ^= t[0];\n        z[1] ^= t[1];\n\n        z[2] ^= t[2];\n        z[3] ^= t[3];\n\n        v = w[1] & 0x0f;\n        w[1] >>>= 4;\n        w[0] >>>= 4;\n        w[0] |= v << 28;\n      }\n    }\n\n    y[0] = z[0];\n    y[1] = z[1];\n    y[2] = z[2];\n    y[3] = z[3];\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction hi32(num) {\n  return (num * (1 / 0x100000000)) >>> 0;\n}\n\nfunction lo32(num) {\n  return num >>> 0;\n}\n\nfunction reverse(i) {\n  i = ((i << 2) & 0x0c) | ((i >>> 2) & 0x03);\n  i = ((i << 1) & 0x0a) | ((i >>> 1) & 0x05);\n  return i;\n}\n\nfunction readU32(data, off) {\n  return (data[off++] * 0x1000000\n        + data[off++] * 0x10000\n        + data[off++] * 0x100\n        + data[off++]);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num >>> 24;\n  dst[off++] = num >>> 16;\n  dst[off++] = num >>> 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = GHASH;","/*!\n * modes.js - cipher modes for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst GHASH = require('./ghash');\n\n/*\n * Constants\n */\n\nconst EMPTY = Buffer.alloc(0);\n\n// Shifted by four.\nconst polyTable = new Uint32Array([\n  0x00001b, // 8\n  0x000087, // 16\n  0x000425, // 32\n  0x000000,\n  0x000125, // 64\n  0x000000,\n  0x000000,\n  0x000000,\n  0x080043  // 128\n]);\n\n/*\n * Mode\n */\n\nclass Mode {\n  constructor(ctx) {\n    assert(ctx && typeof ctx.encrypt === 'function');\n    assert(typeof ctx.blockSize === 'number');\n\n    this.ctx = ctx;\n  }\n\n  get blockSize() {\n    return this.ctx.blockSize;\n  }\n\n  init(key, iv) {\n    throw new Error('Not implemented.');\n  }\n\n  update(data) {\n    throw new Error('Not implemented.');\n  }\n\n  crypt(output, input) {\n    throw new Error('Not implemented.');\n  }\n\n  final() {\n    throw new Error('Not implemented.');\n  }\n\n  destroy() {\n    throw new Error('Not implemented.');\n  }\n\n  setAutoPadding(padding) {\n    assert(typeof padding === 'boolean');\n\n    this._setAutoPadding(padding);\n\n    return this;\n  }\n\n  setAAD(data) {\n    assert(Buffer.isBuffer(data));\n    this._setAAD(data);\n    return this;\n  }\n\n  setCCM(msgLen, tagLen, aad) {\n    assert((msgLen >>> 0) === msgLen);\n    assert((tagLen >>> 0) === tagLen);\n    assert(aad == null || Buffer.isBuffer(aad));\n\n    this._setCCM(msgLen, tagLen, aad);\n\n    return this;\n  }\n\n  getAuthTag() {\n    return this._getAuthTag();\n  }\n\n  setAuthTag(tag) {\n    assert(Buffer.isBuffer(tag));\n    this._setAuthTag(tag);\n    return this;\n  }\n\n  _setAutoPadding(padding) {\n    throw new Error('Not available.');\n  }\n\n  _setAAD(data) {\n    throw new Error('Cipher is not authenticated.');\n  }\n\n  _setCCM(msgLen, tagLen, aad) {\n    throw new Error('Not available.');\n  }\n\n  _getAuthTag() {\n    throw new Error('Cipher is not authenticated.');\n  }\n\n  _setAuthTag(tag) {\n    throw new Error('Cipher is not authenticated.');\n  }\n}\n\n/**\n * Block Mode\n */\n\nclass Block extends Mode {\n  constructor(ctx, unpad) {\n    super(ctx);\n\n    this.padding = true;\n    this.unpad = unpad;\n    this.block = Buffer.alloc(this.blockSize);\n    this.blockPos = -1;\n    this.last = null;\n    this.lastSize = 0;\n\n    if (unpad)\n      this.last = Buffer.alloc(this.blockSize);\n  }\n\n  init(key, iv) {\n    if (iv == null)\n      iv = EMPTY;\n\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(iv));\n\n    this.ctx.init(key);\n\n    this.blockPos = 0;\n    this.lastSize = 0;\n\n    this._init(key, iv);\n\n    return this;\n  }\n\n  _updateSize(ilen) {\n    if (this.blockPos + ilen < this.blockSize)\n      return 0;\n\n    let olen = 0;\n\n    if (this.unpad)\n      olen += this.lastSize;\n\n    if (this.blockPos > 0) {\n      ilen -= this.blockSize - this.blockPos;\n      olen += this.blockSize;\n    }\n\n    if (ilen >= this.blockSize)\n      olen += ilen - (ilen % this.blockSize);\n\n    assert(olen >= this.blockSize);\n\n    return olen;\n  }\n\n  update(input) {\n    assert(Buffer.isBuffer(input));\n\n    if (this.blockPos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    const olen = this._updateSize(input.length);\n    const output = Buffer.alloc(olen);\n\n    if (this.blockPos + input.length < this.blockSize) {\n      this.blockPos += input.copy(this.block, this.blockPos, 0, input.length);\n      return output;\n    }\n\n    let ilen = input.length;\n    let ipos = 0;\n    let opos = 0;\n\n    if (this.unpad)\n      opos += this.last.copy(output, opos, 0, this.lastSize);\n\n    if (this.blockPos > 0) {\n      const want = this.blockSize - this.blockPos;\n\n      ipos += input.copy(this.block, this.blockPos, ipos, ipos + want);\n      ilen -= want;\n\n      this._update(output, opos, this.block, 0);\n\n      opos += this.blockSize;\n\n      this.blockPos = 0;\n    }\n\n    while (ilen >= this.blockSize) {\n      this._update(output, opos, input, ipos);\n\n      ipos += this.blockSize;\n      ilen -= this.blockSize;\n      opos += this.blockSize;\n    }\n\n    if (ilen > 0)\n      this.blockPos = input.copy(this.block, 0, ipos, ipos + ilen);\n\n    assert(opos === olen);\n\n    if (this.unpad) {\n      this.lastSize = output.copy(this.last, 0, olen - this.blockSize, olen);\n      return output.slice(0, olen - this.blockSize);\n    }\n\n    return output;\n  }\n\n  crypt(output, input) {\n    assert(Buffer.isBuffer(output));\n    assert(Buffer.isBuffer(input));\n    assert(output.length === input.length);\n\n    if (this.blockPos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    if (this.unpad || this.blockPos !== 0)\n      throw new Error('Cannot crypt while buffering.');\n\n    if ((input.length % this.blockSize) !== 0)\n      throw new Error('Input must be a multiple of the block size.');\n\n    const size = this.blockSize;\n\n    let len = input.length;\n    let pos = 0;\n\n    while (len > 0) {\n      this._update(output, pos, input, pos);\n      pos += size;\n      len -= size;\n    }\n\n    return output;\n  }\n\n  final() {\n    if (this.blockPos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    try {\n      return this._final();\n    } finally {\n      this.destroy();\n    }\n  }\n\n  destroy() {\n    this.ctx.destroy();\n\n    this.blockPos = -1;\n    this.lastSize = 0;\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.block[i] = 0;\n\n    if (this.unpad) {\n      for (let i = 0; i < this.blockSize; i++)\n        this.last[i] = 0;\n    }\n\n    this._destroy();\n\n    return this;\n  }\n\n  _init(key, iv) {\n    throw new Error('Not implemented.');\n  }\n\n  _update(output, opos, input, ipos) {\n    throw new Error('Not implemented.');\n  }\n\n  _final() {\n    throw new Error('Not implemented.');\n  }\n\n  _destroy() {\n    throw new Error('Not implemented.');\n  }\n}\n\n/*\n * Stream Mode\n */\n\nclass Stream extends Mode {\n  constructor(ctx) {\n    super(ctx);\n    this.pos = -1;\n  }\n\n  init(key, iv) {\n    if (iv == null)\n      iv = EMPTY;\n\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(iv));\n\n    this.ctx.init(key);\n\n    this.pos = 0;\n\n    this._init(key, iv);\n\n    return this;\n  }\n\n  update(input) {\n    assert(Buffer.isBuffer(input));\n\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    const output = Buffer.alloc(input.length);\n\n    this._crypt(output, input);\n\n    return output;\n  }\n\n  crypt(output, input) {\n    assert(Buffer.isBuffer(output));\n    assert(Buffer.isBuffer(input));\n    assert(output.length === input.length);\n\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    this._crypt(output, input);\n\n    return output;\n  }\n\n  final() {\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    try {\n      return this._final();\n    } finally {\n      this.destroy();\n    }\n  }\n\n  destroy() {\n    this.ctx.destroy();\n\n    this.pos = -1;\n\n    this._destroy();\n\n    return this;\n  }\n\n  _init(key, iv) {\n    throw new Error('Not implemented.');\n  }\n\n  _crypt(output, input) {\n    throw new Error('Not implemented.');\n  }\n\n  _final() {\n    throw new Error('Not implemented.');\n  }\n\n  _destroy() {\n    throw new Error('Not implemented.');\n  }\n}\n\n/**\n * Raw Cipher\n */\n\nclass RawCipher extends Block {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    this.ctx.encrypt(output, opos, input, ipos);\n  }\n\n  _final() {\n    if (this.blockPos !== 0)\n      throw new Error('Bad encrypt (trailing bytes).');\n\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    return;\n  }\n}\n\n/**\n * Raw Decipher\n */\n\nclass RawDecipher extends Block {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    this.ctx.decrypt(output, opos, input, ipos);\n  }\n\n  _final() {\n    if (this.blockPos !== 0)\n      throw new Error('Bad decrypt (trailing bytes).');\n\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    return;\n  }\n}\n\n/**\n * PKCS#7 Cipher\n */\n\nclass PKCS7Cipher extends Block {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n\n  _final() {\n    if (!this.padding) {\n      if (this.blockPos !== 0)\n        throw new Error('Bad encrypt (trailing bytes).');\n\n      return Buffer.alloc(0);\n    }\n\n    const left = this.blockSize - this.blockPos;\n    const block = Buffer.from(this.block);\n\n    for (let i = this.blockPos; i < this.blockSize; i++)\n      block[i] = left;\n\n    this._update(block, 0, block, 0);\n\n    return block;\n  }\n\n  _setAutoPadding(padding) {\n    this.padding = padding;\n  }\n}\n\n/**\n * PKCS#7 Decipher\n */\n\nclass PKCS7Decipher extends Block {\n  constructor(ctx) {\n    super(ctx, true);\n  }\n\n  _final() {\n    if (this.blockPos !== 0)\n      throw new Error('Bad decrypt (trailing bytes).');\n\n    if (!this.padding)\n      return Buffer.alloc(0);\n\n    if (this.lastSize === 0)\n      throw new Error('Bad decrypt (no data).');\n\n    assert(this.lastSize === this.last.length);\n    assert(this.lastSize === this.blockSize);\n\n    const block = Buffer.from(this.last);\n\n    let left = block[block.length - 1];\n    let res = 1;\n\n    // left != 0\n    res &= ((left - 1) >>> 31) ^ 1;\n\n    // left <= block_size\n    res &= (left - this.blockSize - 1) >>> 31;\n\n    // left = 0 if left == 0 or left > block_size\n    left &= -res;\n\n    // Verify padding in constant time.\n    const end = this.blockSize - left;\n\n    for (let i = 0; i < this.blockSize; i++) {\n      const ch = block[i];\n\n      // i < end or ch == left\n      res &= ((i - end) >>> 31) | (((ch ^ left) - 1) >>> 31);\n    }\n\n    if (!res)\n      throw new Error('Bad decrypt (padding).');\n\n    return block.slice(0, end);\n  }\n\n  _setAutoPadding(padding) {\n    if (this.lastSize !== 0 || this.blockPos !== 0)\n      throw new Error('Cannot set auto padding.');\n\n    this.padding = padding;\n    this.unpad = padding;\n  }\n}\n\n/**\n * ECB Cipher\n */\n\nclass ECBCipher extends PKCS7Cipher {\n  constructor(ctx) {\n    super(ctx);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    this.ctx.encrypt(output, opos, input, ipos);\n  }\n\n  _destroy() {\n    return;\n  }\n}\n\n/**\n * ECB Decipher\n */\n\nclass ECBDecipher extends PKCS7Decipher {\n  constructor(ctx) {\n    super(ctx);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    this.ctx.decrypt(output, opos, input, ipos);\n  }\n\n  _destroy() {\n    return;\n  }\n}\n\n/**\n * CBC Cipher\n */\n\nclass CBCCipher extends PKCS7Cipher {\n  constructor(ctx) {\n    super(ctx);\n\n    this.prev = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === this.blockSize);\n    iv.copy(this.prev, 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    for (let i = 0; i < this.blockSize; i++)\n      this.prev[i] ^= input[ipos + i];\n\n    this.ctx.encrypt(output, opos, this.prev, 0);\n\n    output.copy(this.prev, 0, opos, opos + this.blockSize);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++)\n      this.prev[i] = 0;\n  }\n}\n\n/**\n * CBC Decipher\n */\n\nclass CBCDecipher extends PKCS7Decipher {\n  constructor(ctx) {\n    super(ctx);\n\n    this.prev = Buffer.alloc(this.blockSize);\n    this.tmp = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === this.blockSize);\n    iv.copy(this.prev, 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    if (overlap(output, opos, input, ipos)) {\n      this.prev.copy(this.tmp, 0);\n\n      input.copy(this.prev, 0, ipos, ipos + this.blockSize);\n\n      this.ctx.decrypt(output, opos, input, ipos);\n\n      for (let i = 0; i < this.blockSize; i++)\n        output[opos + i] ^= this.tmp[i];\n    } else {\n      this.ctx.decrypt(output, opos, input, ipos);\n\n      for (let i = 0; i < this.blockSize; i++)\n        output[opos + i] ^= this.prev[i];\n\n      input.copy(this.prev, 0, ipos, ipos + this.blockSize);\n    }\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++) {\n      this.prev[i] = 0;\n      this.tmp[i] = 0;\n    }\n  }\n}\n\n/**\n * CTS Cipher\n */\n\nclass CTSCipher extends Block {\n  constructor(ctx) {\n    super(ctx, true);\n\n    this.prev = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === this.blockSize);\n    iv.copy(this.prev, 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    for (let i = 0; i < this.blockSize; i++)\n      this.prev[i] ^= input[ipos + i];\n\n    this.ctx.encrypt(output, opos, this.prev, 0);\n\n    output.copy(this.prev, 0, opos, opos + this.blockSize);\n  }\n\n  _final() {\n    if (!this.padding) {\n      if (this.blockPos !== 0)\n        throw new Error('Bad encrypt (trailing bytes).');\n\n      return Buffer.alloc(0);\n    }\n\n    if (this.lastSize === 0)\n      throw new Error('Bad encrypt (no data).');\n\n    for (let i = 0; i < this.blockPos; i++)\n      this.prev[i] ^= this.block[i];\n\n    this.ctx.encrypt(this.prev, 0, this.prev, 0);\n\n    const last = this.last.slice(0, this.blockPos);\n\n    return Buffer.concat([this.prev, last]);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++)\n      this.prev[i] = 0;\n  }\n\n  _setAutoPadding(padding) {\n    if (this.lastSize !== 0 || this.blockPos !== 0)\n      throw new Error('Cannot set auto padding.');\n\n    this.padding = padding;\n    this.unpad = padding;\n  }\n}\n\n/**\n * CTS Decipher\n */\n\nclass CTSDecipher extends Block {\n  constructor(ctx) {\n    super(ctx, true);\n\n    this.prev = Buffer.alloc(this.blockSize);\n    this.tmp = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === this.blockSize);\n    iv.copy(this.prev, 0);\n  }\n\n  _update(output, opos, input, ipos) {\n    if (overlap(output, opos, input, ipos)) {\n      this.prev.copy(this.tmp, 0);\n\n      input.copy(this.prev, 0, ipos, ipos + this.blockSize);\n\n      this.ctx.decrypt(output, opos, input, ipos);\n\n      for (let i = 0; i < this.blockSize; i++)\n        output[opos + i] ^= this.tmp[i];\n    } else {\n      this.ctx.decrypt(output, opos, input, ipos);\n\n      for (let i = 0; i < this.blockSize; i++)\n        output[opos + i] ^= this.prev[i];\n\n      input.copy(this.prev, 0, ipos, ipos + this.blockSize);\n    }\n  }\n\n  _final() {\n    if (!this.padding) {\n      if (this.blockPos !== 0)\n        throw new Error('Bad decrypt (trailing bytes).');\n\n      return Buffer.alloc(0);\n    }\n\n    if (this.lastSize === 0)\n      throw new Error('Bad decrypt (no data).');\n\n    const tmp = Buffer.alloc(this.blockSize);\n\n    this.ctx.decrypt(this.prev, 0, this.prev, 0);\n\n    // Recreate the previous (x2) ciphertext (`this.tmp`),\n    // which is normally only available on overlap.\n    for (let i = 0; i < this.blockSize; i++)\n      tmp[i] = this.last[i] ^ this.prev[i];\n\n    for (let i = 0; i < this.blockPos; i++) {\n      this.last[i] = this.block[i];\n      this.block[i] ^= this.prev[i];\n    }\n\n    for (let i = this.blockPos; i < this.blockSize; i++)\n      this.last[i] = this.prev[i];\n\n    this.ctx.decrypt(this.last, 0, this.last, 0);\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= tmp[i];\n\n    const block = this.block.slice(0, this.blockPos);\n\n    return Buffer.concat([this.last, block]);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++) {\n      this.prev[i] = 0;\n      this.tmp[i] = 0;\n    }\n  }\n\n  _setAutoPadding(padding) {\n    if (this.lastSize !== 0 || this.blockPos !== 0)\n      throw new Error('Cannot set auto padding.');\n\n    this.padding = padding;\n    this.unpad = padding;\n  }\n}\n\n/**\n * XTS\n */\n\nclass XTS extends Block {\n  constructor(ctx, encrypt) {\n    super(ctx, true);\n\n    this.encrypt = encrypt;\n    this.poly = polyTable[this.blockSize >>> 4];\n    this.tweak = Buffer.alloc(this.blockSize);\n    this.prev = Buffer.alloc(this.blockSize);\n  }\n\n  init(key, iv) {\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(iv));\n    assert(key.length > 0 && (key.length & 1) === 0);\n    assert(iv.length === this.blockSize);\n\n    const size = key.length >>> 1;\n    const k1 = key.slice(0, size);\n    const k2 = key.slice(size);\n\n    if (safeEqual(k1, k2, size))\n      throw new Error('XTS keys are equal.');\n\n    this.ctx.init(k2);\n    this.ctx.encrypt(this.tweak, 0, iv, 0);\n\n    this.ctx.init(k1);\n\n    this.blockPos = 0;\n    this.lastSize = 0;\n\n    return this;\n  }\n\n  _shift() {\n    let cy = 0;\n\n    if (!this.encrypt)\n      this.tweak.copy(this.prev, 0);\n\n    for (let i = 0; i < this.blockSize; i++) {\n      const c = this.tweak[i] >> 7;\n\n      this.tweak[i] <<= 1;\n      this.tweak[i] |= cy;\n\n      cy = c;\n    }\n\n    cy = -cy & 0xff;\n\n    this.tweak[2] ^= (this.poly >> 16) & cy;\n    this.tweak[1] ^= (this.poly >>  8) & cy;\n    this.tweak[0] ^= (this.poly >>  0) & cy;\n  }\n\n  _update(output, opos, input, ipos) {\n    for (let i = 0; i < this.blockSize; i++)\n      output[opos + i] = input[ipos + i] ^ this.tweak[i];\n\n    if (this.encrypt)\n      this.ctx.encrypt(output, opos, output, opos);\n    else\n      this.ctx.decrypt(output, opos, output, opos);\n\n    for (let i = 0; i < this.blockSize; i++)\n      output[opos + i] ^= this.tweak[i];\n\n    this._shift();\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++) {\n      this.tweak[i] = 0;\n      this.prev[i] = 0;\n    }\n  }\n\n  _setAutoPadding(padding) {\n    if (this.lastSize !== 0 || this.blockPos !== 0)\n      throw new Error('Cannot set auto padding.');\n\n    this.padding = padding;\n    this.unpad = padding;\n  }\n}\n\n/*\n * XTS Cipher\n */\n\nclass XTSCipher extends XTS {\n  constructor(ctx) {\n    super(ctx, true);\n  }\n\n  _final() {\n    if (!this.padding) {\n      if (this.blockPos !== 0)\n        throw new Error('Bad encrypt (trailing bytes).');\n\n      return Buffer.alloc(0);\n    }\n\n    if (this.lastSize === 0)\n      throw new Error('Bad encrypt (no data).');\n\n    if (this.blockPos === 0)\n      return Buffer.from(this.last);\n\n    // Use ciphertext stealing for partial blocks.\n    const out = Buffer.alloc(this.blockPos);\n\n    for (let i = 0; i < this.blockPos; i++) {\n      out[i] = this.last[i];\n\n      this.last[i] = this.block[i];\n    }\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.tweak[i];\n\n    this.ctx.encrypt(this.last, 0, this.last, 0);\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.tweak[i];\n\n    return Buffer.concat([this.last, out]);\n  }\n}\n\n/*\n * XTS Decipher\n */\n\nclass XTSDecipher extends XTS {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n\n  _final() {\n    if (!this.padding) {\n      if (this.blockPos !== 0)\n        throw new Error('Bad decrypt (trailing bytes).');\n\n      return Buffer.alloc(0);\n    }\n\n    if (this.lastSize === 0)\n      throw new Error('Bad decrypt (no data).');\n\n    if (this.blockPos === 0)\n      return Buffer.from(this.last);\n\n    // Undo Block mode object's behavior of\n    // running _update on the last full block.\n    // Could avoid this somehow in the future.\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.prev[i];\n\n    this.ctx.encrypt(this.last, 0, this.last, 0);\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.prev[i];\n\n    // Recreate the last partial plaintext\n    // block (out) and the last ciphertext\n    // block (last).\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.tweak[i];\n\n    this.ctx.decrypt(this.last, 0, this.last, 0);\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.tweak[i];\n\n    const out = Buffer.alloc(this.blockPos);\n\n    for (let i = 0; i < this.blockPos; i++) {\n      out[i] = this.last[i];\n\n      this.last[i] = this.block[i];\n    }\n\n    // Now decrypt the last ciphertext block.\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.prev[i];\n\n    this.ctx.decrypt(this.last, 0, this.last, 0);\n\n    for (let i = 0; i < this.blockSize; i++)\n      this.last[i] ^= this.prev[i];\n\n    return Buffer.concat([this.last, out]);\n  }\n}\n\n/**\n * CTR\n */\n\nclass CTR extends Stream {\n  constructor(ctx) {\n    super(ctx);\n\n    this.state = Buffer.alloc(this.blockSize);\n    this.ctr = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === this.blockSize);\n\n    iv.copy(this.ctr, 0);\n  }\n\n  _increment() {\n    for (let i = this.ctr.length - 1; i >= 0; i--) {\n      this.ctr[i] += 1;\n\n      if (this.ctr[i] !== 0x00)\n        break;\n    }\n  }\n\n  _crypt(output, input) {\n    const mask = this.blockSize - 1;\n\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & mask) === 0) {\n        this.ctx.encrypt(this.state, 0, this.ctr, 0);\n        this._increment();\n        this.pos = 0;\n      }\n\n      output[i] = input[i] ^ this.state[this.pos++];\n    }\n  }\n\n  _final() {\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++) {\n      this.state[i] = 0;\n      this.ctr[i] = 0;\n    }\n  }\n}\n\n/**\n * CTR Cipher\n */\n\nclass CTRCipher extends CTR {\n  constructor(ctx) {\n    super(ctx);\n  }\n}\n\n/**\n * CTR Decipher\n */\n\nclass CTRDecipher extends CTR {\n  constructor(ctx) {\n    super(ctx);\n  }\n}\n\n/**\n * CFB\n */\n\nclass CFB extends Stream {\n  constructor(ctx) {\n    super(ctx);\n\n    this.state = Buffer.alloc(this.blockSize);\n    this.prev = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(iv.length === this.blockSize);\n\n    iv.copy(this.prev, 0);\n  }\n\n  _final() {\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++) {\n      this.state[i] = 0;\n      this.prev[i] = 0;\n    }\n  }\n}\n\n/**\n * CFB Cipher\n */\n\nclass CFBCipher extends CFB {\n  constructor(ctx) {\n    super(ctx);\n  }\n\n  _crypt(output, input) {\n    const mask = this.blockSize - 1;\n\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & mask) === 0) {\n        this.ctx.encrypt(this.state, 0, this.prev, 0);\n        this.pos = 0;\n      }\n\n      output[i] = input[i] ^ this.state[this.pos];\n\n      this.prev[this.pos] = output[i];\n\n      this.pos += 1;\n    }\n  }\n}\n\n/**\n * CFB Decipher\n */\n\nclass CFBDecipher extends CFB {\n  constructor(ctx) {\n    super(ctx);\n  }\n\n  _crypt(output, input) {\n    const mask = this.blockSize - 1;\n\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & mask) === 0) {\n        this.ctx.encrypt(this.state, 0, this.prev, 0);\n        this.pos = 0;\n      }\n\n      this.prev[this.pos] = input[i];\n\n      output[i] = input[i] ^ this.state[this.pos];\n\n      this.pos += 1;\n    }\n  }\n}\n\n/**\n * OFB\n */\n\nclass OFB extends Stream {\n  constructor(ctx) {\n    super(ctx);\n\n    this.state = Buffer.alloc(this.blockSize);\n  }\n\n  _init(key, iv) {\n    assert(Buffer.isBuffer(iv));\n    assert(iv.length === this.blockSize);\n\n    iv.copy(this.state, 0);\n  }\n\n  _crypt(output, input) {\n    const mask = this.blockSize - 1;\n\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & mask) === 0) {\n        this.ctx.encrypt(this.state, 0, this.state, 0);\n        this.pos = 0;\n      }\n\n      output[i] = input[i] ^ this.state[this.pos++];\n    }\n  }\n\n  _final() {\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++)\n      this.state[i] = 0;\n  }\n}\n\n/**\n * OFB Cipher\n */\n\nclass OFBCipher extends OFB {\n  constructor(ctx) {\n    super(ctx);\n  }\n}\n\n/**\n * OFB Decipher\n */\n\nclass OFBDecipher extends OFB {\n  constructor(ctx) {\n    super(ctx);\n  }\n}\n\n/**\n * GCM\n */\n\nclass GCM extends Stream {\n  constructor(ctx, encrypt) {\n    assert(ctx.blockSize === 16);\n\n    super(ctx);\n\n    this.encrypt = encrypt;\n    this.hash = new GHASH();\n    this.ctr = Buffer.alloc(16);\n    this.state = Buffer.alloc(16);\n    this.key = Buffer.alloc(16);\n    this.mask = Buffer.alloc(16);\n    this.tag = null;\n    this.mac = null;\n  }\n\n  _init(key, iv) {\n    for (let i = 0; i < 16; i++) {\n      this.ctr[i] = 0;\n      this.key[i] = 0;\n      this.mask[i] = 0;\n    }\n\n    this._encipher(this.key, this.key);\n\n    this.hash.init(this.key);\n\n    // Full round of ghash with same key.\n    if (iv.length !== 12) {\n      this.hash.update(iv);\n      iv = this.hash.final();\n      this.hash.init(this.key);\n    }\n\n    iv.copy(this.ctr, 0);\n\n    if (iv.length === 12) {\n      this.ctr[12] = 0x00;\n      this.ctr[13] = 0x00;\n      this.ctr[14] = 0x00;\n      this.ctr[15] = 0x01;\n    }\n\n    this._encipher(this.mask, this.mask);\n\n    this.tag = null;\n    this.mac = null;\n\n    return this;\n  }\n\n  _increment() {\n    let cy = 1;\n    let i = 4;\n\n    while (i--) {\n      cy += this.ctr[12 + i];\n      this.ctr[12 + i] = cy;\n      cy >>= 8;\n    }\n  }\n\n  _encipher(output, input) {\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & 15) === 0) {\n        this.ctx.encrypt(this.state, 0, this.ctr, 0);\n        this._increment();\n        this.pos = 0;\n      }\n\n      output[i] = input[i] ^ this.state[this.pos++];\n    }\n  }\n\n  _crypt(output, input) {\n    if (this.encrypt) {\n      this._encipher(output, input);\n      this.hash.update(output);\n    } else {\n      this.hash.update(input);\n      this._encipher(output, input);\n    }\n  }\n\n  _final() {\n    const mac = this.hash.final();\n\n    for (let i = 0; i < 16; i++)\n      mac[i] ^= this.mask[i];\n\n    if (this.encrypt) {\n      this.mac = mac;\n      return Buffer.alloc(0);\n    }\n\n    if (!this.tag)\n      throw new Error('No tag provided.');\n\n    if (!safeEqual(mac, this.tag, this.tag.length))\n      throw new Error('Invalid tag.');\n\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    this.hash.destroy();\n\n    for (let i = 0; i < 16; i++) {\n      this.ctr[i] = 0;\n      this.state[i] = 0;\n      this.key[i] = 0;\n      this.mask[i] = 0;\n    }\n\n    if (this.tag) {\n      for (let i = 0; i < this.tag.length; i++)\n        this.tag[i] = 0;\n\n      this.tag = null;\n    }\n  }\n\n  _setAAD(data) {\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    this.hash.aad(data);\n\n    return this;\n  }\n\n  _getAuthTag() {\n    if (!this.encrypt)\n      throw new Error('Must be a cipher context.');\n\n    if (!this.mac)\n      throw new Error('Cipher is not finalized.');\n\n    return Buffer.from(this.mac);\n  }\n\n  _setAuthTag(tag) {\n    if (this.encrypt)\n      throw new Error('Must be a decipher context.');\n\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    if (tag.length !== 4 && tag.length !== 8\n        && (tag.length < 12 || tag.length > 16)) {\n      throw new RangeError('Invalid tag size.');\n    }\n\n    this.tag = Buffer.from(tag);\n\n    return this;\n  }\n}\n\n/**\n * GCM Cipher\n */\n\nclass GCMCipher extends GCM {\n  constructor(ctx) {\n    super(ctx, true);\n  }\n}\n\n/**\n * GCM Decipher\n */\n\nclass GCMDecipher extends GCM {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n}\n\n/**\n * CBC-MAC\n */\n\nclass CBCMAC {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.size = ctx.blockSize;\n    this.mac = Buffer.alloc(this.size);\n    this.pos = -1;\n  }\n\n  init() {\n    this.mac.fill(0);\n    this.pos = 0;\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.pos === -1)\n      throw new Error('Context is not initialized.');\n\n    for (let i = 0; i < data.length; i++) {\n      this.mac[this.pos++] ^= data[i];\n\n      if (this.pos === this.size) {\n        this.ctx.encrypt(this.mac, 0, this.mac, 0);\n        this.pos = 0;\n      }\n    }\n  }\n\n  pad() {\n    if (this.pos > 0) {\n      this.ctx.encrypt(this.mac, 0, this.mac, 0);\n      this.pos = 0;\n    }\n  }\n\n  final() {\n    if (this.pos === -1)\n      throw new Error('Context is not initialized.');\n\n    this.pad();\n    this.pos = -1;\n\n    return Buffer.from(this.mac);\n  }\n}\n\n/**\n * CCM\n * https://tools.ietf.org/html/rfc3610\n */\n\nclass CCM extends Stream {\n  constructor(ctx, encrypt) {\n    assert(ctx.blockSize === 16);\n\n    super(ctx);\n\n    this.encrypt = encrypt;\n    this.hash = new CBCMAC(ctx);\n    this.state = Buffer.alloc(16);\n    this.ctr = Buffer.alloc(16);\n    this.tagLen = 0;\n    this.iv = null;\n    this.mac = null;\n    this.tag = null;\n  }\n\n  _increment() {\n    for (let i = 15; i >= 1; i--) {\n      this.ctr[i] += 1;\n\n      if (this.ctr[i] !== 0x00)\n        break;\n    }\n  }\n\n  _encipher(output, input) {\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & 15) === 0) {\n        this.ctx.encrypt(this.state, 0, this.ctr, 0);\n        this._increment();\n        this.pos = 0;\n      }\n\n      output[i] = input[i] ^ this.state[this.pos++];\n    }\n  }\n\n  _init(key, iv) {\n    // sjcl compat: no upper limit on l(N).\n    if (iv.length < 7)\n      throw new RangeError('Invalid nonce length.');\n\n    if (iv.length > 13)\n      iv = iv.slice(0, 13);\n\n    this.iv = Buffer.from(iv);\n    this.pos = -1;\n    this.tagLen = 0;\n    this.mac = null;\n    this.tag = null;\n  }\n\n  _setCCM(msgLen, tagLen, aad) {\n    if (!this.iv)\n      throw new Error('Cipher is not initialized.');\n\n    // Compute L, M, and N.\n    let lm = msgLen;\n    let L = Math.ceil((32 - Math.clz32(lm)) / 8);\n\n    if (L < 2)\n      L = 2;\n\n    const M = tagLen;\n    const N = 15 - L;\n    const Adata = (aad && aad.length > 0) | 0;\n    const block = Buffer.alloc(16);\n\n    if (M < 4 || M > 16 || (M & 1) !== 0)\n      throw new RangeError('Invalid tag length.');\n\n    // Compute flags.\n    block[0] = 64 * Adata + 8 * ((M - 2) / 2) + (L - 1);\n\n    // sjcl compat: clamp nonces to 15-L.\n    this.iv.copy(block, 1, 0, Math.min(N, this.iv.length));\n\n    // Serialize message length.\n    for (let i = 15; i >= 1 + N; i--) {\n      block[i] = lm & 0xff;\n      lm >>>= 8;\n    }\n\n    assert(lm === 0);\n\n    this.hash.init();\n    this.hash.update(block);\n\n    if (Adata) {\n      if (aad.length < 0xff00) {\n        const buf = Buffer.alloc(2);\n\n        buf[0] = aad.length >>> 8;\n        buf[1] = aad.length >>> 0;\n\n        this.hash.update(buf);\n      } else if (aad.length < 0xffffffff) {\n        const buf = Buffer.alloc(6);\n\n        buf[0] = 0xff;\n        buf[1] = 0xfe;\n        buf[2] = aad.length >>> 24;\n        buf[3] = aad.length >>> 16;\n        buf[4] = aad.length >>> 8;\n        buf[5] = aad.length >>> 0;\n\n        this.hash.update(buf);\n      } else {\n        throw new RangeError('Invalid AAD length.');\n      }\n\n      this.hash.update(aad);\n      this.hash.pad();\n    }\n\n    block[0] &= 7;\n    block[15] = 1;\n\n    for (let i = 14; i >= 1 + N; i--)\n      block[i] = 0;\n\n    block.copy(this.ctr, 0);\n\n    this.pos = 0;\n    this.tagLen = M;\n    this.iv = null;\n  }\n\n  _crypt(output, input) {\n    if (this.encrypt) {\n      this.hash.update(input);\n      this._encipher(output, input);\n    } else {\n      this._encipher(output, input);\n      this.hash.update(output);\n    }\n  }\n\n  _final() {\n    const mac = this.hash.final();\n\n    // Recreate S_0.\n    let i = 16 - ((this.ctr[0] & 7) + 1);\n\n    while (i < 16)\n      this.ctr[i++] = 0;\n\n    this.pos = 0;\n    this._encipher(mac, mac);\n\n    if (this.encrypt) {\n      this.mac = mac.slice(0, this.tagLen);\n      return Buffer.alloc(0);\n    }\n\n    if (!this.tag)\n      throw new Error('No tag provided.');\n\n    if (!safeEqual(mac, this.tag, this.tagLen))\n      throw new Error('Invalid tag.');\n\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    for (let i = 0; i < 16; i++) {\n      this.state[i] = 0;\n      this.ctr[i] = 0;\n    }\n\n    this.tagLen = 0;\n    this.iv = null;\n    this.tag = null;\n  }\n\n  _getAuthTag() {\n    if (!this.encrypt)\n      throw new Error('Must be a cipher context.');\n\n    if (!this.mac)\n      throw new Error('Cipher is not finalized.');\n\n    return Buffer.from(this.mac);\n  }\n\n  _setAuthTag(tag) {\n    if (this.encrypt)\n      throw new Error('Must be a decipher context.');\n\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    if (this.tagLen === 0 || tag.length !== this.tagLen)\n      throw new RangeError('Invalid tag size.');\n\n    this.tag = Buffer.from(tag);\n\n    return this;\n  }\n}\n\n/**\n * CCM Cipher\n */\n\nclass CCMCipher extends CCM {\n  constructor(ctx) {\n    super(ctx, true);\n  }\n}\n\n/**\n * CCM Decipher\n */\n\nclass CCMDecipher extends CCM {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n}\n\n/**\n * CMAC\n * https://tools.ietf.org/html/rfc4493\n */\n\nclass CMAC {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.poly = polyTable[ctx.blockSize >>> 4];\n    this.size = ctx.blockSize;\n    this.mac = Buffer.alloc(this.size);\n    this.pos = -1;\n  }\n\n  init(flag) {\n    this.mac.fill(0);\n    this.pos = 0;\n\n    if (flag != null) {\n      this.mac[this.size - 1] ^= flag;\n      this.pos = this.size;\n    }\n\n    return this;\n  }\n\n  shift(dst, src) {\n    let cy = 0;\n\n    for (let i = this.size - 1; i >= 0; i--) {\n      const c = src[i] >> 7;\n\n      dst[i] = (src[i] << 1) | cy;\n\n      cy = c;\n    }\n\n    cy = -cy & 0xff;\n\n    dst[this.size - 3] ^= (this.poly >> 16) & cy;\n    dst[this.size - 2] ^= (this.poly >>  8) & cy;\n    dst[this.size - 1] ^= (this.poly >>  0) & cy;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.pos === -1)\n      throw new Error('Context is not initialized.');\n\n    for (let i = 0; i < data.length; i++) {\n      if (this.pos === this.size) {\n        this.ctx.encrypt(this.mac, 0, this.mac, 0);\n        this.pos = 0;\n      }\n\n      this.mac[this.pos++] ^= data[i];\n    }\n  }\n\n  final() {\n    if (this.pos === -1)\n      throw new Error('Context is not initialized.');\n\n    const k = Buffer.alloc(this.size);\n\n    this.ctx.encrypt(k, 0, k, 0);\n\n    this.shift(k, k);\n\n    if (this.pos < this.size) {\n      this.mac[this.pos] ^= 0x80;\n      this.shift(k, k);\n    }\n\n    for (let i = 0; i < this.size; i++)\n      this.mac[i] ^= k[i];\n\n    this.ctx.encrypt(this.mac, 0, this.mac, 0);\n\n    this.pos = -1;\n\n    return Buffer.from(this.mac);\n  }\n}\n\n/**\n * EAX\n */\n\nclass EAX extends Stream {\n  constructor(ctx, encrypt) {\n    super(ctx);\n\n    this.encrypt = encrypt;\n    this.hash1 = new CMAC(ctx);\n    this.hash2 = new CMAC(ctx);\n    this.state = Buffer.alloc(this.blockSize);\n    this.ctr = Buffer.alloc(this.blockSize);\n    this.mask = Buffer.alloc(this.blockSize);\n    this.mac = null;\n    this.tag = null;\n  }\n\n  _increment() {\n    let i = this.blockSize;\n    let cy = 1;\n\n    while (i--) {\n      cy += this.ctr[i];\n      this.ctr[i] = cy;\n      cy >>= 8;\n    }\n  }\n\n  _encipher(output, input) {\n    const mask = this.blockSize - 1;\n\n    for (let i = 0; i < input.length; i++) {\n      if ((this.pos & mask) === 0) {\n        this.ctx.encrypt(this.state, 0, this.ctr, 0);\n        this._increment();\n        this.pos = 0;\n      }\n\n      output[i] = input[i] ^ this.state[this.pos++];\n    }\n  }\n\n  _init(key, iv) {\n    assert(iv.length > 0);\n\n    this.hash1.init(0);\n    this.hash1.update(iv);\n\n    this.mask = this.hash1.final();\n    this.mask.copy(this.ctr, 0);\n\n    this.hash1.init(1);\n    this.hash2.init(2);\n\n    this.mac = null;\n    this.tag = null;\n  }\n\n  _crypt(output, input) {\n    if (this.encrypt) {\n      this._encipher(output, input);\n      this.hash2.update(output);\n    } else {\n      this.hash2.update(input);\n      this._encipher(output, input);\n    }\n  }\n\n  _final() {\n    const mac = Buffer.alloc(this.blockSize);\n    const mac1 = this.hash1.final();\n    const mac2 = this.hash2.final();\n\n    for (let i = 0; i < this.blockSize; i++)\n      mac[i] = mac1[i] ^ mac2[i] ^ this.mask[i];\n\n    if (this.encrypt) {\n      this.mac = mac;\n      return Buffer.alloc(0);\n    }\n\n    if (!this.tag)\n      throw new Error('No tag provided.');\n\n    if (!safeEqual(mac, this.tag, this.tag.length))\n      throw new Error('Invalid tag.');\n\n    return Buffer.alloc(0);\n  }\n\n  _destroy() {\n    for (let i = 0; i < this.blockSize; i++) {\n      this.state[i] = 0;\n      this.ctr[i] = 0;\n      this.mask[i] = 0;\n    }\n\n    this.tag = null;\n  }\n\n  _setAAD(data) {\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    this.hash1.update(data);\n\n    return this;\n  }\n\n  _getAuthTag() {\n    if (!this.encrypt)\n      throw new Error('Must be a cipher context.');\n\n    if (!this.mac)\n      throw new Error('Cipher is not finalized.');\n\n    return Buffer.from(this.mac);\n  }\n\n  _setAuthTag(tag) {\n    if (this.encrypt)\n      throw new Error('Must be a decipher context.');\n\n    if (this.pos === -1)\n      throw new Error('Cipher is not initialized.');\n\n    if (tag.length === 0 || tag.length > this.blockSize)\n      throw new RangeError('Invalid tag size.');\n\n    this.tag = Buffer.from(tag);\n\n    return this;\n  }\n}\n\n/**\n * EAX Cipher\n */\n\nclass EAXCipher extends EAX {\n  constructor(ctx) {\n    super(ctx, true);\n  }\n}\n\n/**\n * EAX Decipher\n */\n\nclass EAXDecipher extends EAX {\n  constructor(ctx) {\n    super(ctx, false);\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction get(name, encrypt = true) {\n  assert(typeof name === 'string');\n  assert(typeof encrypt === 'boolean');\n\n  switch (name) {\n    case 'RAW':\n      return encrypt ? RawCipher : RawDecipher;\n    case 'ECB':\n      return encrypt ? ECBCipher : ECBDecipher;\n    case 'CBC':\n      return encrypt ? CBCCipher : CBCDecipher;\n    case 'CTS':\n      return encrypt ? CTSCipher : CTSDecipher;\n    case 'XTS':\n      return encrypt ? XTSCipher : XTSDecipher;\n    case 'CTR':\n      return encrypt ? CTRCipher : CTRDecipher;\n    case 'CFB':\n      return encrypt ? CFBCipher : CFBDecipher;\n    case 'OFB':\n      return encrypt ? OFBCipher : OFBDecipher;\n    case 'GCM':\n      return encrypt ? GCMCipher : GCMDecipher;\n    case 'CCM':\n      return encrypt ? CCMCipher : CCMDecipher;\n    case 'EAX':\n      return encrypt ? EAXCipher : EAXDecipher;\n    default:\n      throw new Error(`Unknown mode: ${name}.`);\n  }\n}\n\nfunction overlap(output, opos, input, ipos) {\n  return output.buffer === input.buffer\n      && output.byteOffset === input.byteOffset\n      && opos === ipos;\n}\n\nfunction safeEqual(x, y, len) {\n  let z = 0;\n\n  for (let i = 0; i < len; i++)\n    z |= x[i] ^ y[i];\n\n  return (z - 1) >>> 31;\n}\n\n/*\n * Expose\n */\n\nexports.Mode = Mode;\nexports.Block = Block;\nexports.Stream = Stream;\nexports.RawCipher = RawCipher;\nexports.RawDecipher = RawDecipher;\nexports.PKCS7Cipher = PKCS7Cipher;\nexports.PKCS7Decipher = PKCS7Decipher;\nexports.ECBCipher = ECBCipher;\nexports.ECBDecipher = ECBDecipher;\nexports.CBCCipher = CBCCipher;\nexports.CBCDecipher = CBCDecipher;\nexports.CTSCipher = CTSCipher;\nexports.CTSDecipher = CTSDecipher;\nexports.XTS = XTS;\nexports.XTSCipher = XTSCipher;\nexports.XTSDecipher = XTSDecipher;\nexports.CTR = CTR;\nexports.CTRCipher = CTRCipher;\nexports.CTRDecipher = CTRDecipher;\nexports.CFB = CFB;\nexports.CFBCipher = CFBCipher;\nexports.CFBDecipher = CFBDecipher;\nexports.OFB = OFB;\nexports.OFBCipher = OFBCipher;\nexports.OFBDecipher = OFBDecipher;\nexports.GCM = GCM;\nexports.GCMCipher = GCMCipher;\nexports.GCMDecipher = GCMDecipher;\nexports.CBCMAC = CBCMAC;\nexports.CCM = CCM;\nexports.CCMCipher = CCMCipher;\nexports.CCMDecipher = CCMDecipher;\nexports.CMAC = CMAC;\nexports.EAX = EAX;\nexports.EAXCipher = EAXCipher;\nexports.EAXDecipher = EAXDecipher;\nexports.get = get;","/*!\n * aes.js - aes128/192/256 for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst AES = require('./ciphers/aes');\nconst {CBCCipher, CBCDecipher} = require('./ciphers/modes');\n\n/**\n * Encrypt data with aes 256 cbc.\n * @param {Buffer} data\n * @param {Buffer} key\n * @param {Buffer} iv\n * @returns {Buffer}\n */\n\nfunction encipher(data, key, iv) {\n  const ctx = new CBCCipher(new AES(256));\n  ctx.init(key, iv);\n  return Buffer.concat([ctx.update(data), ctx.final()]);\n}\n\n/**\n * Decrypt data with aes 256 cbc.\n * @param {Buffer} data\n * @param {Buffer} key\n * @param {Buffer} iv\n * @returns {Buffer}\n */\n\nfunction decipher(data, key, iv) {\n  const ctx = new CBCDecipher(new AES(256));\n  ctx.init(key, iv);\n  return Buffer.concat([ctx.update(data), ctx.final()]);\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.encipher = encipher;\nexports.decipher = decipher;","/*!\n * keccak.js - Keccak/SHA3 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on emn178/js-sha3:\n *   Copyright (c) 2015-2017, Chen, Yi-Cyuan (MIT License).\n *   https://github.com/emn178/js-sha3\n *\n * Parts of this software are based on rhash/RHash:\n *   Copyright (c) 2005-2014, Aleksey Kravchenko\n *   https://github.com/rhash/RHash\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-3\n *   https://keccak.team/specifications.html\n *   https://csrc.nist.gov/projects/hash-functions/sha-3-project/sha-3-standardization\n *   http://dx.doi.org/10.6028/NIST.FIPS.202\n *   https://github.com/rhash/RHash/blob/master/librhash/sha3.c\n *   https://github.com/emn178/js-sha3/blob/master/src/sha3.js\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst HMAC = require('./internal/hmac');\n\n/*\n * Constants\n */\n\nconst FINALIZED = 0x80000000;\n\nconst ROUND_CONST = new Uint32Array([\n  0x00000001, 0x00000000, 0x00008082, 0x00000000,\n  0x0000808a, 0x80000000, 0x80008000, 0x80000000,\n  0x0000808b, 0x00000000, 0x80000001, 0x00000000,\n  0x80008081, 0x80000000, 0x00008009, 0x80000000,\n  0x0000008a, 0x00000000, 0x00000088, 0x00000000,\n  0x80008009, 0x00000000, 0x8000000a, 0x00000000,\n  0x8000808b, 0x00000000, 0x0000008b, 0x80000000,\n  0x00008089, 0x80000000, 0x00008003, 0x80000000,\n  0x00008002, 0x80000000, 0x00000080, 0x80000000,\n  0x0000800a, 0x00000000, 0x8000000a, 0x80000000,\n  0x80008081, 0x80000000, 0x00008080, 0x80000000,\n  0x80000001, 0x00000000, 0x80008008, 0x80000000\n]);\n\n/**\n * Keccak\n */\n\nclass Keccak {\n  constructor() {\n    this.state = new Uint32Array(50);\n    this.block = Buffer.alloc(200);\n    this.bs = 136;\n    this.pos = FINALIZED;\n  }\n\n  init(bits) {\n    if (bits == null)\n      bits = 256;\n\n    assert((bits >>> 0) === bits);\n    assert(bits >= 128);\n    assert(bits <= 512);\n\n    const rate = 1600 - bits * 2;\n\n    assert(rate >= 0 && (rate & 63) === 0);\n\n    this.bs = rate >>> 3;\n    this.pos = 0;\n\n    return this;\n  }\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    assert(!(this.pos & FINALIZED), 'Context is not initialized.');\n\n    let len = data.length;\n    let pos = this.pos;\n    let off = 0;\n\n    this.pos = (this.pos + len) % this.bs;\n\n    if (pos > 0) {\n      let want = this.bs - pos;\n\n      if (want > len)\n        want = len;\n\n      data.copy(this.block, pos, off, off + want);\n\n      pos += want;\n      len -= want;\n      off += want;\n\n      if (pos < this.bs)\n        return this;\n\n      this._transform(this.block, 0);\n    }\n\n    while (len >= this.bs) {\n      this._transform(data, off);\n      off += this.bs;\n      len -= this.bs;\n    }\n\n    if (len > 0)\n      data.copy(this.block, 0, off, off + len);\n\n    return this;\n  }\n\n  final(pad, len) {\n    if (pad == null)\n      pad = 0x01;\n\n    if (len == null || len === 0)\n      len = 100 - (this.bs >>> 1);\n\n    assert((pad & 0xff) === pad);\n    assert((len >>> 0) === len);\n    assert(!(this.pos & FINALIZED), 'Context is not initialized.');\n\n    this.block.fill(0, this.pos, this.bs);\n    this.block[this.pos] |= pad;\n    this.block[this.bs - 1] |= 0x80;\n    this._transform(this.block, 0);\n    this.pos = FINALIZED;\n\n    assert(len <= this.bs);\n\n    const out = Buffer.alloc(len);\n\n    for (let i = 0; i < len; i++)\n      out[i] = this.state[i >>> 2] >>> (8 * (i & 3));\n\n    for (let i = 0; i < 50; i++)\n      this.state[i] = 0;\n\n    for (let i = 0; i < this.bs; i++)\n      this.block[i] = 0;\n\n    return out;\n  }\n\n  _transform(block, off) {\n    const count = this.bs >>> 2;\n    const s = this.state;\n\n    for (let i = 0; i < count; i++)\n      s[i] ^= readU32(block, off + i * 4);\n\n    for (let n = 0; n < 48; n += 2) {\n      const c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      const c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      const c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      const c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      const c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      const c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      const c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      const c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      const c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      const c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      const h0 = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      const l0 = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      const h1 = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      const l1 = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      const h2 = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      const l2 = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      const h3 = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      const l3 = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      const h4 = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      const l4 = c7 ^ ((c1 << 1) | (c0 >>> 31));\n\n      s[0] ^= h0;\n      s[1] ^= l0;\n      s[10] ^= h0;\n      s[11] ^= l0;\n      s[20] ^= h0;\n      s[21] ^= l0;\n      s[30] ^= h0;\n      s[31] ^= l0;\n      s[40] ^= h0;\n      s[41] ^= l0;\n\n      s[2] ^= h1;\n      s[3] ^= l1;\n      s[12] ^= h1;\n      s[13] ^= l1;\n      s[22] ^= h1;\n      s[23] ^= l1;\n      s[32] ^= h1;\n      s[33] ^= l1;\n      s[42] ^= h1;\n      s[43] ^= l1;\n\n      s[4] ^= h2;\n      s[5] ^= l2;\n      s[14] ^= h2;\n      s[15] ^= l2;\n      s[24] ^= h2;\n      s[25] ^= l2;\n      s[34] ^= h2;\n      s[35] ^= l2;\n      s[44] ^= h2;\n      s[45] ^= l2;\n\n      s[6] ^= h3;\n      s[7] ^= l3;\n      s[16] ^= h3;\n      s[17] ^= l3;\n      s[26] ^= h3;\n      s[27] ^= l3;\n      s[36] ^= h3;\n      s[37] ^= l3;\n      s[46] ^= h3;\n      s[47] ^= l3;\n\n      s[8] ^= h4;\n      s[9] ^= l4;\n      s[18] ^= h4;\n      s[19] ^= l4;\n      s[28] ^= h4;\n      s[29] ^= l4;\n      s[38] ^= h4;\n      s[39] ^= l4;\n      s[48] ^= h4;\n      s[49] ^= l4;\n\n      const b0 = s[0];\n      const b1 = s[1];\n      const b32 = (s[11] << 4) | (s[10] >>> 28);\n      const b33 = (s[10] << 4) | (s[11] >>> 28);\n      const b14 = (s[20] << 3) | (s[21] >>> 29);\n      const b15 = (s[21] << 3) | (s[20] >>> 29);\n      const b46 = (s[31] << 9) | (s[30] >>> 23);\n      const b47 = (s[30] << 9) | (s[31] >>> 23);\n      const b28 = (s[40] << 18) | (s[41] >>> 14);\n      const b29 = (s[41] << 18) | (s[40] >>> 14);\n      const b20 = (s[2] << 1) | (s[3] >>> 31);\n      const b21 = (s[3] << 1) | (s[2] >>> 31);\n      const b2 = (s[13] << 12) | (s[12] >>> 20);\n      const b3 = (s[12] << 12) | (s[13] >>> 20);\n      const b34 = (s[22] << 10) | (s[23] >>> 22);\n      const b35 = (s[23] << 10) | (s[22] >>> 22);\n      const b16 = (s[33] << 13) | (s[32] >>> 19);\n      const b17 = (s[32] << 13) | (s[33] >>> 19);\n      const b48 = (s[42] << 2) | (s[43] >>> 30);\n      const b49 = (s[43] << 2) | (s[42] >>> 30);\n      const b40 = (s[5] << 30) | (s[4] >>> 2);\n      const b41 = (s[4] << 30) | (s[5] >>> 2);\n      const b22 = (s[14] << 6) | (s[15] >>> 26);\n      const b23 = (s[15] << 6) | (s[14] >>> 26);\n      const b4 = (s[25] << 11) | (s[24] >>> 21);\n      const b5 = (s[24] << 11) | (s[25] >>> 21);\n      const b36 = (s[34] << 15) | (s[35] >>> 17);\n      const b37 = (s[35] << 15) | (s[34] >>> 17);\n      const b18 = (s[45] << 29) | (s[44] >>> 3);\n      const b19 = (s[44] << 29) | (s[45] >>> 3);\n      const b10 = (s[6] << 28) | (s[7] >>> 4);\n      const b11 = (s[7] << 28) | (s[6] >>> 4);\n      const b42 = (s[17] << 23) | (s[16] >>> 9);\n      const b43 = (s[16] << 23) | (s[17] >>> 9);\n      const b24 = (s[26] << 25) | (s[27] >>> 7);\n      const b25 = (s[27] << 25) | (s[26] >>> 7);\n      const b6 = (s[36] << 21) | (s[37] >>> 11);\n      const b7 = (s[37] << 21) | (s[36] >>> 11);\n      const b38 = (s[47] << 24) | (s[46] >>> 8);\n      const b39 = (s[46] << 24) | (s[47] >>> 8);\n      const b30 = (s[8] << 27) | (s[9] >>> 5);\n      const b31 = (s[9] << 27) | (s[8] >>> 5);\n      const b12 = (s[18] << 20) | (s[19] >>> 12);\n      const b13 = (s[19] << 20) | (s[18] >>> 12);\n      const b44 = (s[29] << 7) | (s[28] >>> 25);\n      const b45 = (s[28] << 7) | (s[29] >>> 25);\n      const b26 = (s[38] << 8) | (s[39] >>> 24);\n      const b27 = (s[39] << 8) | (s[38] >>> 24);\n      const b8 = (s[48] << 14) | (s[49] >>> 18);\n      const b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= ROUND_CONST[n + 0];\n      s[1] ^= ROUND_CONST[n + 1];\n    }\n  }\n\n  static hash() {\n    return new Keccak();\n  }\n\n  static hmac(bits, pad, len) {\n    if (bits == null)\n      bits = 256;\n\n    assert((bits >>> 0) === bits);\n\n    const rate = 1600 - bits * 2;\n\n    assert(rate >= 0 && (rate & 63) === 0);\n\n    return new HMAC(Keccak, rate >>> 3, [bits], [pad, len]);\n  }\n\n  static digest(data, bits, pad, len) {\n    return Keccak.ctx.init(bits).update(data).final(pad, len);\n  }\n\n  static root(left, right, bits, pad, len) {\n    if (bits == null)\n      bits = 256;\n\n    if (len == null)\n      len = 0;\n\n    if (len === 0)\n      len = bits >>> 3;\n\n    assert((bits >>> 0) === bits);\n    assert((bits & 7) === 0);\n    assert((len >>> 0) === len);\n    assert(Buffer.isBuffer(left) && left.length === len);\n    assert(Buffer.isBuffer(right) && right.length === len);\n\n    return Keccak.ctx.init(bits).update(left).update(right).final(pad, len);\n  }\n\n  static multi(x, y, z, bits, pad, len) {\n    const {ctx} = Keccak;\n\n    ctx.init(bits);\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final(pad, len);\n  }\n\n  static mac(data, key, bits, pad, len) {\n    return Keccak.hmac(bits, pad, len).init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nKeccak.native = 0;\nKeccak.id = 'KECCAK256';\nKeccak.size = 32;\nKeccak.bits = 256;\nKeccak.blockSize = 136;\nKeccak.zero = Buffer.alloc(32, 0x00);\nKeccak.ctx = new Keccak();\n\n/*\n * Helpers\n */\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Keccak;","/*!\n * murmur3.js - murmur3 hash for bcrypto\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/MurmurHash\n *   https://github.com/aappleby/smhasher\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\n\n/**\n * Murmur3 hash.\n * @param {Buffer} data\n * @param {Number} seed\n * @returns {Number}\n */\n\nfunction sum(data, seed) {\n  assert(Buffer.isBuffer(data));\n  assert(typeof seed === 'number');\n\n  const tail = data.length - (data.length & 3);\n  const c1 = 0xcc9e2d51;\n  const c2 = 0x1b873593;\n\n  let h1 = seed | 0;\n\n  for (let i = 0; i < tail; i += 4) {\n    let k1 = readU32(data, i);\n\n    k1 = mul32(k1, c1);\n    k1 = rotl32(k1, 15);\n    k1 = mul32(k1, c2);\n    h1 ^= k1;\n    h1 = rotl32(h1, 13);\n    h1 = (mul32(h1, 5) + 0xe6546b64) | 0;\n  }\n\n  let k1 = 0;\n\n  switch (data.length & 3) {\n    case 3:\n      k1 ^= data[tail + 2] << 16;\n    case 2:\n      k1 ^= data[tail + 1] << 8;\n    case 1:\n      k1 ^= data[tail + 0];\n      k1 = mul32(k1, c1);\n      k1 = rotl32(k1, 15);\n      k1 = mul32(k1, c2);\n      h1 ^= k1;\n  }\n\n  h1 ^= data.length;\n  h1 ^= h1 >>> 16;\n  h1 = mul32(h1, 0x85ebca6b);\n  h1 ^= h1 >>> 13;\n  h1 = mul32(h1, 0xc2b2ae35);\n  h1 ^= h1 >>> 16;\n\n  return h1 >>> 0;\n}\n\n/**\n * Murmur3 hash.\n * @param {Buffer} data\n * @param {Number} n\n * @param {Number} tweak\n * @returns {Number}\n */\n\nfunction tweak(data, n, tweak) {\n  assert(typeof n === 'number');\n  assert(typeof tweak === 'number');\n\n  const seed = mul32(n, 0xfba4c795) + (tweak | 0);\n\n  return sum(data, seed);\n}\n\n/*\n * Helpers\n */\n\nfunction mul32(a, b) {\n  const alo = a & 0xffff;\n  const blo = b & 0xffff;\n  const ahi = a >>> 16;\n  const bhi = b >>> 16;\n  const lo = alo * blo;\n  const hi = ahi * blo + bhi * alo + (lo >>> 16);\n\n  return (hi << 16) | (lo & 0xffff);\n}\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\n/**\n * Expose\n */\n\nexports.native = 0;\nexports.sum = sum;\nexports.tweak = tweak;","/*!\n * p224.js - ECDSA-P224 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst ECDSA = require('./ecdsa');\nconst SHA256 = require('./sha256');\n\n/*\n * Expose\n */\n\nmodule.exports = new ECDSA('P224', SHA256, SHA256);\n","/*!\n * p256.js - ECDSA-P256 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst ECDSA = require('./ecdsa');\nconst SHA256 = require('./sha256');\n\n/*\n * Expose\n */\n\nmodule.exports = new ECDSA('P256', SHA256, SHA256);\n","/*!\n * sha384.js - SHA384 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-2\n *   https://tools.ietf.org/html/rfc4634\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/sha/384.js\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst SHA512 = require('./sha512');\nconst HMAC = require('./internal/hmac');\n\n/**\n * SHA384\n */\n\nclass SHA384 extends SHA512 {\n  constructor() {\n    super();\n  }\n\n  init() {\n    this.state[0] = 0xcbbb9d5d;\n    this.state[1] = 0xc1059ed8;\n    this.state[2] = 0x629a292a;\n    this.state[3] = 0x367cd507;\n    this.state[4] = 0x9159015a;\n    this.state[5] = 0x3070dd17;\n    this.state[6] = 0x152fecd8;\n    this.state[7] = 0xf70e5939;\n    this.state[8] = 0x67332667;\n    this.state[9] = 0xffc00b31;\n    this.state[10] = 0x8eb44a87;\n    this.state[11] = 0x68581511;\n    this.state[12] = 0xdb0c2e0d;\n    this.state[13] = 0x64f98fa7;\n    this.state[14] = 0x47b5481d;\n    this.state[15] = 0xbefa4fa4;\n    this.size = 0;\n    return this;\n  }\n\n  final() {\n    return super.final().slice(0, 48);\n  }\n\n  static hash() {\n    return new SHA384();\n  }\n\n  static hmac() {\n    return new HMAC(SHA384, 128);\n  }\n\n  static digest(data) {\n    return SHA384.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 48);\n    assert(Buffer.isBuffer(right) && right.length === 48);\n    return SHA384.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = SHA384;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return SHA384.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nSHA384.native = 0;\nSHA384.id = 'SHA384';\nSHA384.size = 48;\nSHA384.bits = 384;\nSHA384.blockSize = 128;\nSHA384.zero = Buffer.alloc(48, 0x00);\nSHA384.ctx = new SHA384();\n\n/*\n * Expose\n */\n\nmodule.exports = SHA384;\n","/*!\n * p384.js - ECDSA-P384 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst ECDSA = require('./ecdsa');\nconst SHA384 = require('./sha384');\n\n/*\n * Expose\n */\n\nmodule.exports = new ECDSA('P384', SHA384, SHA384);\n","/*!\n * shake.js - SHAKE implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-3\n *   https://keccak.team/specifications.html\n *   https://csrc.nist.gov/projects/hash-functions/sha-3-project/sha-3-standardization\n *   http://dx.doi.org/10.6028/NIST.FIPS.202\n */\n\n'use strict';\n\nconst Keccak = require('./keccak');\n\n/**\n * SHAKE\n */\n\nclass SHAKE extends Keccak {\n  /**\n   * Create a SHAKE Context.\n   * @constructor\n   */\n\n  constructor() {\n    super();\n  }\n\n  final(len) {\n    return super.final(0x1f, len);\n  }\n\n  static hash() {\n    return new SHAKE();\n  }\n\n  static hmac(bits, len) {\n    return super.hmac(bits, 0x1f, len);\n  }\n\n  static digest(data, bits, len) {\n    return super.digest(data, bits, 0x1f, len);\n  }\n\n  static root(left, right, bits, len) {\n    return super.root(left, right, bits, 0x1f, len);\n  }\n\n  static multi(x, y, z, bits, len) {\n    return super.multi(x, y, z, bits, 0x1f, len);\n  }\n\n  static mac(data, key, bits, len) {\n    return super.mac(data, key, bits, 0x1f, len);\n  }\n}\n\n/*\n * Static\n */\n\nSHAKE.native = Keccak.native;\nSHAKE.id = 'SHAKE256';\nSHAKE.size = 32;\nSHAKE.bits = 256;\nSHAKE.blockSize = 136;\nSHAKE.zero = Buffer.alloc(32, 0x00);\nSHAKE.ctx = new SHAKE();\n\n/*\n * Expose\n */\n\nmodule.exports = SHAKE;","/*!\n * shake256.js - SHAKE256 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst SHAKE = require('./shake');\n\n/**\n * SHAKE256\n */\n\nclass SHAKE256 extends SHAKE {\n  constructor() {\n    super();\n  }\n\n  init() {\n    return super.init(256);\n  }\n\n  static hash() {\n    return new SHAKE256();\n  }\n\n  static hmac(len) {\n    return super.hmac(256, len);\n  }\n\n  static digest(data, len) {\n    return super.digest(data, 256, len);\n  }\n\n  static root(left, right, len) {\n    return super.root(left, right, 256, len);\n  }\n\n  static multi(x, y, z, len) {\n    return super.multi(x, y, z, 256, len);\n  }\n\n  static mac(data, key, len) {\n    return super.mac(data, key, 256, len);\n  }\n}\n\n/*\n * Static\n */\n\nSHAKE256.native = SHAKE.native;\nSHAKE256.id = 'SHAKE256';\nSHAKE256.size = 32;\nSHAKE256.bits = 256;\nSHAKE256.blockSize = 136;\nSHAKE256.zero = Buffer.alloc(32, 0x00);\nSHAKE256.ctx = new SHAKE256();\n\n/*\n * Expose\n */\n\nmodule.exports = SHAKE256;","/*!\n * p521.js - ECDSA-P521 for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst ECDSA = require('./ecdsa');\nconst SHA512 = require('./sha512');\nconst SHAKE256 = require('./shake256');\n\n/*\n * Expose\n */\n\nmodule.exports = new ECDSA('P521', SHA512, SHAKE256);\n","/*!\n * primes.js - Prime number generation for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Parts of this software are based on indutny/miller-rabin:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/miller-rabin\n *\n * Resources:\n *   https://github.com/golang/go/blob/master/src/crypto/rsa/rsa.go\n *   https://github.com/golang/go/blob/master/src/math/big/prime.go\n *   https://github.com/golang/go/blob/master/src/math/big/int.go\n *   https://github.com/golang/go/blob/master/src/math/big/nat.go\n *   https://github.com/golang/go/blob/master/src/crypto/rand/util.go\n *   https://github.com/indutny/miller-rabin/blob/master/lib/mr.js\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst BN = require('../bn');\nconst random = require('../random');\n\n/*\n * Constants\n */\n\nconst smallPrimes = new Uint8Array([\n   3,  5,  7,\n  11, 13, 17,\n  19, 23, 29,\n  31, 37, 41,\n  43, 47, 53\n]);\n\nconst smallPrimesProduct = new BN('16294579238595022365', 10);\n\nconst primeBitMaskLo = 0\n  | (1 << 2)\n  | (1 << 3)\n  | (1 << 5)\n  | (1 << 7)\n  | (1 << 11)\n  | (1 << 13)\n  | (1 << 17)\n  | (1 << 19)\n  | (1 << 23)\n  | (1 << 29)\n  | (1 << 31);\n\nconst primeBitMaskHi = 0\n  | (1 << (37 - 32))\n  | (1 << (41 - 32))\n  | (1 << (43 - 32))\n  | (1 << (47 - 32))\n  | (1 << (53 - 32))\n  | (1 << (59 - 32))\n  | (1 << (61 - 32));\n\nconst primesA = new BN(3 * 5 * 7 * 11 * 13 * 17 * 19 * 23 * 37);\nconst primesB = new BN(29 * 31 * 41 * 43 * 47 * 53);\n\n/*\n * Primality\n */\n\nfunction randomPrime(bits, reps = 20, rng = random) {\n  assert((bits >>> 0) === bits);\n  assert((reps >>> 0) === reps);\n  assert(rng != null);\n\n  if (bits < 2)\n    throw new Error('Prime must be at least 2 bits.');\n\n  for (;;) {\n    const p = BN.randomBits(rng, bits);\n\n    p.setn(bits - 1, 1);\n    p.setn(bits - 2, 1);\n    p.setn(0, 1);\n\n    const mod = p.mod(smallPrimesProduct);\n\nnext:\n    for (let delta = 0; delta < (1 << 20); delta += 2) {\n      const m = mod.addn(delta);\n\n      for (let i = 0; i < smallPrimes.length; i++) {\n        const prime = smallPrimes[i];\n\n        if (m.modrn(prime) === 0 && (bits > 6 || m.cmpn(prime) !== 0))\n          continue next;\n      }\n\n      p.iaddn(delta);\n\n      break;\n    }\n\n    if (p.bitLength() !== bits)\n      continue;\n\n    if (!isProbablePrime(p, reps, rng))\n      continue;\n\n    return p;\n  }\n}\n\nfunction isProbablePrime(x, reps, rng = random) {\n  assert(x instanceof BN);\n\n  if (x.sign() <= 0)\n    return false;\n\n  if (x.cmpn(64) < 0) {\n    const w = x.word(0);\n\n    if (w > 31)\n      return (primeBitMaskHi & (1 << (w - 32))) !== 0;\n\n    return (primeBitMaskLo & (1 << w)) !== 0;\n  }\n\n  if (x.isEven())\n    return false;\n\n  const ra = x.mod(primesA).toNumber();\n  const rb = x.mod(primesB).toNumber();\n\n  if (ra % 3 === 0\n      || ra % 5 === 0\n      || ra % 7 === 0\n      || ra % 11 === 0\n      || ra % 13 === 0\n      || ra % 17 === 0\n      || ra % 19 === 0\n      || ra % 23 === 0\n      || ra % 37 === 0\n      || rb % 29 === 0\n      || rb % 31 === 0\n      || rb % 41 === 0\n      || rb % 43 === 0\n      || rb % 47 === 0\n      || rb % 53 === 0) {\n    return false;\n  }\n\n  return x.isPrime(rng, reps);\n}\n\nfunction isSafePrime(x, reps, rng) {\n  // Safe Prime (2p + 1).\n  if (!isProbablePrime(x, reps, rng))\n    return false;\n\n  // Sophie Germain Prime (p).\n  const p = x.subn(1).iushrn(1);\n\n  if (!isProbablePrime(p, reps, rng))\n    return false;\n\n  return true;\n}\n\n/*\n * Expose\n */\n\nexports.randomPrime = randomPrime;\nexports.isProbablePrime = isProbablePrime;\nexports.isSafePrime = isSafePrime;\n","/*!\n * base64.js - base64 for javascript\n * Copyright (c) 2019-2020, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://tools.ietf.org/html/rfc4648\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\n\n/*\n * Constants\n */\n\nconst CHARSET =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nconst CHARSET_URL =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n\nconst TABLE = [\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, 62, -1, -1, -1, 63,\n  52, 53, 54, 55, 56, 57, 58, 59,\n  60, 61, -1, -1, -1, -1, -1, -1,\n  -1,  0,  1,  2,  3,  4,  5,  6,\n   7,  8,  9, 10, 11, 12, 13, 14,\n  15, 16, 17, 18, 19, 20, 21, 22,\n  23, 24, 25, -1, -1, -1, -1, -1,\n  -1, 26, 27, 28, 29, 30, 31, 32,\n  33, 34, 35, 36, 37, 38, 39, 40,\n  41, 42, 43, 44, 45, 46, 47, 48,\n  49, 50, 51, -1, -1, -1, -1, -1\n];\n\nconst TABLE_URL = [\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, 62, -1, -1,\n  52, 53, 54, 55, 56, 57, 58, 59,\n  60, 61, -1, -1, -1, -1, -1, -1,\n  -1,  0,  1,  2,  3,  4,  5,  6,\n   7,  8,  9, 10, 11, 12, 13, 14,\n  15, 16, 17, 18, 19, 20, 21, 22,\n  23, 24, 25, -1, -1, -1, -1, 63,\n  -1, 26, 27, 28, 29, 30, 31, 32,\n  33, 34, 35, 36, 37, 38, 39, 40,\n  41, 42, 43, 44, 45, 46, 47, 48,\n  49, 50, 51, -1, -1, -1, -1, -1\n];\n\n/*\n * Encoding\n */\n\nfunction _encode(data, charset, pad) {\n  assert(Buffer.isBuffer(data));\n\n  let left = data.length;\n  let str = '';\n  let i = 0;\n\n  while (left >= 3) {\n    const c1 = data[i++];\n    const c2 = data[i++];\n    const c3 = data[i++];\n\n    str += charset[c1 >> 2];\n    str += charset[((c1 & 3) << 4) | (c2 >> 4)];\n    str += charset[((c2 & 0x0f) << 2) | (c3 >> 6)];\n    str += charset[c3 & 0x3f];\n\n    left -= 3;\n  }\n\n  switch (left) {\n    case 1: {\n      const c1 = data[i++];\n\n      str += charset[c1 >> 2];\n      str += charset[(c1 & 3) << 4];\n\n      if (pad)\n        str += '==';\n\n      break;\n    }\n\n    case 2: {\n      const c1 = data[i++];\n      const c2 = data[i++];\n\n      str += charset[c1 >> 2];\n      str += charset[((c1 & 3) << 4) | (c2 >> 4)];\n      str += charset[(c2 & 0x0f) << 2];\n\n      if (pad)\n        str += '=';\n\n      break;\n    }\n  }\n\n  return str;\n}\n\n/*\n * Decoding\n */\n\nfunction _decode(str, table, size) {\n  assert(typeof str === 'string');\n\n  const data = Buffer.alloc(size);\n\n  let left = str.length;\n  let i = 0;\n  let j = 0;\n\n  if (left > 0 && str[left - 1] === '=')\n    left -= 1;\n\n  if (left > 0 && str[left - 1] === '=')\n    left -= 1;\n\n  if ((left & 3) === 1) // Fail early.\n    throw new Error('Invalid base64 string.');\n\n  while (left >= 4) {\n    const c1 = str.charCodeAt(i++);\n    const c2 = str.charCodeAt(i++);\n    const c3 = str.charCodeAt(i++);\n    const c4 = str.charCodeAt(i++);\n\n    if ((c1 | c2 | c3 | c4) & 0xff80)\n      throw new Error('Invalid base64 string.');\n\n    const t1 = table[c1];\n    const t2 = table[c2];\n    const t3 = table[c3];\n    const t4 = table[c4];\n\n    if ((t1 | t2 | t3 | t4) < 0)\n      throw new Error('Invalid base64 string.');\n\n    data[j++] = (t1 << 2) | (t2 >> 4);\n    data[j++] = (t2 << 4) | (t3 >> 2);\n    data[j++] = (t3 << 6) | (t4 >> 0);\n\n    left -= 4;\n  }\n\n  switch (left) {\n    case 1: {\n      throw new Error('Invalid base64 string.');\n    }\n\n    case 2: {\n      const c1 = str.charCodeAt(i++);\n      const c2 = str.charCodeAt(i++);\n\n      if ((c1 | c2) & 0xff80)\n        throw new Error('Invalid base64 string.');\n\n      const t1 = table[c1];\n      const t2 = table[c2];\n\n      if ((t1 | t2) < 0)\n        throw new Error('Invalid base64 string.');\n\n      data[j++] = (t1 << 2) | (t2 >> 4);\n\n      if (t2 & 15)\n        throw new Error('Invalid base64 string.');\n\n      break;\n    }\n\n    case 3: {\n      const c1 = str.charCodeAt(i++);\n      const c2 = str.charCodeAt(i++);\n      const c3 = str.charCodeAt(i++);\n\n      if ((c1 | c2 | c3) & 0xff80)\n        throw new Error('Invalid base64 string.');\n\n      const t1 = table[c1];\n      const t2 = table[c2];\n      const t3 = table[c3];\n\n      if ((t1 | t2 | t3) < 0)\n        throw new Error('Invalid base64 string.');\n\n      data[j++] = (t1 << 2) | (t2 >> 4);\n      data[j++] = (t2 << 4) | (t3 >> 2);\n\n      if (t3 & 3)\n        throw new Error('Invalid base64 string.');\n\n      break;\n    }\n  }\n\n  assert(j === size);\n\n  return data;\n}\n\n/*\n * Testing\n */\n\nfunction _test(str, table) {\n  assert(typeof str === 'string');\n\n  let len = str.length;\n\n  if (len > 0 && str[len - 1] === '=')\n    len -= 1;\n\n  if (len > 0 && str[len - 1] === '=')\n    len -= 1;\n\n  if ((len & 3) === 1)\n    return false;\n\n  for (let i = 0; i < len; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch & 0xff80)\n      return false;\n\n    if (table[ch] === -1)\n      return false;\n  }\n\n  switch (len & 3) {\n    case 1:\n      return false;\n    case 2:\n      return (table[str.charCodeAt(len - 1)] & 15) === 0;\n    case 3:\n      return (table[str.charCodeAt(len - 1)] & 3) === 0;\n  }\n\n  return true;\n}\n\n/*\n * Base64\n */\n\nfunction encode(data) {\n  return _encode(data, CHARSET, true);\n}\n\nfunction decode(str) {\n  const size = decodeSize(str);\n\n  if (!checkPadding(str, size))\n    throw new Error('Invalid base64 padding.');\n\n  return _decode(str, TABLE, size);\n}\n\nfunction test(str) {\n  const size = decodeSize(str);\n\n  if (!checkPadding(str, size))\n    return false;\n\n  return _test(str, TABLE);\n}\n\n/*\n * Base64-URL\n */\n\nfunction encodeURL(data) {\n  return _encode(data, CHARSET_URL, false);\n}\n\nfunction decodeURL(str) {\n  const size = decodeSize(str);\n\n  if (!checkPadding(str, 0))\n    throw new Error('Invalid base64 padding.');\n\n  return _decode(str, TABLE_URL, size);\n}\n\nfunction testURL(str) {\n  if (!checkPadding(str, 0))\n    return false;\n\n  return _test(str, TABLE_URL);\n}\n\n/*\n * Helpers\n */\n\nfunction decodeSize(str) {\n  assert(typeof str === 'string');\n\n  let len = str.length;\n\n  if (len > 0 && str[len - 1] === '=')\n    len -= 1;\n\n  if (len > 0 && str[len - 1] === '=')\n    len -= 1;\n\n  let size = (len >>> 2) * 3;\n\n  const rem = len & 3;\n\n  if (rem)\n    size += rem - 1;\n\n  return size;\n}\n\nfunction checkPadding(str, size) {\n  assert(typeof str === 'string');\n\n  switch (size % 3) {\n    case 0: {\n      if (str.length === 0)\n        return true;\n\n      if (str.length === 1)\n        return str[0] !== '=';\n\n      return str[str.length - 2] !== '='\n          && str[str.length - 1] !== '=';\n    }\n\n    case 1: {\n      return str.length >= 4\n          && str[str.length - 2] === '='\n          && str[str.length - 1] === '=';\n    }\n\n    case 2: {\n      return str.length >= 4\n          && str[str.length - 2] !== '='\n          && str[str.length - 1] === '=';\n    }\n\n    default: {\n      throw new Error('unreachable');\n    }\n  }\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.encode = encode;\nexports.decode = decode;\nexports.test = test;\nexports.encodeURL = encodeURL;\nexports.decodeURL = decodeURL;\nexports.testURL = testURL;\n","/*!\n * safe.js - constant-time equals for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009 The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Resources:\n *   https://github.com/golang/go/blob/master/src/crypto/subtle/constant_time.go\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\n\n/*\n * Safe\n */\n\nfunction safeCompare(x, y) {\n  assert(Buffer.isBuffer(x));\n  assert(Buffer.isBuffer(y));\n\n  if (safeEqualInt(x.length, 0))\n    return safeEqualInt(y.length, 0);\n\n  // Assumes `y` is the \"constant size\"\n  // parameter. Note that constant size\n  // doesn't necessarily mean secret.\n  // Assuming we have a constant-size\n  // secret key or passphrase. This\n  // function should be called as:\n  //\n  // if (!safeCompare(input, key))\n  //   throw new Error('Bad passphrase.');\n  let v = x.length ^ y.length;\n\n  for (let i = 0; i < y.length; i++)\n    v |= x[i % x.length] ^ y[i];\n\n  return (v - 1) >>> 31;\n}\n\nfunction safeEqual(x, y) {\n  assert(Buffer.isBuffer(x));\n  assert(Buffer.isBuffer(y));\n\n  // Assumes the lengths of both\n  // `x` and `y` are not secret.\n  if (!safeEqualInt(x.length, y.length))\n    return 0;\n\n  let v = 0;\n\n  for (let i = 0; i < x.length; i++)\n    v |= x[i] ^ y[i];\n\n  return (v - 1) >>> 31;\n}\n\nfunction safeEqualByte(x, y) {\n  return safeEqualInt(x & 0xff, y & 0xff);\n}\n\nfunction safeEqualInt(x, y) {\n  return ((x ^ y) - 1) >>> 31;\n}\n\nfunction safeSelect(x, y, v) {\n  return (x & (v - 1)) | (y & ~(v - 1));\n}\n\nfunction safeLT(x, y) {\n  return (x - y) >>> 31;\n}\n\nfunction safeLTE(x, y) {\n  return (x - y - 1) >>> 31;\n}\n\nfunction safeGT(x, y) {\n  return (y - x) >>> 31;\n}\n\nfunction safeGTE(x, y) {\n  return (y - x - 1) >>> 31;\n}\n\nfunction safeMin(x, y) {\n  return safeSelect(x, y, safeLT(y, x));\n}\n\nfunction safeMax(x, y) {\n  return safeSelect(x, y, safeGT(y, x));\n}\n\nfunction safeAbs(x) {\n  return (x | 0) * ((x >> 31) | 1);\n}\n\nfunction safeBool(x) {\n  return ((x >> 31) | (-x >> 31)) & 1;\n}\n\nfunction safeCopy(x, y, v) {\n  assert(Buffer.isBuffer(x));\n  assert(Buffer.isBuffer(y));\n  assert(safeEqualInt(x.length, y.length));\n\n  const xmask = (v - 1) & 0xff;\n  const ymask = ~(v - 1) & 0xff;\n\n  for (let i = 0; i < x.length; i++)\n    x[i] = (x[i] & xmask) | (y[i] & ymask);\n}\n\n/*\n * Expose\n */\n\nexports.safeCompare = safeCompare;\nexports.safeEqual = safeEqual;\nexports.safeEqualByte = safeEqualByte;\nexports.safeEqualInt = safeEqualInt;\nexports.safeSelect = safeSelect;\nexports.safeLT = safeLT;\nexports.safeLTE = safeLTE;\nexports.safeGT = safeGT;\nexports.safeGTE = safeGTE;\nexports.safeMin = safeMin;\nexports.safeMax = safeMax;\nexports.safeAbs = safeAbs;\nexports.safeBool = safeBool;\nexports.safeCopy = safeCopy;\n","/*!\n * rsa.js - RSA for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009 The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Parts of this software are based on indutny/miller-rabin:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/miller-rabin\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/RSA_(cryptosystem)\n *   https://tools.ietf.org/html/rfc3447\n *   https://tools.ietf.org/html/rfc8017\n *   https://github.com/openssl/openssl/blob/master/crypto/rsa/rsa_ossl.c\n *   https://github.com/openssl/openssl/blob/master/crypto/rsa/rsa_sign.c\n *   https://github.com/openssl/openssl/blob/master/crypto/rsa/rsa_oaep.c\n *   https://github.com/openssl/openssl/blob/master/crypto/rsa/rsa_pss.c\n *   https://github.com/openssl/openssl/blob/master/crypto/rsa/rsa_pk1.c\n *   https://github.com/golang/go/blob/master/src/crypto/rsa/rsa.go\n *   https://github.com/golang/go/blob/master/src/crypto/rsa/pkcs1v15.go\n *   https://github.com/golang/go/blob/master/src/crypto/rsa/pss.go\n *   https://github.com/golang/go/blob/master/src/crypto/subtle/constant_time.go\n *   https://github.com/ARMmbed/mbed-crypto/blob/master/library/rsa.c\n *\n * References:\n *\n *   [RFC8017] PKCS #1: RSA Cryptography Specifications Version 2.2\n *     K. Moriarty, B. Kaliski, J. Jonsson, A. Rusch\n *     https://tools.ietf.org/html/rfc8017\n *\n *   [FIPS186] Federal Information Processing Standards Publication 186-4\n *     National Institute of Standards and Technology\n *     https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst BN = require('./bn');\nconst rng = require('./random');\nconst {randomPrime} = require('./internal/primes');\nconst base64 = require('./base64');\nconst asn1 = require('./internal/asn1');\nconst safe = require('./safe');\n\nconst {\n  safeEqual,\n  safeEqualByte,\n  safeSelect,\n  safeLTE\n} = safe;\n\n/*\n * Constants\n */\n\nconst DEFAULT_BITS = 2048;\nconst DEFAULT_EXP = 65537;\nconst MIN_BITS = 512;\nconst MAX_BITS = 16384;\nconst MIN_EXP = 3;\nconst MAX_EXP = (2 ** 33) - 1;\nconst MAX_EXP_BITS = 33;\nconst SALT_LENGTH_AUTO = 0;\nconst SALT_LENGTH_HASH = -1;\nconst PREFIX = Buffer.alloc(8, 0x00);\nconst EMPTY = Buffer.alloc(0);\n\n/**\n * PKCS1v1.5+ASN.1 DigestInfo prefixes.\n * @see [RFC8017] Page 45, Section 9.2.\n * @see [RFC8017] Page 63, Section B.1.\n * @const {Object}\n */\n\nconst digestInfo = {\n  __proto__: null,\n  BLAKE2B160: Buffer.from('3027300f060b2b060104018d3a0c02010505000414', 'hex'),\n  BLAKE2B256: Buffer.from('3033300f060b2b060104018d3a0c02010805000420', 'hex'),\n  BLAKE2B384: Buffer.from('3043300f060b2b060104018d3a0c02010c05000430', 'hex'),\n  BLAKE2B512: Buffer.from('3053300f060b2b060104018d3a0c02011005000440', 'hex'),\n  BLAKE2S128: Buffer.from('3023300f060b2b060104018d3a0c02020405000410', 'hex'),\n  BLAKE2S160: Buffer.from('3027300f060b2b060104018d3a0c02020505000414', 'hex'),\n  BLAKE2S224: Buffer.from('302f300f060b2b060104018d3a0c0202070500041c', 'hex'),\n  BLAKE2S256: Buffer.from('3033300f060b2b060104018d3a0c02020805000420', 'hex'),\n  GOST94: Buffer.from('302e300a06062a850302021405000420', 'hex'),\n  HASH160: Buffer.from([20]),\n  HASH256: Buffer.from([32]),\n  KECCAK224: Buffer.from([28]),\n  KECCAK256: Buffer.from([32]),\n  KECCAK384: Buffer.from([48]),\n  KECCAK512: Buffer.from([64]),\n  MD2: Buffer.from('3020300c06082a864886f70d020205000410', 'hex'),\n  MD4: Buffer.from('3020300c06082a864886f70d020405000410', 'hex'),\n  MD5: Buffer.from('3020300c06082a864886f70d020505000410', 'hex'),\n  MD5SHA1: Buffer.from([36]),\n  RIPEMD160: Buffer.from('3021300906052b2403020105000414', 'hex'),\n  SHA1: Buffer.from('3021300906052b0e03021a05000414', 'hex'),\n  SHA224: Buffer.from('302d300d06096086480165030402040500041c', 'hex'),\n  SHA256: Buffer.from('3031300d060960864801650304020105000420', 'hex'),\n  SHA384: Buffer.from('3041300d060960864801650304020205000430', 'hex'),\n  SHA512: Buffer.from('3051300d060960864801650304020305000440', 'hex'),\n  SHA3_224: Buffer.from('302d300d06096086480165030402070500041c', 'hex'),\n  SHA3_256: Buffer.from('3031300d060960864801650304020805000420', 'hex'),\n  SHA3_384: Buffer.from('3041300d060960864801650304020905000430', 'hex'),\n  SHA3_512: Buffer.from('3051300d060960864801650304020a05000440', 'hex'),\n  SHAKE128: Buffer.from('3021300d060960864801650304020b05000410', 'hex'),\n  SHAKE256: Buffer.from('3031300d060960864801650304020c05000420', 'hex'),\n  WHIRLPOOL: Buffer.from('304e300a060628cf0603003705000440', 'hex')\n};\n\n/**\n * RSAPublicKey\n */\n\nclass RSAPublicKey {\n  constructor() {\n    this.n = new BN(0);\n    this.e = new BN(0);\n  }\n\n  bits() {\n    return this.n.bitLength();\n  }\n\n  size() {\n    return this.n.byteLength();\n  }\n\n  isSane() {\n    return this.n.sign() > 0\n        && this.e.sign() > 0\n        && this.n.bitLength() <= MAX_BITS\n        && this.e.bitLength() <= MAX_EXP_BITS;\n  }\n\n  verify() {\n    // Sanity checks.\n    if (!this.isSane())\n      return false;\n\n    // n >= 2^511 and n mod 2 != 0\n    if (this.n.bitLength() < MIN_BITS || !this.n.isOdd())\n      return false;\n\n    // e >= 3 and e mod 2 != 0\n    if (this.e.cmpn(MIN_EXP) < 0 || !this.e.isOdd())\n      return false;\n\n    return true;\n  }\n\n  encrypt(msg) {\n    // [RFC8017] Page 13, Section 5.1.1.\n    //           Page 16, Section 5.2.2.\n    assert(Buffer.isBuffer(msg));\n\n    const {n, e} = this;\n    const m = BN.decode(msg);\n\n    if (m.cmp(n) >= 0)\n      throw new Error('Invalid RSA message size.');\n\n    // c = m^e mod n\n    const c = m.powm(e, n);\n\n    return c.encode('be', n.byteLength());\n  }\n\n  encode() {\n    const size = asn1.sizeInt(this.n) + asn1.sizeInt(this.e);\n    const out = Buffer.alloc(asn1.sizeSeq(size));\n\n    let pos = 0;\n\n    pos = asn1.writeSeq(out, pos, size);\n    pos = asn1.writeInt(out, pos, this.n);\n    pos = asn1.writeInt(out, pos, this.e);\n\n    assert(pos === out.length);\n\n    return out;\n  }\n\n  decode(data) {\n    let pos = 0;\n\n    pos = asn1.readSeq(data, pos);\n\n    [this.n, pos] = asn1.readInt(data, pos);\n    [this.e, pos] = asn1.readInt(data, pos);\n\n    if (pos !== data.length)\n      throw new Error('Trailing bytes.');\n\n    return this;\n  }\n\n  static decode(data) {\n    return new RSAPublicKey().decode(data);\n  }\n}\n\n/**\n * RSAPrivateKey\n */\n\nclass RSAPrivateKey extends RSAPublicKey {\n  constructor() {\n    super();\n    this.d = new BN(0);\n    this.p = new BN(0);\n    this.q = new BN(0);\n    this.dp = new BN(0);\n    this.dq = new BN(0);\n    this.qi = new BN(0);\n  }\n\n  isSane() {\n    return this.n.sign() > 0\n        && this.e.sign() > 0\n        && this.d.sign() > 0\n        && this.p.sign() > 0\n        && this.q.sign() > 0\n        && this.dp.sign() > 0\n        && this.dq.sign() > 0\n        && this.qi.sign() > 0\n        && this.n.bitLength() <= MAX_BITS\n        && this.e.bitLength() <= MAX_EXP_BITS\n        && this.d.bitLength() <= MAX_BITS\n        && this.p.bitLength() <= MAX_BITS\n        && this.q.bitLength() <= MAX_BITS\n        && this.dp.bitLength() <= MAX_BITS\n        && this.dq.bitLength() <= MAX_BITS\n        && this.qi.bitLength() <= MAX_BITS;\n  }\n\n  verify() {\n    // Sanity checks.\n    if (!this.isSane())\n      return false;\n\n    // n >= 2^511 and n mod 2 != 0\n    if (this.n.bitLength() < MIN_BITS || !this.n.isOdd())\n      return false;\n\n    // e >= 3 and e mod 2 != 0\n    if (this.e.cmpn(MIN_EXP) < 0 || !this.e.isOdd())\n      return false;\n\n    // p >= 3 and p mod 2 != 0\n    if (this.p.cmpn(3) < 0 || !this.p.isOdd())\n      return false;\n\n    // q >= 3 and q mod 2 != 0\n    if (this.q.cmpn(3) < 0 || !this.q.isOdd())\n      return false;\n\n    // phi = (p - 1) * (q - 1)\n    const pm1 = this.p.subn(1);\n    const qm1 = this.q.subn(1);\n    const phi = pm1.mul(qm1);\n\n    // d >= 2 and d < phi\n    if (this.d.cmpn(2) < 0 || this.d.cmp(phi) >= 0)\n      return false;\n\n    // dp != 0 and dp < p - 1\n    if (this.dp.sign() === 0 || this.dp.cmp(pm1) >= 0)\n      return false;\n\n    // dq != 0 and dq < q - 1\n    if (this.dq.sign() === 0 || this.dq.cmp(qm1) >= 0)\n      return false;\n\n    // qi <= 2 and qi < p\n    if (this.qi.cmpn(2) < 0 || this.qi.cmp(this.p) >= 0)\n      return false;\n\n    // p != q\n    if (this.p.cmp(this.q) === 0)\n      return false;\n\n    // n == p * q\n    if (this.p.mul(this.q).cmp(this.n) !== 0)\n      return false;\n\n    // lam = lcm(p - 1, q - 1)\n    const lam = phi.div(pm1.gcd(qm1));\n\n    // e * d mod lam\n    if (this.e.mul(this.d).imod(lam).cmpn(1) !== 0)\n      return false;\n\n    // dp == d mod (p - 1)\n    if (this.d.mod(pm1).cmp(this.dp) !== 0)\n      return false;\n\n    // dq == d mod (q - 1)\n    if (this.d.mod(qm1).cmp(this.dq) !== 0)\n      return false;\n\n    // q * qi mod p == 1\n    if (this.q.mul(this.qi).imod(this.p).cmpn(1) !== 0)\n      return false;\n\n    return true;\n  }\n\n  decrypt(msg) {\n    // [RFC8017] Page 13, Section 5.1.2.\n    //           Page 15, Section 5.2.1.\n    assert(Buffer.isBuffer(msg));\n\n    const {n, e, p, q, dp, dq, qi} = this;\n\n    // Decode message.\n    const c = BN.decode(msg);\n\n    // Validate params.\n    if (c.cmp(n) >= 0)\n      throw new Error('Invalid RSA message size.');\n\n    // Generate blinding factor.\n    let b, bi;\n    for (;;) {\n      // s = random integer in [1,n-1]\n      const s = BN.random(rng, 1, n);\n\n      // bi = s^-1 mod n\n      try {\n        bi = s.invert(n);\n      } catch (e) {\n        continue;\n      }\n\n      // b = s^e mod n\n      b = s.powm(e, n);\n\n      break;\n    }\n\n    // Blind.\n    c.imul(b).imod(n);\n\n    // Leverage Chinese Remainder Theorem.\n    //\n    // Computation:\n    //\n    //   mp = c^(d mod p-1) mod p\n    //   mq = c^(d mod q-1) mod q\n    //   md = (mp - mq) / q mod p\n    //   m = (md * q + mq) mod n\n    const mp = c.powm(dp, p, true);\n    const mq = c.powm(dq, q, true);\n    const md = mp.sub(mq).mul(qi).imod(p);\n    const m = md.mul(q).iadd(mq).imod(n);\n\n    if (m.powm(e, n).cmp(c) !== 0)\n      throw new Error('Invalid RSA private key.');\n\n    // Unblind.\n    m.imul(bi).imod(n);\n\n    return m.encode('be', n.byteLength());\n  }\n\n  generate(bits, exponent) {\n    // [RFC8017] Page 9, Section 3.2.\n    // [FIPS186] Page 51, Appendix B.3.1\n    //           Page 55, Appendix B.3.3\n    //\n    // There are two methods for choosing `d`.\n    // Implementations differ on whether they\n    // use Euler's totient or the Carmichael\n    // function.\n    //\n    // The best explanation of Euler's phi vs.\n    // Carmichael's lambda I've seen comes from\n    // the crypto stackexchange[1].\n    //\n    // Note that both functions are _equivalent_\n    // when used with RSA, however, Carmichael's\n    // may lend itself to some perf benefits.\n    //\n    // [1] https://crypto.stackexchange.com/a/29595\n    assert((bits >>> 0) === bits);\n    assert(Number.isSafeInteger(exponent) && exponent >= 0);\n    assert(bits >= 64);\n    assert(exponent >= 3 && (exponent & 1) !== 0);\n\n    const e = new BN(exponent);\n\n    for (;;) {\n      const p = randomPrime((bits >>> 1) + (bits & 1));\n      const q = randomPrime(bits >>> 1);\n\n      if (p.cmp(q) === 0)\n        continue;\n\n      if (p.cmp(q) < 0)\n        p.swap(q);\n\n      if (p.sub(q).bitLength() <= (bits >>> 1) - 99)\n        continue;\n\n      const n = p.mul(q);\n\n      if (n.bitLength() !== bits)\n        continue;\n\n      // Euler's totient: (p - 1) * (q - 1).\n      const pm1 = p.subn(1);\n      const qm1 = q.subn(1);\n      const phi = pm1.mul(qm1);\n\n      if (e.gcd(phi).cmpn(1) !== 0)\n        continue;\n\n      // Carmichael's function: lcm(p - 1, q - 1).\n      const lam = phi.div(pm1.gcd(qm1));\n      const d = e.invert(lam);\n\n      if (d.bitLength() <= ((bits + 1) >>> 1))\n        continue;\n\n      const dp = d.mod(pm1);\n      const dq = d.mod(qm1);\n      const qi = q.invert(p);\n\n      this.n = n;\n      this.e = e;\n      this.d = d;\n      this.p = p;\n      this.q = q;\n      this.dp = dp;\n      this.dq = dq;\n      this.qi = qi;\n\n      return this;\n    }\n  }\n\n  async _generateSubtle(bits, exponent) {\n    assert((bits >>> 0) === bits);\n    assert(Number.isSafeInteger(exponent) && exponent >= 0);\n    assert(bits >= 64);\n    assert(exponent >= 3 && (exponent & 1) !== 0);\n\n    const crypto = global.crypto || global.msCrypto;\n\n    if (!crypto)\n      throw new Error('Crypto API not available.');\n\n    const {subtle} = crypto;\n\n    if (!subtle || !subtle.generateKey || !subtle.exportKey)\n      throw new Error('Subtle API not available.');\n\n    const e = new BN(exponent);\n\n    const algo = {\n      name: 'RSASSA-PKCS1-v1_5',\n      modulusLength: bits,\n      publicExponent: e.toArrayLike(Uint8Array, 'be', 8),\n      hash: { name: 'SHA-256' }\n    };\n\n    const ck = await subtle.generateKey(algo, true, ['sign']);\n    const jwk = await subtle.exportKey('jwk', ck.privateKey);\n    const p = BN.decode(base64.decodeURL(jwk.p));\n    const q = BN.decode(base64.decodeURL(jwk.q));\n\n    return this.fromPQE(p, q, e);\n  }\n\n  async generateAsync(bits, exponent) {\n    try {\n      return await this._generateSubtle(bits, exponent);\n    } catch (e) {\n      return this.generate(bits, exponent);\n    }\n  }\n\n  fromPQE(p, q, e) {\n    assert(p instanceof BN);\n    assert(q instanceof BN);\n    assert(e instanceof BN);\n\n    if (p.cmp(q) < 0)\n      [p, q] = [q, p];\n\n    if (p.cmp(q) === 0)\n      throw new Error('Invalid RSA private key.');\n\n    if (p.cmpn(3) < 0 || p.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (q.cmpn(3) < 0 || q.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (e.cmpn(MIN_EXP) < 0 || e.bitLength() > MAX_EXP_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (!p.isOdd() || !q.isOdd() || !e.isOdd())\n      throw new Error('Invalid RSA private key.');\n\n    const n = p.mul(q);\n\n    assert(n.isOdd());\n\n    if (n.bitLength() < MIN_BITS || n.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    const pm1 = p.subn(1);\n    const qm1 = q.subn(1);\n    const lam = pm1.lcm(qm1);\n    const d = e.invert(lam);\n    const dp = d.mod(pm1);\n    const dq = d.mod(qm1);\n    const qi = q.invert(p);\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.p = p;\n    this.q = q;\n    this.dp = dp;\n    this.dq = dq;\n    this.qi = qi;\n\n    return this;\n  }\n\n  fromPQD(p, q, d) {\n    assert(p instanceof BN);\n    assert(q instanceof BN);\n    assert(d instanceof BN);\n\n    if (p.cmpn(3) < 0 || p.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (q.cmpn(3) < 0 || q.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (!p.isOdd() || !q.isOdd())\n      throw new Error('Invalid RSA private key.');\n\n    const pm1 = p.subn(1);\n    const qm1 = q.subn(1);\n    const phi = pm1.mul(qm1);\n\n    if (d.cmpn(2) < 0 || d.cmp(phi) >= 0)\n      throw new Error('Invalid RSA private key.');\n\n    const lam = phi.div(pm1.gcd(qm1));\n    const e = d.invert(lam);\n\n    return this.fromPQE(p, q, e);\n  }\n\n  fromNED(n, e, d) {\n    // Factor an RSA modulus given (n, e, d).\n    //\n    // This is basically the same logic as the\n    // Miller-Rabin primality test[1][2].\n    //\n    // [1] https://crypto.stackexchange.com/questions/11509\n    // [2] https://crypto.stackexchange.com/questions/22374\n    assert(n instanceof BN);\n    assert(e instanceof BN);\n    assert(d instanceof BN);\n\n    if (n.sign() < 0)\n      throw new Error('Invalid RSA private key.');\n\n    if (n.bitLength() < MIN_BITS || n.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (e.cmpn(MIN_EXP) < 0 || e.bitLength() > MAX_EXP_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (d.cmpn(2) < 0 || d.bitLength() > MAX_BITS)\n      throw new Error('Invalid RSA private key.');\n\n    if (!n.isOdd() || !e.isOdd())\n      throw new Error('Invalid RSA private key.');\n\n    const f = e.mul(d).isubn(1);\n    const nm1 = n.subn(1);\n    const s = f.zeroBits();\n    const g = f.ushrn(s);\n\n    for (let i = 0; i < 64; i++) {\n      const a = BN.random(rng, 2, nm1);\n\n      let b = a.powm(g, n);\n\n      if (b.cmpn(1) === 0 || b.cmp(nm1) === 0)\n        continue;\n\n      for (let j = 1; j < s; j++) {\n        const c = b.sqr().imod(n);\n\n        if (c.cmpn(1) === 0) {\n          const p = n.gcd(b.subn(1));\n          const q = n.gcd(b.addn(1));\n\n          return this.fromPQE(p, q, e);\n        }\n\n        if (c.cmp(nm1) === 0)\n          break;\n\n        b = c;\n      }\n    }\n\n    throw new Error('Invalid RSA private key.');\n  }\n\n  toPublic() {\n    const pub = new RSAPublicKey();\n\n    pub.n = this.n;\n    pub.e = this.e;\n\n    return pub;\n  }\n\n  encode() {\n    let size = 0;\n\n    size += asn1.sizeVersion(0);\n    size += asn1.sizeInt(this.n);\n    size += asn1.sizeInt(this.e);\n    size += asn1.sizeInt(this.d);\n    size += asn1.sizeInt(this.p);\n    size += asn1.sizeInt(this.q);\n    size += asn1.sizeInt(this.dp);\n    size += asn1.sizeInt(this.dq);\n    size += asn1.sizeInt(this.qi);\n\n    const out = Buffer.alloc(asn1.sizeSeq(size));\n\n    let pos = 0;\n\n    pos = asn1.writeSeq(out, pos, size);\n    pos = asn1.writeVersion(out, pos, 0);\n    pos = asn1.writeInt(out, pos, this.n);\n    pos = asn1.writeInt(out, pos, this.e);\n    pos = asn1.writeInt(out, pos, this.d);\n    pos = asn1.writeInt(out, pos, this.p);\n    pos = asn1.writeInt(out, pos, this.q);\n    pos = asn1.writeInt(out, pos, this.dp);\n    pos = asn1.writeInt(out, pos, this.dq);\n    pos = asn1.writeInt(out, pos, this.qi);\n\n    assert(pos === out.length);\n\n    return out;\n  }\n\n  decode(data) {\n    let pos = 0;\n\n    pos = asn1.readSeq(data, pos);\n    pos = asn1.readVersion(data, pos, 0);\n\n    [this.n, pos] = asn1.readInt(data, pos);\n    [this.e, pos] = asn1.readInt(data, pos);\n    [this.d, pos] = asn1.readInt(data, pos);\n    [this.p, pos] = asn1.readInt(data, pos);\n    [this.q, pos] = asn1.readInt(data, pos);\n    [this.dp, pos] = asn1.readInt(data, pos);\n    [this.dq, pos] = asn1.readInt(data, pos);\n    [this.qi, pos] = asn1.readInt(data, pos);\n\n    if (pos !== data.length)\n      throw new Error('Trailing bytes.');\n\n    return this;\n  }\n\n  static generate(bits, exponent) {\n    return new RSAPrivateKey().generate(bits, exponent);\n  }\n\n  static async generateAsync(bits, exponent) {\n    return new RSAPrivateKey().generateAsync(bits, exponent);\n  }\n\n  static fromPQE(p, q, e) {\n    return new RSAPrivateKey().fromPQE(p, q, e);\n  }\n\n  static fromPQD(p, q, d) {\n    return new RSAPrivateKey().fromPQD(p, q, d);\n  }\n\n  static fromNED(n, e, d) {\n    return new RSAPrivateKey().fromNED(n, e, d);\n  }\n\n  static decode(data) {\n    return new RSAPrivateKey().decode(data);\n  }\n}\n\n/**\n * Generate a private key.\n * @param {Number} [bits=2048]\n * @param {Number} [exponent=65537]\n * @returns {Buffer} Private key.\n */\n\nfunction privateKeyGenerate(bits, exponent) {\n  if (bits == null)\n    bits = DEFAULT_BITS;\n\n  if (exponent == null)\n    exponent = DEFAULT_EXP;\n\n  assert((bits >>> 0) === bits);\n  assert(Number.isSafeInteger(exponent) && exponent >= 0);\n\n  if (bits < MIN_BITS || bits > MAX_BITS)\n    throw new RangeError(`\"bits\" ranges from ${MIN_BITS} to ${MAX_BITS}.`);\n\n  if (exponent < MIN_EXP || exponent > MAX_EXP)\n    throw new RangeError(`\"exponent\" ranges from ${MIN_EXP} to ${MAX_EXP}.`);\n\n  if (exponent === 1 || (exponent & 1) === 0)\n    throw new RangeError('\"exponent\" must be odd.');\n\n  const key = RSAPrivateKey.generate(bits, exponent);\n\n  return key.encode();\n}\n\n/**\n * Generate a private key.\n * @param {Number} [bits=2048]\n * @param {Number} [exponent=65537]\n * @returns {Buffer} Private key.\n */\n\nasync function privateKeyGenerateAsync(bits, exponent) {\n  if (bits == null)\n    bits = DEFAULT_BITS;\n\n  if (exponent == null)\n    exponent = DEFAULT_EXP;\n\n  assert((bits >>> 0) === bits);\n  assert(Number.isSafeInteger(exponent) && exponent >= 0);\n\n  if (bits < MIN_BITS || bits > MAX_BITS)\n    throw new RangeError(`\"bits\" ranges from ${MIN_BITS} to ${MAX_BITS}.`);\n\n  if (exponent < MIN_EXP || exponent > MAX_EXP)\n    throw new RangeError(`\"exponent\" ranges from ${MIN_EXP} to ${MAX_EXP}.`);\n\n  if (exponent === 1 || (exponent & 1) === 0)\n    throw new RangeError('\"exponent\" must be odd.');\n\n  const key = await RSAPrivateKey.generateAsync(bits, exponent);\n\n  return key.encode();\n}\n\n/**\n * Get a private key's modulus size in bits.\n * @param {Buffer} key\n * @returns {Number}\n */\n\nfunction privateKeyBits(key) {\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  return k.bits();\n}\n\n/**\n * Verify a private key.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction privateKeyVerify(key) {\n  // [RFC8017] Page 9, Section 3.2.\n  assert(Buffer.isBuffer(key));\n\n  let k;\n\n  try {\n    k = RSAPrivateKey.decode(key);\n  } catch (e) {\n    return false;\n  }\n\n  return k.verify();\n}\n\n/**\n * Import a private key from an object.\n * @param {Object} json\n * @returns {Buffer}\n */\n\nfunction privateKeyImport(json) {\n  // [RFC8017] Page 55, Section A.1.2.\n  assert(json && typeof json === 'object');\n\n  let k = new RSAPrivateKey();\n\n  if (json.n != null)\n    k.n = BN.decode(json.n);\n\n  if (json.e != null)\n    k.e = BN.decode(json.e);\n\n  if (json.d != null)\n    k.d = BN.decode(json.d);\n\n  if (json.p != null)\n    k.p = BN.decode(json.p);\n\n  if (json.q != null)\n    k.q = BN.decode(json.q);\n\n  if (json.dp != null)\n    k.dp = BN.decode(json.dp);\n\n  if (json.dq != null)\n    k.dq = BN.decode(json.dq);\n\n  if (json.qi != null)\n    k.qi = BN.decode(json.qi);\n\n  if (!k.verify()) {\n    if (!k.p.isZero() && !k.q.isZero()) {\n      if (!k.e.isZero())\n        k = RSAPrivateKey.fromPQE(k.p, k.q, k.e);\n      else\n        k = RSAPrivateKey.fromPQD(k.p, k.q, k.d);\n    } else {\n      k = RSAPrivateKey.fromNED(k.n, k.e, k.d);\n    }\n  }\n\n  return k.encode();\n}\n\n/**\n * Export a private key to an object.\n * @param {Buffer} key\n * @returns {Object}\n */\n\nfunction privateKeyExport(key) {\n  // [RFC8017] Page 55, Section A.1.2.\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  return {\n    n: k.n.encode(),\n    e: k.e.encode(),\n    d: k.d.encode(),\n    p: k.p.encode(),\n    q: k.q.encode(),\n    dp: k.dp.encode(),\n    dq: k.dq.encode(),\n    qi: k.qi.encode()\n  };\n}\n\n/**\n * Create a public key from a private key.\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction publicKeyCreate(key) {\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  const p = k.toPublic();\n\n  return p.encode();\n}\n\n/**\n * Get a public key's modulus size in bits.\n * @param {Buffer} key\n * @returns {Number}\n */\n\nfunction publicKeyBits(key) {\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  return k.bits();\n}\n\n/**\n * Verify a public key.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction publicKeyVerify(key) {\n  // [RFC8017] Page 8, Section 3.1.\n  assert(Buffer.isBuffer(key));\n\n  let k;\n\n  try {\n    k = RSAPublicKey.decode(key);\n  } catch (e) {\n    return false;\n  }\n\n  return k.verify();\n}\n\n/**\n * Import a public key from an object.\n * @param {Object} json\n * @returns {Buffer}\n */\n\nfunction publicKeyImport(json) {\n  // [RFC8017] Page 54, Section A.1.1.\n  assert(json && typeof json === 'object');\n\n  const k = new RSAPublicKey();\n\n  if (json.n != null)\n    k.n = BN.decode(json.n);\n\n  if (json.e != null)\n    k.e = BN.decode(json.e);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  return k.encode();\n}\n\n/**\n * Export a public key to an object.\n * @param {Buffer} key\n * @returns {Object}\n */\n\nfunction publicKeyExport(key) {\n  // [RFC8017] Page 54, Section A.1.1.\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  return {\n    n: k.n.encode(),\n    e: k.e.encode()\n  };\n}\n\n/**\n * Sign a message (PKCS1v1.5).\n * @param {Object|String|null} hash\n * @param {Buffer} msg\n * @param {Buffer} key - Private key.\n * @returns {Buffer} PKCS#1v1.5-formatted signature.\n */\n\nfunction sign(hash, msg, key) {\n  // [RFC8017] Page 36, Section 8.2.1.\n  //           Page 45, Section 9.2.\n  if (hash && typeof hash.id === 'string')\n    hash = hash.id;\n\n  assert(hash == null || typeof hash === 'string');\n  assert(Buffer.isBuffer(msg));\n\n  const [prefix, hlen] = getDigestInfo(hash, msg);\n\n  if (!prefix)\n    throw new Error('Unknown RSA hash function.');\n\n  if (msg.length !== hlen)\n    throw new Error('Invalid RSA message size.');\n\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  const tlen = prefix.length + hlen;\n  const klen = k.size();\n\n  if (klen < tlen + 11)\n    throw new Error('Invalid RSA message size.');\n\n  // EM = 0x00 || 0x01 || PS || 0x00 || T\n  const em = Buffer.alloc(klen);\n\n  em[0] = 0x00;\n  em[1] = 0x01;\n\n  for (let i = 2; i < klen - tlen - 1; i++)\n    em[i] = 0xff;\n\n  em[klen - tlen - 1] = 0x00;\n\n  prefix.copy(em, klen - tlen);\n  msg.copy(em, klen - hlen);\n\n  return k.decrypt(em);\n}\n\n/**\n * Verify a signature (PKCS1v1.5).\n * @param {Object|String|null} hash\n * @param {Buffer} msg\n * @param {Buffer} sig - PKCS#1v1.5-formatted.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction verify(hash, msg, sig, key) {\n  if (hash && typeof hash.id === 'string')\n    hash = hash.id;\n\n  assert(hash == null || typeof hash === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(sig));\n  assert(Buffer.isBuffer(key));\n\n  try {\n    return _verify(hash, msg, sig, key);\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Verify a signature (PKCS1v1.5).\n * @private\n * @param {String} hash\n * @param {Buffer} msg\n * @param {Buffer} sig - PKCS#1v1.5-formatted.\n * @param {Buffer} key\n * @returns {Boolean}\n */\n\nfunction _verify(hash, msg, sig, key) {\n  // [RFC8017] Page 37, Section 8.2.2.\n  //           Page 45, Section 9.2.\n  const [prefix, hlen] = getDigestInfo(hash, msg);\n\n  if (!prefix)\n    return false;\n\n  if (msg.length !== hlen)\n    return false;\n\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    return false;\n\n  const klen = k.size();\n\n  if (sig.length !== klen)\n    return false;\n\n  const tlen = prefix.length + hlen;\n\n  if (klen < tlen + 11)\n    return false;\n\n  const em = k.encrypt(sig);\n\n  // EM = 0x00 || 0x01 || PS || 0x00 || T\n  let ok = 1;\n\n  ok &= safeEqualByte(em[0], 0x00);\n  ok &= safeEqualByte(em[1], 0x01);\n\n  for (let i = 2; i < klen - tlen - 1; i++)\n    ok &= safeEqualByte(em[i], 0xff);\n\n  ok &= safeEqualByte(em[klen - tlen - 1], 0x00);\n  ok &= safeEqual(em.slice(klen - tlen, klen - hlen), prefix);\n  ok &= safeEqual(em.slice(klen - hlen, klen), msg);\n\n  return ok === 1;\n}\n\n/**\n * Encrypt a message with public key (PKCS1v1.5).\n * @param {Buffer} msg\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction encrypt(msg, key) {\n  // [RFC8017] Page 28, Section 7.2.1.\n  assert(Buffer.isBuffer(msg));\n\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  const klen = k.size();\n\n  if (msg.length > klen - 11)\n    throw new Error('Invalid RSA message size.');\n\n  // EM = 0x00 || 0x02 || PS || 0x00 || M\n  const em = Buffer.alloc(klen);\n  const mlen = msg.length;\n  const plen = klen - mlen - 3;\n\n  em[0] = 0x00;\n  em[1] = 0x02;\n\n  rng.randomFill(em, 2, plen);\n\n  for (let i = 2; i < 2 + plen; i++) {\n    while (em[i] === 0x00)\n      rng.randomFill(em, i, 1);\n  }\n\n  em[klen - mlen - 1] = 0x00;\n\n  msg.copy(em, klen - mlen);\n\n  return k.encrypt(em);\n}\n\n/**\n * Decrypt a message with private key (PKCS1v1.5).\n * @param {Buffer} msg\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction decrypt(msg, key) {\n  // [RFC8017] Page 29, Section 7.2.2.\n  assert(Buffer.isBuffer(msg));\n\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  const klen = k.size();\n\n  if (klen < 11)\n    throw new Error('Invalid RSA private key.');\n\n  if (msg.length !== klen)\n    throw new Error('Invalid RSA message size.');\n\n  // EM = 0x00 || 0x02 || PS || 0x00 || M\n  const em = k.decrypt(msg);\n  const zero = safeEqualByte(em[0], 0x00);\n  const two = safeEqualByte(em[1], 0x02);\n\n  let index = 0;\n  let looking = 1;\n\n  for (let i = 2; i < em.length; i++) {\n    const equals0 = safeEqualByte(em[i], 0x00);\n\n    index = safeSelect(index, i, looking & equals0);\n    looking = safeSelect(looking, 0, equals0);\n  }\n\n  const validPS = safeLTE(2 + 8, index);\n  const valid = zero & two & (looking ^ 1) & validPS;\n  const offset = safeSelect(0, index + 1, valid);\n\n  if (valid === 0)\n    throw new Error('Invalid RSA ciphertext.');\n\n  return em.slice(offset);\n}\n\n/**\n * Sign a message (PSS).\n * @param {Object} hash\n * @param {Buffer} msg\n * @param {Buffer} key - Private key.\n * @param {Number} [saltLen=SALT_LENGTH_HASH]\n * @returns {Buffer} PSS-formatted signature.\n */\n\nfunction signPSS(hash, msg, key, saltLen) {\n  // [RFC8017] Page 33, Section 8.1.1.\n  if (saltLen == null)\n    saltLen = SALT_LENGTH_HASH;\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert((saltLen | 0) === saltLen);\n\n  if (msg.length !== hash.size)\n    throw new Error('Invalid RSA message size.');\n\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  const bits = k.bits();\n  const klen = (bits + 7) >>> 3;\n  const emlen = (bits + 6) >>> 3;\n\n  if (saltLen === SALT_LENGTH_AUTO)\n    saltLen = emlen - 2 - hash.size;\n  else if (saltLen === SALT_LENGTH_HASH)\n    saltLen = hash.size;\n\n  if (saltLen < 0 || saltLen > klen)\n    throw new Error('Invalid PSS salt length.');\n\n  const salt = rng.randomBytes(saltLen);\n  const em = pssEncode(hash, msg, bits - 1, salt);\n\n  // Note that `em` may be one byte less\n  // than the modulus size in the case\n  // of (bits - 1) mod 8 == 0.\n  return k.decrypt(em);\n}\n\n/**\n * Verify a signature (PSS).\n * @param {Object} hash\n * @param {Buffer} msg\n * @param {Buffer} sig - PSS-formatted.\n * @param {Buffer} key\n * @param {Number} [saltLen=SALT_LENGTH_HASH]\n * @returns {Boolean}\n */\n\nfunction verifyPSS(hash, msg, sig, key, saltLen) {\n  if (saltLen == null)\n    saltLen = SALT_LENGTH_HASH;\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(sig));\n  assert(Buffer.isBuffer(key));\n  assert((saltLen | 0) === saltLen);\n\n  try {\n    return _verifyPSS(hash, msg, sig, key, saltLen);\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Verify a signature (PSS).\n * @private\n * @param {Object} hash\n * @param {Buffer} msg\n * @param {Buffer} sig - PSS-formatted.\n * @param {Buffer} key\n * @param {Number} saltLen\n * @returns {Boolean}\n */\n\nfunction _verifyPSS(hash, msg, sig, key, saltLen) {\n  // [RFC8017] Page 34, Section 8.1.2.\n  if (msg.length !== hash.size)\n    return false;\n\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    return false;\n\n  const bits = k.bits();\n  const klen = (bits + 7) >>> 3;\n\n  if (sig.length !== klen)\n    return false;\n\n  if (saltLen === SALT_LENGTH_AUTO)\n    saltLen = 0; // Handled in pssVerify.\n  else if (saltLen === SALT_LENGTH_HASH)\n    saltLen = hash.size;\n\n  if (saltLen < 0 || saltLen > klen)\n    return false;\n\n  let em = k.encrypt(sig);\n\n  // Edge case: the encoding crossed a\n  // a byte boundary. Our encryption\n  // function pads to the modulus size\n  // by default, meaning there's one\n  // extra zero byte prepended.\n  if (((bits - 1) & 7) === 0) {\n    if (em[0] !== 0x00)\n      return false;\n\n    em = em.slice(1);\n  }\n\n  return pssVerify(hash, msg, em, bits - 1, saltLen);\n}\n\n/**\n * Encrypt a message with public key (OAEP).\n * @param {Object} hash\n * @param {Buffer} msg\n * @param {Buffer} key\n * @param {Buffer?} label\n * @returns {Buffer}\n */\n\nfunction encryptOAEP(hash, msg, key, label) {\n  // [RFC8017] Page 22, Section 7.1.1.\n  if (label == null)\n    label = EMPTY;\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(label));\n\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  const klen = k.size();\n  const mlen = msg.length;\n  const hlen = hash.size;\n\n  if (mlen > klen - 2 * hlen - 2)\n    throw new Error('Invalid RSA message size.');\n\n  // EM = 0x00 || (seed) || (Hash(L) || PS || 0x01 || M)\n  const em = Buffer.alloc(klen);\n  const lhash = hash.digest(label);\n  const seed = em.slice(1, 1 + hlen);\n  const db = em.slice(1 + hlen);\n  const dlen = db.length;\n\n  em[0] = 0x00;\n\n  rng.randomFill(seed, 0, seed.length);\n\n  lhash.copy(db, 0);\n  db.fill(0x00, hlen, dlen - mlen - 1);\n  db[dlen - mlen - 1] = 0x01;\n  msg.copy(db, dlen - mlen);\n\n  mgf1xor(hash, db, seed);\n  mgf1xor(hash, seed, db);\n\n  return k.encrypt(em);\n}\n\n/**\n * Decrypt a message with private key (OAEP).\n * @param {Object} hash\n * @param {Buffer} msg\n * @param {Buffer} key\n * @param {Buffer?} label\n * @returns {Buffer}\n */\n\nfunction decryptOAEP(hash, msg, key, label) {\n  // [RFC8017] Page 25, Section 7.1.2.\n  if (label == null)\n    label = EMPTY;\n\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(label));\n\n  const k = RSAPrivateKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA private key.');\n\n  const klen = k.size();\n  const mlen = msg.length;\n  const hlen = hash.size;\n\n  if (klen < hlen * 2 + 2)\n    throw new Error('Invalid RSA private key size.');\n\n  if (mlen !== klen)\n    throw new Error('Invalid RSA message size.');\n\n  // EM = 0x00 || (seed) || (Hash(L) || PS || 0x01 || M)\n  const em = k.decrypt(msg);\n  const expect = hash.digest(label);\n  const zero = safeEqualByte(em[0], 0x00);\n  const seed = em.slice(1, hlen + 1);\n  const db = em.slice(hlen + 1);\n\n  mgf1xor(hash, seed, db);\n  mgf1xor(hash, db, seed);\n\n  const lhash = db.slice(0, hlen);\n  const lvalid = safeEqual(lhash, expect);\n  const rest = db.slice(hlen);\n\n  let looking = 1;\n  let index = 0;\n  let invalid = 0;\n\n  for (let i = 0; i < rest.length; i++) {\n    const equals0 = safeEqualByte(rest[i], 0x00);\n    const equals1 = safeEqualByte(rest[i], 0x01);\n\n    index = safeSelect(index, i, looking & equals1);\n    looking = safeSelect(looking, 0, equals1);\n    invalid = safeSelect(invalid, 1, looking & (equals0 ^ 1));\n  }\n\n  const valid = zero & lvalid & (invalid ^ 1) & (looking ^ 1);\n\n  if (valid === 0)\n    throw new Error('Invalid RSA ciphertext.');\n\n  return rest.slice(index + 1);\n}\n\n/**\n * \"Veil\" an RSA ciphertext to hide the key size.\n * @param {Buffer} msg\n * @param {Number} bits\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction veil(msg, bits, key) {\n  assert(Buffer.isBuffer(msg));\n  assert((bits >>> 0) === bits);\n\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  if (msg.length !== k.size())\n    throw new Error('Invalid RSA ciphertext.');\n\n  if (bits < k.bits())\n    throw new Error('Cannot make ciphertext smaller.');\n\n  const bytes = (bits + 7) >>> 3;\n  const c = BN.decode(msg);\n\n  if (c.cmp(k.n) >= 0)\n    throw new Error('Invalid RSA ciphertext.');\n\n  const vmax = BN.shift(1, bits);\n  const rmax = vmax.sub(c).iadd(k.n).isubn(1).div(k.n);\n\n  assert(rmax.sign() > 0);\n\n  let v = vmax;\n\n  while (v.cmp(vmax) >= 0) {\n    const r = BN.random(rng, 0, rmax);\n\n    v = c.add(r.mul(k.n));\n  }\n\n  assert(v.mod(k.n).cmp(c) === 0);\n  assert(v.bitLength() <= bits);\n\n  return v.encode('be', bytes);\n}\n\n/**\n * \"Unveil\" a veiled RSA ciphertext.\n * @param {Buffer} msg\n * @param {Number} bits\n * @param {Buffer} key\n * @returns {Buffer}\n */\n\nfunction unveil(msg, bits, key) {\n  assert(Buffer.isBuffer(msg));\n  assert((bits >>> 0) === bits);\n\n  const k = RSAPublicKey.decode(key);\n\n  if (!k.verify())\n    throw new Error('Invalid RSA public key.');\n\n  const klen = k.size();\n\n  if (msg.length < klen)\n    throw new Error('Invalid RSA ciphertext.');\n\n  const v = BN.decode(msg);\n\n  if (bits !== 0 && v.bitLength() > bits)\n    throw new Error('Invalid RSA ciphertext.');\n\n  const c = v.imod(k.n);\n\n  return c.encode('be', klen);\n}\n\n/*\n * Digest Info\n */\n\nfunction getDigestInfo(name, msg) {\n  // [RFC8017] Page 63, Section B.1.\n  assert(name == null || typeof name === 'string');\n  assert(Buffer.isBuffer(msg));\n\n  if (name == null)\n    return [EMPTY, msg.length];\n\n  const prefix = digestInfo[name];\n\n  if (prefix == null)\n    return [null, 0];\n\n  if (prefix.length === 1)\n    return [EMPTY, prefix[0]];\n\n  return [\n    prefix,\n    prefix[prefix.length - 1]\n  ];\n}\n\n/*\n * MGF1\n */\n\nfunction mgf1xor(hash, out, seed) {\n  // [RFC8017] Page 67, Section B.2.1.\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(out));\n  assert(Buffer.isBuffer(seed));\n\n  const ctr = Buffer.alloc(4, 0x00);\n\n  let i = 0;\n\n  while (i < out.length) {\n    const digest = hash.multi(seed, ctr);\n\n    let j = 0;\n\n    while (i < out.length && j < digest.length)\n      out[i++] ^= digest[j++];\n\n    for (j = 3; j >= 0; j--) {\n      ctr[j] += 1;\n\n      if (ctr[j] !== 0x00)\n        break;\n    }\n  }\n}\n\n/*\n * PSS\n */\n\nfunction pssEncode(hash, msg, embits, salt) {\n  // [RFC8017] Page 42, Section 9.1.1.\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert((embits >>> 0) === embits);\n  assert(Buffer.isBuffer(salt));\n\n  const hlen = hash.size;\n  const slen = salt.length;\n  const emlen = (embits + 7) >>> 3;\n\n  if (msg.length !== hlen)\n    throw new Error('Invalid RSA message size.');\n\n  if (emlen < hlen + slen + 2)\n    throw new Error('Message too long.');\n\n  // EM = (PS || 0x01 || salt) || H || 0xbc\n  const em = Buffer.alloc(emlen);\n  const db = em.slice(0, emlen - hlen - 1);\n  const h = em.slice(emlen - hlen - 1, emlen - 1);\n  const h0 = hash.multi(PREFIX, msg, salt);\n  const mask = 0xff >>> (8 * emlen - embits);\n\n  db.fill(0x00, 0, emlen - slen - hlen - 2);\n  db[emlen - slen - hlen - 2] = 0x01;\n  salt.copy(db, emlen - slen - hlen - 1);\n  h0.copy(h, 0);\n  em[emlen - 1] = 0xbc;\n\n  mgf1xor(hash, db, h);\n\n  db[0] &= mask;\n\n  return em;\n}\n\nfunction pssVerify(hash, msg, em, embits, slen) {\n  // [RFC8017] Page 44, Section 9.1.2.\n  assert(hash && typeof hash.id === 'string');\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(em));\n  assert((embits >>> 0) === embits);\n  assert((slen >>> 0) === slen);\n\n  const hlen = hash.size;\n  const emlen = (embits + 7) >>> 3;\n\n  if (msg.length !== hlen)\n    return false;\n\n  if (emlen < hlen + slen + 2)\n    return false;\n\n  if (em[emlen - 1] !== 0xbc)\n    return false;\n\n  // EM = (PS || 0x01 || salt) || H || 0xbc\n  const db = em.slice(0, emlen - hlen - 1);\n  const h = em.slice(emlen - hlen - 1, emlen - 1);\n  const mask = 0xff >>> (8 * emlen - embits);\n\n  if (em[0] & ~mask)\n    return false;\n\n  mgf1xor(hash, db, h);\n\n  db[0] &= mask;\n\n  if (slen === 0) { // Auto\n    slen = -1;\n\n    for (let i = 0; i < db.length; i++) {\n      if (db[i] === 0x00)\n        continue;\n\n      if (db[i] === 0x01) {\n        slen = db.length - (i + 1);\n        break;\n      }\n\n      return false;\n    }\n\n    if (slen === -1)\n      return false;\n  } else {\n    const len = db.length - slen - 1;\n\n    for (let i = 0; i < len; i++) {\n      if (db[i] !== 0x00)\n        return false;\n    }\n\n    if (db[len] !== 0x01)\n      return false;\n  }\n\n  const salt = db.slice(db.length - slen);\n  const h0 = hash.multi(PREFIX, msg, salt);\n\n  return h0.equals(h);\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.SALT_LENGTH_AUTO = SALT_LENGTH_AUTO;\nexports.SALT_LENGTH_HASH = SALT_LENGTH_HASH;\nexports.privateKeyGenerate = privateKeyGenerate;\nexports.privateKeyGenerateAsync = privateKeyGenerateAsync;\nexports.privateKeyBits = privateKeyBits;\nexports.privateKeyVerify = privateKeyVerify;\nexports.privateKeyImport = privateKeyImport;\nexports.privateKeyExport = privateKeyExport;\nexports.publicKeyCreate = publicKeyCreate;\nexports.publicKeyBits = publicKeyBits;\nexports.publicKeyVerify = publicKeyVerify;\nexports.publicKeyImport = publicKeyImport;\nexports.publicKeyExport = publicKeyExport;\nexports.sign = sign;\nexports.verify = verify;\nexports.encrypt = encrypt;\nexports.decrypt = decrypt;\nexports.signPSS = signPSS;\nexports.verifyPSS = verifyPSS;\nexports.encryptOAEP = encryptOAEP;\nexports.decryptOAEP = decryptOAEP;\nexports.veil = veil;\nexports.unveil = unveil;\n","/*!\n * scrypt.js - scrypt for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on Tarsnap/scrypt:\n *   Copyright (c) 2005-2016, Colin Percival. All rights reserved.\n *   Copyright (c) 2005-2016, Tarsnap Backup Inc. All rights reserved.\n *   Copyright (c) 2014, Sean Kelly. All rights reserved.\n *   https://github.com/Tarsnap/scrypt\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Scrypt\n *   http://www.tarsnap.com/scrypt.html\n *   http://www.tarsnap.com/scrypt/scrypt.pdf\n *   https://github.com/Tarsnap/scrypt/blob/master/lib/crypto/crypto_scrypt-ref.c\n */\n\n/* eslint camelcase: \"off\" */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst pbkdf2 = require('./pbkdf2');\nconst SHA256 = require('./sha256');\n\n/*\n * Constants\n */\n\nconst SLAB1 = Buffer.alloc(64);\nconst SLAB2 = new Uint32Array(16);\nconst SLAB3 = new Uint32Array(16);\n\n/**\n * Perform scrypt key derivation.\n * @param {Buffer} passwd\n * @param {Buffer} salt\n * @param {Number} N\n * @param {Number} r\n * @param {Number} p\n * @param {Number} len\n * @returns {Buffer}\n */\n\nfunction derive(passwd, salt, N, r, p, len) {\n  if (typeof passwd === 'string')\n    passwd = Buffer.from(passwd, 'utf8');\n\n  if (typeof salt === 'string')\n    salt = Buffer.from(salt, 'utf8');\n\n  if (salt == null)\n    salt = Buffer.alloc(0);\n\n  assert(Buffer.isBuffer(passwd));\n  assert(Buffer.isBuffer(salt));\n  assert((N >>> 0) === N);\n  assert((r >>> 0) === r);\n  assert((p >>> 0) === p);\n  assert((len >>> 0) === len);\n\n  if (r * p >= (1 << 30))\n    throw new Error('EFBIG');\n\n  if ((N & (N - 1)) !== 0 || N === 0)\n    throw new Error('EINVAL');\n\n  if (N > 0xffffffff)\n    throw new Error('EINVAL');\n\n  const XY = Buffer.alloc(256 * r);\n  const V = Buffer.alloc(128 * r * N);\n  const B = pbkdf2.derive(SHA256, passwd, salt, 1, p * 128 * r);\n\n  for (let i = 0; i < p; i++)\n    smix(B, i * 128 * r, r, N, V, XY);\n\n  clear();\n\n  return pbkdf2.derive(SHA256, passwd, B, 1, len);\n}\n\n/**\n * Perform scrypt key derivation (async).\n * @param {Buffer} passwd\n * @param {Buffer} salt\n * @param {Number} N\n * @param {Number} r\n * @param {Number} p\n * @param {Number} len\n * @returns {Promise}\n */\n\nasync function deriveAsync(passwd, salt, N, r, p, len) {\n  if (typeof passwd === 'string')\n    passwd = Buffer.from(passwd, 'utf8');\n\n  if (typeof salt === 'string')\n    salt = Buffer.from(salt, 'utf8');\n\n  if (salt == null)\n    salt = Buffer.alloc(0);\n\n  assert(Buffer.isBuffer(passwd));\n  assert(Buffer.isBuffer(salt));\n  assert((N >>> 0) === N);\n  assert((r >>> 0) === r);\n  assert((p >>> 0) === p);\n  assert((len >>> 0) === len);\n\n  if (r * p >= (1 << 30))\n    throw new Error('EFBIG');\n\n  if ((N & (N - 1)) !== 0 || N === 0)\n    throw new Error('EINVAL');\n\n  if (N > 0xffffffff)\n    throw new Error('EINVAL');\n\n  const XY = Buffer.alloc(256 * r);\n  const V = Buffer.alloc(128 * r * N);\n  const B = await pbkdf2.deriveAsync(SHA256, passwd, salt, 1, p * 128 * r);\n\n  for (let i = 0; i < p; i++)\n    await smixAsync(B, i * 128 * r, r, N, V, XY);\n\n  clear();\n\n  return pbkdf2.deriveAsync(SHA256, passwd, B, 1, len);\n}\n\n/*\n * Helpers\n */\n\nfunction salsa20_8(B) {\n  const B32 = SLAB2;\n  const X = SLAB3;\n\n  for (let i = 0; i < 16; i++)\n    B32[i] = readU32(B, i * 4);\n\n  for (let i = 0; i < 16; i++)\n    X[i] = B32[i];\n\n  for (let i = 0; i < 8; i += 2) {\n    X[4] ^= R(X[0] + X[12], 7);\n    X[8] ^= R(X[4] + X[0], 9);\n    X[12] ^= R(X[8] + X[4], 13);\n    X[0] ^= R(X[12] + X[8], 18);\n\n    X[9] ^= R(X[5] + X[1], 7);\n    X[13] ^= R(X[9] + X[5], 9);\n    X[1] ^= R(X[13] + X[9], 13);\n    X[5] ^= R(X[1] + X[13], 18);\n\n    X[14] ^= R(X[10] + X[6], 7);\n    X[2] ^= R(X[14] + X[10], 9);\n    X[6] ^= R(X[2] + X[14], 13);\n    X[10] ^= R(X[6] + X[2], 18);\n\n    X[3] ^= R(X[15] + X[11], 7);\n    X[7] ^= R(X[3] + X[15], 9);\n    X[11] ^= R(X[7] + X[3], 13);\n    X[15] ^= R(X[11] + X[7], 18);\n\n    X[1] ^= R(X[0] + X[3], 7);\n    X[2] ^= R(X[1] + X[0], 9);\n    X[3] ^= R(X[2] + X[1], 13);\n    X[0] ^= R(X[3] + X[2], 18);\n\n    X[6] ^= R(X[5] + X[4], 7);\n    X[7] ^= R(X[6] + X[5], 9);\n    X[4] ^= R(X[7] + X[6], 13);\n    X[5] ^= R(X[4] + X[7], 18);\n\n    X[11] ^= R(X[10] + X[9], 7);\n    X[8] ^= R(X[11] + X[10], 9);\n    X[9] ^= R(X[8] + X[11], 13);\n    X[10] ^= R(X[9] + X[8], 18);\n\n    X[12] ^= R(X[15] + X[14], 7);\n    X[13] ^= R(X[12] + X[15], 9);\n    X[14] ^= R(X[13] + X[12], 13);\n    X[15] ^= R(X[14] + X[13], 18);\n  }\n\n  for (let i = 0; i < 16; i++)\n    B32[i] += X[i];\n\n  for (let i = 0; i < 16; i++)\n    writeU32(B, B32[i], 4 * i);\n}\n\nfunction R(a, b) {\n  return (a << b) | (a >>> (32 - b));\n}\n\nfunction blockmix_salsa8(B, Y, Yo, r) {\n  const X = SLAB1;\n\n  blkcpy(X, B, 0, (2 * r - 1) * 64, 64);\n\n  for (let i = 0; i < 2 * r; i++) {\n    blkxor(X, B, 0, i * 64, 64);\n    salsa20_8(X);\n    blkcpy(Y, X, Yo + i * 64, 0, 64);\n  }\n\n  for (let i = 0; i < r; i++)\n    blkcpy(B, Y, i * 64, Yo + (i * 2) * 64, 64);\n\n  for (let i = 0; i < r; i++)\n    blkcpy(B, Y, (i + r) * 64, Yo + (i * 2 + 1) * 64, 64);\n}\n\nfunction integerify(B, r) {\n  return readU32(B, (2 * r - 1) * 64);\n}\n\nfunction smix(B, Bo, r, N, V, XY) {\n  const X = XY;\n  const Y = XY;\n\n  blkcpy(X, B, 0, Bo, 128 * r);\n\n  for (let i = 0; i < N; i++) {\n    blkcpy(V, X, i * (128 * r), 0, 128 * r);\n    blockmix_salsa8(X, Y, 128 * r, r);\n  }\n\n  for (let i = 0; i < N; i++) {\n    const j = integerify(X, r) & (N - 1);\n\n    blkxor(X, V, 0, j * (128 * r), 128 * r);\n    blockmix_salsa8(X, Y, 128 * r, r);\n  }\n\n  blkcpy(B, X, Bo, 0, 128 * r);\n}\n\nasync function smixAsync(B, Bo, r, N, V, XY) {\n  const X = XY;\n  const Y = XY;\n\n  blkcpy(X, B, 0, Bo, 128 * r);\n\n  for (let i = 0; i < N; i++) {\n    blkcpy(V, X, i * (128 * r), 0, 128 * r);\n    blockmix_salsa8(X, Y, 128 * r, r);\n\n    await wait();\n  }\n\n  for (let i = 0; i < N; i++) {\n    const j = integerify(X, r) & (N - 1);\n\n    blkxor(X, V, 0, j * (128 * r), 128 * r);\n    blockmix_salsa8(X, Y, 128 * r, r);\n\n    await wait();\n  }\n\n  blkcpy(B, X, Bo, 0, 128 * r);\n}\n\nfunction blkcpy(dst, src, dstOff, srcOff, len) {\n  src.copy(dst, dstOff, srcOff, srcOff + len);\n}\n\nfunction blkxor(dst, src, dstOff, srcOff, len) {\n  for (let i = 0; i < len; i++)\n    dst[dstOff + i] ^= src[srcOff + i];\n}\n\nfunction wait() {\n  return new Promise(r => setImmediate(r));\n}\n\nfunction clear() {\n  for (let i = 0; i < 64; i++)\n    SLAB1[i] = 0;\n\n  for (let i = 0; i < 16; i++) {\n    SLAB2[i] = 0;\n    SLAB3[i] = 0;\n  }\n}\n\nfunction readU32(data, off) {\n  return (data[off++]\n        + data[off++] * 0x100\n        + data[off++] * 0x10000\n        + data[off] * 0x1000000);\n}\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\n/*\n * Expose\n */\n\nexports.native = 0;\nexports.derive = derive;\nexports.deriveAsync = deriveAsync;","/*!\n * sha224.js - SHA224 implementation for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-2\n *   https://tools.ietf.org/html/rfc4634\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/sha/224.js\n */\n\n'use strict';\n\nconst assert = require('./internal/assert');\nconst SHA256 = require('./sha256');\nconst HMAC = require('./internal/hmac');\n\n/**\n * SHA224\n */\n\nclass SHA224 extends SHA256 {\n  constructor() {\n    super();\n  }\n\n  init() {\n    this.state[0] = 0xc1059ed8;\n    this.state[1] = 0x367cd507;\n    this.state[2] = 0x3070dd17;\n    this.state[3] = 0xf70e5939;\n    this.state[4] = 0xffc00b31;\n    this.state[5] = 0x68581511;\n    this.state[6] = 0x64f98fa7;\n    this.state[7] = 0xbefa4fa4;\n    this.size = 0;\n    return this;\n  }\n\n  final() {\n    return super.final().slice(0, 28);\n  }\n\n  static hash() {\n    return new SHA224();\n  }\n\n  static hmac() {\n    return new HMAC(SHA224, 64);\n  }\n\n  static digest(data) {\n    return SHA224.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 28);\n    assert(Buffer.isBuffer(right) && right.length === 28);\n    return SHA224.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {ctx} = SHA224;\n\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n\n    if (z)\n      ctx.update(z);\n\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return SHA224.hmac().init(key).update(data).final();\n  }\n}\n\n/*\n * Static\n */\n\nSHA224.native = 0;\nSHA224.id = 'SHA224';\nSHA224.size = 28;\nSHA224.bits = 224;\nSHA224.blockSize = 64;\nSHA224.zero = Buffer.alloc(28, 0x00);\nSHA224.ctx = new SHA224();\n\n/*\n * Expose\n */\n\nmodule.exports = SHA224;\n","/*!\n * bcrypto.js - crypto for bcrypto\n * Copyright (c) 2014-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\n// exports.AEAD = require('./aead');\nexports.aes = require('./aes');\n// exports.ARC4 = require('./arc4');\n// exports.bcrypt = require('./bcrypt');\n// exports.BLAKE2b = require('./blake2b');\n// exports.BLAKE2b160 = require('./blake2b160');\n// exports.BLAKE2b256 = require('./blake2b256');\n// exports.BLAKE2b384 = require('./blake2b384');\n// exports.BLAKE2b512 = require('./blake2b512');\n// exports.BLAKE2s = require('./blake2s');\n// exports.BLAKE2s128 = require('./blake2s128');\n// exports.BLAKE2s160 = require('./blake2s160');\n// exports.BLAKE2s224 = require('./blake2s224');\n// exports.BLAKE2s256 = require('./blake2s256');\nexports.BN = require('./bn');\n// exports.box = require('./box');\nexports.ChaCha20 = require('./chacha20');\n// exports.cipher = require('./cipher');\nexports.cleanse = require('./cleanse');\n// exports.CSHAKE = require('./cshake');\n// exports.CSHAKE128 = require('./cshake128');\n// exports.CSHAKE256 = require('./cshake256');\n// exports.CtrDRBG = require('./ctr-drbg');\n// exports.dsa = require('./dsa');\n// exports.dsaies = require('./dsaies');\n// exports.eb2k = require('./eb2k');\n// exports.ecies = require('./ecies');\n// exports.ed25519 = require('./ed25519');\n// exports.ed448 = require('./ed448');\n// exports.encoding = require('./encoding');\n// exports.GOST94 = require('./gost94');\nexports.Hash160 = require('./hash160');\nexports.Hash256 = require('./hash256');\n// exports.HashDRBG = require('./hash-drbg');\n// exports.hkdf = require('./hkdf');\nexports.HmacDRBG = require('./hmac-drbg');\nexports.Keccak = require('./keccak');\n// exports.Keccak224 = require('./keccak224');\n// exports.Keccak256 = require('./keccak256');\n// exports.Keccak384 = require('./keccak384');\n// exports.Keccak512 = require('./keccak512');\n// exports.KMAC = require('./kmac');\n// exports.KMAC128 = require('./kmac128');\n// exports.KMAC256 = require('./kmac256');\n// exports.MD2 = require('./md2');\n// exports.MD4 = require('./md4');\n// exports.MD5 = require('./md5');\n// exports.MD5SHA1 = require('./md5sha1');\nexports.merkle = require('./merkle');\n// exports.mrkl = require('./mrkl');\nexports.murmur3 = require('./murmur3');\n// exports.p192 = require('./p192');\nexports.p224 = require('./p224');\nexports.p256 = require('./p256');\nexports.p384 = require('./p384');\nexports.p521 = require('./p521');\nexports.pbkdf2 = require('./pbkdf2');\n// exports.pgp = require('./pgp');\n// exports.Poly1305 = require('./poly1305');\nexports.random = require('./random');\nexports.RIPEMD160 = require('./ripemd160');\nexports.rsa = require('./rsa');\n// exports.rsaies = require('./rsaies');\nexports.safe = require('./safe');\n// exports.Salsa20 = require('./salsa20');\n// exports.schnorr = require('./schnorr');\nexports.scrypt = require('./scrypt');\nexports.secp256k1 = require('./secp256k1');\n// exports.secretbox = require('./secretbox');\n// exports.ssh = require('./ssh');\nexports.SHA1 = require('./sha1');\nexports.SHA224 = require('./sha224');\nexports.SHA256 = require('./sha256');\nexports.SHA384 = require('./sha384');\nexports.SHA512 = require('./sha512');\n// exports.SHA3 = require('./sha3');\n// exports.SHA3_224 = require('./sha3-224');\n// exports.SHA3_256 = require('./sha3-256');\n// exports.SHA3_384 = require('./sha3-384');\n// exports.SHA3_512 = require('./sha3-512');\nexports.SHAKE = require('./shake');\n// exports.SHAKE128 = require('./shake128');\nexports.SHAKE256 = require('./shake256');\n// exports.siphash = require('./siphash');\n// exports.Whirlpool = require('./whirlpool');\n// exports.x25519 = require('./x25519');\n// exports.x448 = require('./x448');\n\nexports.version = '5.5.1';\nexports.native = exports.SHA256.native;","/*!\n * bloom.js - bloom filter for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst {enforce} = require('bsert');\nconst bio = require('bufio');\nconst murmur3 = require('../bcrypto/murmur3');\n\n/*\n * Constants\n */\n\nconst DUMMY = Buffer.alloc(0);\nconst LN2SQUARED = 0.4804530139182014246671025263266649717305529515945455;\nconst LN2 = 0.6931471805599453094172321214581765680755001343602552;\n\n/**\n * Bloom Filter\n */\n\nclass BloomFilter extends bio.Struct {\n  /**\n   * Create a bloom filter.\n   * @constructor\n   * @param {Number} size - Filter size in bits.\n   * @param {Number} n - Number of hash functions.\n   * @param {Number} tweak - Seed value.\n   * @param {Number|String} - Update type.\n   * @property {Buffer} filter\n   * @property {Number} size\n   * @property {Number} n\n   * @property {Number} tweak\n   * @property {Number} update - Update flag (see {@link BloomFilter.flags}).\n   */\n\n  constructor(size, n, tweak, update) {\n    super();\n\n    this.filter = DUMMY;\n    this.size = 0;\n    this.n = 0;\n    this.tweak = 0;\n    this.update = BloomFilter.flags.NONE;\n\n    if (size != null)\n      this.fromOptions(size, n, tweak, update);\n  }\n\n  /**\n   * Inject properties from options.\n   * @private\n   * @param {Number} size - Filter size in bits.\n   * @param {Number} n - Number of hash functions.\n   * @param {Number} tweak - Seed value.\n   * @param {Number|String} - Update type.\n   * @returns {BloomFilter}\n   */\n\n  fromOptions(size, n, tweak, update) {\n    if (tweak == null || tweak === -1)\n      tweak = (Math.random() * 0x100000000) >>> 0;\n\n    if (update == null || update === -1)\n      update = BloomFilter.flags.NONE;\n\n    if (typeof update === 'string') {\n      update = BloomFilter.flags[update.toUpperCase()];\n      enforce(update != null, 'update', 'flag');\n    }\n\n    enforce(Number.isSafeInteger(size) && size >= 0, 'size', 'integer');\n    enforce(Number.isSafeInteger(n) && n >= 0, 'n', 'integer');\n    enforce((tweak >>> 0) === tweak, 'tweak', 'integer');\n    enforce((update >>> 0) === update, 'update', 'integer');\n    enforce(update <= 2, 'update', 'range between 0 and 2');\n\n    if (size < 8)\n      size = 8;\n\n    if (n === 0)\n      n = 1;\n\n    size -= size & 7;\n\n    this.filter = Buffer.alloc(size / 8, 0x00);\n    this.size = size;\n    this.n = n;\n    this.tweak = tweak;\n    this.update = update;\n\n    return this;\n  }\n\n  /**\n   * Instantiate bloom filter from options.\n   * @param {Number} size - Filter size in bits.\n   * @param {Number} n - Number of hash functions.\n   * @param {Number} tweak - Seed value.\n   * @param {Number|String} - Update type.\n   * @returns {BloomFilter}\n   */\n\n  static fromOptions(size, n, tweak, update) {\n    return new this().fromOptions(size, n, tweak, update);\n  }\n\n  /**\n   * Perform the mumur3 hash on data.\n   * @param {Buffer} value\n   * @param {Number} n\n   * @returns {Number}\n   */\n\n  hash(value, n) {\n    return murmur3.tweak(value, n, this.tweak) % this.size;\n  }\n\n  /**\n   * Reset the filter.\n   */\n\n  reset() {\n    this.filter.fill(0);\n  }\n\n  /**\n   * Add data to the filter.\n   * @param {Buffer|String}\n   * @param {String?} enc - Can be any of the Buffer object's encodings.\n   */\n\n  add(value, enc) {\n    const val = toBuffer(value, enc);\n\n    for (let i = 0; i < this.n; i++) {\n      const index = this.hash(val, i);\n      this.filter[index >>> 3] |= 1 << (7 & index);\n    }\n  }\n\n  /**\n   * Test whether data is present in the filter.\n   * @param {Buffer|String} value\n   * @param {String?} enc - Can be any of the Buffer object's encodings.\n   * @returns {Boolean}\n   */\n\n  test(value, enc) {\n    const val = toBuffer(value, enc);\n\n    for (let i = 0; i < this.n; i++) {\n      const index = this.hash(val, i);\n      if ((this.filter[index >>> 3] & (1 << (7 & index))) === 0)\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Test whether data is present in the\n   * filter and potentially add data.\n   * @param {Buffer|String} value\n   * @param {String?} enc - Can be any of the Buffer object's encodings.\n   * @returns {Boolean} Whether data was added.\n   */\n\n  added(value, enc) {\n    const val = toBuffer(value, enc);\n\n    let ret = false;\n\n    for (let i = 0; i < this.n; i++) {\n      const index = this.hash(val, i);\n      if (!ret && (this.filter[index >>> 3] & (1 << (7 & index))) === 0)\n        ret = true;\n      this.filter[index >>> 3] |= 1 << (7 & index);\n    }\n\n    return ret;\n  }\n\n  /**\n   * Create a filter from a false positive rate.\n   * @param {Number} items - Expected number of items.\n   * @param {Number} rate - False positive rate (0.0-1.0).\n   * @param {Number|String} update\n   * @example\n   * BloomFilter.fromRate(800000, 0.0001, 'none');\n   * @returns {BloomFilter}\n   */\n\n  static fromRate(items, rate, update) {\n    enforce(Number.isSafeInteger(items) && items > 0, 'items', 'integer');\n    enforce(typeof rate === 'number' && isFinite(rate), 'rate', 'number');\n    enforce(rate >= 0 && rate <= 1, 'rate', 'range between 0.1 and 1.0.');\n\n    const bits = (-1 / LN2SQUARED * items * Math.log(rate)) | 0;\n    const size = Math.max(8, bits);\n\n    if (update !== -1) {\n      if (size > BloomFilter.MAX_BLOOM_FILTER_SIZE * 8)\n        throw new Error('Bloom filter size violates policy limits!');\n    }\n\n    const n = Math.max(1, (size / items * LN2) | 0);\n\n    if (update !== -1) {\n      if (n > BloomFilter.MAX_HASH_FUNCS)\n        throw new Error('Bloom filter size violates policy limits!');\n    }\n\n    return new this(size, n, -1, update);\n  }\n\n  /**\n   * Ensure the filter is within the size limits.\n   * @returns {Boolean}\n   */\n\n  isWithinConstraints() {\n    if (this.size > BloomFilter.MAX_BLOOM_FILTER_SIZE * 8)\n      return false;\n\n    if (this.n > BloomFilter.MAX_HASH_FUNCS)\n      return false;\n\n    return true;\n  }\n\n  /**\n   * Get serialization size.\n   * @returns {Number}\n   */\n\n  getSize() {\n    return bio.sizeVarBytes(this.filter) + 9;\n  }\n\n  /**\n   * Write filter to buffer writer.\n   * @param {BufferWriter} bw\n   */\n\n  write(bw) {\n    bw.writeVarBytes(this.filter);\n    bw.writeU32(this.n);\n    bw.writeU32(this.tweak);\n    bw.writeU8(this.update);\n    return bw;\n  }\n\n  /**\n   * Inject properties from buffer reader.\n   * @private\n   * @param {BufferReader} br\n   */\n\n  read(br) {\n    this.filter = br.readVarBytes();\n    this.size = this.filter.length * 8;\n    this.n = br.readU32();\n    this.tweak = br.readU32();\n    this.update = br.readU8();\n\n    if (this.update > 2)\n      throw new Error('Invalid update flag.');\n\n    return this;\n  }\n}\n\n/**\n * Max bloom filter size.\n * @const {Number}\n * @default\n */\n\nBloomFilter.MAX_BLOOM_FILTER_SIZE = 36000;\n\n/**\n * Max number of hash functions.\n * @const {Number}\n * @default\n */\n\nBloomFilter.MAX_HASH_FUNCS = 50;\n\n/**\n * Bloom filter update flags.\n * @enum {Number}\n * @default\n */\n\nBloomFilter.flags = {\n  /**\n   * Never update the filter with outpoints.\n   */\n\n  NONE: 0,\n\n  /**\n   * Always update the filter with outpoints.\n   */\n\n  ALL: 1,\n\n  /**\n   * Only update the filter with outpoints if it is\n   * \"asymmetric\" in terms of addresses (pubkey/multisig).\n   */\n\n  PUBKEY_ONLY: 2\n};\n\n/**\n * Bloom filter update flags by value.\n * @const {RevMap}\n */\n\nBloomFilter.flagsByVal = [\n  'NONE',\n  'ALL',\n  'PUBKEY_ONLY'\n];\n\n/*\n * Helpers\n */\n\nfunction toBuffer(value, enc) {\n  if (typeof value !== 'string') {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n    return value;\n  }\n\n  enforce(typeof enc === 'string', 'enc', 'string');\n\n  return Buffer.from(value, enc);\n}\n\n/*\n * Expose\n */\n\nmodule.exports = BloomFilter;\n","/*!\n * rollingfilter.js - rolling bloom filter for bcoin\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License)\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst {enforce} = require('bsert');\nconst {encoding} = require('bufio');\nconst murmur3 = require('../bcrypto/murmur3');\nconst DUMMY = Buffer.alloc(0);\n\n/**\n * Rolling Bloom Filter\n */\n\nclass RollingFilter {\n  /**\n   * Create a rolling bloom filter.\n   * @constructor\n   * @param {Number} items - Expected number of items.\n   * @param {Number} rate - False positive rate (0.0-1.0).\n   */\n\n  constructor(items, rate) {\n    this.entries = 0;\n    this.generation = 1;\n    this.n = 0;\n    this.limit = 0;\n    this.size = 0;\n    this.items = 0;\n    this.tweak = 0;\n    this.filter = DUMMY;\n\n    if (items != null)\n      this.fromRate(items, rate);\n  }\n\n  /**\n   * Inject properties from items and FPR.\n   * @private\n   * @param {Number} items - Expected number of items.\n   * @param {Number} rate - False positive rate (0.0-1.0).\n   * @returns {RollingFilter}\n   */\n\n  fromRate(items, rate) {\n    enforce(Number.isSafeInteger(items) && items > 0, 'items', 'integer');\n    enforce(typeof rate === 'number' && isFinite(rate), 'rate', 'number');\n    enforce(rate >= 0 && rate <= 1, 'rate', 'range between 0.1 and 1.0.');\n\n    const logRate = Math.log(rate);\n\n    const n = Math.max(1, Math.min(Math.round(logRate / Math.log(0.5)), 50));\n    const limit = (items + 1) / 2 | 0;\n\n    const max = limit * 3;\n\n    let size = -1 * n * max / Math.log(1.0 - Math.exp(logRate / n));\n    size = Math.ceil(size);\n\n    items = ((size + 63) / 64 | 0) << 1;\n    items >>>= 0;\n    items = Math.max(1, items);\n\n    const tweak = (Math.random() * 0x100000000) >>> 0;\n\n    const filter = Buffer.alloc(items * 8, 0x00);\n\n    this.n = n;\n    this.limit = limit;\n    this.size = size;\n    this.items = items;\n    this.tweak = tweak;\n    this.filter = filter;\n\n    return this;\n  }\n\n  /**\n   * Instantiate rolling filter from items and FPR.\n   * @param {Number} items - Expected number of items.\n   * @param {Number} rate - False positive rate (0.0-1.0).\n   * @returns {RollingFilter}\n   */\n\n  static fromRate(items, rate) {\n    return new this().fromRate(items, rate);\n  }\n\n  /**\n   * Perform the mumur3 hash on data.\n   * @param {Buffer} value\n   * @param {Number} seed\n   * @returns {Number}\n   */\n\n  hash(value, n) {\n    return murmur3.tweak(value, n, this.tweak);\n  }\n\n  /**\n   * Reset the filter.\n   */\n\n  reset() {\n    if (this.entries === 0)\n      return;\n\n    this.entries = 0;\n    this.generation = 1;\n    this.filter.fill(0);\n  }\n\n  /**\n   * Add data to the filter.\n   * @param {Buffer|String}\n   * @param {String?} enc - Can be any of the Buffer object's encodings.\n   */\n\n  add(value, enc) {\n    const val = toBuffer(value, enc);\n\n    if (this.entries === this.limit) {\n      this.entries = 0;\n      this.generation += 1;\n\n      if (this.generation === 4)\n        this.generation = 1;\n\n      const m1 = (this.generation & 1) * 0xffffffff;\n      const m2 = (this.generation >>> 1) * 0xffffffff;\n\n      for (let i = 0; i < this.items; i += 2) {\n        const pos1 = i * 8;\n        const pos2 = (i + 1) * 8;\n        const v1 = read(this.filter, pos1);\n        const v2 = read(this.filter, pos2);\n        const mhi = (v1.hi ^ m1) | (v2.hi ^ m2);\n        const mlo = (v1.lo ^ m1) | (v2.lo ^ m2);\n\n        v1.hi &= mhi;\n        v1.lo &= mlo;\n        v2.hi &= mhi;\n        v2.lo &= mlo;\n\n        write(this.filter, v1, pos1);\n        write(this.filter, v2, pos2);\n      }\n    }\n\n    this.entries += 1;\n\n    for (let i = 0; i < this.n; i++) {\n      const hash = this.hash(val, i);\n      const bits = hash & 0x3f;\n      const pos = (hash >>> 6) % this.items;\n      const pos1 = (pos & ~1) * 8;\n      const pos2 = (pos | 1) * 8;\n      const bit = bits % 8;\n      const oct = (bits - bit) / 8;\n\n      this.filter[pos1 + oct] &= ~(1 << bit);\n      this.filter[pos1 + oct] |= (this.generation & 1) << bit;\n\n      this.filter[pos2 + oct] &= ~(1 << bit);\n      this.filter[pos2 + oct] |= (this.generation >>> 1) << bit;\n    }\n  }\n\n  /**\n   * Test whether data is present in the filter.\n   * @param {Buffer|String} value\n   * @param {String?} enc - Can be any of the Buffer object's encodings.\n   * @returns {Boolean}\n   */\n\n  test(value, enc) {\n    if (this.entries === 0)\n      return false;\n\n    const val = toBuffer(value, enc);\n\n    for (let i = 0; i < this.n; i++) {\n      const hash = this.hash(val, i);\n      const bits = hash & 0x3f;\n      const pos = (hash >>> 6) % this.items;\n      const pos1 = (pos & ~1) * 8;\n      const pos2 = (pos | 1) * 8;\n      const bit = bits % 8;\n      const oct = (bits - bit) / 8;\n\n      const bit1 = (this.filter[pos1 + oct] >>> bit) & 1;\n      const bit2 = (this.filter[pos2 + oct] >>> bit) & 1;\n\n      if ((bit1 | bit2) === 0)\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Test whether data is present in the\n   * filter and potentially add data.\n   * @param {Buffer|String} value\n   * @param {String?} enc - Can be any of the Buffer object's encodings.\n   * @returns {Boolean} Whether data was added.\n   */\n\n  added(value, enc) {\n    const val = toBuffer(value, enc);\n\n    if (!this.test(val)) {\n      this.add(val);\n      return true;\n    }\n\n    return false;\n  }\n}\n\n/*\n * Helpers\n */\n\nclass U64 {\n  constructor(hi, lo) {\n    this.hi = hi;\n    this.lo = lo;\n  }\n}\n\nfunction read(data, off) {\n  const hi = encoding.readU32(data, off + 4);\n  const lo = encoding.readU32(data, off);\n  return new U64(hi, lo);\n}\n\nfunction write(data, value, off) {\n  encoding.writeU32(data, value.hi, off + 4);\n  encoding.writeU32(data, value.lo, off);\n}\n\nfunction toBuffer(value, enc) {\n  if (typeof value !== 'string') {\n    enforce(Buffer.isBuffer(value), 'value', 'buffer');\n    return value;\n  }\n\n  enforce(typeof enc === 'string', 'enc', 'string');\n\n  return Buffer.from(value, enc);\n}\n\n/*\n * Expose\n */\n\nmodule.exports = RollingFilter;\n","/*!\n * bfilter.js - bloom filters for javascript\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst BloomFilter = require('./bloom');\nconst RollingFilter = require('./rolling');\n\nexports.BloomFilter = BloomFilter;\nexports.RollingFilter = RollingFilter;\n","'use strict';\n\nmodule.exports = [\n  Buffer.from(\n    'ebd41040e4bb3ec742c9e381d31ef2a41a48b6685c96e7cef3c1df6cd4331c99',\n    'hex'),\n  Buffer.from(\n    'ca42dd41745fd0b81eb902362cf9d8bf719da1bd1b1efc946f5b4c99f42c1b9e',\n    'hex'),\n  Buffer.from(\n    'eb04cf5eb1f39afa762f2bb120f296cba520c1b97db1589565b81cb9a17b7244',\n    'hex'),\n  Buffer.from(\n    '6dc47172e01cbcb0bf62580d895fe2b8ac9ad4f873801e0c10b9c837d21eb177',\n    'hex'),\n  Buffer.from(\n    '16af57a9f676b0ab126095aa5ebadef22ab31119d644ac95cd4b93dbf3f26aeb',\n    'hex'),\n  Buffer.from(\n    '687fa451382278fff0c8b11f8d43d576671c6eb2bceab413fb83d965d06d2ff2',\n    'hex'),\n  Buffer.from(\n    '73c176434f1bc6d5adf45b0e76e727287c8de57616c1e6e6141a2b2cbc7d8e4c',\n    'hex'),\n  Buffer.from(\n    'ff856a2d251dcd88d36656f450126798cfabaade40799c722de4d2b5db36a73a',\n    'hex'),\n  Buffer.from(\n    'a0459b9f63b22559f5fa5d4c6db3f9f72ff19342033578f073bf1d1b46cbb912',\n    'hex'),\n  Buffer.from(\n    'a0234f3bc8527ca5628eec81ad5d69895da5680dc91d1cb8477f33f878b95b0b',\n    'hex'),\n  Buffer.from(\n    '69fac9bd55fb0ac78d53bbee5cf1d597989fd0aaab20a25151bdf1733ee7d122',\n    'hex'),\n  Buffer.from(\n    'd7a7a0fb5d7e2731d771e9484ebcdef71d5f0c3e0a2948782bc83ee0ea699ef4',\n    'hex'),\n  Buffer.from(\n    'a45ede3bbbf09c8ae15c72efc07268d693a21c996fd51e67ca079460fd6d8873',\n    'hex'),\n  Buffer.from(\n    '85a0dd7dd720adb7ff05f83d542b209dc7ff4528f7d677b18389fea5e5c49e86',\n    'hex'),\n  Buffer.from(\n    '18f1fc7f205df8adddeb7fe007dd57e3af375a9c4d8d73546bf4f1fed1e18d35',\n    'hex'),\n  Buffer.from(\n    'e75e72ed9f560eec6eb4800073a43fc3ad19195a392282017895974a99026b6c',\n    'hex'),\n  Buffer.from(\n    '7908b40314c138100b518d0735807ffbfcf8518a0095337105ba386b153dd927',\n    'hex'),\n  Buffer.from(\n    'cecddc905099d8dadfc5b1d209b737cbe2c18cfb2c10c0ff0bcf0d3286fc1aa2',\n    'hex'),\n  Buffer.from(\n    'c3846bf24b9e93ca64274c0ec67c1ecc5e024ffcacd2d74019350e81fe546ae4',\n    'hex'),\n  Buffer.from(\n    '1465fa205397b876faa6f0a9958e5590e40fcc7faa4fb7c2c8677521fb5fb658',\n    'hex'),\n  Buffer.from(\n    '7600295eefe85b9e1fd624db76062aaaae59818a54d2774cd4c0b2c01131e1b3',\n    'hex'),\n  Buffer.from(\n    '3e9099b5015e8f486c00bcea9d111ee721faba355a89bcf1df69561e3dc6325c',\n    'hex'),\n  Buffer.from(\n    '4348a0e9444c78cb265e058d5e8944b4d84f9662bd26db257f8934a443c70161',\n    'hex'),\n  Buffer.from(\n    '7431e5f4c3c1ce4690774f0b61e05440883ba9a01ed00ba6abd7806ed3b118cf',\n    'hex'),\n  Buffer.from(\n    '0f993c8aef97baaf5687140ed59ad1821bb4afacf0aa9a58b5d57a338a3afbcb',\n    'hex'),\n  Buffer.from(\n    '0687260331a72403d909f105e69bcf0d32e1bd2493ffc6d9206d11bcd6770739',\n    'hex'),\n  Buffer.from(\n    '62dd0be9b9f50a163ea0f8e75c053b1eca57ea55c8688f647c6881f2c8357b95',\n    'hex'),\n  Buffer.from(\n    'be6c4da2bbb9ba59b6f3939768374246c3c005993fa98f020d1dedbed48a81d5',\n    'hex'),\n  Buffer.from(\n    '37d51006c512eaab626421f1ec8c92013fc5f82ae98ee533eb4619b8deb4d06c',\n    'hex'),\n  Buffer.from(\n    '8d722f81a9c113c0791df136a2966db26c950a971db46b4199f4ea54b78bfb9f',\n    'hex'),\n  Buffer.from(\n    '9acfab7e43c8d880d06b262a94deeee4b4659989c3d0caf19baf6405e41ab7df',\n    'hex'),\n  Buffer.from(\n    'f1c1b50ae5a20dd8030ec9f6bc24823dd367b5255759b4e71b61fce9f7375d73',\n    'hex'),\n  Buffer.from(\n    '4200f5043ac8590ebb527d209ed1503029fbcbd41ca1b506ec27f15ade7dac69',\n    'hex'),\n  Buffer.from(\n    '0c2cd63df7806fa399ede809116b575bf87989f06518f9808c860503178baf66',\n    'hex'),\n  Buffer.from(\n    '15f0ba00a3ac7af3ac884c072b1011a077bd77c097f40164b2f8598abd83860c',\n    'hex'),\n  Buffer.from(\n    '1793927a0614549789adce2f8f34f7f0b66d0f3ae3a3b84d21ec15dbba4fadc7',\n    'hex'),\n  Buffer.from(\n    '41c923866ab4cad6b7ad578081582e020797a6cbdf4fff78ce8396b38937d7f5',\n    'hex'),\n  Buffer.from(\n    'e3b6a2db2ed7ce48842f7ac53241c7b71d54144bfb40c11f3f1d0b42f5eea12d',\n    'hex'),\n  Buffer.from(\n    'b6191a50d0c3977f7da99bcdaac86a227daeb9679ec70ba3b0c9d92271c170d3',\n    'hex'),\n  Buffer.from(\n    '960adf0063e96356750c2965dd0a0867da0b9cbd6e77714aeafb2349ab393da3',\n    'hex'),\n  Buffer.from(\n    'c0a6f4dc63a24bfdcf54ef2a6a082a0a72de35803e2ff5ff527ae5d87206dfd5',\n    'hex'),\n  Buffer.from(\n    'eaa962c4fa4a6bafebe415196d351ccd888d4f53f3fa8ae6d7c466a94e6042bb',\n    'hex'),\n  Buffer.from(\n    'b478b812250df878635c2aa7ec7d155eaa625ee82916e2cd294361886cd1fbd4',\n    'hex'),\n  Buffer.from(\n    'a4310d50af18a6447190372a86afaf8b951ffb431d837f1e5688b45971ed1557',\n    'hex'),\n  Buffer.from(\n    '4b03f45807ad70f21bfc2cae71c9fde4604c064cf5ffb686bae5dbaad7fdd34c',\n    'hex'),\n  Buffer.from(\n    '5edb7ac43b82a06a8761e8d7be4979ebf2611f7dd79bf91c1c6b566a219ed766',\n    'hex'),\n  Buffer.from(\n    '2399561127a57125de8cefea610ddf2fa078b5c8067f4e828290bfb860e84b3c',\n    'hex'),\n  Buffer.from(\n    '69ddd7ea90bb57c93e135dc85ea6fcd5480b603239bdc454fc758b2a26cf7f79',\n    'hex'),\n  Buffer.from(\n    '6c61dac3a2def031506be036d2a6fe401994fbd13df9c8d466599274c446ec98',\n    'hex'),\n  Buffer.from(\n    '668c83947da63b724bece1743c31a0e6aed0db8ec5b31be377bb784f91b6716f',\n    'hex'),\n  Buffer.from(\n    'f9e67d336c51002ac054c632022d66dda2e7e3fff10ad061ed31d8bbb410cfb2',\n    'hex'),\n  Buffer.from(\n    'bf0feefb9e3a581ad5f9e9db7589985743d261085c4d314f6f5d7259aa421612',\n    'hex'),\n  Buffer.from(\n    '3c5f81fea5fab82c64bfa2eaecafcde8e077fc8620a7cae537163df36edbf378',\n    'hex'),\n  Buffer.from(\n    'cbb522d7b7f127ad6a0113865bdf1cd4102e7d0759af635a7cf4720dc963c53b',\n    'hex'),\n  Buffer.from(\n    '04048028bf1f2864d48f9ad4d83294366a828856553f3b14303f90147f5d40ef',\n    'hex'),\n  Buffer.from(\n    '2530cc8e98321502bad96f9b1fba1b099e2d299e0f4548bb914f363bc0d4531f',\n    'hex'),\n  Buffer.from(\n    '063e4afac491dfd332f3089b8542e94617d893d7fe944e10a7937ee29d9693c0',\n    'hex'),\n  Buffer.from(\n    '136335439334a7698016a0d324de72284e079d7b5220bb8fbd747816eebebaca',\n    'hex'),\n  Buffer.from(\n    '45140b3247eb9cc8c5b4f0d7b53091f73292089e6e5a63e2749dd3aca9198eda',\n    'hex'),\n  Buffer.from(\n    '2ce1cb0bf9d2f9e102993fbe215152c3b2dd0cabde1c68e5319b839154dbb7f5',\n    'hex'),\n  Buffer.from(\n    '568d6905a2c88708a4b3025190edcfedb1974a606a13c6e5290fcb2ae63edab5',\n    'hex'),\n  Buffer.from(\n    '0376ab1d54c5f9803ce4b2e201a0ee7eef7b57b636e8a93c9b8d4860c96f5fa7',\n    'hex'),\n  Buffer.from(\n    '0a81ec5a929777f145904af38d5d509f66b5e2c58fcdb531058b0e17f3f0b41b',\n    'hex'),\n  Buffer.from(\n    '70a73f7f376b60074248904534b11482d5bf0e698ecc498df52577ebf2e93b9a',\n    'hex'),\n  Buffer.from(\n    'bd71fdf6da97e4cf62d1647add2581b07d79adf8397eb4ecba9c5e8488821423',\n    'hex'),\n  Buffer.from(\n    '5c58468d55f58e497e743982d2b50010b6d165374acf83a7d4a32db768c4408e',\n    'hex'),\n  Buffer.from(\n    'bfd88fe1101c41ae3e801bf8be56350ee9bad1a6b9bd515edc5c6d5b8711ac44',\n    'hex'),\n  Buffer.from(\n    '513b2cecb810d4cde5dd85391adfc6c2dd60d87bb736d2b521484aa47a0ebef6',\n    'hex'),\n  Buffer.from(\n    '88497f01602f3154246ae28c4d5aef10f1d87ebb76626f4ae0b7f95ba7968799',\n    'hex'),\n  Buffer.from(\n    'bc104f15a48be709dca542a7e1d4b9df6f054527e802eaa92d595444258afe71',\n    'hex'),\n  Buffer.from(\n    '55926084ec963a64b96e2abe01ce0ba86a64fbfebcc7aab5afc155b37fd76066',\n    'hex'),\n  Buffer.from(\n    'c1b48299aba5208fe9630ace55ca68a03eda5a519c8802a0d3a673be8f8e557d',\n    'hex'),\n  Buffer.from(\n    '9a114025197c5bb95d94e63d55cd43790847b646b23cdf11ada4a00eff15fb48',\n    'hex'),\n  Buffer.from(\n    'edf7ebbca27a2a384d387b7d4010c666e2edb4843e4c29b4ae1d5b9332e6b24d',\n    'hex'),\n  Buffer.from(\n    'fd73dad31c644ff1b43bef0ccdda96710b9cd9875eca7e31707af3e96d522bbd',\n    'hex'),\n  Buffer.from(\n    '3e84ba4342908516e77573c0992f0979ca084e4685681ff195ccba8a229b8a76',\n    'hex'),\n  Buffer.from(\n    '49e7a442acf0ea6287050054b52564b650e4f49e42e348d6aa38e039e957b1c1',\n    'hex'),\n  Buffer.from(\n    'eec5496b988ce98625b934092eec2908bed0b0f316c2d4730c84eaf1f3d34881',\n    'hex'),\n  Buffer.from(\n    'e23d4a036d7b70e9f595b1422079d2b91edfbb1fb651a0633eaa8a9dc5f80703',\n    'hex'),\n  Buffer.from(\n    '9a6ec012e1a7da9dbe34194d478ad7c0db1822fb071df12981496ed104384113',\n    'hex'),\n  Buffer.from(\n    '59769007f7685d0fcd50872f9f95d5755a5b2b457d81f3692b610a98672f0e1b',\n    'hex'),\n  Buffer.from(\n    'dd6936fe21f8f077c123a1a521c12224f72255b73e03a7260693e8a24b0fa389',\n    'hex'),\n  Buffer.from(\n    'b0bfd52bb0d7d9bd92bf5d4dc13da255c02c542f378365ea893911f55e55f23c',\n    'hex'),\n  Buffer.from(\n    '91e2f5788d5810eba7ba58737de1548a8ecacd014598bc0b143e041b17052552',\n    'hex'),\n  Buffer.from(\n    'f356bea244b7a91eb35d53ca9ad7864ace018e2d35d5f8f96ddf68a6f41aa474',\n    'hex'),\n  Buffer.from(\n    '8a866fd1b276b57e578e921c65828a2bed58e9f2f288054134b7f1f4bfc9cc74',\n    'hex'),\n  Buffer.from(\n    '8fe4fb0af93a4d0d67db0bebb23e37c71bf325dcbcdd240ea04daf58b47e1840',\n    'hex'),\n  Buffer.from(\n    '88ef81de202eb018452e43f864725cea5fbd1fc2d9d205730709c5d8b8690f46',\n    'hex'),\n  Buffer.from(\n    '7d05ebb682339f8c9451ee094eebfefa7953a114edb2f44949452fab7d2fc185',\n    'hex'),\n  Buffer.from(\n    '7e37cb8b4c47090cab36551ba6f45db840680fba166a952db100717f43053fc2',\n    'hex'),\n  Buffer.from(\n    'cb3ccbb76031e5e0138f8dd39a23f9de47ffc35e43c1144cea27d46a5ab1cb5f',\n    'hex'),\n  Buffer.from(\n    '31ad6648f8104138c738f39ea4320133393e3a18cc02296ef97c2ac9ef6731d0',\n    'hex'),\n  Buffer.from(\n    '552f7bdcf1a7af9e6ce672017f4f12abf77240c78e761ac203d1d9d20ac89988',\n    'hex'),\n  Buffer.from(\n    '52f0e1c4e58ec629291b60317f074671b85d7ea80d5b07273463534b32b40234',\n    'hex'),\n  Buffer.from(\n    'e793c9b02fd8aa13e21c31228accb08119643b749c898964b1746d46c3d4cbd2',\n    'hex'),\n  Buffer.from(\n    '4ff460d54b9c86dabfbcfc5712e0400d2bed3fbc4d4fbdaa86e06adcd2a9ad7a',\n    'hex'),\n  Buffer.from(\n    'bec94911c2955676db6c0a550986d76e3ba005667c442c9762b4fbb773de228c',\n    'hex'),\n  Buffer.from(\n    '179fbc148a3dd00fd24ea13458cc43bfa7f59c8182d783a513f6ebec100c8924',\n    'hex'),\n  Buffer.from(\n    '3c4fb0b95ab8b30032f432b86f535fe172c185d0fd39865837cf36187fa6f428',\n    'hex'),\n  Buffer.from(\n    '4d2491414cfe956746ec4cefa6cf6f72e28a1329432f9d8a907ac4cb5dadc15a',\n    'hex'),\n  Buffer.from(\n    '5d56499be4d2e08bcfcad08a3e38723d50503bde706948e42f55603019e528ae',\n    'hex'),\n  Buffer.from(\n    '30d0895a9a448a262091635522d1f52010b5867acae12c78ef958fd4f4389f2f',\n    'hex'),\n  Buffer.from(\n    '43df5774b03e7fef5fe40d931a7bedf1bb2e6b42738c4e6d3841103d3aa7f339',\n    'hex'),\n  Buffer.from(\n    '02ed0eb28c14da45165c566791700d6451d7fb56f0b2ab1d3b8eb070e56edff5',\n    'hex'),\n  Buffer.from(\n    '5cc3d78e4e1d5e45547a04e6873e64f90cf9536d1ccc2ef800f355c4c5fd70fd',\n    'hex'),\n  Buffer.from(\n    '49351b903444c185ccdc5c693d24d8555cb208d6a8141307699f4af063199d78',\n    'hex'),\n  Buffer.from(\n    '2a99f5bc1174b73cbb1d620884e01c34e51ccb3978da125f0e33268883bf4158',\n    'hex'),\n  Buffer.from(\n    '6b9c08e86eb0f767cfad65cd98b62149e5494a67f5845e7bd1ed019f27b86bd6',\n    'hex'),\n  Buffer.from(\n    'a1339d33281a0b56e557d3d32b1ce7f9367eb094bd5fa72a7e5004c8ded7cafe',\n    'hex'),\n  Buffer.from(\n    'b676f2eddae8775cd36cb0f63cd1d4603961f49e6265ba013a2f0307b6d0b804',\n    'hex'),\n  Buffer.from(\n    'a040929a02ce53b4acf4f2ffc6981ce4496f755e6d45fe0b2a692bcd52523f36',\n    'hex'),\n  Buffer.from(\n    '44b545aa8a25e65a73ca15dc27fc36d24c1cb9953a066539b11582dc487b4833',\n    'hex'),\n  Buffer.from(\n    '152a402bfcdf2cd548054d2275b39c7fca3ec0978078b0f0ea76e561a6c7433e',\n    'hex'),\n  Buffer.from(\n    '6cc05041e6445e74696c4cfbc9f80f543b7eabbb44b4ce6f787c6a9971c42f17',\n    'hex'),\n  Buffer.from(\n    '56c77128d98c18d91b4cfdffbc25ee9103d4758ea2abad826a90f3457d460eb4',\n    'hex'),\n  Buffer.from(\n    '27995829fe6a7515c1bfe848f9c4761db16c225929257bf40d0894f29ea8baf2',\n    'hex'),\n  Buffer.from(\n    'b7c36231706e81078c367cb896198f1e3208dd926949dd8f5709a410f75b6292',\n    'hex'),\n  Buffer.from(\n    '96bcec06264976f37460779acf28c5a7cfe8a3c0aae11a8ffcee05c0bddf08c6',\n    'hex'),\n  Buffer.from(\n    'ebc5570c29018c4d67b1aa127baf12f703b4611ebc17b7dab5573894179b93fa',\n    'hex'),\n  Buffer.from(\n    '8ecde6884f3d87b1125ba31ac3fcb13d7016de7f57cc904fe1cb97c6ae98196e',\n    'hex'),\n  Buffer.from(\n    '1ba5b2aa8c65401a82960118f80bec4f62304d83cec4713a19c39c011ea46db4',\n    'hex'),\n  Buffer.from(\n    '18ce6cfe7bf14e60b2e347b8dfe868cb31d02ebb3ada271569f50343b46db3a4',\n    'hex'),\n  Buffer.from(\n    'e35d28419ed02025cfa69038cd623962458da5c695fbdea3c22b0bfb25897092',\n    'hex'),\n  Buffer.from(\n    '54455f7129c20b1447c418f997168f24c58fc5023bf5da5be2eb6e1dd8902ed5',\n    'hex'),\n  Buffer.from(\n    '46edc3689046d53a453fb3104ab80dcaec658b2660ea1629dd7e867990648716',\n    'hex'),\n  Buffer.from(\n    'bfff8fd04433487d6a8aa60c1a29767a9fc2bbb05e420f713a13b992891d3893',\n    'hex'),\n  Buffer.from(\n    'd40e9c86cd8fe468c1776959f49ea774fa548684b6c406f3909261f4dce2575c',\n    'hex'),\n  Buffer.from(\n    '0753e940378c1bd5e3836e395daea5cb839e5046f1bd0eae1951cf10fec7c965',\n    'hex'),\n  Buffer.from(\n    '5a885db19c01d912c5759388938cafbbdf031ab2d48e91ee15589b42971d039c',\n    'hex'),\n  Buffer.from(\n    '85666a562ee0be5ce925c1d8890a6f76a87ec16d4d7d5f29ea7419cf20123b69',\n    'hex'),\n  Buffer.from(\n    '3417bb06cc6007da1b961c920b8ab4ce3fad820e4aa30b9acbc4a74ebdcebc65',\n    'hex'),\n  Buffer.from(\n    '2e7bf16cc22485a7bbe2aa8696750761b0ae39be3b2fe9d0cc6d4ef73491425c',\n    'hex'),\n  Buffer.from(\n    '22a2c1f7bded704cc1e701b5f408c310880fe956b5de2a4a44f99c873a25a7c8',\n    'hex'),\n  Buffer.from(\n    '67add1166b020ae61b8f5fc96813c04c2aa589960796865572a3c7e737613dfd',\n    'hex'\n  ), // R3 (Let's Encrypt)\n  Buffer.from(\n    '96bcec06264976f37460779acf28c5a7cfe8a3c0aae11a8ffcee05c0bddf08c6',\n    'hex'\n  ) // ISRG Root X1 (Let's Encrypt)\n];\n","/*!\n * protoreader.js - protobufs for bcoin\n * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst BufferReader = require('bufio/lib/reader');\n\n/*\n * Constants\n */\n\nconst wireType = {\n  VARINT: 0,\n  FIXED64: 1,\n  DELIMITED: 2,\n  START_GROUP: 3,\n  END_GROUP: 4,\n  FIXED32: 5\n};\n\n/**\n * ProtoBuf Reader\n * @extends {BufferReader}\n */\n\nclass ProtoReader extends BufferReader {\n  /**\n   * Create a protoreader.\n   * @constructor\n   */\n\n  constructor(data, zeroCopy) {\n    super(data, zeroCopy);\n  }\n\n  readVarint() {\n    const {size, value} = _readVarint(this.data, this.offset);\n    this.offset += size;\n    return value;\n  }\n\n  readFieldValue(tag, opt) {\n    const field = this.readField(tag, opt);\n\n    if (!field)\n      return -1;\n\n    assert(field.value != null);\n\n    return field.value;\n  }\n\n  readFieldU64(tag, opt) {\n    const field = this.readField(tag, opt);\n\n    if (!field)\n      return -1;\n\n    assert(field.type === wireType.VARINT || field.type === wireType.FIXED64);\n\n    return field.value;\n  }\n\n  readFieldU32(tag, opt) {\n    const field = this.readField(tag, opt);\n\n    if (!field)\n      return -1;\n\n    assert(field.type === wireType.VARINT || field.type === wireType.FIXED32);\n\n    return field.value;\n  }\n\n  readFieldBytes(tag, opt) {\n    const field = this.readField(tag, opt);\n\n    if (!field)\n      return null;\n\n    assert(field.data);\n\n    return field.data;\n  }\n\n  readFieldString(tag, opt, enc) {\n    const field = this.readField(tag, opt);\n\n    if (!field)\n      return null;\n\n    assert(field.data);\n\n    return field.data.toString(enc || 'utf8');\n  }\n\n  nextTag() {\n    if (this.left() === 0)\n      return -1;\n\n    const field = this.readField();\n\n    this.seek(-field.size);\n\n    return field.tag;\n  }\n\n  readField(tag, opt) {\n    const offset = this.offset;\n    const header = this.readVarint();\n    const field = new Field(header);\n\n    if (tag != null && field.tag !== tag) {\n      assert(opt, 'Non-optional field not present.');\n      this.offset = offset;\n      return null;\n    }\n\n    switch (field.type) {\n      case wireType.VARINT:\n        field.value = this.readVarint();\n        break;\n      case wireType.FIXED64:\n        field.value = this.readU64();\n        break;\n      case wireType.DELIMITED:\n        field.data = this.readVarBytes();\n        break;\n      case wireType.START_GROUP:\n        field.group = [];\n        for (;;) {\n          const inner = this.readField();\n          if (inner.type === wireType.END_GROUP)\n            break;\n          field.group.push(inner);\n        }\n        break;\n      case wireType.END_GROUP:\n        assert(false, 'Unexpected end group.');\n        break;\n      case wireType.FIXED32:\n        field.value = this.readU32();\n        break;\n      default:\n        assert(false, 'Bad wire type.');\n        break;\n    }\n\n    field.size = this.offset - offset;\n\n    return field;\n  }\n}\n\n/*\n * Encoding\n */\n\nfunction _readVarint(data, off) {\n  let num = 0;\n  let ch = 0x80;\n  let size = 0;\n\n  while (ch & 0x80) {\n    if (off >= data.length) {\n      num = 0;\n      break;\n    }\n\n    ch = data[off];\n\n    // Optimization for javascript insanity.\n    switch (size) {\n      case 0:\n      case 1:\n      case 2:\n      case 3:\n        num += (ch & 0x7f) << (7 * size);\n        break;\n      case 4:\n        num += (ch & 0x7f) * (1 << (7 * size));\n        break;\n      default:\n        num += (ch & 0x7f) * Math.pow(2, 7 * size);\n        break;\n    }\n\n    off += 1;\n    size += 1;\n\n    assert(size < 7, 'Number exceeds 2^53-1.');\n  }\n\n  return new Varint(size, num);\n}\n\n/*\n * Helpers\n */\n\nclass Field {\n  constructor(header) {\n    this.tag = header >>> 3;\n    this.type = header & 7;\n    this.size = 0;\n    this.value = 0;\n    this.data = null;\n    this.group = null;\n  }\n}\n\nclass Varint {\n  constructor(size, value) {\n    this.size = size;\n    this.value = value;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = ProtoReader;\n","/*!\n * protowriter.js - protobufs for bcoin\n * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst BufferWriter = require('bufio/lib/writer');\n\n/*\n * Constants\n */\n\nconst wireType = {\n  VARINT: 0,\n  FIXED64: 1,\n  DELIMITED: 2,\n  START_GROUP: 3,\n  END_GROUP: 4,\n  FIXED32: 5\n};\n\n/**\n * ProtoBuf Writer\n * @extends {BufferWriter}\n */\n\nclass ProtoWriter extends BufferWriter {\n  /**\n   * Create a protowriter.\n   * @constructor\n   */\n\n  constructor() {\n    super();\n  }\n\n  writeVarint(num) {\n    const size = sizeVarint(num);\n\n    // Avoid an extra allocation until\n    // we make bufferwriter more hackable.\n    // More insanity here...\n    switch (size) {\n      case 6: {\n        const value = slipVarint(num);\n        this.writeU32BE(value / 0x10000 | 0);\n        this.writeU16BE(value & 0xffff);\n        break;\n      }\n      case 5: {\n        const value = slipVarint(num);\n        this.writeU32BE(value / 0x100 | 0);\n        this.writeU8(value & 0xff);\n        break;\n      }\n      case 4: {\n        const value = slipVarint(num);\n        this.writeU32BE(value);\n        break;\n      }\n      case 3: {\n        const value = slipVarint(num);\n        this.writeU16BE(value >> 8);\n        this.writeU8(value & 0xff);\n        break;\n      }\n      case 2: {\n        const value = slipVarint(num);\n        this.writeU16BE(value);\n        break;\n      }\n      case 1: {\n        const value = slipVarint(num);\n        this.writeU8(value);\n        break;\n      }\n      default: {\n        const value = Buffer.allocUnsafe(size);\n        _writeVarint(value, num, 0);\n        this.writeBytes(value);\n        break;\n      }\n    }\n  }\n\n  writeFieldVarint(tag, value) {\n    const header = (tag << 3) | wireType.VARINT;\n    this.writeVarint(header);\n    this.writeVarint(value);\n  }\n\n  writeFieldU64(tag, value) {\n    assert(Number.isSafeInteger(value));\n    this.writeFieldVarint(tag, value);\n  }\n\n  writeFieldU32(tag, value) {\n    assert(value <= 0xffffffff);\n    this.writeFieldVarint(tag, value);\n  }\n\n  writeFieldBytes(tag, data) {\n    const header = (tag << 3) | wireType.DELIMITED;\n    this.writeVarint(header);\n    this.writeVarint(data.length);\n    this.writeBytes(data);\n  }\n\n  writeFieldString(tag, data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc || 'utf8');\n    this.writeFieldBytes(tag, data);\n  }\n}\n\n/*\n * Encoding\n */\n\nfunction _writeVarint(data, num, off) {\n  assert(Number.isSafeInteger(num), 'Number exceeds 2^53-1.');\n\n  do {\n    assert(off < data.length);\n\n    let ch = num & 0x7f;\n\n    num -= num % 0x80;\n    num /= 0x80;\n\n    if (num !== 0)\n      ch |= 0x80;\n\n    data[off] = ch;\n\n    off += 1;\n  } while (num > 0);\n\n  return off;\n};\n\nfunction slipVarint(num) {\n  assert(Number.isSafeInteger(num), 'Number exceeds 2^53-1.');\n\n  let data = 0;\n  let size = 0;\n\n  do {\n    assert(size < 7);\n\n    let ch = num & 0x7f;\n\n    num -= num % 0x80;\n    num /= 0x80;\n\n    if (num !== 0)\n      ch |= 0x80;\n\n    data *= 256;\n    data += ch;\n\n    size += 1;\n  } while (num > 0);\n\n  return data;\n}\n\nfunction sizeVarint(num) {\n  assert(Number.isSafeInteger(num), 'Number exceeds 2^53-1.');\n\n  let size = 0;\n\n  do {\n    num -= num % 0x80;\n    num /= 0x80;\n\n    size += 1;\n  } while (num > 0);\n\n  return size;\n};\n\n/*\n * Expose\n */\n\nmodule.exports = ProtoWriter;\n","/*!\n * paymentdetails.js - bip70 paymentdetails for bcoin\n * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst ProtoReader = require('./utils/protoreader');\nconst ProtoWriter = require('./utils/protowriter');\n\n/**\n * BIP70 Payment Details\n */\n\nclass PaymentDetails {\n  /**\n   * Create payment details.\n   * @constructor\n   * @param {Object?} options\n   * @property {String|null} network\n   * @property {Object[]} outputs\n   * @property {Number} time\n   * @property {Number} expires\n   * @property {String|null} memo\n   * @property {String|null} paymentUrl\n   * @property {Buffer|null} merchantData\n   */\n\n  constructor(options) {\n    this.network = null;\n    this.outputs = [];\n    this.time = Math.floor(Date.now() / 1000);\n    this.expires = -1;\n    this.memo = null;\n    this.paymentUrl = null;\n    this.merchantData = null;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options.\n   * @private\n   * @param {Object} options\n   * @returns {PaymentDetails}\n   */\n\n  fromOptions(options) {\n    if (options.network != null) {\n      assert(typeof options.network === 'string');\n      this.network = options.network;\n    }\n\n    if (options.outputs) {\n      assert(Array.isArray(options.outputs));\n      for (const output of options.outputs) {\n        assert(output && typeof output === 'object');\n        assert(Number.isSafeInteger(output.value) && output.value >= 0);\n        assert(Buffer.isBuffer(output.script));\n        this.outputs.push(output);\n      }\n    }\n\n    if (options.time != null) {\n      assert(Number.isSafeInteger(options.time));\n      this.time = options.time;\n    }\n\n    if (options.expires != null) {\n      assert(Number.isSafeInteger(options.expires));\n      this.expires = options.expires;\n    }\n\n    if (options.memo != null) {\n      assert(typeof options.memo === 'string');\n      this.memo = options.memo;\n    }\n\n    if (options.paymentUrl != null) {\n      assert(typeof options.paymentUrl === 'string');\n      this.paymentUrl = options.paymentUrl;\n    }\n\n    if (options.merchantData)\n      this.setData(options.merchantData);\n\n    return this;\n  }\n\n  /**\n   * Instantiate payment details from options.\n   * @param {Object} options\n   * @returns {PaymentDetails}\n   */\n\n  static fromOptions(options) {\n    return new PaymentDetails().fromOptions(options);\n  }\n\n  /**\n   * Test whether the payment is expired.\n   * @returns {Boolean}\n   */\n\n  isExpired() {\n    if (this.expires === -1)\n      return false;\n    return Math.floor(Date.now() / 1000) > this.expires;\n  }\n\n  /**\n   * Set payment details.\n   * @param {Object} data\n   * @param {String?} enc\n   */\n\n  setData(data, enc) {\n    if (data == null || Buffer.isBuffer(data)) {\n      this.merchantData = data;\n      return;\n    }\n\n    if (typeof data !== 'string') {\n      assert(!enc || enc === 'json');\n      this.merchantData = Buffer.from(JSON.stringify(data), 'utf8');\n      return;\n    }\n\n    this.merchantData = Buffer.from(data, enc);\n  }\n\n  /**\n   * Get payment details.\n   * @param {String?} enc\n   * @returns {String|Object|null}\n   */\n\n  getData(enc) {\n    let data = this.merchantData;\n\n    if (!data)\n      return null;\n\n    if (!enc)\n      return data;\n\n    if (enc === 'json') {\n      data = data.toString('utf8');\n      try {\n        data = JSON.parse(data);\n      } catch (e) {\n        return null;\n      }\n      return data;\n    }\n\n    return data.toString(enc);\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   * @returns {PaymentDetails}\n   */\n\n  fromRaw(data) {\n    const br = new ProtoReader(data);\n\n    this.network = br.readFieldString(1, true);\n\n    while (br.nextTag() === 2) {\n      const op = new ProtoReader(br.readFieldBytes(2));\n      const output = {\n        value: op.readFieldU64(1, true),\n        script: op.readFieldBytes(2, true)\n      };\n      this.outputs.push(output);\n    }\n\n    this.time = br.readFieldU64(3);\n    this.expires = br.readFieldU64(4, true);\n    this.memo = br.readFieldString(5, true);\n    this.paymentUrl = br.readFieldString(6, true);\n    this.merchantData = br.readFieldBytes(7, true);\n\n    return this;\n  }\n\n  /**\n   * Instantiate payment details from serialized data.\n   * @param {Buffer} data\n   * @returns {PaymentDetails}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new PaymentDetails().fromRaw(data);\n  }\n\n  /**\n   * Serialize the payment details (protobuf).\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    const bw = new ProtoWriter();\n\n    if (this.network != null)\n      bw.writeFieldString(1, this.network);\n\n    for (const output of this.outputs) {\n      const op = new ProtoWriter();\n      op.writeFieldU64(1, output.value);\n      op.writeFieldBytes(2, output.script);\n      bw.writeFieldBytes(2, op.render());\n    }\n\n    bw.writeFieldU64(3, this.time);\n\n    if (this.expires !== -1)\n      bw.writeFieldU64(4, this.expires);\n\n    if (this.memo != null)\n      bw.writeFieldString(5, this.memo);\n\n    if (this.paymentUrl != null)\n      bw.writeFieldString(6, this.paymentUrl);\n\n    if (this.merchantData)\n      bw.writeFieldString(7, this.merchantData);\n\n    return bw.render();\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = PaymentDetails;\n","/*!\n * payment.js - bip70 payment for bcoin\n * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst ProtoReader = require('./utils/protoreader');\nconst ProtoWriter = require('./utils/protowriter');\nconst {setData, getData} = require('./paymentdetails').prototype;\n\n/**\n * BIP70 Payment\n */\n\nclass Payment {\n  /**\n   * Create a payment.\n   * @constructor\n   * @param {Object?} options\n   * @property {Buffer} merchantData\n   * @property {Buffer[]} transactions\n   * @property {Buffer[]} refundTo\n   * @property {String|null} memo\n   */\n\n  constructor(options) {\n    this.merchantData = null;\n    this.transactions = [];\n    this.refundTo = [];\n    this.memo = null;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options.\n   * @private\n   * @param {Object} options\n   * @returns {Payment}\n   */\n\n  fromOptions(options) {\n    if (options.merchantData)\n      this.setData(options.merchantData);\n\n    if (options.transactions) {\n      assert(Array.isArray(options.transactions));\n      for (const tx of options.transactions) {\n        assert(Buffer.isBuffer(tx));\n        this.transactions.push(tx);\n      }\n    }\n\n    if (options.refundTo) {\n      assert(Array.isArray(options.refundTo));\n      for (const output of options.refundTo) {\n        assert(output && typeof output === 'object');\n        assert(Number.isSafeInteger(output.value) && output.value >= 0);\n        assert(Buffer.isBuffer(output.script));\n        this.refundTo.push(output);\n      }\n    }\n\n    if (options.memo != null) {\n      assert(typeof options.memo === 'string');\n      this.memo = options.memo;\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate payment from options.\n   * @param {Object} options\n   * @returns {Payment}\n   */\n\n  static fromOptions(options) {\n    return new Payment().fromOptions(options);\n  }\n\n  /**\n   * Set payment details.\n   * @param {Object} data\n   * @param {String?} enc\n   */\n\n  setData(data, enc) {\n    return setData.call(this, data, enc);\n  }\n\n  /**\n   * Get payment details.\n   * @param {String?} enc\n   * @returns {String|Object|null}\n   */\n\n  getData(enc) {\n    return getData.call(this, enc);\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   * @returns {Payment}\n   */\n\n  fromRaw(data) {\n    const br = new ProtoReader(data);\n\n    this.merchantData = br.readFieldBytes(1, true);\n\n    while (br.nextTag() === 2) {\n      const tx = br.readFieldBytes(2);\n      this.transactions.push(tx);\n    }\n\n    while (br.nextTag() === 3) {\n      const op = new ProtoReader(br.readFieldBytes(3));\n      const output = {\n        value: op.readFieldU64(1, true),\n        script: op.readFieldBytes(2, true)\n      };\n      this.refundTo.push(output);\n    }\n\n    this.memo = br.readFieldString(4, true);\n\n    return this;\n  }\n\n  /**\n   * Instantiate payment from serialized data.\n   * @param {Buffer} data\n   * @returns {Payment}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new Payment().fromRaw(data);\n  }\n\n  /**\n   * Serialize the payment (protobuf).\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    const bw = new ProtoWriter();\n\n    if (this.merchantData)\n      bw.writeFieldBytes(1, this.merchantData);\n\n    for (const tx of this.transactions)\n      bw.writeFieldBytes(2, tx);\n\n    for (const output of this.refundTo) {\n      const op = new ProtoWriter();\n      op.writeFieldU64(1, output.value);\n      op.writeFieldBytes(2, output.script);\n      bw.writeFieldBytes(3, op.render());\n    }\n\n    if (this.memo != null)\n      bw.writeFieldString(4, this.memo);\n\n    return bw.render();\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Payment;\n","/*!\n * paymentack.js - bip70 paymentack for bcoin\n * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst ProtoReader = require('./utils/protoreader');\nconst ProtoWriter = require('./utils/protowriter');\nconst Payment = require('./payment');\n\n/**\n * BIP70 Payment ACK\n */\n\nclass PaymentACK {\n  /**\n   * Create a payment ack.\n   * @constructor\n   * @param {Object?} options\n   * @property {Payment} payment\n   * @property {String|null} memo\n   */\n\n  constructor(options) {\n    this.payment = new Payment();\n    this.memo = null;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options.\n   * @private\n   * @param {Object} options\n   * @returns {PaymentACK}\n   */\n\n  fromOptions(options) {\n    if (options.payment)\n      this.payment.fromOptions(options.payment);\n\n    if (options.memo != null) {\n      assert(typeof options.memo === 'string');\n      this.memo = options.memo;\n    }\n\n    return this;\n  }\n\n  /**\n   * Instantiate payment ack from options.\n   * @param {Object} options\n   * @returns {PaymentACK}\n   */\n\n  static fromOptions(options) {\n    return new PaymentACK().fromOptions(options);\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   * @returns {PaymentACK}\n   */\n\n  fromRaw(data) {\n    const br = new ProtoReader(data);\n\n    this.payment.fromRaw(br.readFieldBytes(1));\n    this.memo = br.readFieldString(2, true);\n\n    return this;\n  }\n\n  /**\n   * Instantiate payment ack from serialized data.\n   * @param {Buffer} data\n   * @returns {PaymentACK}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new PaymentACK().fromRaw(data);\n  }\n\n  /**\n   * Serialize the payment ack (protobuf).\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    const bw = new ProtoWriter();\n\n    bw.writeFieldBytes(1, this.payment.toRaw());\n\n    if (this.memo != null)\n      bw.writeFieldString(2, this.memo);\n\n    return bw.render();\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = PaymentACK;\n","/*!\n * asn1.js - asn1 parsing for bcoin\n * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n *\n * Parts of this software are based on asn1.js.\n * https://github.com/indutny/asn1.js\n *\n * Copyright Fedor Indutny, 2013.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\n'use strict';\n\nconst bio = require('bufio');\nconst ASN1 = exports;\n\n/**\n * Read next tag.\n * @param {BufferReader} br\n * @returns {Object}\n */\n\nASN1.readTag = function readTag(br) {\n  let type = br.readU8();\n  const primitive = (type & 0x20) === 0;\n\n  if ((type & 0x1f) === 0x1f) {\n    let oct = type;\n    type = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = br.readU8();\n      type <<= 7;\n      type |= oct & 0x7f;\n    }\n  } else {\n    type &= 0x1f;\n  }\n\n  return {\n    type: type,\n    primitive: primitive,\n    size: ASN1.readSize(br, primitive)\n  };\n};\n\n/**\n * Read tag size.\n * @param {BufferReader} br\n * @param {Boolean} primitive\n * @returns {Number}\n * @throws on indefinite size\n */\n\nASN1.readSize = function readSize(br, primitive) {\n  let size = br.readU8();\n\n  // Indefinite form\n  if (!primitive && size === 0x80)\n    throw new Error('Indefinite size.');\n\n  // Definite form\n  if ((size & 0x80) === 0) {\n    // Short form\n    return size;\n  }\n\n  // Long form\n  const bytes = size & 0x7f;\n\n  if (bytes > 3)\n    throw new Error('Length octet is too long.');\n\n  size = 0;\n  for (let i = 0; i < bytes; i++) {\n    size <<= 8;\n    size |= br.readU8();\n  }\n\n  return size;\n};\n\n/**\n * Read implicit SEQ.\n * @param {BufferReader} br\n * @returns {Buffer}\n */\n\nASN1.readSeq = function readSeq(br) {\n  const tag = ASN1.implicit(br, 0x10);\n  return br.readBytes(tag.size);\n};\n\n/**\n * Read next tag and assert implicit.\n * @param {BufferReader} br\n * @param {Number} type\n * @returns {Object}\n * @throws on unexpected tag\n */\n\nASN1.implicit = function implicit(br, type) {\n  const tag = ASN1.readTag(br);\n\n  if (tag.type !== type)\n    throw new Error(`Unexpected tag: ${tag.type}.`);\n\n  return tag;\n};\n\n/**\n * Read implicit tag.\n * @param {BufferReader} br\n * @param {Number} type\n * @returns {Boolean}\n */\n\nASN1.explicit = function explicit(br, type) {\n  const offset = br.offset;\n  const tag = ASN1.readTag(br);\n\n  if (tag.type !== type) {\n    br.offset = offset;\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Read next implicit SEQ and return a new reader.\n * @param {BufferReader} br\n * @returns {BufferReader}\n */\n\nASN1.seq = function seq(br) {\n  return bio.read(ASN1.readSeq(br), true);\n};\n\n/**\n * Read implicit int.\n * @param {BufferReader} br\n * @param {Boolean?} cast\n * @returns {Buffer|Number}\n */\n\nASN1.readInt = function readInt(br, cast) {\n  const tag = ASN1.implicit(br, 0x02);\n  const num = br.readBytes(tag.size);\n\n  if (cast)\n    return num.readUIntBE(0, num.length);\n\n  return num;\n};\n\n/**\n * Read explicit int.\n * @param {BufferReader} br\n * @param {Number} type\n * @param {Boolean?} readNum\n * @returns {Buffer|Number} `-1` on not present.\n */\n\nASN1.readExplicitInt = function readExplicitInt(br, type, readNum) {\n  if (!ASN1.explicit(br, type))\n    return -1;\n\n  return ASN1.readInt(br, readNum);\n};\n\n/**\n * Read and align an implicit bitstr.\n * @param {BufferReader} br\n * @returns {Buffer}\n */\n\nASN1.readBitstr = function readBitstr(br) {\n  const tag = ASN1.implicit(br, 0x03);\n  const str = br.readBytes(tag.size);\n  return ASN1.alignBitstr(str);\n};\n\n/**\n * Read an implicit string (any type).\n * @param {BufferReader} br\n * @returns {String}\n */\n\nASN1.readString = function readString(br) {\n  const tag = ASN1.readTag(br);\n\n  switch (tag.type) {\n    case 0x03: { // bitstr\n      const str = br.readBytes(tag.size);\n      return ASN1.alignBitstr(str).toString('utf8');\n    }\n    // Note:\n    // Fuck all these.\n    case 0x04: // octstr\n    case 0x12: // numstr\n    case 0x13: // prinstr\n    case 0x14: // t61str\n    case 0x15: // videostr\n    case 0x16: // ia5str\n    case 0x19: // graphstr\n    case 0x0c: // utf8str\n    case 0x1a: // iso646str\n    case 0x1b: // genstr\n    case 0x1c: // unistr\n    case 0x1d: // charstr\n    case 0x1e: { // bmpstr\n      return br.readString(tag.size, 'utf8');\n    }\n    default: {\n      throw new Error(`Unexpected tag: ${tag.type}.`);\n    }\n  }\n};\n\n/**\n * Align a bitstr.\n * @param {Buffer} data\n * @returns {Buffer}\n */\n\nASN1.alignBitstr = function alignBitstr(data) {\n  const padding = data[0];\n  const bits = (data.length - 1) * 8 - padding;\n  const buf = data.slice(1);\n  const shift = 8 - (bits % 8);\n\n  if (shift === 8 || buf.length === 0)\n    return buf;\n\n  const out = Buffer.allocUnsafe(buf.length);\n  out[0] = buf[0] >>> shift;\n\n  for (let i = 1; i < buf.length; i++) {\n    out[i] = buf[i - 1] << (8 - shift);\n    out[i] |= buf[i] >>> shift;\n  }\n\n  return out;\n};\n\n/**\n * Read an entire certificate.\n * @param {BufferReader} br\n * @returns {Object}\n */\n\nASN1.readCert = function readCert(br) {\n  const buf = br;\n\n  buf.start();\n\n  br = ASN1.seq(buf);\n\n  return {\n    tbs: ASN1.readTBS(br),\n    sigAlg: ASN1.readAlgIdent(br),\n    sig: ASN1.readBitstr(br),\n    raw: buf.endData(true)\n  };\n};\n\n/**\n * Read only the TBS certificate.\n * @param {BufferReader} br\n * @returns {Object}\n */\n\nASN1.readTBS = function readTBS(br) {\n  const buf = br;\n\n  buf.start();\n\n  br = ASN1.seq(buf);\n\n  return {\n    version: ASN1.readExplicitInt(br, 0x00, true),\n    serial: ASN1.readInt(br),\n    sig: ASN1.readAlgIdent(br),\n    issuer: ASN1.readName(br),\n    validity: ASN1.readValidity(br),\n    subject: ASN1.readName(br),\n    pubkey: ASN1.readPubkey(br),\n    raw: buf.endData(true)\n  };\n};\n\n/**\n * Read an implicit pubkey.\n * @param {BufferReader} br\n * @returns {Object}\n */\n\nASN1.readPubkey = function readPubkey(br) {\n  br = ASN1.seq(br);\n  return {\n    alg: ASN1.readAlgIdent(br),\n    pubkey: ASN1.readBitstr(br)\n  };\n};\n\n/**\n * Read implicit name.\n * @param {BufferReader} br\n * @returns {Object[]}\n */\n\nASN1.readName = function readName(br) {\n  const values = [];\n\n  br = ASN1.seq(br);\n\n  while (br.left()) {\n    ASN1.implicit(br, 0x11); // set\n    ASN1.implicit(br, 0x10); // seq\n    values.push({\n      type: ASN1.readOID(br),\n      value: ASN1.readString(br)\n    });\n  }\n\n  return values;\n};\n\n/**\n * Read implicit validity timerange.\n * @param {BufferReader} br\n * @returns {Object}\n */\n\nASN1.readValidity = function readValidity(br) {\n  br = ASN1.seq(br);\n  return {\n    notBefore: ASN1.readTime(br),\n    notAfter: ASN1.readTime(br)\n  };\n};\n\n/**\n * Read implicit timestamp.\n * @param {BufferReader} br\n * @returns {Number}\n */\n\nASN1.readTime = function readTime(br) {\n  const tag = ASN1.readTag(br);\n  const str = br.readString(tag.size, 'ascii');\n  let year, mon, day, hour, min, sec;\n\n  switch (tag.type) {\n    case 0x17: // utctime\n      year = str.slice(0, 2) | 0;\n      mon = str.slice(2, 4) | 0;\n      day = str.slice(4, 6) | 0;\n      hour = str.slice(6, 8) | 0;\n      min = str.slice(8, 10) | 0;\n      sec = str.slice(10, 12) | 0;\n      if (year < 70)\n        year = 2000 + year;\n      else\n        year = 1900 + year;\n      break;\n    case 0x18: // gentime\n      year = str.slice(0, 4) | 0;\n      mon = str.slice(4, 6) | 0;\n      day = str.slice(6, 8) | 0;\n      hour = str.slice(8, 10) | 0;\n      min = str.slice(10, 12) | 0;\n      sec = str.slice(12, 14) | 0;\n      break;\n    default:\n      throw new Error(`Unexpected tag: ${tag.type}.`);\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0) / 1000;\n};\n\n/**\n * Read and format OID to string.\n * @param {BufferReader} br\n * @returns {String}\n */\n\nASN1.readOID = function readOID(br) {\n  const tag = ASN1.implicit(br, 0x06);\n  const data = br.readBytes(tag.size);\n  return ASN1.formatOID(data);\n};\n\n/**\n * Format an OID buffer to a string.\n * @param {Buffer} data\n * @returns {String}\n */\n\nASN1.formatOID = function formatOID(data) {\n  const br = bio.read(data);\n  const ids = [];\n  let ident = 0;\n  let subident = 0;\n\n  while (br.left()) {\n    subident = br.readU8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      ids.push(ident);\n      ident = 0;\n    }\n  }\n\n  if (subident & 0x80)\n    ids.push(ident);\n\n  const first = (ids[0] / 40) | 0;\n  const second = ids[0] % 40;\n  const result = [first, second].concat(ids.slice(1));\n\n  return result.join('.');\n};\n\n/**\n * Read algorithm identifier.\n * @param {BufferReader} br\n * @returns {Object}\n */\n\nASN1.readAlgIdent = function readAlgIdent(br) {\n  let params = null;\n\n  br = ASN1.seq(br);\n\n  const alg = ASN1.readOID(br);\n\n  if (br.left() > 0) {\n    const tag = ASN1.readTag(br);\n    params = br.readBytes(tag.size);\n    if (params.length === 0)\n      params = null;\n  }\n\n  return {\n    alg: alg,\n    params: params\n  };\n};\n\n/**\n * Read RSA public key.\n * @param {BufferReader} br\n * @returns {Object}\n */\n\nASN1.readRSAPublic = function readRSAPublic(br) {\n  br = ASN1.seq(br);\n  return {\n    modulus: ASN1.readInt(br),\n    publicExponent: ASN1.readInt(br)\n  };\n};\n\n/**\n * Read RSA private key.\n * @param {BufferReader} br\n * @returns {Object}\n */\n\nASN1.readRSAPrivate = function readRSAPrivate(br) {\n  br = ASN1.seq(br);\n  return {\n    version: ASN1.readInt(br, true),\n    modulus: ASN1.readInt(br),\n    publicExponent: ASN1.readInt(br),\n    privateExponent: ASN1.readInt(br),\n    prime1: ASN1.readInt(br),\n    prime2: ASN1.readInt(br),\n    exponent1: ASN1.readInt(br),\n    exponent2: ASN1.readInt(br),\n    coefficient: ASN1.readInt(br)\n  };\n};\n\n/**\n * Read RSA public key from buffer.\n * @param {Buffer} data\n * @returns {Object}\n */\n\nASN1.parseRSAPublic = function parseRSAPublic(data) {\n  return ASN1.readRSAPublic(bio.read(data, true));\n};\n\n/**\n * Read RSA private key from buffer.\n * @param {Buffer} data\n * @returns {Object}\n */\n\nASN1.parseRSAPrivate = function parseRSAPrivate(data) {\n  return ASN1.readRSAPrivate(bio.read(data, true));\n};\n\n/**\n * Read certificate from buffer.\n * @param {Buffer} data\n * @returns {Object}\n */\n\nASN1.parseCert = function parseCert(data) {\n  return ASN1.readCert(bio.read(data, true));\n};\n\n/**\n * Read TBS certificate from buffer.\n * @param {Buffer} data\n * @returns {Object}\n */\n\nASN1.parseTBS = function parseTBS(data) {\n  return ASN1.readTBS(bio.read(data, true));\n};\n","/*!\n * pk.js - public key algorithms for bcoin\n * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst SHA224 = require('../bcrypto/sha224');\nconst SHA256 = require('../bcrypto/sha256');\nconst SHA384 = require('../bcrypto/sha384');\nconst SHA512 = require('../bcrypto/sha512');\nconst rsa = require('../bcrypto/rsa');\nconst p224 = require('../bcrypto/p224');\nconst p256 = require('../bcrypto/p256');\nconst p384 = require('../bcrypto/p384');\nconst p521 = require('../bcrypto/p521');\n\n/**\n * Verify signature with public key.\n * @param {String} alg - Hash algorithm.\n * @param {Buffer} msg\n * @param {Buffer} sig\n * @param {Object} key\n * @returns {Boolean}\n */\n\nexports.verify = function verify(alg, msg, sig, key) {\n  const hash = getHash(alg);\n\n  if (!hash)\n    return false;\n\n  switch (key.alg) {\n    case 'rsa': {\n      return rsa.verify(hash, hash.digest(msg), sig, key.data);\n    }\n\n    case 'ecdsa': {\n      const ec = getCurve(key.curve);\n\n      if (!ec)\n        return false;\n\n      return ec.verifyDER(hash.digest(msg), sig, key.data);\n    }\n\n    default: {\n      throw new Error(`Unsupported algorithm: ${key.alg}.`);\n    }\n  }\n};\n\n/**\n * Sign message with private key.\n * @param {String} alg - Hash algorithm.\n * @param {Buffer} msg\n * @param {Object} key\n * @returns {Buffer}\n */\n\nexports.sign = function sign(alg, msg, key) {\n  const hash = getHash(alg);\n\n  if (!hash)\n    throw new Error(`Unsupported hash algorithm: ${alg}.`);\n\n  switch (key.alg) {\n    case 'rsa': {\n      return rsa.sign(hash, hash.digest(msg), key.data);\n    }\n\n    case 'ecdsa': {\n      const ec = getCurve(key.curve);\n\n      if (!ec)\n        throw new Error(`Unsupported curve: ${key.curve}.`);\n\n      return ec.signDER(hash.digest(msg), key.data);\n    }\n\n    default: {\n      throw new Error(`Unsupported algorithm: ${key.alg}.`);\n    }\n  }\n};\n\n/*\n * Helpers\n */\n\nfunction getHash(alg) {\n  assert(typeof alg === 'string');\n  switch (alg) {\n    case 'sha224':\n      return SHA224;\n    case 'sha256':\n      return SHA256;\n    case 'sha384':\n      return SHA384;\n    case 'sha512':\n      return SHA512;\n    default:\n      return null;\n  }\n}\n\nfunction getCurve(curve) {\n  assert(typeof curve === 'string');\n  switch (curve) {\n    case 'p224':\n      return p224;\n    case 'p256':\n      return p256;\n    case 'p384':\n      return p384;\n    case 'p521':\n      return p521;\n    default:\n      return null;\n  }\n}\n","/*!\n * x509.js - x509 handling for bcoin\n * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst sha256 = require('../bcrypto/sha256');\nconst ASN1 = require('./utils/asn1');\nconst crypto = require('./crypto');\nconst certs = require('./certs');\n\n/**\n * @exports bip70/x509\n */\n\nconst x509 = exports;\n\n/**\n * Map of trusted root certs.\n * @type {Set}\n */\n\nx509.trusted = new Set();\n\n/**\n * Whether to allow untrusted root\n * certs during verification.\n * @type {Boolean}\n */\n\nx509.allowUntrusted = false;\n\n/**\n * OID to algorithm map for PKI.\n * @const {Object}\n * @see https://www.ietf.org/rfc/rfc2459.txt\n * @see https://tools.ietf.org/html/rfc3279\n * @see http://oid-info.com/get/1.2.840.10040.4\n * @see http://oid-info.com/get/1.2.840.113549.1.1\n * @see http://oid-info.com/get/1.2.840.10045.4.3\n * @see https://tools.ietf.org/html/draft-jivsov-openpgp-sha3-01\n */\n\nx509.oid = {\n  '1.2.840.10040.4.1'       : { key: 'dsa',   hash: null       },\n  '1.2.840.10040.4.2'       : { key: 'dsa',   hash: null       },\n  '1.2.840.10040.4.3'       : { key: 'dsa',   hash: 'sha1'     },\n  '1.2.840.113549.1.1.1'    : { key: 'rsa',   hash: null       },\n  '1.2.840.113549.1.1.2'    : { key: 'rsa',   hash: 'md2'      },\n  '1.2.840.113549.1.1.3'    : { key: 'rsa',   hash: 'md4'      },\n  '1.2.840.113549.1.1.4'    : { key: 'rsa',   hash: 'md5'      },\n  '1.2.840.113549.1.1.5'    : { key: 'rsa',   hash: 'sha1'     },\n  '1.2.840.113549.1.1.11'   : { key: 'rsa',   hash: 'sha256'   },\n  '1.2.840.113549.1.1.12'   : { key: 'rsa',   hash: 'sha384'   },\n  '1.2.840.113549.1.1.13'   : { key: 'rsa',   hash: 'sha512'   },\n  '1.2.840.113549.1.1.14'   : { key: 'rsa',   hash: 'sha224'   },\n  '2.16.840.1.101.3.4.2.8'  : { key: 'rsa',   hash: 'sha3-256' },\n  '2.16.840.1.101.3.4.2.9'  : { key: 'rsa',   hash: 'sha3-384' },\n  '2.16.840.1.101.3.4.2.10' : { key: 'rsa',   hash: 'sha3-512' },\n  '1.2.840.10045.2.1'       : { key: 'ecdsa', hash: null       },\n  '1.2.840.10045.4.1'       : { key: 'ecdsa', hash: 'sha1'     },\n  '1.2.840.10045.4.3.1'     : { key: 'ecdsa', hash: 'sha224'   },\n  '1.2.840.10045.4.3.2'     : { key: 'ecdsa', hash: 'sha256'   },\n  '1.2.840.10045.4.3.3'     : { key: 'ecdsa', hash: 'sha384'   },\n  '1.2.840.10045.4.3.4'     : { key: 'ecdsa', hash: 'sha512'   }\n};\n\n/**\n * OID to curve name map for ECDSA.\n * @type {Object}\n */\n\nx509.curves = {\n  '1.3.132.0.33': 'p224',\n  '1.2.840.10045.3.1.7': 'p256',\n  '1.3.132.0.34': 'p384',\n  '1.3.132.0.35': 'p521'\n};\n\n/**\n * Retrieve cert value by OID.\n * @param {Object} cert\n * @param {String} oid\n * @returns {String}\n */\n\nx509.getSubjectOID = function getSubjectOID(cert, oid) {\n  const subject = cert.tbs.subject;\n\n  for (const entry of subject) {\n    if (entry.type === oid)\n      return entry.value;\n  }\n\n  return null;\n};\n\n/**\n * Try to retrieve CA name by checking\n * for a few different OIDs.\n * @param {Object} cert\n * @returns {String}\n */\n\nx509.getCAName = function getCAName(cert) {\n  // This seems to work the best in practice\n  // for getting a human-readable and\n  // descriptive name for the CA.\n  // See:\n  //   http://oid-info.com/get/2.5.4\n  // Precedence:\n  //   (3) commonName\n  //   (11) organizationUnitName\n  //   (10) organizationName\n  return x509.getSubjectOID(cert, '2.5.4.3')\n    || x509.getSubjectOID(cert, '2.5.4.11')\n    || x509.getSubjectOID(cert, '2.5.4.10')\n    || 'Unknown';\n};\n\n/**\n * Test whether a cert is trusted by hashing\n * and looking it up in the trusted map.\n * @param {Object} cert\n * @returns {Buffer}\n */\n\nx509.isTrusted = function isTrusted(cert) {\n  const fingerprint = sha256.digest(cert.raw);\n  const hash = fingerprint.toString('hex');\n  return x509.trusted.has(hash);\n};\n\n/**\n * Add root certificates to the trusted map.\n * @param {Buffer[]} certs\n */\n\nx509.setTrust = function setTrust(certs) {\n  assert(Array.isArray(certs), 'Certs must be an array.');\n\n  for (const raw of certs) {\n    assert(Buffer.isBuffer(raw), 'Certificates must be DER.');\n\n    const cert = x509.parse(raw);\n    const hash = sha256.digest(cert.raw);\n    const fingerprint = hash.toString('hex');\n\n    x509.trusted.add(fingerprint);\n  }\n};\n\n/**\n * Add root certificate fingerprints to the trusted map.\n * @param {Hash[]} hashes\n */\n\nx509.setFingerprints = function setFingerprints(hashes) {\n  assert(Array.isArray(hashes), 'Certs must be an array.');\n\n  for (const hash of hashes) {\n    assert(Buffer.isBuffer(hash), 'Fingerprint must be a buffer.');\n    assert(hash.length === 32, 'Fingerprint must be a sha256 hash.');\n\n    const fingerprint = hash.toString('hex');\n\n    x509.trusted.add(fingerprint);\n  }\n};\n\n/**\n * Retrieve key algorithm from cert.\n * @param {Object} cert\n * @returns {Object}\n */\n\nx509.getKeyAlgorithm = function getKeyAlgorithm(cert) {\n  const oid = cert.tbs.pubkey.alg.alg;\n  const alg = x509.oid[oid];\n\n  if (!alg)\n    throw new Error(`Unknown key algorithm: ${oid}.`);\n\n  return alg;\n};\n\n/**\n * Retrieve signature algorithm from cert.\n * @param {Object} cert\n * @returns {Object}\n */\n\nx509.getSigAlgorithm = function getSigAlgorithm(cert) {\n  const oid = cert.sigAlg.alg;\n  const alg = x509.oid[oid];\n\n  if (!alg || !alg.hash)\n    throw new Error(`Unknown signature algorithm: ${oid}.`);\n\n  return alg;\n};\n\n/**\n * Lookup curve based on key parameters.\n * @param {Buffer} params\n * @returns {Object}\n */\n\nx509.getCurve = function getCurve(params) {\n  let oid;\n\n  try {\n    oid = ASN1.formatOID(params);\n  } catch (e) {\n    throw new Error('Could not parse curve OID.');\n  }\n\n  const curve = x509.curves[oid];\n\n  if (!curve)\n    throw new Error(`Unknown ECDSA curve: ${oid}.`);\n\n  return curve;\n};\n\n/**\n * Parse a DER formatted cert.\n * @param {Buffer} der\n * @returns {Object|null}\n */\n\nx509.parse = function parse(der) {\n  try {\n    return ASN1.parseCert(der);\n  } catch (e) {\n    throw new Error('Could not parse DER certificate.');\n  }\n};\n\n/**\n * Get cert public key.\n * @param {Object} cert\n * @returns {Object|null}\n */\n\nx509.getPublicKey = function getPublicKey(cert) {\n  const alg = x509.getKeyAlgorithm(cert);\n  const key = cert.tbs.pubkey.pubkey;\n  const params = cert.tbs.pubkey.alg.params;\n\n  let curve = null;\n\n  if (alg.key === 'ecdsa') {\n    if (!params)\n      throw new Error('No curve selected for ECDSA (cert).');\n\n    curve = x509.getCurve(params);\n  }\n\n  return {\n    alg: alg.key,\n    data: key,\n    params: params,\n    curve: curve\n  };\n};\n\n/**\n * Verify cert expiration time.\n * @param {Object} cert\n * @returns {Boolean}\n */\n\nx509.verifyTime = function verifyTime(cert) {\n  const time = cert.tbs.validity;\n  const now = Math.floor(Date.now() / 1000);\n  return now > time.notBefore && now < time.notAfter;\n};\n\n/**\n * Get signature key info from cert chain.\n * @param {Buffer} key\n * @param {Buffer[]} chain\n * @returns {Object}\n */\n\nx509.getSigningKey = function getSigningKey(key, chain) {\n  assert(chain.length !== 0, 'No chain available.');\n\n  const cert = x509.parse(chain[0]);\n  const pub = x509.getPublicKey(cert);\n\n  return {\n    alg: pub.alg,\n    data: key,\n    params: pub.params,\n    curve: pub.curve\n  };\n};\n\n/**\n * Sign a hash with the chain signing key.\n * @param {String} hash\n * @param {Buffer} msg\n * @param {Buffer} key\n * @param {Buffer[]} chain\n * @returns {Buffer}\n */\n\nx509.signSubject = function signSubject(hash, msg, key, chain) {\n  const priv = x509.getSigningKey(key, chain);\n  return crypto.sign(hash, msg, priv);\n};\n\n/**\n * Get chain verification key.\n * @param {Buffer[]} chain\n * @returns {Object|null}\n */\n\nx509.getVerifyKey = function getVerifyKey(chain) {\n  if (chain.length === 0)\n    throw new Error('No verify key available (cert chain).');\n\n  const cert = x509.parse(chain[0]);\n\n  return x509.getPublicKey(cert);\n};\n\n/**\n * Verify a sighash against chain verification key.\n * @param {String} hash\n * @param {Buffer} msg\n * @param {Buffer} sig\n * @param {Buffer[]} chain\n * @returns {Boolean}\n */\n\nx509.verifySubject = function verifySubject(hash, msg, sig, chain) {\n  const key = x509.getVerifyKey(chain);\n  return crypto.verify(hash, msg, sig, key);\n};\n\n/**\n * Parse certificate chain.\n * @param {Buffer[]} chain\n * @returns {Object[]}\n */\n\nx509.parseChain = function parseChain(chain) {\n  const certs = [];\n\n  for (const item of chain) {\n    const cert = x509.parse(item);\n    certs.push(cert);\n  }\n\n  return certs;\n};\n\n/**\n * Verify all expiration times in a certificate chain.\n * @param {Object[]} chain\n * @returns {Boolean}\n */\n\nx509.verifyTimes = function verifyTimes(chain) {\n  for (const cert of chain) {\n    if (!x509.verifyTime(cert))\n      return false;\n  }\n\n  return true;\n};\n\n/**\n * Verify that at least one parent\n * cert in the chain is trusted.\n * @param {Object[]} chain\n * @returns {Boolean}\n */\n\nx509.verifyTrust = function verifyTrust(chain) {\n  // If trust hasn't been\n  // setup, just return.\n  if (x509.allowUntrusted)\n    return true;\n\n  // Make sure we trust one\n  // of the certs in the chain.\n  for (const cert of chain) {\n    // If any certificate in the chain\n    // is trusted, assume we also trust\n    // the parent.\n    if (x509.isTrusted(cert))\n      return true;\n  }\n\n  // No trusted certs present.\n  return false;\n};\n\n/**\n * Verify certificate chain.\n * @param {Object[]} certs\n */\n\nx509.verifyChain = function verifyChain(certs) {\n  const chain = x509.parseChain(certs);\n\n  // Parse certificates and\n  // check validity time.\n  if (!x509.verifyTimes(chain))\n    throw new Error('Invalid certificate times.');\n\n  // Verify signatures.\n  for (let i = 1; i < chain.length; i++) {\n    const child = chain[i - 1];\n    const parent = chain[i];\n    const alg = x509.getSigAlgorithm(child);\n    const key = x509.getPublicKey(parent);\n    const msg = child.tbs.raw;\n    const sig = child.sig;\n\n    if (!crypto.verify(alg.hash, msg, sig, key))\n      throw new Error(`${alg.key} verification failed for chain.`);\n  }\n\n  // Make sure we trust one\n  // of the certs in the chain.\n  if (!x509.verifyTrust(chain))\n    throw new Error('Certificate chain is untrusted.');\n\n  return true;\n};\n\n/*\n * Load trusted certs.\n */\n\nx509.setFingerprints(certs);\n","/*!\n * paymentrequest.js - bip70 paymentrequest for bcoin\n * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst ProtoReader = require('./utils/protoreader');\nconst ProtoWriter = require('./utils/protowriter');\nconst PaymentDetails = require('./paymentdetails');\nconst x509 = require('./x509');\n\n/**\n * BIP70 Payment Request\n */\n\nclass PaymentRequest {\n  /**\n   * Create a payment request.\n   * @constructor\n   * @param {Object?} options\n   * @property {Number} version\n   * @property {String|null} pkiType\n   * @property {Buffer|null} pkiData\n   * @property {PaymentDetails} paymentDetails\n   * @property {Buffer|null} signature\n   */\n\n  constructor(options) {\n    this.version = -1;\n    this.pkiType = null;\n    this.pkiData = null;\n    this.paymentDetails = new PaymentDetails();\n    this.signature = null;\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  /**\n   * Inject properties from options.\n   * @private\n   * @param {Object} options\n   * @returns {PaymentRequest}\n   */\n\n  fromOptions(options) {\n    if (options.version != null) {\n      assert((options.version | 0) === options.version);\n      this.version = options.version;\n    }\n\n    if (options.pkiType != null) {\n      assert(typeof options.pkiType === 'string');\n      this.pkiType = options.pkiType;\n    }\n\n    if (options.pkiData) {\n      assert(Buffer.isBuffer(options.pkiData));\n      this.pkiData = options.pkiData;\n    }\n\n    if (options.paymentDetails)\n      this.paymentDetails.fromOptions(options.paymentDetails);\n\n    if (options.signature) {\n      assert(Buffer.isBuffer(options.signature));\n      this.signature = options.signature;\n    }\n\n    if (options.chain)\n      this.setChain(options.chain);\n\n    return this;\n  }\n\n  /**\n   * Instantiate payment request from options.\n   * @param {Object} options\n   * @returns {PaymentRequest}\n   */\n\n  static fromOptions(options) {\n    return new PaymentRequest().fromOptions(options);\n  }\n\n  /**\n   * Inject properties from serialized data.\n   * @private\n   * @param {Buffer} data\n   * @returns {PaymentRequest}\n   */\n\n  fromRaw(data) {\n    const br = new ProtoReader(data);\n\n    this.version = br.readFieldU32(1, true);\n    this.pkiType = br.readFieldString(2, true);\n    this.pkiData = br.readFieldBytes(3, true);\n    this.paymentDetails.fromRaw(br.readFieldBytes(4));\n    this.signature = br.readFieldBytes(5, true);\n\n    return this;\n  }\n\n  /**\n   * Instantiate payment request from serialized data.\n   * @param {Buffer} data\n   * @returns {PaymentRequest}\n   */\n\n  static fromRaw(data, enc) {\n    if (typeof data === 'string')\n      data = Buffer.from(data, enc);\n    return new PaymentRequest().fromRaw(data);\n  }\n\n  /**\n   * Serialize the payment request (protobuf).\n   * @returns {Buffer}\n   */\n\n  toRaw() {\n    const bw = new ProtoWriter();\n\n    if (this.version !== -1)\n      bw.writeFieldU32(1, this.version);\n\n    if (this.pkiType != null)\n      bw.writeFieldString(2, this.pkiType);\n\n    if (this.pkiData)\n      bw.writeFieldBytes(3, this.pkiData);\n\n    bw.writeFieldBytes(4, this.paymentDetails.toRaw());\n\n    if (this.signature)\n      bw.writeFieldBytes(5, this.signature);\n\n    return bw.render();\n  }\n\n  /**\n   * Get payment request signature algorithm.\n   * @returns {Object|null}\n   */\n\n  getAlgorithm() {\n    if (!this.pkiType)\n      throw new Error('No PKI type available.');\n\n    const parts = this.pkiType.split('+');\n\n    if (parts.length !== 2)\n      throw new Error('Could not parse PKI algorithm.');\n\n    if (parts[0] !== 'x509')\n      throw new Error(`Unknown PKI type: ${parts[0]}.`);\n\n    if (parts[1] !== 'sha1' && parts[1] !== 'sha256')\n      throw new Error(`Unknown hash algorithm: ${parts[1]}.`);\n\n    return new Algorithm(parts[0], parts[1]);\n  }\n\n  /**\n   * Serialize payment request for sighash.\n   * @returns {Buffer}\n   */\n\n  signatureData() {\n    const signature = this.signature;\n\n    this.signature = Buffer.alloc(0);\n\n    const data = this.toRaw();\n\n    this.signature = signature;\n\n    return data;\n  }\n\n  /**\n   * Set x509 certificate chain.\n   * @param {Buffer[]} chain\n   */\n\n  setChain(chain) {\n    const bw = new ProtoWriter();\n\n    assert(Array.isArray(chain), 'Chain must be an array.');\n\n    for (const cert of chain) {\n      assert(Buffer.isBuffer(cert), 'Certificates must be DER.');\n      bw.writeFieldBytes(1, cert);\n    }\n\n    this.pkiData = bw.render();\n  }\n\n  /**\n   * Get x509 certificate chain.\n   * @returns {Buffer[]}\n   */\n\n  getChain() {\n    const chain = [];\n\n    if (!this.pkiData)\n      return chain;\n\n    const br = new ProtoReader(this.pkiData);\n\n    while (br.nextTag() === 1)\n      chain.push(br.readFieldBytes(1));\n\n    return chain;\n  }\n\n  /**\n   * Sign payment request (chain must be set).\n   * @param {Buffer} key\n   * @param {Buffer[]?} certs\n   */\n\n  sign(key, certs) {\n    if (certs)\n      this.setChain(certs);\n\n    if (!this.pkiType)\n      this.pkiType = 'x509+sha256';\n\n    const alg = this.getAlgorithm();\n    const msg = this.signatureData();\n    const chain = this.getChain();\n\n    this.signature = x509.signSubject(alg.hash, msg, key, chain);\n  }\n\n  /**\n   * Verify payment request signature.\n   * @returns {Boolean}\n   */\n\n  verify() {\n    if (!this.pkiType || this.pkiType === 'none')\n      return false;\n\n    if (!this.signature)\n      return false;\n\n    let alg;\n    try {\n      alg = this.getAlgorithm();\n    } catch (e) {\n      return false;\n    }\n\n    const msg = this.signatureData();\n    const sig = this.signature;\n    const chain = this.getChain();\n\n    try {\n      return x509.verifySubject(alg.hash, msg, sig, chain);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Verify x509 certificate chain.\n   * @returns {Boolean}\n   */\n\n  verifyChain() {\n    if (!this.pkiType || this.pkiType === 'none')\n      return false;\n\n    try {\n      return x509.verifyChain(this.getChain());\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Get root certificate authority.\n   * @returns {Object|null}\n   */\n\n  getCA() {\n    if (!this.pkiType || this.pkiType === 'none')\n      throw new Error('No CA found (pkiType).');\n\n    const chain = this.getChain();\n\n    if (chain.length === 0)\n      throw new Error('No CA found (chain).');\n\n    const root = x509.parse(chain[chain.length - 1]);\n\n    return new CA(root);\n  }\n}\n\n/**\n * Algorithm\n */\n\nclass Algorithm {\n  /**\n   * Create an algorithm.\n   * @constructor\n   * @ignore\n   */\n\n  constructor(key, hash) {\n    this.key = key;\n    this.hash = hash;\n  }\n}\n\n/**\n * CA\n */\n\nclass CA {\n  /**\n   * Create a CA.\n   * @constructor\n   * @ignore\n   */\n\n  constructor(root) {\n    this.name = x509.getCAName(root);\n    this.trusted = x509.isTrusted(root);\n    this.cert = root;\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = PaymentRequest;\n","/*!\n * b70.js - bip70 for bcoin\n * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\nexports.certs = require('./certs');\nexports.PaymentACK = require('./paymentack');\nexports.PaymentDetails = require('./paymentdetails');\nexports.Payment = require('./payment');\nexports.PaymentRequest = require('./paymentrequest');\nexports.x509 = require('./x509');\n","/*!\n * pkg.js - package constants\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * Copyright (c) 2018, bcash developers.\n * https://github.com/bcoin-org/bcash\n */\n\n'use strict';\n\nconst pkg = exports;\n\n/**\n * Package Name\n * @const {String}\n * @default\n */\n\npkg.name = require('../package.json').name;\n\n/**\n * Project Name\n * @const {String}\n * @default\n */\n\npkg.core = 'bcash';\n\n/**\n * Organization Name\n * @const {String}\n * @default\n */\n\npkg.organization = 'badger-cash';\n\n/**\n * Currency Name\n * @const {String}\n * @default\n */\n\npkg.currency = 'bitcoin cash';\n\n/**\n * Currency Unit\n * @const {String}\n * @default\n */\n\npkg.unit = 'bch';\n\n/**\n * Base Unit\n * @const {String}\n * @default\n */\n\npkg.base = 'satoshi';\n\n/**\n * Config file name.\n * @const {String}\n * @default\n */\n\npkg.cfg = `${pkg.core}.conf`;\n\n/**\n * Repository URL.\n * @const {String}\n * @default\n */\n\npkg.url = `https://github.com/${pkg.organization}/${pkg.name}`;\n\n/**\n * Current version string.\n * @const {String}\n */\n\npkg.version = require('../package.json').version;\n","/*!\n * bcoin.js - a javascript bitcoin library.\n * Copyright (c) 2014-2015, Fedor Indutny (MIT License).\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * A bcoin \"environment\" which exposes all\n * constructors for primitives, the blockchain,\n * mempool, wallet, etc. It also exposes a\n * global worker pool.\n *\n * @exports bcoin\n * @type {Object}\n */\n\nconst bcoin = exports;\n\n/**\n * Set the default network.\n * @param {String} network\n */\n\nbcoin.set = function set(network) {\n  bcoin.Network.set(network);\n  return bcoin;\n};\n\n/*\n * Expose\n */\n\n// Blockchain\n// bcoin.blockchain = require('./blockchain');\n// bcoin.Chain = require('./blockchain/chain');\n// bcoin.ChainEntry = require('./blockchain/chainentry');\n\n// BTC\nbcoin.btc = require('./btc');\nbcoin.Amount = require('./btc/amount');\nbcoin.URI = require('./btc/uri');\n\n// Coins\nbcoin.coins = require('./coins');\nbcoin.Coins = require('./coins/coins');\nbcoin.CoinEntry = require('./coins/coinentry');\nbcoin.CoinView = require('./coins/coinview');\n\n// HD\nbcoin.hd = require('./hd');\nbcoin.HDPrivateKey = require('./hd/private');\nbcoin.HDPublicKey = require('./hd/public');\nbcoin.Mnemonic = require('./hd/mnemonic');\n\n// Primitives\nbcoin.primitives = require('./primitives');\nbcoin.Address = require('./primitives/address');\nbcoin.Block = require('./primitives/block');\nbcoin.Coin = require('./primitives/coin');\nbcoin.Headers = require('./primitives/headers');\nbcoin.Input = require('./primitives/input');\nbcoin.InvItem = require('./primitives/invitem');\nbcoin.KeyRing = require('./primitives/keyring');\nbcoin.MerkleBlock = require('./primitives/merkleblock');\nbcoin.MTX = require('./primitives/mtx');\nbcoin.Outpoint = require('./primitives/outpoint');\nbcoin.Output = require('./primitives/output');\nbcoin.TX = require('./primitives/tx');\n\n// Protocol\nbcoin.protocol = require('./protocol');\nbcoin.consensus = require('./protocol/consensus');\nbcoin.Network = require('./protocol/network');\nbcoin.networks = require('./protocol/networks');\nbcoin.policy = require('./protocol/policy');\n\n// Script\nbcoin.script = require('./script');\nbcoin.Opcode = require('./script/opcode');\nbcoin.Script = require('./script/script');\nbcoin.ScriptNum = require('./script/scriptnum');\nbcoin.SigCache = require('./script/sigcache');\nbcoin.Stack = require('./script/stack');\n\n// Utils\nbcoin.utils = require('./utils');\nbcoin.util = require('./utils/util');\n\n// bcrypto\nbcoin.bcrypto = require('./bcrypto/bcrypto');\n\n// bfilter\nbcoin.bfilter = require('./bfilter/bfilter');\n\n// b70 \nbcoin.b70 = require('./b70/b70');\n\n// Package Info\nbcoin.pkg = require('./pkg');\n","import { getDefaultExportFromCjs } from \"\u0000commonjsHelpers.js\";\nimport { __require as requireBcoinBrowser } from \"/home/henrik/Documents/dev/checkout-components/lib/bcoin-browser.js\";\nvar bcoinBrowserExports = requireBcoinBrowser();\nexport { bcoinBrowserExports as __moduleExports };\nexport default /*@__PURE__*/getDefaultExportFromCjs(bcoinBrowserExports);"],"names":["assert_1","assert","require","exports","encode","num","exp","Number","isSafeInteger","sign","mult","pow10","lo","hi","toString","length","replace","decode","str","substring","index","indexOf","test","parseInt","maxLo","modSafe","maxHi","divSafe","toFloat","parseFloat","fromFloat","isFinite","toFixed","Error","mod","div","fixed","Amount","constructor","value","unit","fromOptions","from","fromValue","fromBTC","toValue","toSatoshis","toBits","toMBTC","toBTC","to","fromSatoshis","fromBits","fromMBTC","inspect","btc","module","require$$0","custom","error","require$$1","Buffer","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","process","binding","binding_1","base58Module","bech32Module","cashaddrModule","undefined","crypto","sha256","val","msg","err","captureStackTrace","HMAC","Hash","size","x","y","Array","isArray","hash","inner","outer","init","key","isBuffer","h","update","final","pad","alloc","i","data","FINALIZED","DESC","PADDING","K","Uint32Array","SHA256","state","block","_update","_final","len","pos","off","want","copy","_transform","out","writeU32","chunk","W","a","b","c","d","e","f","g","readU32","sigma1","sigma0","t1","Sigma1","Ch","t2","Sigma0","Maj","hmac","digest","ctx","root","left","right","multi","z","mac","native","id","bits","blockSize","zero","r","Uint8Array","rh","s","sh","RIPEMD160","A","B","C","D","E","Ah","Bh","Dh","Eh","j","rotl32","T","Kh","w","dst","rmd","Hash160","slice","Hash256","search","items","compare","insert","start","end","cmp","item","uniq","unshift","push","splice","remove","list","shift","k","pop","zeros","groupSizes","groupBases","primes","p192","p224","p521","k256","p251","p25519","p448","modes","NONE","QUO","REM","BOTH","EUCLID","ALL","WND_WIDTH","WND_SIZE","HAS_BIGINT","BigInt","BN","base","endian","words","negative","red","_iadd","carry","_alloc","_iaddn","Math","max","iadd","enforce","isBN","ucmp","_isub","iaddn","isSMI","_isubn","add","clone","addn","_strip","_normalize","isub","isubn","sub","subn","_mul","comb10MulTo","smallMulTo","bigMulTo","jumboMulTo","imul","mul","_move","imuln","neg","muln","mulShift","utestn","iushrn","_div","flags","nonzero","isZero","as","bs","q","quon","remn","_wordDiv","word","countBits","iushln","m","_ishlnsubmul","ahi","alo","quo","qj","min","ineg","_expand","quorem","iquo","iquon","irem","rem","iremn","remrn","p","acc","divmod","idiv","idivn","divn","imod","imodn","modrn","modn","divRound","bit","isOdd","ipow","pow","ipown","pown","sqr","isqr","_rootrem","RangeError","ucmpn","u","t","bitLength","v","rootrem","iroot","isPower","sqrtrem","isqrt","sqrt","isSquare","iand","iuand","iuor","width","inotn","iandn","and","andn","andrn","n","iuandn","abs","uand","uandn","uandrn","ior","iorn","or","orn","iuorn","uor","uorn","ixor","iuxor","ixorn","xor","xorn","iuxorn","uxor","uxorn","inot","not","ceil","notn","ishl","ishln","toNumber","shl","shln","iushl","mask","ncarry","ushl","ushln","_split","output","ishr","ishrn","shr","shrn","iushr","ushr","ushrn","setn","usetn","testn","imaskn","iumaskn","maskn","umaskn","andln","more","next","iabs","res","cmpn","eq","eqn","gt","gtn","gte","gten","lt","ltn","lte","lten","isNeg","isPos","isEven","legendre","mont","toRed","redLegendre","jacobi","_cloneNormal","_makeOdd","bmod8","kronecker","table","igcd","gcd","_factor2","ilcm","lcm","egcd","xp","yp","iinvert","invert","range","_invertp","ifermat","fermat","redFermat","fromRed","ipowm","powm","redPow","ipowmn","powmn","redPown","isqrtm","sqrtm","redSqrt","isqrtpq","sqrtpq","sp","sq","mp","mq","lhs","rhs","isPrime","rng","reps","limit","isPrimeMR","isPrimeLucas","force2","nm1","nm3","zeroBits","rnm1","rone","random","redSqr","vk","vk1","toTwos","fromTwos","Red","convertTo","convertFrom","forceRed","_forceRed","redIAdd","redAdd","redIAddn","redAddn","redISub","redSub","redISubn","redSubn","redIMul","redMul","redIMuln","redMuln","redIDiv","redDiv","redIDivn","redDivn","redIPow","nonred","redIPown","redISqr","redISqrt","redIDivSqrt","idivsqrt","redDivSqrt","divsqrt","redIsSquare","redIShl","redShl","redIShln","redShln","redINeg","redNeg","redEq","redEqn","redIsHigh","isHigh","redIsLow","isLow","redIsOdd","redIsEven","redJacobi","redKronecker","redIInvert","redInvert","redIFermat","dest","_check","inject","set","fromNumber","swap","reverse","fromBuffer","toBuffer","byteLength","isSafe","prefix","toDouble","valueOf","toBigInt","s52","s26","toBool","padding","getBase","groupSize","groupBase","toJSON","toArray","toArrayLike","ArrayType","bytes","allocate","of","isInteger","fromDouble","floor","fromBigInt","_fromHex","fromBool","fromString","charCodeAt","_fromBase","parseHex","limbLen","limbPow","total","parseBase","fromJSON","json","join","fromBN","fromArray","fromArrayLike","TypeError","args","barrett","Barrett","Mont","_prime","name","prime","P192","P224","P521","K256","P251","P25519","P448","randomBits","randomBytes","cast","space","obj","wordSize","Prime","one","ireduce","split","imulK","input","pm2","x1","Prime34","pm3d4","pp1d4","SquareRootError","u2","u3","u5","v3","Prime58","sm1","pm5d8","pp3d8","v7","mc","Prime116","powS","powE","sqrn","core","x2","sqrnmul","x3","x6","x12","x24","x30","x31","x62","x124","x127","r0","r1","r2","x4","x8","x16","x32","x64","x128","x48","x96","x120","x126","x7","x256","x512","x519","prev","x9","x11","x22","x44","x88","x176","x220","x223","r3","r4","r5","r6","r7","x192","x240","x246","x247","x5","x10","x20","x40","x50","x100","x200","x250","x222","mb","_verify1","_verify2","precompute","intTo","intFrom","powInt","powNum","wnd","a2","sqrt3mod4","sqrt5mod8sm1","sqrt5mod8","sqrt0","alpha","beta","divsqrt3mod4","divsqrt5mod8","symbol","invertAll","elems","elem","invs","_shift","ri","mi","rib","makeError","message","type","result","allocUnsafeSlow","clz32","self","rword","hncarry","o","a0","al0","ah0","a1","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","mid","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","network","types","main","seeds","magic","port","checkpointMap","lastCheckpoint","halvingInterval","genesis","version","prevBlock","merkleRoot","time","nonce","height","genesisBlock","halfLife","chainwork","targetTimespan","targetSpacing","retargetInterval","targetReset","noRetargeting","bip34height","bip34hash","bip65height","bip65hash","bip66height","bip66hash","uahfHeight","uahfHash","daaHeight","daaHash","magneticAnomalyHeight","maaHash","greatWallActivationHeight","gwaHash","gravitonActivationTime","gravitonHeight","gravitonHash","phononActivationTime","phononHeight","phononHash","asertActivationTime","axionActivationTime","axionHeight","axionHash","tachyonActivationTime","tachyonHeight","tachyonHash","selectronActivationTime","selectronHeight","selectronHash","gluonActivationTime","gluonHeight","gluonHash","jeffersonActivationTime","jeffersonHeight","jeffersonHash","wellingtonActivationTime","pruneAfterHeight","keepBlocks","maxTipAge","slowHeight","bip30","activationThreshold","minerWindow","deployments","csv","startTime","timeout","threshold","window","required","force","testdummy","deploys","keyPrefix","privkey","xpubkey","xprivkey","xpubkey58","xprivkey58","coinType","addressPrefix","pubkeyhash","scripthash","cashaddr","requireStandard","rpcPort","walletPort","minRelay","feeRate","maxFeeRate","selfConnect","requestMempool","testnet","regtest","simnet","magneticAnomalyActivationTime","greatWallActivationTime","COIN","BASE_REWARD","fromCompact","compact","exponent","mantissa","toCompact","verifyPOW","target","getReward","interval","halvings","HALF_REWARD","hasBit","TOP_MASK","VERSION_TOP_MASK","TOP_BITS","VERSION_TOP_BITS","maxBlockSigops","MAX_BLOCK_SIGOPS_PER_MB","maxBlockSigchecks","MAX_BLOCK_SIGCHECKS_RATIO","util","bench","hrtime","now","Date","ms","date","toISOString","revHex","buf","fromRev","EventEmitter","binary","TimeData","samples","known","Map","offset","checked","has","sample","emit","median","match","adjust","local","networks","consensus","Network","options","checkpoints","unknownBits","deployment","Object","keys","sort","cmpNode","byBit","cmpBit","create","primary","get","ensure","by","fromMagic","cmpMagic","fromWIF","cmpWIF","fromPublic","cmpPub","fromPrivate","cmpPriv","fromPublic58","cmpPub58","fromPrivate58","cmpPriv58","fromAddress","cmpAddress","fromCashAddr","cmpCashAddr","isNetwork","segnet4","env","BCASH_NETWORK","prefixes","global","msCrypto","HAS_CRYPTO","getRandomValues","randomValues","bind","pool","MAX_BYTES","poolPos","randomFillSync","randomFill","randomInt","randomRange","top","array","buffer","ArrayBuffer","byteOffset","subarray","readSize","strict","field","ch","readSeq","readInt","readVersion","sizeSize","sizeSeq","sizeInt","sizeVersion","writeSize","writeSeq","writeInt","writeVersion","BIG_ENDIAN","Int8Array","Int16Array","ChaCha20","stream","counter","derive","encrypt","_block","qround","destroy","BatchRNG","curve","chacha","iv","cache","batch","sig","scalarSize","decodeScalar","refresh","overflow","s1","s2","generate","Schnorr","check","fieldSize","hashInt","scalarBits","hashNonce","hashChallenge","R","_sign","G","mulBlind","Rraw","encodeX","Araw","concat","encodeScalar","verify","_verify","sraw","decodeField","decodePoint","jmulAdd","eqX","verifyBatch","_verifyBatch","points","coeffs","sum","decodeSquare","ea","jmulAll","isInfinity","RESEED_INTERVAL","ZERO","ONE","HmacDRBG","entropy","pers","minEntropy","V","rounds","seed","reseed","blocks","kmac","AFFINE","JACOBIAN","PROJECTIVE","EXTENDED","jsfIndex","uid","Curve","Point","conf","ossl","context","fieldBits","adjustedSize","signBit","nh","two","three","four","i2","i3","i4","i6","torsion","endo","_init","point","_scale","memoize","isIsomorphic","isIsogenous","_finalize","pointFromJSON","_findTorsion","Set","pointFromX","normalize","_fixedMul","pre","windows","_getWindows","steps","jpoint","_fixedNafMul","doubles","step","_getDoubles","naf","getFixedNAF","I","nafW","_wnafMul","_safeNAF","getNAF","dbl","_wnafMulAdd","coeff","ppoint","pcoeff","_getNAF","_getJNAF","getJNAF","nafw","_endoWnafMulAdd","_scaleShort","_scaleMont","_scaleEdwards","isElliptic","jinv","isComplete","scalar","xpoint","cpoint","xx","xz","yy","yz","solveX2","solveX","solveY2","solveY","validate","pointFromY","pointFromShort","pointFromMont","pointFromEdwards","pointFromUniform","pointToUniform","pointFromHash","pake","u1","decodeUniform","p1","p2","p3","mulH","pointToHash","subgroup","p0","randomField","hint","encodeUniform","randomScalar","randomPoint","mulAll","imulH","normalizeAll","zi","scale","affinizeAll","clamp","lsb","msb","splitHash","encodeField","encodeAdjusted","decodeAdjusted","encodeClamped","decodeClamped","clamped","encodePoint","decodeX","decodeEven","toShort","toMont","toEdwards","pointToJSON","toJ","NAF","odds","wnds","dblp","Windows","power","dbls","Doubles","_getBeta","_getBlinding","blinding","blind","unblind","Blinding","_hasWindows","_hasDoubles","_blind","randomize","Precomp","diffAddDbl","getX","getY","isOrder2","eqR","isSmall","jmulH","hasTorsion","jmul","order","jmuln","jmulBlind","mulAdd","k1","k2","jdiv","jdivn","divH","jdivH","toP","toX","ShortCurve","ShortPoint","ai","zeroA","threeA","redN","pmodn","highOrder","smallGap","Endo","_getEndomorphism","_isomorphism","curveA","curveB","odd","customB","u6","uncube","customA","u4","_short","_mont","_findRS","MontCurve","_edwards","EdwardsCurve","_scale0","_scale1","nx","bi","ny","d5","dma","d5a","da5","ypz","ymz","_getEndoRoots","l1","l2","lambda","basis","_getEndoBasis","_getEndoPrecomp","rl","tl","rl1","tl1","rl2","tl2","_egcdSqrt","Vector","sqrtn","y1","y2","v1","v2","align","g1","g2","_endoSplit","c1","c2","q1","q2","_endoBeta","npoints","ncoeffs","_sswu","z2","ba","bza","t0","_sswui","a2x2","abx2","b23","axb","n0","n1","d0","d1","_svdwf","gz","z3","u2t1","t3","t4","y3","_svdw","_svdwi","z4","gz2","x2z","xz2","c0","t5","n2","n3","d2","x0","JPoint","cubeRoots","inf","coords","ad6","MontPoint","EdwardsPoint","wrapErrors","xb","map","comb","l","form","toPretty","zOne","z6","aa","nz","_mixedAdd","_add","_addJA","_addJJ","z1z1","z2z2","hh","hhh","_dbl0","_dbl3","_dblJ","zz","xb2","delta","gamma","xmdelta","xpdelta","beta4","beta8","gamma28","zz1","zz2","zzz1","zzz2","inf1","inf2","rx","rn","a24","wa","wb","_solveY0","_elligator2","y0","_invert2","XPoint","by2","nu","nv","uu","uz","vv","vz","m1","m2","ax2","bb","da","cb","z5","si","smi","twisted","oneA","mOneA","smallD","alt","curveD","d3","ad14","a2d","ad2","apd","amd","_mulA","_mulD","_elligator1","ci","ci2","cm1","f0","f1","f2","X","Y","X1","rX","X12","_invert1","nn","nr1","YY","X2","Z","tt","tz","Boolean","_alt","ad","amd4","dxy","xy","d24","nt","u0","_addM1","_addA","xyxy","_dbl","func","P256","P384","SECP256K1","BRAINPOOLP256","BRAINPOOLP384","BRAINPOOLP512","X25519","X448","MONT448","ED25519","ISO448","ED448","curves","__proto__","toUpperCase","register","repr","getJSF","jsf","m14","m24","m8","ja","jb","fn","cubeRoot","mod9","method","WeakMap","memoized","call","chunks","asn1","elliptic","ECDSA","xof","_pre","_curve","_schnorr","schnorr","privateKeyGenerate","privateKeyVerify","privateKeyExport","pub","publicKeyCreate","publicKeyExport","privateKeyImport","privateKeyTweakAdd","tweak","privateKeyTweakMul","privateKeyNegate","privateKeyInvert","compress","publicKeyConvert","publicKeyFromUniform","publicKeyToUniform","publicKeyFromHash","publicKeyToHash","publicKeyVerify","publicKeyImport","publicKeyTweakAdd","P","publicKeyTweakMul","publicKeyCombine","publicKeyNegate","signatureNormalize","_decodeCompact","_encodeCompact","signatureNormalizeDER","_decodeDER","_encodeDER","signatureExport","signatureImport","isLowS","isLowDER","signRecoverable","param","signDER","signRecoverableDER","_reduce","drbg","_truncate","ki","bm","sk","verifyDER","recover","_recover","recoverDER","high","priv","schnorrSign","schnorrVerify","schnorrVerifyBatch","Sraw","bufio","hash256","secp256k1","MAGIC_STRING","magicHash","bw","write","writeVarString","render","ring","getPrivateKey","getPublicKey","readInt8","signature","recovery","writeI8","writeBytes","strictEqual","flagByte","readUInt8","compressed","publicKey","recoveredKey","bio","base58","ecashaddr","hash160","inspectSymbol","ZERO_HASH160","Address","PUBKEYHASH","fromHash","getHash","enc","isNull","equals","ZERO_HASH","addr","getType","typesByVal","toLowerCase","getPrefix","SCRIPTHASH","getSize","toRaw","writeU8","writeChecksum","toBase58","toCashAddr","isMixedCase","fromBase58","fromRaw","br","read","readU8","readBytes","verifyChecksum","fromScript","script","pk","getPubkey","pkh","getPubkeyhash","getScripthash","isMultisig","fromInputScript","getPubkeyhashInput","redeem","getScripthashInput","fromPubkeyhash","fromScripthash","isPubkeyhash","isScripthash","lower","upper","URI","address","amount","label","request","qs","query","parsePairs","escape","BitcoinQuery","parts","pair","unescape","decodeURIComponent","encodeURIComponent","SHA1","ft_1","ch32","p32","maj32","MAX_TX_VERSION","MAX_TX_SIZE","MAX_TX_SIGOPS","MAX_FORK_BLOCK_SIZE","FREE_THRESHOLD","getMinFee","rate","MIN_RELAY","fee","getRoundFee","getRate","ScriptError","code","op","ip","toSymbol","I64","EMPTY_ARRAY","ScriptNum","getInt","INT32_MIN","LONG_MIN","INT32_MAX","LONG_MAX","toInt","allocUnsafe","orb","minimal","isMinimal","toMinimal","last","isScriptNum","OP_0","OP_PUSHDATA1","OP_PUSHDATA2","OP_PUSHDATA4","OP_1NEGATE","OP_RESERVED","OP_1","OP_2","OP_3","OP_4","OP_5","OP_6","OP_7","OP_8","OP_9","OP_10","OP_11","OP_12","OP_13","OP_14","OP_15","OP_16","OP_NOP","OP_VER","OP_IF","OP_NOTIF","OP_VERIF","OP_VERNOTIF","OP_ELSE","OP_ENDIF","OP_VERIFY","OP_RETURN","OP_TOALTSTACK","OP_FROMALTSTACK","OP_2DROP","OP_2DUP","OP_3DUP","OP_2OVER","OP_2ROT","OP_2SWAP","OP_IFDUP","OP_DEPTH","OP_DROP","OP_DUP","OP_NIP","OP_OVER","OP_PICK","OP_ROLL","OP_ROT","OP_SWAP","OP_TUCK","OP_CAT","OP_SPLIT","OP_NUM2BIN","OP_BIN2NUM","OP_SIZE","OP_INVERT","OP_AND","OP_OR","OP_XOR","OP_EQUAL","OP_EQUALVERIFY","OP_RESERVED1","OP_RESERVED2","OP_1ADD","OP_1SUB","OP_2MUL","OP_2DIV","OP_NEGATE","OP_ABS","OP_NOT","OP_0NOTEQUAL","OP_ADD","OP_SUB","OP_MUL","OP_DIV","OP_MOD","OP_LSHIFT","OP_RSHIFT","OP_BOOLAND","OP_BOOLOR","OP_NUMEQUAL","OP_NUMEQUALVERIFY","OP_NUMNOTEQUAL","OP_LESSTHAN","OP_GREATERTHAN","OP_LESSTHANOREQUAL","OP_GREATERTHANOREQUAL","OP_MIN","OP_MAX","OP_WITHIN","OP_RIPEMD160","OP_SHA1","OP_SHA256","OP_HASH160","OP_HASH256","OP_CODESEPARATOR","OP_CHECKSIG","OP_CHECKSIGVERIFY","OP_CHECKMULTISIG","OP_CHECKMULTISIGVERIFY","OP_NOP1","OP_CHECKLOCKTIMEVERIFY","OP_CHECKSEQUENCEVERIFY","OP_NOP4","OP_NOP5","OP_NOP6","OP_NOP7","OP_NOP8","OP_NOP9","OP_NOP10","OP_CHECKDATASIG","OP_CHECKDATASIGVERIFY","OP_REVERSEBYTES","OP_INVALIDOPCODE","VERIFY_NONE","VERIFY_P2SH","VERIFY_STRICTENC","VERIFY_DERSIG","VERIFY_LOW_S","VERIFY_SIGPUSHONLY","VERIFY_MINIMALDATA","VERIFY_DISCOURAGE_UPGRADABLE_NOPS","VERIFY_CLEANSTACK","VERIFY_CHECKLOCKTIMEVERIFY","VERIFY_CHECKSEQUENCEVERIFY","VERIFY_MINIMALIF","VERIFY_NULLFAIL","VERIFY_COMPRESSED_PUBKEYTYPE","VERIFY_SIGHASH_FORKID","VERIFY_REPLAY_PROTECTION","VERIFY_CHECKDATASIG","VERIFY_SCHNORR","VERIFY_DISALLOW_SEGWIT_RECOVERY","VERIFY_SCHNORR_MULTISIG","VERIFY_INPUT_SIGCHECKS","VERIFY_REVERSEBYTES","VERIFY_ZERO_SIGOPS","REPORT_SIGCHECKS","MANDATORY_VERIFY_FLAGS","STANDARD_VERIFY_FLAGS","ONLY_STANDARD_VERIFY_FLAGS","SINGLE","SIGHASH_FORKID","ANYONECANPAY","NONSTANDARD","PUBKEY","MULTISIG","NULLDATA","isHashType","hashType","isSchnorr","isDERSignatureEncoding","isKeyEncoding","isCompressedEncoding","lenR","lenS","toASM","hashTypeByVal","hashTypeWithForkValue","sighash","getHashTypeForkValue","common","opcodes","opCache","PARSE_ERROR","Opcode","isDisabled","isBranch","isOpcode","toOp","toData","toLength","toPush","small","toSmall","toNum","fromInt","opcodesByVal","hex8","toWriter","writeU16","toFormat","fromNum","fromOp","cached","fromData","fromPush","fromSmall","fromSymbol","fromReader","seek","readU16","freeze","Stack","Symbol","iterator","values","entries","clear","erase","i1","getData","popData","shiftData","removeData","setData","pushData","unshiftData","insertData","getLength","getString","popString","shiftString","removeString","setString","pushString","unshiftString","insertString","getNum","popNum","shiftNum","removeNum","setNum","pushNum","unshiftNum","insertNum","popInt","shiftInt","removeInt","setInt","pushInt","unshiftInt","insertInt","getBool","popBool","shiftBool","removeBool","setBool","pushBool","unshiftBool","insertBool","isStack","int","Metrics","sigchecks","ripemd160","sha1","policy","scriptTypes","encoding","EMPTY_BUFFER","metrics","Script","raw","compile","toItems","fromItems","toStack","fromStack","stack","isScript","isNulldata","writeVarBytes","getSubscript","removeSeparators","found","bitcalculator","abkam","nKeysCount","checkBits","bitfield_size","execute","tx","MAX_SCRIPT_SIZE","lastSep","opCount","negate","MAX_SCRIPT_PUSH","MAX_SCRIPT_OPS","MAX_SCRIPT_STACK","locktime","verifyLocktime","verifySequence","subscript","findAndDelete","checkTransactionSignature","validateKey","signatureHash","verifySignature","validateDataSignature","keyCount","sigCount","keyTop","sigTop","okey","ikey","isig","MAX_MULTISIG_PUBKEYS","nSigsCount","dummy","numBits","bKey","bSig","ik3y","is1g","checkTransactionSchnorrSig","checkTransactionECDSASignature","checksig","signbit","isCode","fromPubkey","fromMultisig","pushSmall","sortKeys","pushOp","fromNulldata","MAX_OP_RETURN","getRedeem","isPubkey","isUnknown","isStandard","getMultisig","MAX_OP_RETURN_BYTES","getVarSize","sizeVarBytes","getInputAddress","getAddress","getOp","getSmall","getNulldata","isProgram","isUnspendable","getInputType","isPubkeyInput","isPubkeyhashInput","isScripthashInput","isMultisigInput","isUnknownInput","getPubkeyInput","getMultisigInput","sigs","isPushOnly","getCoinbaseHeight","filter","getSigops","accurate","lastOp","OP_CHECKSDATAIG","getScripthashSigops","popOp","shiftOp","removeOp","setOp","unshiftOp","insertOp","getPush","popPush","shiftPush","removePush","setPush","pushPush","unshiftPush","insertPush","popSmall","shiftSmall","removeSmall","setSmall","unshiftSmall","insertSmall","getSym","popSym","shiftSym","removeSym","setSym","pushSym","unshiftSym","insertSym","trim","hex","witness","readVarBytes","validateECDSASignature","checkSighashEncoding","usesFork","forkEnabled","validateSchnorrSignature","isSchnorrEncoded","U64","SLP_TYPES","GENESIS","MINT","SEND","BATON","BURN","SlpCoinRecord","vout","tokenId","tokenIndex","getValueUInt64BE","fromDbData","valueBytes","includes","toDbData","getJSON","fromBE","toBE","TokenRecord","ticker","uri","decimals","vaultScriptHash","readHash","readVarString","writeHash","sizeVarint","SLP","valid","isValidSlp","verifySlp","versionHex","outputs","getTokenId","getRecords","txId","getGenesisRecords","getMintRecords","getSendRecords","getBurnRecords","versionInt","records","valBuf","writeInt8","valueBuf","nonStandardOuts","Output","slp","isOutput","hr","getDustThreshold","isDust","writeI64","readI64","Outpoint","outpoint","prevout","isOutpoint","strcmp","txid","rhash","toKey","fromKey","fromTX","Coin","coinbase","getDepth","isCoinbase","isCoin","COMPRESS_TYPES","compressScript","compressKey","writeVarint","decompressScript","decompressKey","readVarint","sizeScript","compressOutput","decompressOutput","sizeOutput","format","NUM_FLAGS","MAX_HEIGHT","CoinEntry","spent","toOutput","toCoin","coin","fromOutput","fromCoin","pack","unpack","Coins","addOutput","addIndex","addCoin","isUnspent","getOutput","getCoin","spend","delete","isEmpty","entry","UndoCoins","count","commit","apply","view","undo","addEntry","BufferMap","CoinView","coins","addTX","removeTX","spendEntry","removeEntry","hasEntry","getEntry","getHeight","hasEntryFor","getEntryFor","isUnspentFor","getCoinFor","getOutputFor","getHeightFor","isCoinbaseFor","readCoin","db","readInputs","inputs","spendInputs","jobs","Promise","all","LRU","HARDENED","MIN_ENTROPY","MAX_ENTROPY","parsePath","path","hard","part","hardened","isMaster","depth","childIndex","parentFingerPrint","isAccount","account","ZERO_KEY","cleanse","subtle","pass","salt","iter","round","deriveAsync","importKey","deriveBits","algo","use","iterations","SHA512","_prepare","c0_hi","g1_512_hi","c0_lo","g1_512_lo","c1_hi","c1_lo","c2_hi","g0_512_hi","c2_lo","g0_512_lo","c3_hi","c3_lo","sum64_4_hi","sum64_4_lo","ah","al","bh","bl","cl","dh","dl","eh","el","fh","fl","gh","gl","hl","s1_512_hi","s1_512_lo","ch64_hi","ch64_lo","c4_hi","c4_lo","T1_hi","sum64_5_hi","T1_lo","sum64_5_lo","s0_512_hi","s0_512_lo","maj64_hi","maj64_lo","T2_hi","sum64_hi","T2_lo","sum64_lo","sum64","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","xh","xl","yh","yl","zh","zl","nfkd","pbkdf2","sha512","wordlist","wordlistCache","Mnemonic","language","phrase","languages","fromPhrase","fromEntropy","toSeed","passphrase","getPhrase","passwd","getEntropy","wbits","chk","getWordlist","oct","cbits","fill","lang","getLanguage","cbytes","chk1","chk2","WordList","writer","isMnemonic","HDPublicKey","chainCode","fingerPrint","toPublic","getID","writeU32BE","fp","readUInt32BE","child","deriveAccount","purpose","isValidPath","derivePath","indexes","isHDPublicKey","isBase58","isRaw","xkey","readU32BE","SEED_SALT","HDPrivateKey","privateKey","_hdPublicKey","isHDPrivateKey","fromSeed","fromMnemonic","mnemonic","HD","isHD","isPrivate","isPublic","PrivateKey","PublicKey","InvItem","isBlock","BLOCK","FILTERED_BLOCK","CMPCT_BLOCK","isTX","TX","AbstractBlock","mutable","_hash","_hhash","parseOptions","parseJSON","isMemory","_refresh","toHead","writeHead","fromHead","readHead","verifyBody","toInv","createTree","alg","leaves","nodes","malleated","createRoot","createBranch","branch","deriveRoot","Input","sequence","isInput","getSubtype","isFinal","isRBF","subtype","fromOutpoint","BufferSet","_raw","_offset","_size","_sigops","_hashPrevouts","_hashSequence","_hashOutputs","slpToken","frame","writeNormal","frameNormal","RawTX","getPosition","console","log","getNormalSizes","newForkValue","signatureHashV1","signatureHashV0","hashSize","prevouts","sequences","DER","SCHNORR","schnorrSignature","checkInput","checkAsync","checkInputAsync","verifyInput","verifyAsync","verifyInputAsync","getFee","hasCoins","getInputValue","getOutputValue","_getInputAddresses","addrs","_getOutputAddresses","_getAddresses","getOutputAddresses","getInputAddresses","getAddresses","getInputHashes","getOutputHashes","getHashes","THRESHOLD","LOCKTIME_THRESHOLD","predicate","DISABLE_FLAG","SEQUENCE_DISABLE_FLAG","TYPE_FLAG","SEQUENCE_TYPE_FLAG","MASK","SEQUENCE_MASK","getLegacySigops","getSigopsCount","cost","isSane","checkSanity","MAX_MONEY","MAX_COINBASE_SCRIPTSIG_SIZE","checkStandard","nulldata","BARE_MULTISIG","hasStandardInputs","MAX_P2SH_SIGOPS","verifyInputs","checkInputs","COINBASE_MATURITY","getModifiedSize","getPriority","coinHeight","age","getChainValue","isFree","priority","getPrevout","isWatched","minFee","mtime","inCount","outCount","endData","Headers","fromEntry","headers","toHeaders","fromBlock","isHeaders","DUMMY","MerkleBlock","txs","hashes","totalTX","_tree","hasTX","tree","getTree","checkBody","extractTree","PartialTree","matches","bitsUsed","hashUsed","failed","traverse","parent","fromMatches","fromHashes","merkle","isMerkleBlock","Block","hasRaw","toNormal","toNormalWriter","RawBlock","createMerkleRoot","getMerkleRoot","skipSigops","sigops","reason","score","getClaimed","toMerkle","KeyRing","nested","_keyHash","_keyAddress","_scriptHash160","_scriptAddress","fromMultisigScript","getSecretSize","toSecret","fromSecret","getScript","getScriptHash","getScriptHash160","getScriptAddress","getKeyHash","getKeyAddress","ownHash","ownOutput","signSchnorr","verifySchnorr","getVersion","isKeyRing","opt","MemBlock","parseCoinbaseHeight","txCount","toBlock","isMemBlock","MTX","changeIndex","addInput","mtx","addOutpoint","scriptInput","vector","scriptVector","signInputAsync","signInput","signVector","keyIndex","isSigned","isInputSigned","isVectorSigned","template","signAsync","estimateSize","estimate","selectCoins","selector","CoinSelector","select","subtractIndex","subtractFee","share","fund","changeAddress","chosen","change","sortMembers","changeOutput","sortInputs","sortOutputs","avoidFeeSniping","setLocktime","setSequence","seconds","SEQUENCE_GRANULARITY","toTX","isMTX","outputValue","MIN_FEE","selection","hardFee","FEE_RATE","maxFee","injectInputs","confirmations","sortRandom","sortAge","sortValue","FundingError","isFull","isSpendable","MAX_FEE","selectHard","selectEstimate","available","availableFunds","requiredFunds","TXMeta","chainHeight","isTXMeta","VerifyError","SigCache","resize","SigCacheEntry","TE0","TE1","TE2","TE3","TD0","TD1","TD2","TD3","TD4","RCON","AES","getRounds","encKey","decKey","createEncryptKey","ukey","tmp","createDecryptKey","getEncryptKey","getDecryptKey","opos","ipos","s0","s3","decrypt","REDUCTION","Uint16Array","GHASH","adLen","ctLen","double","absorb","_absorb","transform","aad","hi32","lo32","msw","EMPTY","polyTable","Mode","crypt","setAutoPadding","_setAutoPadding","setAAD","_setAAD","setCCM","msgLen","tagLen","_setCCM","getAuthTag","_getAuthTag","setAuthTag","tag","_setAuthTag","unpad","blockPos","lastSize","_updateSize","ilen","olen","_destroy","Stream","_crypt","RawCipher","RawDecipher","PKCS7Cipher","PKCS7Decipher","ECBCipher","ECBDecipher","CBCCipher","CBCDecipher","overlap","CTSCipher","CTSDecipher","XTS","poly","safeEqual","cy","XTSCipher","XTSDecipher","CTR","ctr","_increment","CTRCipher","CTRDecipher","CFB","CFBCipher","CFBDecipher","OFB","OFBCipher","OFBDecipher","GCM","_encipher","GCMCipher","GCMDecipher","CBCMAC","CCM","lm","L","M","N","Adata","CCMCipher","CCMDecipher","CMAC","flag","src","EAX","hash1","hash2","mac1","mac2","EAXCipher","EAXDecipher","encipher","decipher","ROUND_CONST","Keccak","c3","c4","c5","c6","c7","c8","c9","h0","l0","h1","h2","h3","l3","h4","l4","b32","b33","b14","b15","b46","b47","b28","b29","b20","b21","b34","b35","b16","b17","b48","b49","b40","b41","b22","b36","b37","b18","b19","b10","b11","b42","b43","b24","b25","b38","b39","b30","b31","b12","b13","b44","b45","b26","b27","tail","mul32","blo","bhi","SHA384","SHAKE","SHAKE256","smallPrimes","smallPrimesProduct","primeBitMaskLo","primeBitMaskHi","primesA","primesB","randomPrime","isProbablePrime","ra","rb","isSafePrime","CHARSET","CHARSET_URL","TABLE","TABLE_URL","_encode","charset","_decode","_test","decodeSize","checkPadding","encodeURL","decodeURL","testURL","safeCompare","safeEqualInt","safeEqualByte","safeSelect","safeLT","safeLTE","safeGT","safeGTE","safeMin","safeMax","safeAbs","safeBool","safeCopy","xmask","ymask","base64","safe","DEFAULT_BITS","DEFAULT_EXP","MIN_BITS","MAX_BITS","MIN_EXP","MAX_EXP","MAX_EXP_BITS","SALT_LENGTH_AUTO","SALT_LENGTH_HASH","PREFIX","digestInfo","BLAKE2B160","BLAKE2B256","BLAKE2B384","BLAKE2B512","BLAKE2S128","BLAKE2S160","BLAKE2S224","BLAKE2S256","GOST94","HASH160","HASH256","KECCAK224","KECCAK256","KECCAK384","KECCAK512","MD2","MD4","MD5","MD5SHA1","SHA224","SHA3_224","SHA3_256","SHA3_384","SHA3_512","SHAKE128","WHIRLPOOL","RSAPublicKey","RSAPrivateKey","dp","dq","qi","pm1","qm1","phi","lam","md","_generateSubtle","generateKey","exportKey","modulusLength","publicExponent","ck","jwk","fromPQE","generateAsync","fromPQD","fromNED","privateKeyGenerateAsync","privateKeyBits","publicKeyBits","hlen","getDigestInfo","tlen","klen","em","ok","mlen","plen","looking","equals0","validPS","signPSS","saltLen","emlen","pssEncode","verifyPSS","_verifyPSS","pssVerify","encryptOAEP","lhash","dlen","mgf1xor","decryptOAEP","expect","lvalid","rest","invalid","equals1","veil","vmax","rmax","unveil","embits","slen","SLAB1","SLAB2","SLAB3","XY","smix","smixAsync","salsa20_8","B32","blockmix_salsa8","Yo","blkcpy","blkxor","integerify","Bo","wait","dstOff","srcOff","setImmediate","murmur3","LN2SQUARED","LN2","BloomFilter","Struct","reset","added","ret","fromRate","MAX_BLOOM_FILTER_SIZE","MAX_HASH_FUNCS","isWithinConstraints","PUBKEY_ONLY","flagsByVal","RollingFilter","generation","logRate","pos1","pos2","mhi","mlo","bit1","bit2","BufferReader","wireType","VARINT","FIXED64","DELIMITED","START_GROUP","END_GROUP","FIXED32","ProtoReader","zeroCopy","_readVarint","readFieldValue","readField","readFieldU64","readFieldU32","readFieldBytes","readFieldString","nextTag","header","Field","readU64","group","Varint","BufferWriter","ProtoWriter","slipVarint","writeU16BE","_writeVarint","writeFieldVarint","writeFieldU64","writeFieldU32","writeFieldBytes","writeFieldString","PaymentDetails","expires","memo","paymentUrl","merchantData","isExpired","JSON","stringify","parse","prototype","Payment","transactions","refundTo","PaymentACK","payment","ASN1","readTag","primitive","implicit","explicit","seq","readUIntBE","readExplicitInt","readNum","readBitstr","alignBitstr","readString","readCert","tbs","readTBS","sigAlg","readAlgIdent","serial","issuer","readName","validity","readValidity","subject","pubkey","readPubkey","readOID","notBefore","readTime","notAfter","year","mon","day","hour","sec","UTC","formatOID","ids","ident","subident","first","second","params","readRSAPublic","modulus","readRSAPrivate","privateExponent","prime1","prime2","exponent1","exponent2","coefficient","parseRSAPublic","parseRSAPrivate","parseCert","parseTBS","rsa","p256","p384","ec","getCurve","certs","x509","trusted","allowUntrusted","oid","getSubjectOID","cert","getCAName","isTrusted","fingerprint","setTrust","setFingerprints","getKeyAlgorithm","getSigAlgorithm","der","verifyTime","getSigningKey","chain","signSubject","getVerifyKey","verifySubject","parseChain","verifyTimes","verifyTrust","verifyChain","PaymentRequest","pkiType","pkiData","paymentDetails","setChain","getAlgorithm","Algorithm","signatureData","getChain","getCA","CA","pkg","organization","currency","cfg","url","bcoin","hd","primitives","protocol","utils","bcrypto","bfilter","b70","bcoinBrowserExports","requireBcoinBrowser","getDefaultExportFromCjs"],"mappings":"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E,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;GAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;GAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,GAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,GAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAC7D;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,aAAA,CAAA,MAAc,GAAG,SAAS,MAAM,CAAC,IAAI,EAAE;GACrC,MAAM,CAACI,QAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;GAE7B,IAAI,MAAM,GAAG,CAAC;GACd,IAAI,CAAC,GAAG,CAAC;;GAET,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,KAAI,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;OACf;KACF,MAAM,IAAI,CAAC;AACf;;GAEE,MAAM,GAAG,GAAGA,QAAM,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AACrE,GAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;;GAEX,IAAI,MAAM,GAAG,CAAC;;GAEd,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,KAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;KACnB,IAAI,CAAC,GAAG,CAAC;;AAEb,KAAI,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;AACnD,OAAM,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,MAAM;SAC5B;AACR,OAAM,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AAC3B,OAAM,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,EAAE;AACzB,OAAM,KAAK,GAAG,KAAK,GAAG,EAAE,GAAG,CAAC;AAC5B;;AAEA,KAAI,MAAM,CAAC,KAAK,KAAK,CAAC,CAAC;KACnB,MAAM,GAAG,CAAC;AACd;;AAEA,GAAE,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,MAAM;AACzB,GAAE,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;KACnC,CAAC,IAAI,CAAC;;GAER,IAAI,GAAG,GAAG,EAAE;;GAEZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE;KAC7B,GAAG,IAAI,GAAG;;GAEZ,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;KACxB,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;AAE1B,GAAE,OAAO,GAAG;EACX;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,aAAA,CAAA,MAAc,GAAG,SAAS,MAAM,CAAC,GAAG,EAAE;AACtC,GAAE,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;;GAE/B,IAAI,MAAM,GAAG,CAAC;GACd,IAAI,CAAC,GAAG,CAAC;;GAET,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9B,KAAI,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG;OAChB;KACF,MAAM,IAAI,CAAC;AACf;;GAEE,MAAM,IAAI,GAAGA,QAAM,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AACtE,GAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;GAEZ,IAAI,MAAM,GAAG,CAAC;;GAEd,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;KAC1B,MAAM,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;AAChC,KAAI,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;AAE5C,KAAI,IAAI,CAAC,KAAK,EAAE;AAChB,OAAM,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC;;KAE1C,IAAI,KAAK,GAAG,CAAC;KACb,IAAI,CAAC,GAAG,CAAC;;AAEb,KAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;AACpD,OAAM,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,MAAM;SAC5B;AACR,OAAM,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;AAC3B,OAAM,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI;OACtB,KAAK,MAAM,CAAC;AAClB;;AAEA,KAAI,MAAM,CAAC,KAAK,KAAK,CAAC,CAAC;KACnB,MAAM,GAAG,CAAC;AACd;;GAEE,CAAC,GAAG,CAAC;AACP,GAAE,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;KACrC,CAAC,IAAI,CAAC;;AAEV,GAAE,MAAM,GAAG,GAAGA,QAAM,CAAC,WAAW,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;AAE5D,GAAE,IAAI,CAAC;GACL,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE;AAC7B,KAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;;AAEd,GAAE,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM;KACpB,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC;;AAExB,GAAE,OAAO,GAAG;EACX;;AAED;AACA;AACA;AACA;AACA;;AAEA,CAAA,aAAA,CAAA,IAAY,GAAG,SAAS,IAAI,CAAC,GAAG,EAAE;AAClC,GAAE,IAAI,OAAO,GAAG,KAAK,QAAQ;AAC7B,KAAI,OAAO,KAAK;;AAEhB,GAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;KACnC,MAAM,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;;KAE5B,IAAI,EAAE,GAAG,MAAM;AACnB,OAAM,OAAO,KAAK;;AAElB,KAAI,IAAI,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE;AACxB,OAAM,OAAO,KAAK;AAClB;;AAEA,GAAE,OAAO,IAAI;EACZ;;;;;;;;;;CCpKD,IAAI;AACJ,GAAEU,MAAc,CAAA,OAAA,GAAGd,cAAoB,EAAA,CAAC,MAAM;EAC7C,CAAC,OAAO,CAAC,EAAE;GACVc,MAAA,CAAA,OAAc,GAAGX,oBAA2B,EAAA;AAC9C;;;;;;;;;;;;;;CCyBA,MAAM,MAAM,GAAGH,eAAgB,EAAA;;AAE/B;AACA;AACA;;AAEA,CAAA,MAAM,MAAM,GAAGI,QAAM,CAAC,WAAW,CAAC,EAAE,CAAC;CACrC,MAAM,OAAO,GAAG,kCAAkC;AAClhE,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,IAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,IAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAC7D;;AAED;AACA;AACA;AACA;AACA;AACA;;CAEA,SAAS,OAAO,CAAC,GAAG,EAAE;AACtB,GAAE,MAAM,CAAC,GAAG,GAAG,KAAK,EAAE;AACtB,GAAE,OAAO,CAAC,CAAC,GAAG,GAAG,SAAS,KAAK,CAAC;QACzB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU;QAC7B,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU;QAC7B,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU;QAC7B,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU;QAC7B,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAAS,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE;AAC9B,GAAE,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;GAC/B,MAAM,CAACA,QAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;GAE7B,IAAI,GAAG,GAAG,CAAC;AACb,GAAE,IAAI,CAAC;;AAEP,GAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;KAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;;KAE5B,IAAI,CAAC,EAAE,GAAG,MAAM,KAAK,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC;AACzC,OAAM,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC;;KAE9C,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACnC;;GAEE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE;AAC9B,KAAI,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC;;AAElD,GAAE,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;;GAElB,IAAI,GAAG,GAAG,EAAE;;AAEd,GAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;KACnC,MAAM,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;KAC5B,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;AACpC,KAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;AACjB;;GAEE,GAAG,IAAI,GAAG;;AAEZ,GAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,KAAI,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;AAEtB,KAAI,IAAI,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC;AACxB,OAAM,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC;;AAE9C,KAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE;AAC3B,KAAI,GAAG,IAAI,OAAO,CAAC,EAAE,CAAC;AACtB;;GAEE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AAC5B,KAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;;GAEpB,GAAG,IAAI,CAAC;;GAER,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AAC5B,KAAI,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;;AAElD,GAAE,OAAO,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;;CAEA,SAAS,WAAW,CAAC,GAAG,EAAE;AAC1B,GAAE,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;;GAE/B,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,EAAE;AACvC,KAAI,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;;GAElD,IAAI,IAAI,GAAG,CAAC;;AAEd,GAAE,OAAO,IAAI,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG;KAC9D,IAAI,IAAI,CAAC;;GAEX,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC;;GAEpC,IAAI,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,GAAG,CAAC;AACxC,KAAI,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC;;GAEhD,IAAI,IAAI,CAAC;;GAET,MAAM,IAAI,GAAGA,QAAM,CAAC,WAAW,CAAC,IAAI,CAAC;;GAErC,IAAI,GAAG,GAAG,CAAC;GACX,IAAI,KAAK,GAAG,KAAK;GACjB,IAAI,KAAK,GAAG,KAAK;GACjB,IAAI,GAAG,GAAG,EAAE;;AAEd,GAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;KAC7B,IAAI,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;;AAE9B,KAAI,IAAI,EAAE,GAAG,IAAI,IAAI,EAAE,GAAG,IAAI;AAC9B,OAAM,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC;;KAE9C,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;OAC5B,KAAK,GAAG,IAAI;MACb,MAAM,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;OACnC,KAAK,GAAG,IAAI;AAClB,OAAM,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,IAAI,IAAI;AAC7B;;AAEA,KAAI,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC;KAC9B,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACnC;;AAEA,GAAE,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;;AAEpB,GAAE,IAAI,CAAC;GACL,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE;AAC3B,KAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;;GAEjD,CAAC,IAAI,CAAC;;AAER,GAAE,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE;KACrB,MAAM,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;AAChC,KAAI,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;AAE5C,KAAI,IAAI,CAAC,KAAK,EAAE;AAChB,OAAM,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC;;AAElD,KAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI;OAC1B,KAAK,GAAG,IAAI;AAClB,UAAS,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI;OAC/B,KAAK,GAAG,IAAI;;AAElB,KAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;;AAE1B,KAAI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM;OACpB,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC;;KAE1B,CAAC,IAAI,CAAC;AACV;;GAEE,IAAI,KAAK,IAAI,KAAK;AACpB,KAAI,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC;;GAE3C,IAAI,GAAG,KAAK,CAAC;AACf,KAAI,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC;;AAE/C,GAAE,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;;CAEA,SAAS,EAAE,CAAC,GAAG,EAAE;AACjB,GAAE,IAAI,OAAO,GAAG,KAAK,QAAQ;AAC7B,KAAI,OAAO,KAAK;;AAEhB,GAAE,IAAI;KACF,WAAW,CAAC,GAAG,CAAC;IACjB,CAAC,OAAO,CAAC,EAAE;AACd,KAAI,OAAO,KAAK;AAChB;;AAEA,GAAE,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAAS,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE;GAC3D,MAAM,CAACA,QAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;GAC9B,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;GACvB,MAAM,CAACA,QAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;GAC/B,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;GACvB,MAAM,CAAC,CAAC,QAAQ,GAAG,IAAI,MAAM,QAAQ,CAAC;GACtC,MAAM,CAAC,CAAC,MAAM,GAAG,IAAI,MAAM,MAAM,CAAC;AACpC,GAAE,MAAM,CAAC,OAAO,GAAG,KAAK,SAAS,CAAC;;GAEhC,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC;;GAE9B,IAAI,GAAG,GAAG,CAAC;GACX,IAAI,IAAI,GAAG,CAAC;;GAEZ,OAAO,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChC,KAAI,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;;AAE1B,KAAI,IAAI,CAAC,KAAK,KAAK,QAAQ,MAAM,CAAC;AAClC,OAAM,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC;;AAEtC,KAAI,GAAG,GAAG,CAAC,GAAG,IAAI,QAAQ,IAAI,KAAK;KAC/B,IAAI,IAAI,QAAQ;;AAEpB,KAAI,OAAO,IAAI,IAAI,MAAM,EAAE;OACrB,IAAI,IAAI,MAAM;OACd,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,IAAI,IAAI;AACzC;AACA;;GAEE,IAAI,GAAG,EAAE;AACX,KAAI,IAAI,IAAI;AACZ,OAAM,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,MAAM,GAAG,IAAI,CAAC,IAAI,IAAI;AACnD,IAAG,MAAM;AACT,KAAI,IAAI,IAAI,IAAI,QAAQ,KAAK,CAAC,GAAG,KAAK,MAAM,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC;AAC7D,OAAM,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC;AACtC;;AAEA,GAAE,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC;;GAE1B,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;CAEA,SAAS,WAAW,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE;GAC/C,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;GAC3B,MAAM,CAAC,CAAC,QAAQ,GAAG,IAAI,MAAM,QAAQ,CAAC;GACtC,MAAM,CAAC,CAAC,MAAM,GAAG,IAAI,MAAM,MAAM,CAAC;AACpC,GAAE,MAAM,CAAC,OAAO,GAAG,KAAK,SAAS,CAAC;AAClC,GAAE,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;;AAEtB,GAAE,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,MAAM;;GAEnD,IAAI,MAAM,CAAC;;AAEb,GAAE,IAAI,GAAG;KACL,IAAI,IAAI,CAAC;;AAEb,GAAE,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;CAEA,SAAS,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE;GAChD,MAAM,CAACA,QAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;GAC7B,MAAM,CAAC,CAAC,QAAQ,GAAG,IAAI,MAAM,QAAQ,CAAC;GACtC,MAAM,CAAC,CAAC,MAAM,GAAG,IAAI,MAAM,MAAM,CAAC;AACpC,GAAE,MAAM,CAAC,OAAO,GAAG,KAAK,SAAS,CAAC;;AAElC,GAAE,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,CAAC;GAC5D,MAAM,GAAG,GAAGA,QAAM,CAAC,WAAW,CAAC,IAAI,CAAC;;AAEtC,GAAE,OAAO,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,CAAC;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAAS,MAAM,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE;AACpC,GAAE,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;GAC/B,MAAM,CAAC,CAAC,OAAO,GAAG,IAAI,MAAM,OAAO,CAAC;GACpC,MAAM,CAACA,QAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;AAE/B,GAAE,IAAI,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,EAAE;AACjC,KAAI,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC;;GAE5C,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE;AACzC,KAAI,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC;;GAEhD,MAAM,GAAG,GAAG,MAAM;AACpB,GAAE,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO;;AAElB,GAAE,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;;AAEnD,GAAE,OAAO,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC;AAC7B;;AAEA;AACA;AACA;AACA;AACA;;CAEA,SAAS,MAAM,CAAC,GAAG,EAAE;AACrB,GAAE,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;;GAE/B,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC;;GAEpC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE;AAC3C,KAAI,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC;;AAElD,GAAE,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;;GAEvB,IAAI,OAAO,GAAG,EAAE;AAClB,KAAI,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC;;AAE9C,GAAE,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;;GAEnD,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE;AACzC,KAAI,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC;;GAEhD,OAAO,IAAI,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC;AAC3C;;AAEA;AACA;AACA;AACA;AACA;;CAEA,SAAS,IAAI,CAAC,GAAG,EAAE;AACnB,GAAE,IAAI,OAAO,GAAG,KAAK,QAAQ;AAC7B,KAAI,OAAO,KAAK;;AAEhB,GAAE,IAAI,IAAI;;AAEV,GAAE,IAAI;AACN,KAAI,GAAG,IAAI,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC;IAC5B,CAAC,OAAO,CAAC,EAAE;AACd,KAAI,OAAO,KAAK;AAChB;;GAEE,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE;AAC3C,KAAI,OAAO,KAAK;;AAEhB,GAAE,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;;GAEvB,IAAI,OAAO,GAAG,EAAE;AAClB,KAAI,OAAO,KAAK;;AAEhB,GAAE,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,MAAM,UAAU,CAAC;AACjB,GAAE,WAAW,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE;AAClC,KAAI,IAAI,CAAC,GAAG,GAAG,GAAG;AAClB,KAAI,IAAI,CAAC,OAAO,GAAG,OAAO;AAC1B,KAAI,IAAI,CAAC,IAAI,GAAG,IAAI;AACpB;AACA;;AAEA;AACA;AACA;;AAEA,CAAA,aAAA,CAAA,SAAiB,GAAG,SAAS;AAC7B,CAAA,aAAA,CAAA,WAAmB,GAAG,WAAW;AACjC,CAAA,aAAA,CAAA,EAAU,GAAG,EAAE;AACf,CAAA,aAAA,CAAA,WAAmB,GAAG,WAAW;AACjC,CAAA,aAAA,CAAA,MAAc,GAAG,MAAM;AACvB,CAAA,aAAA,CAAA,MAAc,GAAG,MAAM;AACvB,CAAA,aAAA,CAAA,IAAY,GAAG,IAAI;;;;;;;;;;CC3bnB,IAAI;AACJ,GAAEW,MAAc,CAAA,OAAA,GAAGf,cAAoB,EAAA,CAAC,MAAM;EAC7C,CAAC,OAAO,CAAC,EAAE;GACVe,MAAA,CAAA,OAAc,GAAGZ,oBAA2B,EAAA;AAC9C;;;;;;;;;;;;;;CC+BA,MAAM,MAAM,GAAGH,eAAgB,EAAA;;AAE/B;AACA;AACA;;AAEA,CAAA,MAAM,GAAG,CAAC;AACV,GAAE,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE;AACtB,KAAI,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;AACpB,KAAI,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;AACpB;;GAEE,OAAO,CAAC,IAAI,EAAE;KACZ,IAAI,IAAI,EAAE;;AAEd,KAAI,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE;;KAEhB,IAAI,IAAI,KAAK,CAAC;AAClB,OAAM,OAAO,EAAE;;AAEf,KAAI,IAAI,IAAI,GAAG,EAAE,EAAE;OACb,EAAE,MAAM,IAAI;OACZ,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAClC,MAAK,MAAM;OACL,EAAE,GAAG,IAAI,CAAC,EAAE,MAAM,IAAI,GAAG,EAAE,CAAC;AAClC;;AAEA,KAAI,OAAO,EAAE;AACb;AACA;;AAEA;AACA;AACA;;AAEA,CAAA,MAAM,OAAO,GAAGI,QAAM,CAAC,WAAW,CAAC,GAAG,CAAC;CACvC,MAAM,OAAO,GAAG,kCAAkC;;AAElD,CAAA,MAAM,KAAK,GAAG;GACZ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;GAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;GAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,IAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChE,IAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAC7D;;CAED,MAAM,aAAa,GAAG,IAAI,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC;;AAErD,CAAA,MAAM,SAAS,GAAG;AAClB,GAAE,IAAI,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC;AACjC,GAAE,IAAI,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC;AACjC,GAAE,IAAI,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC;AACjC,GAAE,IAAI,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC;AACjC,GAAE,IAAI,GAAG,CAAC,UAAU,EAAE,UAAU;EAC/B;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAAS,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE;GACvB,MAAM,CAAC,GAAG,GAAG;;AAEf;AACA,GAAE,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;;AAEtB;AACA,GAAE,CAAC,CAAC,EAAE,IAAI,aAAa,CAAC,EAAE;AAC1B,GAAE,CAAC,CAAC,EAAE,IAAI,aAAa,CAAC,EAAE;AAC1B,GAAE,CAAC,CAAC,EAAE,KAAK,CAAC;GACV,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE;AACrB,GAAE,CAAC,CAAC,EAAE,KAAK,CAAC;;AAEZ,GAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,KAAI,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AACvB;OACM,CAAC,CAAC,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;OACvB,CAAC,CAAC,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;AAC7B;AACA;;AAEA;AACA,GAAE,CAAC,CAAC,EAAE,IAAI,CAAC;;AAEX,GAAE,OAAO,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAAS,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE;AACjC,GAAE,MAAM,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC;GAClC,MAAM,CAACA,QAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;GAE7B,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;GAEzB,IAAI,GAAG,GAAG,EAAE;;GAEZ,IAAI,KAAK,GAAG,KAAK;GACjB,IAAI,KAAK,GAAG,KAAK;;AAEnB,GAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;KACtC,IAAI,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;;KAE7B,IAAI,CAAC,EAAE,GAAG,MAAM,KAAK,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC;AACzC,OAAM,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC;;KAEhD,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;OAC5B,KAAK,GAAG,IAAI;MACb,MAAM,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;OACnC,KAAK,GAAG,IAAI;AAClB,OAAM,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,IAAI,IAAI;MACxB,MAAM,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;AACzC,OAAM,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC;AACjD;;AAEA,KAAI,OAAO,CAAC,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC;;AAE3B,KAAI,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC;AAClC;;GAEE,IAAI,KAAK,IAAI,KAAK;AACpB,KAAI,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC;;AAE/C,GAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;GACf,GAAG,IAAI,GAAG;;AAEZ,GAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,KAAI,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;AAEtB,KAAI,IAAI,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC;AACxB,OAAM,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC;;AAEhD,KAAI,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;;AAEpB,KAAI,GAAG,IAAI,OAAO,CAAC,EAAE,CAAC;AACtB;;GAEE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AAC5B,KAAI,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;;AAEnB,GAAE,GAAG,CAAC,EAAE,IAAI,CAAC;;AAEb,GAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC9B,KAAI,MAAM,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI;;AAE7C,KAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC;AACrB;;AAEA,GAAE,OAAO,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAAS,WAAW,CAAC,GAAG,EAAE,aAAa,EAAE;AACzC,GAAE,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;;GAE/B,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG;AACxC,KAAI,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;;GAElD,IAAI,KAAK,GAAG,KAAK;GACjB,IAAI,KAAK,GAAG,KAAK;GACjB,IAAI,MAAM,GAAG,KAAK;GAClB,IAAI,IAAI,GAAG,CAAC;;AAEd;AACA,GAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;KACnC,MAAM,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;;KAE5B,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;OAC5B,KAAK,GAAG,IAAI;OACZ;AACN;;KAEI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;OAC5B,KAAK,GAAG,IAAI;OACZ;AACN;;KAEI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;OAC5B,MAAM,GAAG,IAAI;OACb;AACN;;AAEA,KAAI,IAAI,EAAE,KAAK,IAAI,EAAE;OACf,IAAI,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;AACrC,SAAQ,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC;;OAE7C,IAAI,IAAI,KAAK,CAAC;AACpB,SAAQ,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC;;OAEjD,IAAI,GAAG,CAAC;;OAER;AACN;;AAEA,KAAI,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC;AAClD;;GAEE,IAAI,KAAK,IAAI,KAAK;AACpB,KAAI,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC;;AAE/C;GACE,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;AAE3B,GAAE,IAAI,MAAM;;AAEZ,GAAE,IAAI,IAAI,KAAK,CAAC,EAAE;AAClB,KAAI,MAAM,GAAG,aAAa,CAAC,WAAW,EAAE;AACxC,IAAG,MAAM;AACT,KAAI,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,WAAW,EAAE;KAC7C,IAAI,IAAI,CAAC;AACb;;AAEA;AACA,GAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;KACtC,MAAM,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;;KAE/B,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,IAAI,IAAI,IAAI,CAAC;AACpC;;AAEA,GAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;;AAEjB,GAAE,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,GAAG,IAAI;;AAEhC,GAAE,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG;AAC7B,KAAI,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;;GAElD,MAAM,IAAI,GAAGA,QAAM,CAAC,WAAW,CAAC,IAAI,CAAC;;AAEvC,GAAE,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;KACtC,MAAM,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;AAChC,KAAI,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;AAE5C,KAAI,IAAI,CAAC,KAAK,EAAE;AAChB,OAAM,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC;;AAEpD,KAAI,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;;AAEnB,KAAI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM;AAC1B,OAAM,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;AACxB;;AAEA,GAAE,MAAM,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,IAAI,MAAM,KAAK,aAAa;;GAEtE,IAAI,CAAC,KAAK;AACZ,KAAI,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC;;AAEjD,GAAE,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAAS,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE;GAC3D,MAAM,CAACA,QAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;GAC9B,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;GACvB,MAAM,CAACA,QAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;GAC/B,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;GACvB,MAAM,CAAC,CAAC,QAAQ,GAAG,IAAI,MAAM,QAAQ,CAAC;GACtC,MAAM,CAAC,CAAC,MAAM,GAAG,IAAI,MAAM,MAAM,CAAC;AACpC,GAAE,MAAM,CAAC,OAAO,GAAG,KAAK,SAAS,CAAC;;GAEhC,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC;;GAE9B,IAAI,GAAG,GAAG,CAAC;GACX,IAAI,IAAI,GAAG,CAAC;;GAEZ,OAAO,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChC,KAAI,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;;AAE1B,KAAI,IAAI,CAAC,KAAK,KAAK,QAAQ,MAAM,CAAC;AAClC,OAAM,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC;;AAEtC,KAAI,GAAG,GAAG,CAAC,GAAG,IAAI,QAAQ,IAAI,KAAK;KAC/B,IAAI,IAAI,QAAQ;;AAEpB,KAAI,OAAO,IAAI,IAAI,MAAM,EAAE;OACrB,IAAI,IAAI,MAAM;OACd,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,IAAI,IAAI;AACzC;AACA;;GAEE,IAAI,GAAG,EAAE;AACX,KAAI,IAAI,IAAI;AACZ,OAAM,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,MAAM,GAAG,IAAI,CAAC,IAAI,IAAI;AACnD,IAAG,MAAM;AACT,KAAI,IAAI,IAAI,IAAI,QAAQ,KAAK,CAAC,GAAG,KAAK,MAAM,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC;AAC7D,OAAM,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC;AACtC;;AAEA,GAAE,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC;;GAE1B,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAC3B;;AAiDA;AACA;AACA;AACA;AACA;;CAEA,SAAS,WAAW,CAAC,IAAI,EAAE;GACzB,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC;;AAE/B,GAAE,QAAQ,IAAI;AACd,KAAI,KAAK,EAAE;AACX,OAAM,OAAO,CAAC;AACd,KAAI,KAAK,EAAE;AACX,OAAM,OAAO,CAAC;AACd,KAAI,KAAK,EAAE;AACX,OAAM,OAAO,CAAC;AACd,KAAI,KAAK,EAAE;AACX,OAAM,OAAO,CAAC;AACd,KAAI,KAAK,EAAE;AACX,OAAM,OAAO,CAAC;AACd,KAAI,KAAK,EAAE;AACX,OAAM,OAAO,CAAC;AACd,KAAI,KAAK,EAAE;AACX,OAAM,OAAO,CAAC;AACd,KAAI,KAAK,EAAE;AACX,OAAM,OAAO,CAAC;KACV;AACJ,OAAM,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE;AACpC,GAAE,MAAM,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC;AACpC;GACE,MAAM,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,EAAE,wBAAwB,CAAC;GACxD,MAAM,CAACA,QAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;GAE7B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,EAAE;AAC/C,KAAI,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC;;GAE7C,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;AACvC,GAAE,MAAM,IAAI,GAAGA,QAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;GAChD,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI;AAC9B,GAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;;GAElB,MAAM,MAAM,GAAG,OAAO;AACxB,GAAE,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;;AAE3D,GAAE,OAAO,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAAS,MAAM,CAAC,GAAG,EAAE,aAAa,GAAG,aAAa,EAAE;AACpD,GAAE,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;AACjC,GAAE,MAAM,CAAC,OAAO,aAAa,KAAK,QAAQ,CAAC;;AAE3C,GAAE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,WAAW,CAAC,GAAG,EAAE,aAAa,CAAC;GACtD,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC;;GAEvC,IAAI,SAAS,IAAI,CAAC;AACpB,KAAI,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC;;GAE7C,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;GAClC,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,SAAS,IAAI,CAAC;;GAEjC,IAAI,IAAI,GAAG,IAAI;AACjB,KAAI,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC;;GAEtC,MAAM,MAAM,GAAG,IAAI;AACrB,GAAE,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;;GAE1D,MAAM,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI;GACxC,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;;AAEjC,GAAE,IAAI,IAAI,GAAG,EAAE,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;;AAE3C,GAAE,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;KACrB,IAAI,IAAI,CAAC;;AAEb,GAAE,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM;AAC1B,KAAI,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;;GAElD,OAAO,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAAS,IAAI,CAAC,GAAG,EAAE,aAAa,GAAG,aAAa,EAAE;AAClD,GAAE,IAAI;AACN,KAAI,MAAM,CAAC,GAAG,EAAE,aAAa,CAAC;IAC3B,CAAC,OAAO,CAAC,EAAE;AACd,KAAI,OAAO,KAAK;AAChB;AACA,GAAE,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,MAAM,UAAU,CAAC;AACjB,GAAE,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE;AAClC,KAAI,IAAI,CAAC,MAAM,GAAG,MAAM;AACxB,KAAI,IAAI,CAAC,IAAI,GAAG,IAAI;AACpB,KAAI,IAAI,CAAC,IAAI,GAAG,IAAI;AACpB;AACA;;AAQA,CAAA,eAAA,CAAA,MAAc,GAAG,MAAM;AACvB,CAAA,eAAA,CAAA,MAAc,GAAG,MAAM;AACvB,CAAA,eAAA,CAAA,IAAY,GAAG,IAAI;;;;;;;;;;CC9hBnB,IAAI;AACJ,GAAEY,UAAc,CAAA,OAAA,GAAGhB,cAAoB,EAAA,CAAC,QAAQ;EAC/C,CAAC,OAAO,CAAC,EAAE;GACVgB,UAAA,CAAA,OAAc,GAAGb,sBAA6B,EAAA;AAChD;;;;;;;;;;;;;;;;ACEA,CAAA,OAAA,CAAA,MAAc,GAAGH,aAAmB,EAAA;AACpC,CAAA,OAAA,CAAA,MAAc,GAAGG,aAAmB,EAAA;AACpC,CAAA,OAAA,CAAA,QAAgB,GAAGE,iBAAqB,EAAA;;;;;;;;;;;;;;;;;;;;ACCxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,eAAe,CAAC,OAAO,EAAE;AAClC,KAAI,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE;KACvB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,iBAAiB;KAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,OAAO;AAC1C,KAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;AAC5B;;CAEA,eAAe,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAA,SAAS,QAAQ,CAAC,SAAS,EAAE,OAAO,EAAE;KAClC,IAAI,CAAC,SAAS,EAAE;AACpB,SAAQ,MAAM,IAAI,eAAe,CAAC,OAAO,CAAC;AAC1C;AACA;;AAEA,CAAA,UAAc,GAAG;KACb,eAAe,EAAE,eAAe;KAChC,QAAQ,EAAE,QAAQ;EACrB;;;;;;;;;;;;;;;;;;;;ACtCD,CAAA,IAAI,QAAQ,GAAGL,iBAAuB,EAAA,CAAC,QAAQ;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;CACA,IAAI,OAAO,GAAG,kCAAkC;;AAEhD;AACA;AACA;AACA;AACA,CAAA,IAAI,qBAAqB,GAAG;KACxB,CAAC,EAAE,CAAC;KACJ,CAAC,EAAE,CAAC;KACJ,CAAC,EAAE,CAAC;KACJ,CAAC,EAAE,CAAC;KACJ,CAAC,EAAE,CAAC;KACJ,CAAC,EAAE,CAAC;KACJ,CAAC,EAAE,CAAC;KACJ,CAAC,EAAE,CAAC;KACJ,CAAC,EAAE,CAAC;KACJ,CAAC,EAAE,CAAC;KACJ,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;KACL,CAAC,EAAE,EAAE;EACR;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,MAAM,CAAC,IAAI,EAAE;KAClB,QAAQ,CAAC,IAAI,YAAY,UAAU,EAAE,gBAAgB,GAAG,IAAI,GAAG,GAAG,CAAC;KACnE,IAAI,MAAM,GAAG,EAAE;AACnB,KAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC1C,SAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;AAC3B,SAAQ,QAAQ,CAAC,CAAC,IAAI,KAAK,IAAI,KAAK,GAAG,EAAE,EAAE,iBAAiB,GAAG,KAAK,GAAG,GAAG,CAAC;AAC3E,SAAQ,MAAM,IAAI,OAAO,CAAC,KAAK,CAAC;AAChC;AACA,KAAI,OAAO,MAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,MAAM,CAAC,MAAM,EAAE;AACxB,KAAI,QAAQ;SACJ,OAAO,MAAM,KAAK,QAAQ;AAClC,SAAQ,iCAAiC,GAAG,MAAM,GAAG,GAAG;MACnD;KACD,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC;AAC5C,KAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC5C,SAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;AAC7B,SAAQ,QAAQ;aACJ,KAAK,IAAI,qBAAqB;AAC1C,aAAY,iBAAiB,GAAG,KAAK,GAAG,GAAG;UAClC;SACD,IAAI,CAAC,CAAC,CAAC,GAAG,qBAAqB,CAAC,KAAK,CAAC;AAC9C;AACA,KAAI,OAAO,IAAI;AACf;;AAEA,CAAA,MAAc,GAAG;KACb,MAAM,EAAE,MAAM;KACd,MAAM,EAAE,MAAM;EACjB;;;;;;;;;;;;AC/GD,EAAA,IAAI,MAAM,GAAG,CAAC,UAAUiB,WAAS,EAAE;AAEnC;MACI,IAAI,IAAI,GAAG,GAAG;UACV,QAAQ,GAAG,CAAC;UACZ,OAAO,GAAG,gBAAgB;AAClC,UAAQ,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC;UACnC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACxC;AACA,MAAI,SAAS,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE;UACvB,IAAI,OAAO,CAAC,KAAK,WAAW,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;UAChD,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE,OAAO,CAAC,KAAK,KAAK,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACrG,UAAQ,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;OACxB;AACL;AACA,MAAI,SAAS,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE;AACrC,UAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,UAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,UAAQ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;OACxB;AACL,MAAI,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAC5D;AACA,MAAI,SAAS,YAAY,CAAC,KAAK,EAAE;AACjC,UAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,UAAQ,IAAI,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC;AAC9B,UAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;OACvB;AACL,MAAI,YAAY,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAC9D;AACA,MAAI,SAAS,SAAS,CAAC,CAAC,EAAE;UAClB,OAAO,iBAAQ,GAAG,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;OACtC;AACL;AACA,MAAI,SAAS,YAAY,CAAC,CAAC,EAAE;UACrB,IAAI,CAAC,GAAG,GAAG;AACnB,cAAY,OAAO,CAAC,CAAC,CAAC,CAAC;UACf,IAAI,CAAC,GAAG,IAAI;AACpB,cAAY,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;UAC1C,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;OACrE;AACL;AACA,MAAI,SAAS,YAAY,CAAC,GAAG,EAAE;AAC/B,UAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;AAClB,UAAQ,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AAChC,UAAQ,IAAI,MAAM,GAAG,CAAC,IAAI,UAAU,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,CAAC,EAAE;AAC5D,cAAY,QAAQ,MAAM;AAC1B,kBAAgB,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;kBACjB,KAAK,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;AACtC,kBAAgB,KAAK,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;kBACtC,SAAS,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC;eAC5D;WACJ;UACD,OAAO,GAAG,CAAC;OACd;AACL;AACA,MAAI,SAAS,IAAI,CAAC,CAAC,EAAE;AACrB,UAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;UACjB,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7B,UAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;OACpB;AACL;AACA,MAAI,SAAS,WAAW,CAAC,MAAM,EAAE;UACzB,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;AAClC,UAAQ,IAAI,CAAC,GAAG,EAAE,CAAC;AACnB,UAAQ,OAAO,EAAE,CAAC,GAAG,MAAM,EAAE;AAC7B,cAAY,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;WACZ;UACD,OAAO,CAAC,CAAC;OACZ;AACL;AACA,MAAI,SAAS,QAAQ,CAAC,CAAC,EAAE;AACzB,UAAQ,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACxC,UAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OACvB;AACL;AACA,MAAI,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;AACvB,UAAQ,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM;AAC1B,cAAY,GAAG,GAAG,CAAC,CAAC,MAAM;AAC1B,cAAY,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;cAClB,KAAK,GAAG,CAAC;cACT,IAAI,GAAG,IAAI;cACX,GAAG,EAAE,CAAC,CAAC;UACX,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAClC,cAAY,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;cAC1B,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;cAC5B,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC;WAC7B;AACT,UAAQ,OAAO,CAAC,GAAG,GAAG,EAAE;cACZ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;cACnB,KAAK,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;cAC7B,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC;WAC/B;UACD,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;UAC7B,OAAO,CAAC,CAAC;OACZ;AACL;AACA,MAAI,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;AAC1B,UAAQ,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,EAAE,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnD,UAAQ,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;OACpB;AACL;AACA,MAAI,SAAS,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE;AAChC,UAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM;AACxB,cAAY,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;cAChB,IAAI,GAAG,IAAI;cACX,GAAG,EAAE,CAAC,CAAC;UACX,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;cACpB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;cAC1B,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;cAC/B,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC;cAC1B,KAAK,IAAI,CAAC,CAAC;WACd;AACT,UAAQ,OAAO,KAAK,GAAG,CAAC,EAAE;cACd,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;cACtB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;WACpC;UACD,OAAO,CAAC,CAAC;OACZ;AACL;MACI,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;AAC5C,UAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;UACtB,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE;cACtB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;WACpC;AACT,UAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;AACxC,UAAQ,IAAI,CAAC,CAAC,OAAO,EAAE;cACX,OAAO,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;WAC9D;AACT,UAAQ,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACvD,OAAK,CAAC;MACF,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;AACzD;MACI,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;AAC9C,UAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC9B,UAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;UACnB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE;cAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;WACpC;AACT,UAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;AACxB,UAAQ,IAAI,CAAC,CAAC,OAAO,EAAE;AACvB,cAAY,IAAI,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;cACrD,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;WACjC;UACD,OAAO,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/D,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC;AAC7D;AACA,MAAI,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;AAC5B,UAAQ,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM;AAC1B,cAAY,GAAG,GAAG,CAAC,CAAC,MAAM;AAC1B,cAAY,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;cAClB,MAAM,GAAG,CAAC;cACV,IAAI,GAAG,IAAI;cACX,CAAC,EAAE,UAAU,CAAC;UAClB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAClC,cAAY,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,cAAY,IAAI,UAAU,GAAG,CAAC,EAAE;kBAChB,UAAU,IAAI,IAAI,CAAC;kBACnB,MAAM,GAAG,CAAC,CAAC;AAC3B,eAAa,MAAM,MAAM,GAAG,CAAC,CAAC;AAC9B,cAAY,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;WACrB;UACD,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;cACxB,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;cAC3B,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,IAAI,IAAI,CAAC;mBAClC;AACjB,kBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;AACpC,kBAAgB,MAAM;eACT;AACb,cAAY,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;WACrB;AACT,UAAQ,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;cACjB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;WACf;AACT,UAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;UACR,OAAO,CAAC,CAAC;OACZ;AACL;MACI,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;UAC7B,IAAI,KAAK,CAAC;UACV,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE;cACvB,KAAK,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnC,WAAS,MAAM;cACH,KAAK,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnC,cAAY,IAAI,GAAG,CAAC,IAAI,CAAC;WAChB;AACT,UAAQ,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;AACpC,UAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACvC,cAAY,IAAI,IAAI,EAAE,KAAK,GAAG,CAAC,KAAK,CAAC;AACrC,cAAY,OAAO,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;WAClC;UACD,OAAO,IAAI,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;OACtC;AACL;MACI,SAAS,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;AACvC,UAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM;AACxB,cAAY,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;cAChB,KAAK,GAAG,CAAC,CAAC;cACV,IAAI,GAAG,IAAI;cACX,CAAC,EAAE,UAAU,CAAC;UAClB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;cACpB,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;cAC1B,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC;cACtC,UAAU,IAAI,IAAI,CAAC;AAC/B,cAAY,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC,GAAG,UAAU,GAAG,IAAI,GAAG,UAAU,CAAC;WAC1D;AACT,UAAQ,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC5B,UAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;AACnC,cAAY,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7B,cAAY,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;WAC9B,CAAC,OAAO,IAAI,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;OACpC;AACL;MACI,UAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE;AACjD,UAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;UACtB,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE;cACtB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;WAC/B;AACT,UAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;UAChC,IAAI,CAAC,CAAC,OAAO;AACrB,cAAY,OAAO,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;UACpD,OAAO,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5C,OAAK,CAAC;MACF,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;AAC/D;MACI,YAAY,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE;AACnD,UAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC9B,UAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;UACnB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE;cAClB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;WAC/B;AACT,UAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;AACxB,UAAQ,IAAI,CAAC,CAAC,OAAO,EAAE;cACX,OAAO,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;WAClC;AACT,UAAQ,OAAO,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AACrD,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC;AACnE;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AAC9C,UAAQ,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtD,OAAK,CAAC;AACN,MAAI,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AAChD,UAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;UACrB,IAAI,KAAK,GAAG,IAAI,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClD,UAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC;UACnB,OAAO,KAAK,CAAC;AACrB,OAAK,CAAC;AACN;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY;UACnC,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACjD,OAAK,CAAC;AACN,MAAI,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY;AAC7C,UAAQ,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACtD,OAAK,CAAC;AACN;AACA,MAAI,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;AAChC,UAAQ,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM;AAC1B,cAAY,GAAG,GAAG,CAAC,CAAC,MAAM;AAC1B,cAAY,CAAC,GAAG,GAAG,GAAG,GAAG;AACzB,cAAY,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;cAClB,IAAI,GAAG,IAAI;cACX,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;UAChC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;AAClC,cAAY,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,cAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;AAC1C,kBAAgB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,kBAAgB,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;kBAC/B,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;AACnD,kBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC;kBAClC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC;eACzB;WACJ;AACT,UAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;UACR,OAAO,CAAC,CAAC;OACZ;AACL;AACA,MAAI,SAAS,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE;AACjC,UAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM;AACxB,cAAY,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;cAChB,IAAI,GAAG,IAAI;cACX,KAAK,GAAG,CAAC;cACT,OAAO,EAAE,CAAC,CAAC;UACf,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;cACpB,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;cAC3B,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;cACnC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC;WACjC;AACT,UAAQ,OAAO,KAAK,GAAG,CAAC,EAAE;cACd,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;cACtB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;WACpC;UACD,OAAO,CAAC,CAAC;OACZ;AACL;AACA,MAAI,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;AAC7B,UAAQ,IAAI,CAAC,GAAG,EAAE,CAAC;AACnB,UAAQ,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClC,UAAQ,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;OACtB;AACL;AACA,MAAI,SAAS,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAE;AACrC,UAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;AAC7C;AACA,UAAQ,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACvC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7B;UACQ,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;cACd,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7B,cAAY,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;cACd,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B;UACQ,IAAI,EAAE,GAAG,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC;AACxC,cAAY,EAAE,GAAG,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC;AACxC,cAAY,IAAI,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjE;AACA,UAAQ,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/G,UAAQ,IAAI,CAAC,OAAO,CAAC,CAAC;UACd,OAAO,OAAO,CAAC;OAClB;AACL;AACA;AACA;AACA,MAAI,SAAS,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE;AAClC,UAAQ,OAAO,MAAM,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,GAAG,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;OAC5D;AACL;MACI,UAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE;AACjD,UAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;cACjB,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK;cAC3B,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;AACvC,cAAY,GAAG,CAAC;AAChB,UAAQ,IAAI,CAAC,CAAC,OAAO,EAAE;cACX,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;AAC3C,cAAY,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC;cACzB,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;cACnC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC9B,cAAY,IAAI,GAAG,GAAG,IAAI,EAAE;AAC5B,kBAAgB,OAAO,IAAI,UAAU,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;eACtD;AACb,cAAY,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;WACzB;UACD,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC;AAC5C,cAAY,OAAO,IAAI,UAAU,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACjE,UAAQ,OAAO,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACxD,OAAK,CAAC;AACN;MACI,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;AAC/D;MACI,SAAS,qBAAqB,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;AAC/C,UAAQ,IAAI,CAAC,GAAG,IAAI,EAAE;AACtB,cAAY,OAAO,IAAI,UAAU,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;WACpD;AACT,UAAQ,OAAO,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;OACjE;MACD,YAAY,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,CAAC,EAAE;UACnD,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;AAC7C,cAAY,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;WACjD;AACT,UAAQ,OAAO,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;AAClH,OAAK,CAAC;MACF,UAAU,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,CAAC,EAAE;AACzD,UAAQ,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;UACrC,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC;AACvC,UAAQ,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;UACzC,OAAO,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;AAC1F,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE;UAC3C,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACpD,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC;AACnE;AACA,MAAI,SAAS,MAAM,CAAC,CAAC,EAAE;AACvB;AACA,UAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM;AACxB,cAAY,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;cACtB,IAAI,GAAG,IAAI;cACX,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;UAChC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAChC,cAAY,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,cAAY,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;AAClC,cAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACxC,kBAAgB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,kBAAgB,OAAO,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;kBAC7C,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;AACnD,kBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC;eACrC;cACD,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;WACpB;AACT,UAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;UACR,OAAO,CAAC,CAAC;OACZ;AACL;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AAC9C,UAAQ,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;AACzD,OAAK,CAAC;AACN;AACA,MAAI,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;UACxC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC5C,UAAQ,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;UACrD,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACjF,OAAK,CAAC;AACN;AACA,MAAI,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;AAC3B,UAAQ,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM;AAC1B,cAAY,GAAG,GAAG,CAAC,CAAC,MAAM;cACd,IAAI,GAAG,IAAI;AACvB,cAAY,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC;AAC1C,cAAY,2BAA2B,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;AACpD;AACA,cAAY,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,2BAA2B,CAAC,CAAC;AACxE,cAAY,SAAS,GAAG,aAAa,CAAC,CAAC,EAAE,MAAM,CAAC;AAChD,cAAY,OAAO,GAAG,aAAa,CAAC,CAAC,EAAE,MAAM,CAAC;AAC9C,cAAY,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACzD,UAAQ,IAAI,SAAS,CAAC,MAAM,IAAI,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,UAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UAChB,2BAA2B,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACvD,UAAQ,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;AACrD,cAAY,aAAa,GAAG,IAAI,GAAG,CAAC,CAAC;cACzB,IAAI,SAAS,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,2BAA2B,EAAE;kBACxD,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,2BAA2B,CAAC,CAAC;eAC1H;AACb;cACY,KAAK,GAAG,CAAC,CAAC;cACV,MAAM,GAAG,CAAC,CAAC;AACvB,cAAY,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;cACnB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;kBACpB,KAAK,IAAI,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;kBACpC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,kBAAgB,MAAM,IAAI,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;kBACpD,KAAK,GAAG,CAAC,CAAC;AAC1B,kBAAgB,IAAI,MAAM,GAAG,CAAC,EAAE;sBACZ,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;AACzD,sBAAoB,MAAM,GAAG,EAAE,CAAC;AAChC,mBAAiB,MAAM;sBACH,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;sBAC9B,MAAM,GAAG,CAAC,CAAC;mBACd;eACJ;AACb,cAAY,OAAO,MAAM,KAAK,CAAC,EAAE;kBACjB,aAAa,IAAI,CAAC,CAAC;kBACnB,KAAK,GAAG,CAAC,CAAC;kBACV,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACxC,sBAAoB,KAAK,IAAI,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACtE,sBAAoB,IAAI,KAAK,GAAG,CAAC,EAAE;0BACX,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;0BACpC,KAAK,GAAG,CAAC,CAAC;AAClC,uBAAqB,MAAM;0BACH,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;0BAC7B,KAAK,GAAG,CAAC,CAAC;uBACb;mBACJ;kBACD,MAAM,IAAI,KAAK,CAAC;eACnB;AACb,cAAY,MAAM,CAAC,KAAK,CAAC,GAAG,aAAa,CAAC;WACjC;AACT;UACQ,SAAS,GAAG,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,UAAQ,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;OAC1D;AACL;AACA,MAAI,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;AAC3B;AACA,UAAQ,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM;AAC1B,cAAY,GAAG,GAAG,CAAC,CAAC,MAAM;cACd,MAAM,GAAG,EAAE;cACX,IAAI,GAAG,EAAE;cACT,IAAI,GAAG,IAAI;cACX,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;UACrC,OAAO,GAAG,EAAE;cACR,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AACnC,cAAY,IAAI,CAAC,IAAI,CAAC,CAAC;cACX,IAAI,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE;AACzC,kBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,kBAAgB,SAAS;eACZ;AACb,cAAY,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/B,cAAY,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;AAC3D,cAAY,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACnD,cAAY,IAAI,IAAI,GAAG,GAAG,EAAE;kBACZ,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC;eAC9B;cACD,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;AAC7C,cAAY,GAAG;kBACC,KAAK,GAAG,aAAa,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;kBAChC,IAAI,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM;kBACxC,KAAK,EAAE,CAAC;eACX,QAAQ,KAAK,EAAE;AAC5B,cAAY,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;cACnB,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;WAChC;AACT,UAAQ,MAAM,CAAC,OAAO,EAAE,CAAC;AACzB,UAAQ,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;OACrD;AACL;AACA,MAAI,SAAS,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE;AACxC,UAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM;AACjC,cAAY,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC;cAC9B,IAAI,GAAG,IAAI;AACvB,cAAY,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC;UAC7B,SAAS,GAAG,CAAC,CAAC;AACtB,UAAQ,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;cAC9B,OAAO,GAAG,SAAS,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;cACtC,CAAC,GAAG,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC;AAC3C,cAAY,SAAS,GAAG,OAAO,GAAG,CAAC,GAAG,MAAM,CAAC;cACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;WACvB;UACD,OAAO,CAAC,QAAQ,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;OACpC;AACL;AACA,MAAI,SAAS,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE;UACxB,IAAI,KAAK,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AACrC,UAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;UAChC,IAAI,QAAQ,CAAC;UACb,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;AAC9D,UAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B,cAAY,IAAI,CAAC,CAAC,OAAO,EAAE;kBACX,OAAO,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;eACvE;cACD,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;WAC7B;AACT,UAAQ,IAAI,CAAC,CAAC,OAAO,EAAE;AACvB,cAAY,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,cAAY,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;cAChD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAClC,cAAY,IAAI,GAAG,GAAG,IAAI,EAAE;kBACZ,KAAK,GAAG,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;kBAC5B,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,kBAAgB,IAAI,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;kBACzB,IAAI,IAAI,CAAC,IAAI,EAAE,SAAS,GAAG,CAAC,SAAS,CAAC;AACtD,kBAAgB,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AAClD,sBAAoB,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE,QAAQ,GAAG,CAAC,QAAQ,CAAC;AACnE,sBAAoB,OAAO,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,EAAE,IAAI,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;mBACpE;kBACD,OAAO,CAAC,IAAI,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;eACxF;AACb,cAAY,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;WACzB;UACD,IAAI,UAAU,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,UAAQ,IAAI,UAAU,KAAK,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACzD,UAAQ,IAAI,UAAU,KAAK,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1F;AACA;UACQ,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,IAAI,GAAG;cAC1B,KAAK,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;eACrB,KAAK,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnC;AACA,UAAQ,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;UACpB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;AACxC,cAAY,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;AAC1B,cAAY,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;AAC9B,UAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AAC1C,cAAY,IAAI,KAAK,EAAE,QAAQ,GAAG,CAAC,QAAQ,CAAC;AAC5C,cAAY,QAAQ,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;WACzC,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC1D,UAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACrC,cAAY,IAAI,KAAK,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC;AAClC,cAAY,GAAG,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC;WAC/B,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAChD,UAAQ,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;OAC1B;AACL;MACI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;UACvC,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACxC,UAAQ,OAAO;AACf,cAAY,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;AAC/B,cAAY,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;AAChC,WAAS,CAAC;AACV,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;AAChE;MACI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;UACvC,OAAO,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;AAC1H;MACI,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;UACpC,OAAO,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;AAC9H;MACI,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;AAC5C,UAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;AAC7B,cAAY,CAAC,GAAG,IAAI,CAAC,KAAK;AAC1B,cAAY,CAAC,GAAG,CAAC,CAAC,KAAK;AACvB,cAAY,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;UAChB,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;UAC/B,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;UAC/B,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;UAC/B,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;AACnE,UAAQ,IAAI,CAAC,CAAC,IAAI,EAAE;AACpB,cAAY,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;WACrB;AACT,UAAQ,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,IAAI,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,gBAAgB,CAAC,CAAC;AAC3F,UAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B,cAAY,IAAI,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;kBACjC,OAAO,IAAI,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;WAChD;UACD,CAAC,GAAG,IAAI,CAAC;AACjB,UAAQ,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;UACf,OAAO,IAAI,EAAE;AACrB,cAAY,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;kBACb,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;kBACf,EAAE,CAAC,CAAC;eACP;AACb,cAAY,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM;cACnB,CAAC,IAAI,CAAC,CAAC;AACnB,cAAY,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;WAClB;UACD,OAAO,CAAC,CAAC;AACjB,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;AAC1D;MACI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE;AACtD,UAAQ,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;AAC9B,UAAQ,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;AAC9B,UAAQ,IAAI,GAAG,CAAC,MAAM,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;AAC/E,UAAQ,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;cACd,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACjC,UAAQ,OAAO,GAAG,CAAC,UAAU,EAAE,EAAE;cACrB,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;AACjD,cAAY,IAAI,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;cAC/C,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;cACpB,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;WACjC;UACD,OAAO,CAAC,CAAC;AACjB,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;AAChE;AACA,MAAI,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE;UACtB,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE;AACnC,cAAY,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC;WACvC;AACT,UAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;cACpC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;WAClD;UACD,OAAO,CAAC,CAAC;OACZ;AACL;MACI,UAAU,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC,EAAE;AACnD,UAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;AAC7B,cAAY,CAAC,GAAG,IAAI,CAAC,KAAK;AAC1B,cAAY,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;AACxB,UAAQ,IAAI,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAChC,UAAQ,OAAO,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAChC,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC,EAAE;AACrD,UAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;cACjB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;AACpC,cAAY,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;AACxB,UAAQ,IAAI,CAAC,CAAC,OAAO,EAAE;cACX,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5B,cAAY,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;WACvC;UACD,OAAO,EAAE,CAAC;AAClB,OAAK,CAAC;AACN;MACI,UAAU,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE;AAChD;AACA;AACA,UAAQ,IAAI,CAAC,KAAK,QAAQ,EAAE;cAChB,OAAO,EAAE,CAAC;WACb;AACT,UAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;cACjB,OAAO,CAAC,CAAC;WACZ;AACT;AACA,UAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;AAC7B,cAAY,CAAC,GAAG,IAAI,CAAC,KAAK;AAC1B,cAAY,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;UAChB,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE;cACtB,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC;WAC1B;AACT,UAAQ,IAAI,CAAC,CAAC,OAAO,EAAE;cACX,OAAO,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC;WAC7B;AACT,UAAQ,OAAO,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AACvD,OAAK,CAAC;MACF,UAAU,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC;AAClE;MACI,YAAY,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE;AAClD,UAAQ,IAAI,CAAC,KAAK,QAAQ,EAAE;cAChB,OAAO,EAAE,CAAC;WACb;AACT,UAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;cACjB,OAAO,CAAC,CAAC;WACZ;AACT;AACA,UAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;AAC7B,cAAY,CAAC,GAAG,IAAI,CAAC,KAAK;AAC1B,cAAY,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;AACxB,UAAQ,IAAI,CAAC,CAAC,OAAO,EAAE;AACvB,cAAY,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;WACtC;UACD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE;cAClB,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;WACzB;UACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AAC9B,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC;AACtE;MACI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;UACvC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AACrC,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;AACtH;MACI,UAAU,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC,EAAE;UAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AACrC,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;AAC9H;MACI,UAAU,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE;UACxC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC;AACxH;MACI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;UACvC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;AACtH;MACI,UAAU,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,CAAC,EAAE;UAChD,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACpC,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC;AAC1I;MACI,UAAU,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,CAAC,EAAE;UAC/C,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACpC,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC;AACxI;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AAC9C,UAAQ,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACzC,OAAK,CAAC;AACN,MAAI,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;UACxC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC;AACtC,OAAK,CAAC;AACN;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;AAC7C,UAAQ,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACzC,OAAK,CAAC;AACN,MAAI,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;UACvC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC;AACtC,OAAK,CAAC;AACN;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;AAClD,UAAQ,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1B,OAAK,CAAC;AACN,MAAI,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;AACpD,UAAQ,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AAC9B,OAAK,CAAC;AACN;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;AAClD,UAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;AACzB,OAAK,CAAC;AACN,MAAI,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;AACpD,UAAQ,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AAC9B,OAAK,CAAC;AACN;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;UACtC,OAAO,KAAK,CAAC;AACrB,OAAK,CAAC;AACN,MAAI,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;UACxC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC1C,OAAK,CAAC;AACN;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;UACtC,OAAO,KAAK,CAAC;AACrB,OAAK,CAAC;AACN,MAAI,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AAChD,UAAQ,OAAO,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC;AAChC,OAAK,CAAC;MACF,UAAU,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,CAAC,EAAE;AACtD,UAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC9B,UAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;AAC5B,UAAQ,IAAI,KAAK,KAAK,CAAC,EAAE,OAAO,KAAK,CAAC;AACtC,UAAQ,IAAI,KAAK,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC;UAC7B,IAAI,KAAK,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;AAC9C,UAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC;AAC9E;AACA,MAAI,SAAS,YAAY,CAAC,CAAC,EAAE;AAC7B,UAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;UAChB,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,KAAK,CAAC;UAC7B,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC;UAC3D,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,OAAO,KAAK,CAAC;UACzE,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC;AACtC;OACK;AACL;AACA,MAAI,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE;AACnC,cAAY,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE,CAAA;cAChB,CAAC,GAAG,KAAK,CAAA;cACT,CAAC,GAAG,CAAC,CAAA;AACjB,cAAY,CAAC,CAAE,CAAG,CAAC,CAAA,CAAE,EAAE;AACvB,UAAQ,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AAChD,UAAQ,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;cAClC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS;AACzC,cAAY,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,cAAY,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,SAAS;AAClE,cAAY,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;kBACzB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;kBACtB,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,KAAK,CAAC;kBAC7B,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,SAAS,IAAI,CAAC;eACtC;cACD,OAAO,KAAK,CAAC;WAChB;UACD,OAAO,IAAI,CAAC;OACf;AACL;AACA;MACI,UAAU,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;AACrD,UAAQ,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;AACzC,UAAQ,IAAI,OAAO,KAAKA,WAAS,EAAE,OAAO,OAAO,CAAC;AAClD,UAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC3B,UAAQ,IAAI,IAAI,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;UACzB,GAAG,IAAI,IAAI,EAAE;cACT,OAAO,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;UAClF,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;UAC9B,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;AAC9E,UAAQ,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;cAChC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;WACzB;AACT,UAAQ,OAAO,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrC,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC;AAClE;MACI,UAAU,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,UAAU,EAAE;AACjE,UAAQ,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;AACzC,UAAQ,IAAI,OAAO,KAAKA,WAAS,EAAE,OAAO,OAAO,CAAC;AAClD,UAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;UACnB,IAAI,CAAC,GAAG,UAAU,KAAKA,WAAS,GAAG,CAAC,GAAG,UAAU,CAAC;AAC1D,UAAQ,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC5C,cAAY,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;WAC7C;AACT,UAAQ,OAAO,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrC,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC;AAClF;MACI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;AAC/C,UAAQ,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,IAAI,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;UAC9F,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;cAC9B,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;cACnB,KAAK,GAAG,CAAC,CAAC;cACV,KAAK,GAAG,CAAC,CAAC;cACV,CAAC,GAAG,IAAI,CAAC;cACT,CAAC,GAAG,IAAI,CAAC;AACrB,cAAY,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,cAAY,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;WAC3C;UACD,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,OAAO,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,mBAAmB,CAAC,CAAC;UAClG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;cACrB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;WAChB;AACT,UAAQ,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;AAC/B,cAAY,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;WACrB;UACD,OAAO,CAAC,CAAC;AACjB,OAAK,CAAC;AACN;MACI,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;AAChE;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AAC5C,UAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC/B,UAAQ,IAAI,IAAI,CAAC,IAAI,EAAE;cACX,OAAO,aAAa,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;WAC7C;AACT,UAAQ,OAAO,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7D,OAAK,CAAC;AACN,MAAI,YAAY,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AAC9C,UAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC/B,UAAQ,IAAI,KAAK,GAAG,CAAC,GAAG,OAAO,EAAE,OAAO,IAAI,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;UAC5D,OAAO,IAAI,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAClD,OAAK,CAAC;AACN;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AAC5C,UAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC/B,UAAQ,IAAI,IAAI,CAAC,IAAI,EAAE;AACvB,cAAY,OAAO,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;WACnD;UACD,OAAO,aAAa,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAClD,OAAK,CAAC;AACN,MAAI,YAAY,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AAC9C,UAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC/B,UAAQ,IAAI,KAAK,GAAG,CAAC,GAAG,iBAAQ,EAAE,OAAO,IAAI,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;UAC7D,OAAO,IAAI,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;AACjD,OAAK,CAAC;AACN;AACA,MAAI,IAAI,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;AAC1B,MAAI,OAAO,CAAC,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AACtH,MAAI,IAAI,aAAa,GAAG,WAAW,CAAC,MAAM,EAAE,aAAa,GAAG,WAAW,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;AAC3F;AACA,MAAI,SAAS,aAAa,CAAC,CAAC,EAAE;UACtB,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI;AACxF,eAAa,CAAC,YAAY,UAAU,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;OACxD;AACL;MACI,UAAU,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC,EAAE;AAClD,UAAQ,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE;cACnB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,6BAA6B,CAAC,CAAC;WAC9D;AACT,UAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AACf,UAAQ,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,UAAQ,IAAI,MAAM,GAAG,IAAI,CAAC;UAClB,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE,OAAO,MAAM,CAAC;AAC3C,UAAQ,OAAO,CAAC,IAAI,aAAa,EAAE;cACvB,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AACpD,cAAY,CAAC,IAAI,aAAa,GAAG,CAAC,CAAC;WAC1B;UACD,OAAO,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;AACtE;MACI,UAAU,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC,EAAE;UAC3C,IAAI,MAAM,CAAC;AACnB,UAAQ,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE;cACnB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,6BAA6B,CAAC,CAAC;WAC9D;AACT,UAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AACf,UAAQ,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,UAAQ,IAAI,MAAM,GAAG,IAAI,CAAC;AAC1B,UAAQ,OAAO,CAAC,IAAI,aAAa,EAAE;AACnC,cAAY,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,MAAM,CAAC,UAAU,EAAE,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,MAAM,CAAC;cAC/E,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;cAC1C,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC3E,cAAY,CAAC,IAAI,aAAa,GAAG,CAAC,CAAC;WAC1B;UACD,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;UAC3C,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACrE,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;AACxE;MACI,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;AAC/B,UAAQ,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC1B,UAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,KAAK,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;UACnD,IAAI,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;cAC1B,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC/B,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC;UAC3B,IAAI,OAAO,GAAG,IAAI,EAAE,OAAO,GAAG,IAAI,CAAC;AAC3C,UAAQ,IAAI,MAAM,GAAG,EAAE,CAAC;AACxB,UAAQ,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;cACrC,OAAO,GAAG,SAAS,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;cACzC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;cACjC,IAAI,KAAK,EAAE;AACvB,kBAAgB,MAAM,GAAG,aAAa,GAAG,CAAC,GAAG,MAAM,CAAC;eACvC;AACb;cACY,OAAO,GAAG,SAAS,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;cACzC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;cACjC,IAAI,KAAK,EAAE;AACvB,kBAAgB,MAAM,GAAG,aAAa,GAAG,CAAC,GAAG,MAAM,CAAC;eACvC;AACb;AACA,cAAY,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9B,cAAY,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;cAClB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;WACnC;AACT,UAAQ,IAAI,GAAG,GAAG,EAAE,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAClF,UAAQ,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;AACxD,cAAY,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;WAC5D;UACD,OAAO,GAAG,CAAC;OACd;AACL;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY;UACnC,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC;AACpC,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;AAC1D;MACI,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;UACpC,OAAO,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACnE,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;AAC1D;MACI,UAAU,CAAC,SAAS,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE;UACnC,OAAO,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACnE,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;AACxD;MACI,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;UACpC,OAAO,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACnE,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;AAC1D;MACI,IAAI,SAAS,GAAG,CAAC,IAAI,EAAE,EAAE,UAAU,GAAG,CAAC,IAAI,GAAG,IAAK,KAAK,IAAI,GAAG,IAAK,CAAC,GAAG,SAAS,CAAC;AACtF,MAAI,SAAS,QAAQ,CAAC,CAAC,EAAE;AACzB;AACA;AACA,UAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,UAAU,CAAC;AACrG,UAAQ,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;OACjB;AACL;AACA,MAAI,SAAS,gBAAgB,CAAC,KAAK,EAAE,IAAI,EAAE;UACnC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AACxC,cAAY,IAAI,GAAG,GAAG,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AACjE,cAAY,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAC1B,cAAY,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;cACd,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACrC,cAAY,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;WAChF;AACT,UAAQ,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;OACjC;AACL;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,SAAS,GAAG,YAAY;AACjD,UAAQ,IAAI,CAAC,GAAG,IAAI,CAAC;AACrB,UAAQ,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;AACxC,cAAY,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;WACtC;AACT,UAAQ,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AAC1C,cAAY,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;WACpB;UACD,OAAO,MAAM,CAAC,gBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE;MACD,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;AACtE;AACA,MAAI,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;AACvB,UAAQ,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC1B,UAAQ,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;UAClB,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;OAC/B;AACL,MAAI,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;AACvB,UAAQ,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC1B,UAAQ,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;UAClB,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;OAC9B;AACL,MAAI,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;UACf,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;UACxB,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;UACxB,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;UAC1B,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,CAAC,CAAC;UACzB,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,CAAC,CAAC;UACzB,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UACzB,OAAO,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;AACzC,cAAY,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;cACvC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;cAChB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;cAChB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;WACrB;AACT,UAAQ,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;cACf,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;WAC7B;AACT,UAAQ,GAAG;AACX,cAAY,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;kBACf,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;eAC7B;AACb,cAAY,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;AAC9B,kBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;eACvB;cACD,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC9B,WAAS,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE;AAC9B,UAAQ,OAAO,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;OACzC;AACL,MAAI,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;UACf,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;UACxB,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAChC,UAAQ,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;OAC1C;AACL,MAAI,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE;AAC/B,UAAQ,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC1B,UAAQ,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC1B,UAAQ,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9C,UAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACtC,IAAI,KAAK,CAAC,OAAO,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;UACrE,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;UACpC,IAAI,MAAM,GAAG,EAAE,EAAE,UAAU,GAAG,IAAI,CAAC;AAC3C,UAAQ,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC1C,cAAY,IAAI,GAAG,GAAG,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACzD,cAAY,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AACtD,cAAY,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;cACtB,IAAI,KAAK,GAAG,GAAG,EAAE,UAAU,GAAG,KAAK,CAAC;WACvC;AACT,UAAQ,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;UAC9B,OAAO,GAAG,CAAC,GAAG,CAAC,OAAO,MAAM,KAAK,QAAQ,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;OACzG;AACL,MAAI,IAAI,SAAS,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE;AAC1C,UAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;UACzB,IAAI,CAAC,CAAC;UACN,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACrC,UAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;cAC7B,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AAC1C,cAAY,IAAI,CAAC,KAAK,GAAG,EAAE,SAAS;AACpC,cAAY,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;AACpC,kBAAgB,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,OAAO,EAAE;sBAClC,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,KAAK,CAAC,EAAE,SAAS;AAC7D,sBAAoB,MAAM,IAAI,KAAK,CAAC,CAAC,GAAG,gCAAgC,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;AACvF,mBAAiB,MAAM,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,OAAO,EAAE;AAC5D,sBAAoB,MAAM,IAAI,KAAK,CAAC,CAAC,GAAG,gCAAgC,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;mBACtE;eACJ;WACJ;UACD,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE;cACzB,IAAI,MAAM,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;kBACxC,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAClD,kBAAgB,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;AACnC,sBAAoB,MAAM,IAAI,KAAK,CAAC,CAAC,GAAG,gCAAgC,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;mBACtE;kBACD,OAAO,IAAI,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;eACjD;WACJ;AACT,UAAQ,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAChC,UAAQ,IAAI,MAAM,GAAG,EAAE,CAAC;UAChB,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;AACzC,UAAQ,KAAK,CAAC,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;cAC/C,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;kBACzB,QAAQ,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC3C,cAAY,IAAI,EAAE,IAAI,QAAQ,IAAI,QAAQ,IAAI,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;mBAC5D,IAAI,EAAE,IAAI,QAAQ,IAAI,QAAQ,IAAI,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACtG,mBAAiB,IAAI,CAAC,KAAK,GAAG,EAAE;AAChC,kBAAgB,IAAI,KAAK,GAAG,CAAC,CAAC;AAC9B,kBAAgB,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACpD,kBAAgB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;eACrD;mBACI,MAAM,IAAI,KAAK,CAAC,CAAC,GAAG,2BAA2B,CAAC,CAAC;WACzD;UACD,OAAO,kBAAkB,CAAC,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AAC5D,OAAK,CAAC;AACN;MACI,SAAS,kBAAkB,CAAC,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE;AAC1D,UAAQ,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAClD,UAAQ,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACjD,cAAY,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;cACpC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;WACzB;UACD,OAAO,UAAU,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;OAC1C;AACL;AACA,MAAI,SAAS,SAAS,CAAC,KAAK,EAAE;AAC9B,UAAQ,IAAI,KAAK,IAAI,EAAE,EAAE;AACzB,cAAY,OAAO,sCAAsC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;WAC/D;AACT,UAAQ,OAAO,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC;OAC5B;AACL;AACA,MAAI,SAAS,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE;AAC7B,UAAQ,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AAC5B,UAAQ,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;AAC3B,cAAY,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;AACrE,cAAY,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;WAChE;UACD,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;AAC7B,cAAY,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;AACrE,cAAY,IAAI,CAAC,CAAC,UAAU,EAAE;AAC9B,kBAAgB,OAAO;sBACH,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E,2BAAyB,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;uBACxC;sBACD,UAAU,EAAE,KAAK;AACrC,mBAAiB,CAAC;AAClB;AACA,cAAY,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACtD,mBAAiB,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cAC1C,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,cAAY,OAAO;kBACH,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC;kBAC/B,UAAU,EAAE,KAAK;AACjC,eAAa,CAAC;WACL;AACT;AACA,UAAQ,IAAI,GAAG,GAAG,KAAK,CAAC;UAChB,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;cACrC,GAAG,GAAG,IAAI,CAAC;AACvB,cAAY,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;WACf;AACT,UAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;AAC5B,cAAY,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;AACrE;AACA,cAAY,OAAO;AACnB,kBAAgB,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;uBAC9B,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;kBACrC,UAAU,EAAE,GAAG;AAC/B,eAAa,CAAC;WACL;AACT,UAAQ,IAAI,GAAG,GAAG,EAAE,CAAC;AACrB,UAAQ,IAAI,IAAI,GAAG,CAAC,EAAE,MAAM,CAAC;AAC7B,UAAQ,OAAO,IAAI,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;cACpD,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvC,cAAY,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC;AACnC,cAAY,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC;AACzC,cAAY,IAAI,KAAK,CAAC,UAAU,EAAE,EAAE;kBACpB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;AAChD,kBAAgB,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;eACtB;cACD,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;WAChC;UACD,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;AACpC,UAAQ,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC;OACpD;AACL;AACA,MAAI,SAAS,YAAY,CAAC,CAAC,EAAE,IAAI,EAAE;UAC3B,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;UAC1B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;OAC1E;AACL;MACI,UAAU,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,KAAK,EAAE;AACpD,UAAQ,OAAO,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACnC,OAAK,CAAC;AACN;MACI,YAAY,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,KAAK,EAAE;AACtD,UAAQ,OAAO,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACnC,OAAK,CAAC;AACN;MACI,UAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,KAAK,EAAE;UAC7C,IAAI,KAAK,KAAKA,WAAS,EAAE,KAAK,GAAG,EAAE,CAAC;AAC5C,UAAQ,IAAI,KAAK,KAAK,EAAE,EAAE,OAAO,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC3D,UAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,SAAS,EAAE,KAAK,CAAC;AACzF,UAAQ,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE;cACb,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,cAAY,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;WAC5C;UACD,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;AACxC,UAAQ,OAAO,IAAI,GAAG,GAAG,CAAC;AAC1B,OAAK,CAAC;AACN;MACI,YAAY,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,KAAK,EAAE;UAC/C,IAAI,KAAK,KAAKA,WAAS,EAAE,KAAK,GAAG,EAAE,CAAC;AAC5C,UAAQ,IAAI,KAAK,IAAI,EAAE,EAAE,OAAO,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC1D,UAAQ,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClC,OAAK,CAAC;MACF,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAE;AACzG;AACA,MAAI,UAAU,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;UACvC,OAAO,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;AAC7C,OAAK,CAAC;MACF,UAAU,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC;AACnE;AACA,MAAI,YAAY,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;AACjD,UAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,OAAK,CAAC;MACF,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC;AACvE;AACA,MAAI,SAAS,gBAAgB,CAAC,CAAC,EAAE;AACjC,UAAQ,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;AAC3B,cAAY,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACvB,cAAY,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;AACjC,kBAAgB,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;cAC/B,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;WAC5C;UACD,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;UACxB,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;UACzB,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;UAC1B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACrF,UAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAChC,cAAY,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,cAAY,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACnD,cAAY,GAAG,GAAG,CAAC,GAAG,CAAC;cACX,IAAI,GAAG,KAAK,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,GAAG,GAAG,2BAA2B,CAAC,CAAC;AACnI,cAAY,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;cACpB,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjD,cAAY,IAAI,YAAY,IAAI,CAAC,EAAE;kBACnB,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,YAAY,GAAG,CAAC,CAAC;AACtD,kBAAgB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;eACrE;cACD,IAAI,GAAG,GAAG,CAAC,EAAE,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;AAC/F,cAAY,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;cACvC,CAAC,GAAG,IAAI,CAAC;WACZ;UACD,IAAI,OAAO,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChD,UAAQ,IAAI,CAAC,OAAO,EAAE,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;UACvD,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,QAAQ,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAChE,UAAQ,OAAO,GAAG,GAAG,CAAC,EAAE;AACxB,cAAY,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAC3B,GAAG,IAAI,CAAC,CAAC;cACT,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;cACrB,GAAG,IAAI,CAAC,CAAC;WACZ;AACT,UAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;UACR,OAAO,IAAI,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;OAClC;AACL;AACA,MAAI,SAAS,gBAAgB,CAAC,CAAC,EAAE;AACjC,UAAQ,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE;AAC1B,cAAY,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,IAAI,KAAK,CAAC,CAAC,GAAG,qBAAqB,CAAC,CAAC;AAC9E,cAAY,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;WAC9B;UACD,OAAO,gBAAgB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;OACzC;AACL;AACA,MAAI,SAAS,UAAU,CAAC,CAAC,EAAE;AAC3B,UAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;AACnC,cAAY,OAAO,gBAAgB,CAAC,CAAC,CAAC,CAAC;WAC9B;AACT,UAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;AACnC,cAAY,OAAO,gBAAgB,CAAC,CAAC,CAAC,CAAC;WAC9B;UACD,OAAO,CAAC,CAAC;OACZ;AACL;AACA,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;UAC3B,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;AACzC,UAAQ,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;OACjD;AACL;MACI,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;MACzB,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;MAC1B,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;AACnC,MAAI,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACtB,MAAI,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACtB,MAAI,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACtB,MAAI,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACtB,MAAI,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,YAAY,UAAU,IAAI,CAAC,YAAY,YAAY,CAAC,EAAE,CAAC;AACvG,MAAI,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC;AACtC;MACI,OAAO,CAAC,SAAS,GAAG,UAAU,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE;AAC5D,UAAQ,OAAO,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AAC9F,OAAK,CAAC;AACN;MACI,OAAO,OAAO,CAAC;AACnB,GAAC,GAAG,CAAC;AACL;AACA;EACA,IAAqC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;MACnE,MAAA,CAAA,OAAA,GAAiB,MAAM,CAAC;GAC3B;;;;;;;;;;;;;;;;AChyCD,CAAA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAC7D,CAAA,OAAA,CAAA,OAAe,GAAG,OAAO;AACzB,CAAA,OAAA,CAAA,MAAc,GAAG,MAAM;AACvB,CAAA,OAAA,CAAA,IAAY,GAAG,IAAI;AACnB,CAAA,OAAA,CAAA,KAAa,GAAG,KAAK;AACrB,CAAA,OAAA,CAAA,IAAY,GAAG,IAAI;AACnB,CAAA,OAAA,CAAA,MAAc,GAAG,MAAM;AACvB,CAAA,OAAA,CAAA,MAAc,GAAG,MAAM;CACvB,SAAS,MAAM,CAAC,CAAC,EAAE;KACf,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;SACjC,MAAM,IAAI,KAAK,CAAC,CAAC,+BAA+B,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9D;CACA,SAAS,IAAI,CAAC,CAAC,EAAE;AACjB,KAAI,IAAI,OAAO,CAAC,KAAK,SAAS;SACtB,MAAM,IAAI,KAAK,CAAC,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,CAAC;AACrD;AACA;CACA,SAAS,OAAO,CAAC,CAAC,EAAE;KAChB,QAAQ,CAAC,YAAY,UAAU;AACnC,UAAS,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,YAAY,CAAC;AACnF;AACA,CAAA,SAAS,KAAK,CAAC,CAAC,EAAE,GAAG,OAAO,EAAE;AAC9B,KAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AACnB,SAAQ,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC;AAC9C,KAAI,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;AACzD,SAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,8BAA8B,EAAE,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9F;CACA,SAAS,IAAI,CAAC,CAAC,EAAE;KACb,IAAI,OAAO,CAAC,KAAK,UAAU,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,UAAU;AACjE,SAAQ,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC;AAC1E,KAAI,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;AACvB,KAAI,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;AACtB;AACA,CAAA,SAAS,MAAM,CAAC,QAAQ,EAAE,aAAa,GAAG,IAAI,EAAE;KAC5C,IAAI,QAAQ,CAAC,SAAS;AAC1B,SAAQ,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC;AAC3D,KAAI,IAAI,aAAa,IAAI,QAAQ,CAAC,QAAQ;AAC1C,SAAQ,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC;AAChE;AACA,CAAA,SAAS,MAAM,CAAC,GAAG,EAAE,QAAQ,EAAE;KAC3B,KAAK,CAAC,GAAG,CAAC;AACd,KAAI,MAAM,GAAG,GAAG,QAAQ,CAAC,SAAS;AAClC,KAAI,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;SAClB,MAAM,IAAI,KAAK,CAAC,CAAC,sDAAsD,EAAE,GAAG,CAAC,CAAC,CAAC;AACvF;AACA;AACA,CAAA,MAAM,MAAM,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE;AAC5D,CAAA,OAAA,CAAA,OAAe,GAAG,MAAM;AACxB;;;;;;;;;;;;;AChDA,CAAA,MAAM,CAAC,cAAc,CAACC,QAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAC7D,CAAcA,QAAA,CAAA,MAAA,GAAG,MAAM;AACvB,CAAAA,QAAA,CAAA,MAAc,GAAG,OAAO,UAAU,KAAK,QAAQ,IAAI,QAAQ,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,GAAG,SAAS;AACzG;;;;;;;;;;ACHA;EACA,MAAM,CAAC,cAAc,CAAA,OAAA,EAAU,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;EAC7D,OAAe,CAAA,IAAA,GAAA,OAAA,CAAA,QAAA,GAAmB,OAAuB,CAAA,YAAA,GAAA,OAAA,CAAA,QAAA,GAAmB,OAAe,CAAA,IAAA,GAAA,OAAA,CAAA,IAAA,GAAe,eAAe,OAAqB,CAAA,UAAA,GAAA,OAAA,CAAA,GAAA,GAAc,OAAa,CAAA,EAAA,GAAA,MAAM;AAC/K,EAAA,OAAA,CAAA,OAAA,GAAkB,OAAO;AACzB,EAAA,OAAA,CAAA,UAAA,GAAqB,UAAU;AAC/B,EAAA,OAAA,CAAA,UAAA,GAAqB,UAAU;AAC/B,EAAA,OAAA,CAAA,UAAA,GAAqB,UAAU;AAC/B,EAAA,OAAA,CAAA,SAAA,GAAoB,SAAS;AAC7B,EAAA,OAAA,CAAA,WAAA,GAAsB,WAAW;AACjC,EAAA,OAAA,CAAA,OAAA,GAAkB,OAAO;AACzB,EAAA,OAAA,CAAA,WAAA,GAAsB,WAAW;AACjC,EAAA,OAAA,CAAA,SAAA,GAAoB,SAAS;AAC7B,EAAA,OAAA,CAAA,eAAA,GAA0B,eAAe;AACzC,EAAA,OAAA,CAAA,uBAAA,GAAkC,uBAAuB;AACzD,EAAA,OAAA,CAAA,0BAAA,GAAqC,0BAA0B;AAC/D,EAAA,OAAA,CAAA,WAAA,GAAsB,WAAW;AACjC;AACA;AACA;AACA;AACA;AACA;EACA,MAAM,QAAQ,GAAGlB,eAA+B,EAAA;EAChD,MAAM,YAAY,iBAA0BG,cAAA,EAAA;AAC5C;AACA;EACA,SAAS,OAAO,CAAC,CAAC,EAAE;MAChB,QAAQ,CAAC,YAAY,UAAU;AACnC,WAAS,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,YAAY,CAAC;AACnF;AACA;AACA,EAAA,MAAM,EAAE,GAAG,CAAC,GAAG,KAAK,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC;AAC9E,EAAA,OAAA,CAAA,EAAA,GAAa,EAAE;EACf,MAAM,GAAG,GAAG,CAAC,GAAG,KAAK,IAAI,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;AAChG,EAAA,OAAA,CAAA,GAAA,GAAc,GAAG;AACjB;AACA,EAAA,MAAM,UAAU,GAAG,CAAC,GAAG,KAAK,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC;AACpF,EAAA,OAAA,CAAA,UAAA,GAAqB,UAAU;AAC/B;AACA,EAAA,MAAM,IAAI,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC;AACvE,EAAA,OAAA,CAAA,IAAA,GAAe,IAAI;AACnB;EACA,MAAM,IAAI,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,KAAK,CAAC,IAAI,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;AAC/E,EAAA,OAAA,CAAA,IAAA,GAAe,IAAI;AACnB,EAAA,OAAA,CAAA,IAAA,GAAe,IAAI,UAAU,CAAC,IAAI,WAAW,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI;AAC/E;EACA,MAAM,QAAQ,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,EAAE,IAAI,UAAU;AACrD,OAAK,CAAC,IAAI,IAAI,CAAC,IAAI,QAAQ,CAAC;AAC5B,OAAK,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC;AAC3B,OAAK,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC;AAC1B,EAAA,OAAA,CAAA,QAAA,GAAmB,QAAQ;AAC3B;EACA,OAAuB,CAAA,YAAA,GAAA,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;AAChF;EACA,SAAS,UAAU,CAAC,GAAG,EAAE;AACzB,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,UAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC9C;AACA;AACA;AACA,EAAA,MAAM,KAAK,mBAAmB,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACpG;AACA;AACA;EACA,SAAS,UAAU,CAAC,KAAK,EAAE;MACvB,IAAI,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC;AAClC;MACI,IAAI,GAAG,GAAG,EAAE;AAChB,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UACnC,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9B;AACA,MAAI,OAAO,GAAG;AACd;AACA;EACA,MAAM,MAAM,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE;EAClE,SAAS,aAAa,CAAC,IAAI,EAAE;MACzB,IAAI,IAAI,IAAI,MAAM,CAAC,EAAE,IAAI,IAAI,IAAI,MAAM,CAAC,EAAE;AAC9C,UAAQ,OAAO,IAAI,GAAG,MAAM,CAAC,EAAE;MAC3B,IAAI,IAAI,IAAI,MAAM,CAAC,EAAE,IAAI,IAAI,IAAI,MAAM,CAAC,EAAE;UACtC,OAAO,IAAI,IAAI,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;MAClC,IAAI,IAAI,IAAI,MAAM,CAAC,EAAE,IAAI,IAAI,IAAI,MAAM,CAAC,EAAE;UACtC,OAAO,IAAI,IAAI,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;MAClC;AACJ;AACA;AACA;AACA;EACA,SAAS,UAAU,CAAC,GAAG,EAAE;AACzB,MAAI,IAAI,OAAO,GAAG,KAAK,QAAQ;UACvB,MAAM,IAAI,KAAK,CAAC,2BAA2B,GAAG,OAAO,GAAG,CAAC;AACjE,MAAI,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM;AACzB,MAAI,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC;MACjB,IAAI,EAAE,GAAG,CAAC;AACd,UAAQ,MAAM,IAAI,KAAK,CAAC,yDAAyD,GAAG,EAAE,CAAC;AACvF,MAAI,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC;MAChC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE;UAC7C,MAAM,EAAE,GAAG,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;AACpD,UAAQ,MAAM,EAAE,GAAG,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;UAChD,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,SAAS,EAAE;AAClD,cAAY,MAAM,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAClC,MAAM,IAAI,KAAK,CAAC,8CAA8C,GAAG,IAAI,GAAG,aAAa,GAAG,EAAE,CAAC;AACvG;UACQ,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AAChC;AACA,MAAI,OAAO,KAAK;AAChB;AACA;AACA;AACA;EACA,MAAM,QAAQ,GAAG,YAAY,GAAG;AAChC,EAAA,OAAA,CAAA,QAAA,GAAmB,QAAQ;AAC3B;AACA,EAAA,eAAe,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE;AAC1C,MAAI,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE;AACvB,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;UAC5B,EAAE,CAAC,CAAC,CAAC;AACb;UACQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;AACpC,UAAQ,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,IAAI;cACxB;AACZ,UAAQ,MAAM,IAAI,OAAO,CAAC,QAAQ,GAAG;UAC7B,EAAE,IAAI,IAAI;AAClB;AACA;AACA;AACA;AACA;EACA,SAAS,WAAW,CAAC,GAAG,EAAE;AAC1B,MAAI,IAAI,OAAO,GAAG,KAAK,QAAQ;UACvB,MAAM,IAAI,KAAK,CAAC,CAAC,iCAAiC,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC;AACzE,MAAI,OAAO,IAAI,UAAU,CAAC,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;EACA,SAAS,OAAO,CAAC,IAAI,EAAE;AACvB,MAAI,IAAI,OAAO,IAAI,KAAK,QAAQ;AAChC,UAAQ,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;MAC5B,IAAI,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC;AACjC,MAAI,OAAO,IAAI;AACf;AACA;AACA;AACA;AACA,EAAA,SAAS,WAAW,CAAC,GAAG,MAAM,EAAE;MAC5B,IAAI,GAAG,GAAG,CAAC;AACf,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C,UAAQ,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;UACnB,IAAI,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC;AAClC,UAAQ,GAAG,IAAI,CAAC,CAAC,MAAM;AACvB;AACA,MAAI,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC;AACnC,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrD,UAAQ,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;AAC3B,UAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;AACvB,UAAQ,GAAG,IAAI,CAAC,CAAC,MAAM;AACvB;AACA,MAAI,OAAO,GAAG;AACd;AACA;AACA,EAAA,MAAM,IAAI,CAAC;AACX;AACA,MAAI,KAAK,GAAG;AACZ,UAAQ,OAAO,IAAI,CAAC,UAAU,EAAE;AAChC;AACA;AACA,EAAA,OAAA,CAAA,IAAA,GAAe,IAAI;AACnB,EAAA,MAAM,KAAK,GAAG,EAAE,CAAC,QAAQ;AACzB,EAAA,SAAS,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE;AACnC,MAAI,IAAI,IAAI,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,iBAAiB;AACpE,UAAQ,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC;MAC5D,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC;AAChD,MAAI,OAAO,MAAM;AACjB;EACA,SAAS,eAAe,CAAC,QAAQ,EAAE;AACnC,MAAI,MAAM,KAAK,GAAG,CAAC,GAAG,KAAK,QAAQ,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE;AACnE,MAAI,MAAM,GAAG,GAAG,QAAQ,EAAE;AAC1B,MAAI,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS;AACnC,MAAI,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ;AACjC,MAAI,KAAK,CAAC,MAAM,GAAG,MAAM,QAAQ,EAAE;AACnC,MAAI,OAAO,KAAK;AAChB;EACA,SAAS,uBAAuB,CAAC,QAAQ,EAAE;MACvC,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE;AAC7E,MAAI,MAAM,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC;AAC5B,MAAI,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS;AACnC,MAAI,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ;MAC7B,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC;AAC3C,MAAI,OAAO,KAAK;AAChB;EACA,SAAS,0BAA0B,CAAC,QAAQ,EAAE;MAC1C,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE;AAC7E,MAAI,MAAM,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC;AAC5B,MAAI,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS;AACnC,MAAI,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ;MAC7B,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC;AAC3C,MAAI,OAAO,KAAK;AAChB;AACA;AACA;AACA;AACA,EAAA,SAAS,WAAW,CAAC,WAAW,GAAG,EAAE,EAAE;AACvC,MAAI,IAAI,QAAQ,CAAC,MAAM,IAAI,OAAO,QAAQ,CAAC,MAAM,CAAC,eAAe,KAAK,UAAU,EAAE;AAClF,UAAQ,OAAO,QAAQ,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;AAC3E;AACA;AACA,MAAI,IAAI,QAAQ,CAAC,MAAM,IAAI,OAAO,QAAQ,CAAC,MAAM,CAAC,WAAW,KAAK,UAAU,EAAE;UACtE,OAAO,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC;AACvD;AACA,MAAI,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC;AAC7D;AACA;;;;;;;;;;ACrNA,CAAA,MAAM,CAAC,cAAc,CAAC,GAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAC7D,CAAA,GAAA,CAAA,MAAc,GAAG,GAAW,CAAA,GAAA,GAAG,GAAW,CAAA,GAAA,GAAG,MAAM;CACnD,MAAM,YAAY,iBAA0BH,cAAA,EAAA;CAC5C,MAAM,UAAU,iBAAwBG,cAAA,EAAA;AACxC;AACA;AACA;CACA,SAAS,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE;AACrD,KAAI,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,UAAU;SACvC,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC;AACzD,KAAI,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC;AAC3B,KAAI,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC;KACnC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC;KAC7C,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;AACvC,KAAI,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC;AAC1B,KAAI,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC;KACtB,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC;KACxC,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC;AAC5C;AACA;AACA;AACA;AACA,CAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AAC3C,CAAA,GAAA,CAAA,GAAW,GAAG,GAAG;AACjB;AACA;AACA;CACA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpD,CAAA,GAAA,CAAA,GAAW,GAAG,GAAG;AACjB;AACA;AACA;AACA;AACA,CAAA,MAAM,MAAM,SAAS,UAAU,CAAC,IAAI,CAAC;KACjC,WAAW,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE;AACtD,SAAQ,KAAK,EAAE;AACf,SAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ;AAChC,SAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC,SAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC,SAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,SAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK;AAC7B,SAAQ,IAAI,CAAC,MAAM,GAAG,CAAC;AACvB,SAAQ,IAAI,CAAC,GAAG,GAAG,CAAC;AACpB,SAAQ,IAAI,CAAC,SAAS,GAAG,KAAK;SACtB,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC;AAC9C,SAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC;AAC3D;KACI,MAAM,CAAC,IAAI,EAAE;SACT,IAAI,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC;SAC9B,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI;SACvC,IAAI,GAAG,IAAI,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC;AAC5C,SAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM;SACvB,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG;AACtC,aAAY,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC;AACjE;AACA,aAAY,IAAI,IAAI,KAAK,QAAQ,EAAE;iBACnB,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC;iBACjD,OAAO,QAAQ,IAAI,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,QAAQ;AAC7D,qBAAoB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;iBAC/B;AAChB;AACA,aAAY,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC;AAChE,aAAY,IAAI,CAAC,GAAG,IAAI,IAAI;aAChB,GAAG,IAAI,IAAI;AACvB,aAAY,IAAI,IAAI,CAAC,GAAG,KAAK,QAAQ,EAAE;AACvC,iBAAgB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACrC,iBAAgB,IAAI,CAAC,GAAG,GAAG,CAAC;AAC5B;AACA;AACA,SAAQ,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM;SAC1B,IAAI,CAAC,UAAU,EAAE;AACzB,SAAQ,OAAO,IAAI;AACnB;KACI,UAAU,CAAC,GAAG,EAAE;SACZ,IAAI,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC;SAC9B,IAAI,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC;AAC3C,SAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI;AAC5B;AACA;AACA;SACQ,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI;AACrD,SAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI;AAC1B;AACA,SAAQ,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,UAAU;AAClC,SAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACzC;AACA;SACQ,IAAI,IAAI,CAAC,SAAS,GAAG,QAAQ,GAAG,GAAG,EAAE;AAC7C,aAAY,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;aACrB,GAAG,GAAG,CAAC;AACnB;AACA;SACQ,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE;AAC3C,aAAY,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;AACzB;AACA;AACA;AACA,SAAQ,YAAY,CAAC,IAAI,EAAE,QAAQ,GAAG,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;AACvE,SAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;SACrB,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,UAAU,EAAE,GAAG,CAAC;AACrD,SAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS;AAClC;SACQ,IAAI,GAAG,GAAG,CAAC;AACnB,aAAY,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC;AAC1E,SAAQ,MAAM,MAAM,GAAG,GAAG,GAAG,CAAC;AAC9B,SAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE;AAChC,SAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM;AACjC,aAAY,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC;SACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE;AACvC,aAAY,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;AAClD;AACA,KAAI,MAAM,GAAG;AACb,SAAQ,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI;AAC1C,SAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;SACvB,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC;SACtC,IAAI,CAAC,OAAO,EAAE;AACtB,SAAQ,OAAO,GAAG;AAClB;KACI,UAAU,CAAC,EAAE,EAAE;SACX,EAAE,KAAK,EAAE,GAAG,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;SACnC,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC7B,SAAQ,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,IAAI;AAC3E,SAAQ,EAAE,CAAC,MAAM,GAAG,MAAM;AAC1B,SAAQ,EAAE,CAAC,GAAG,GAAG,GAAG;AACpB,SAAQ,EAAE,CAAC,QAAQ,GAAG,QAAQ;AAC9B,SAAQ,EAAE,CAAC,SAAS,GAAG,SAAS;SACxB,IAAI,MAAM,GAAG,QAAQ;AAC7B,aAAY,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;AACjC,SAAQ,OAAO,EAAE;AACjB;AACA;AACA,CAAA,GAAA,CAAA,MAAc,GAAG,MAAM;AACvB;;;;;;;;;ACpIA,CAAA,MAAM,CAAC,cAAc,CAACgB,QAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAC7D,CAAAA,QAAA,CAAA,MAAc,GAAGA,QAAc,CAAA,MAAA,GAAGA,QAAc,CAAA,MAAA,GAAG,MAAM;CACzD,MAAM,QAAQ,iBAAsBnB,UAAA,EAAA;CACpC,MAAM,UAAU,iBAAwBG,cAAA,EAAA;AACxC;AACA;AACA;AACA;AACA;AACA,CAAA,MAAM,QAAQ,mBAAmB,IAAI,WAAW,CAAC;AACjD,KAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,KAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,KAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,KAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,KAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,KAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,KAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAClG,KAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE;AACxF,EAAC,CAAC;AACF;AACA;AACA;AACA,CAAA,MAAM,SAAS,mBAAmB,IAAI,WAAW,CAAC;AAClD,KAAI,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE;AACxF,EAAC,CAAC;AACF;AACA;CACA,MAAM,QAAQ,mBAAmB,IAAI,WAAW,CAAC,EAAE,CAAC;AACpD,CAAA,MAAM,MAAM,SAAS,QAAQ,CAAC,MAAM,CAAC;AACrC,KAAI,WAAW,GAAG;SACV,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC;AAC/B;AACA;SACQ,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;SACzB,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;SACzB,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;SACzB,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;SACzB,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;SACzB,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;SACzB,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;SACzB,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;AACjC;AACA,KAAI,GAAG,GAAG;AACV,SAAQ,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI;AAC/C,SAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACvC;AACA;AACA,KAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAChC,SAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AACtB,SAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AACtB,SAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AACtB,SAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AACtB,SAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AACtB,SAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AACtB,SAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AACtB,SAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AACtB;AACA,KAAI,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE;AAC1B;AACA,SAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,IAAI,CAAC;AAChD,aAAY,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC;AACvD,SAAQ,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;aAC1B,MAAM,GAAG,GAAG,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;aAC5B,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AACtC,aAAY,MAAM,EAAE,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;AACjG,aAAY,MAAM,EAAE,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC;aACpF,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;AAC5E;AACA;AACA,SAAQ,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI;AAC7C,SAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACrC,aAAY,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AACjH,aAAY,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;AAChG,aAAY,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;aACrG,MAAM,EAAE,GAAG,CAAC,MAAM,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;aACpD,CAAC,GAAG,CAAC;aACL,CAAC,GAAG,CAAC;aACL,CAAC,GAAG,CAAC;AACjB,aAAY,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;aAChB,CAAC,GAAG,CAAC;aACL,CAAC,GAAG,CAAC;aACL,CAAC,GAAG,CAAC;AACjB,aAAY,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;AAC7B;AACA;SACQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC;SACpB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC;SACpB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC;SACpB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC;SACpB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC;SACpB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC;SACpB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC;SACpB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC;AAC5B,SAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACxC;AACA,KAAI,UAAU,GAAG;AACjB,SAAQ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACxB;AACA,KAAI,OAAO,GAAG;AACd,SAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACxC,SAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3B;AACA;AACA,CAAAgB,QAAA,CAAA,MAAc,GAAG,MAAM;AACvB;CACA,MAAM,MAAM,SAAS,MAAM,CAAC;AAC5B,KAAI,WAAW,GAAG;AAClB,SAAQ,KAAK,EAAE;AACf,SAAQ,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;AAC/B,SAAQ,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;AAC/B,SAAQ,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;AAC/B,SAAQ,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;AAC/B,SAAQ,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;AAC/B,SAAQ,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;AAC/B,SAAQ,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;AAC/B,SAAQ,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;AAC/B,SAAQ,IAAI,CAAC,SAAS,GAAG,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAAA,QAAA,CAAA,MAAc,GAAG,IAAI,UAAU,CAAC,eAAe,EAAE,MAAM,IAAI,MAAM,EAAE,CAAC;AACpE;AACA;AACA;AACA,CAAAA,QAAA,CAAA,MAAc,GAAG,IAAI,UAAU,CAAC,eAAe,EAAE,MAAM,IAAI,MAAM,EAAE,CAAC;AACpE;;;;;;;;;;AChIA;AACA;AACA;AACA;AACA;CACA,SAAS,IAAI,EAAE,QAAQ,EAAE;AACzB,GAAE,IAAI,QAAQ,CAAC,MAAM,IAAI,GAAG,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,mBAAmB,CAAC;AACxE,GAAE,IAAI,QAAQ,GAAG,IAAI,UAAU,CAAC,GAAG;AACnC,GAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C,KAAI,QAAQ,CAAC,CAAC,CAAC,GAAG;AAClB;AACA,GAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C,KAAI,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC7B,KAAI,IAAI,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC;AAC3B,KAAI,IAAI,QAAQ,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,eAAe,CAAC;AACxE,KAAI,QAAQ,CAAC,EAAE,CAAC,GAAG;AACnB;AACA,GAAE,IAAI,IAAI,GAAG,QAAQ,CAAC;AACtB,GAAE,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AAChC,GAAE,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC;AAC7C,GAAE,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAC;AAC9C,GAAE,SAAS,MAAM,EAAE,MAAM,EAAE;AAC3B,KAAI,IAAI,MAAM,YAAY,UAAU,EAAE,CACjC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AAC3C,OAAM,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,UAAU;MAC5E,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACtC,OAAM,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM;AACrC;AACA,KAAI,IAAI,EAAE,MAAM,YAAY,UAAU,CAAC,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,qBAAqB,CAAC;KACjF,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,EAAE,OAAO,EAAE;AACxC;KACI,IAAI,MAAM,GAAG;KACb,IAAI,MAAM,GAAG;KACb,IAAI,MAAM,GAAG;AACjB,KAAI,IAAI,IAAI,GAAG,MAAM,CAAC;KAClB,OAAO,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AACpD,OAAM,MAAM;AACZ,OAAM,MAAM;AACZ;AACA;AACA,KAAI,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,MAAM,IAAI,OAAO,GAAG,CAAC,MAAM;AACnD,KAAI,IAAI,GAAG,GAAG,IAAI,UAAU,CAAC,IAAI;AACjC;AACA,KAAI,OAAO,MAAM,KAAK,IAAI,EAAE;AAC5B,OAAM,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM;AAC/B;OACM,IAAI,CAAC,GAAG;AACd,OAAM,KAAK,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,MAAM,GAAG,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;SAChF,KAAK,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM;SAC9B,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,MAAM;AACtC,SAAQ,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,MAAM;AACnC;OACM,IAAI,KAAK,KAAK,CAAC,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC;AAC1D,OAAM,MAAM,GAAG;AACf,OAAM,MAAM;AACZ;AACA;AACA,KAAI,IAAI,GAAG,GAAG,IAAI,GAAG;KACjB,OAAO,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AAC3C,OAAM,GAAG;AACT;AACA;AACA,KAAI,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;AAClC,KAAI,OAAO,GAAG,GAAG,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC;AAChE,KAAI,OAAO;AACX;AACA,GAAE,SAAS,YAAY,EAAE,MAAM,EAAE;AACjC,KAAI,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC;KACxE,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,EAAE,OAAO,IAAI,UAAU,EAAE;KAClD,IAAI,GAAG,GAAG;AACd;KACI,IAAI,MAAM,GAAG;KACb,IAAI,MAAM,GAAG;AACjB,KAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,MAAM,EAAE;AACnC,OAAM,MAAM;AACZ,OAAM,GAAG;AACT;AACA;AACA,KAAI,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,IAAI,MAAM,IAAI,CAAC,MAAM,EAAC;AAC3D,KAAI,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI;AAClC;AACA,KAAI,OAAO,MAAM,CAAC,GAAG,CAAC,EAAE;AACxB;OACM,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC;AACjD;AACA,OAAM,IAAI,KAAK,KAAK,GAAG,EAAE,EAAE,MAAM;OAC3B,IAAI,CAAC,GAAG;AACd,OAAM,KAAK,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,MAAM,GAAG,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;SAChF,KAAK,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM;SAChC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,MAAM;AACtC,SAAQ,KAAK,GAAG,CAAC,KAAK,GAAG,GAAG,MAAM;AAClC;OACM,IAAI,KAAK,KAAK,CAAC,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC;AAC1D,OAAM,MAAM,GAAG;AACf,OAAM,GAAG;AACT;AACA;AACA,KAAI,IAAI,GAAG,GAAG,IAAI,GAAG;KACjB,OAAO,GAAG,KAAK,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AAC5C,OAAM,GAAG;AACT;KACI,IAAI,GAAG,GAAG,IAAI,UAAU,CAAC,MAAM,IAAI,IAAI,GAAG,GAAG,CAAC;KAC9C,IAAI,CAAC,GAAG;AACZ,KAAI,OAAO,GAAG,KAAK,IAAI,EAAE;OACnB,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE;AAC3B;AACA,KAAI,OAAO;AACX;AACA,GAAE,SAAS,MAAM,EAAE,MAAM,EAAE;AAC3B,KAAI,IAAI,MAAM,GAAG,YAAY,CAAC,MAAM;AACpC,KAAI,IAAI,MAAM,EAAE,EAAE,OAAO,MAAM;KAC3B,MAAM,IAAI,KAAK,CAAC,UAAU,GAAG,IAAI,GAAG,YAAY;AACpD;AACA,GAAE,OAAO;KACL,MAAM,EAAE,MAAM;KACd,YAAY,EAAE,YAAY;AAC9B,KAAI,MAAM,EAAE;AACZ;AACA;AACA,CAAA,GAAc,GAAG;;;;;;;;;;ACxHjB,CAAA,MAAM,KAAK,GAAGnB,UAAA;AACd,CAAA,MAAM,QAAQ,GAAG;;AAEjB,CAAc,IAAA,GAAG,KAAK,CAAC,QAAQ;;;;;;;;;;;ACD/B,CAAA,IAAI,MAAM,GAAGA,WAAA;;AAEb,CAAc,IAAA,GAAG,UAAU,UAAU,EAAE;AACvC;AACA,GAAE,SAAS,MAAM,EAAE,OAAO,EAAE;AAC5B,KAAI,IAAI,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO;AAC3C,KAAI,IAAI,QAAQ,GAAG,UAAU,CAAC,SAAS;AACvC,KAAI,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,GAAG;AACpC,KAAI,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,MAAM;AACpC,KAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;AACzB,KAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM;AACtD,KAAI,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM;AACrC;;AAEA,GAAE,SAAS,SAAS,EAAE,MAAM,EAAE;KAC1B,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE;KAChC,IAAI,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE;AAClC,KAAI,IAAI,WAAW,GAAG,UAAU,CAAC,OAAO;;KAEpC,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;SAC5B,QAAQ,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;SAC5B,QAAQ,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;SAC5B,QAAQ,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE;;AAEtC,KAAI,OAAO;AACX;;AAEA;AACA,GAAE,SAAS,YAAY,EAAE,MAAM,EAAE;AACjC,KAAI,IAAI,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM;KACvC,IAAI,CAAC,MAAM,EAAE;;KAEb,OAAO,SAAS,CAAC,MAAM;AAC3B;;AAEA,GAAE,SAAS,MAAM,EAAE,MAAM,EAAE;AAC3B,KAAI,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;AACrC,KAAI,IAAI,OAAO,GAAG,SAAS,CAAC,MAAkB;KAC1C,IAAI,CAAC,OAAO,EAAE,MAAM,IAAI,KAAK,CAAC,kBAAkB;AACpD,KAAI,OAAO;AACX;;AAEA,GAAE,OAAO;KACL,MAAM,EAAE,MAAM;KACd,MAAM,EAAE,MAAM;AAClB,KAAI,YAAY,EAAE;AAClB;AACA;;;;;;;;;;;CC/CA,IAAI,EAAE,MAAM,EAAE,iBAAGA,eAAA;AACjB,CAAA,IAAI,aAAa,GAAGG,WAAA;;AAEpB;CACA,SAAS,QAAQ,EAAE,MAAM,EAAE;AAC3B,GAAE,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;AAC9B;;AAEA,CAAc,SAAA,GAAG,aAAa,CAAC,QAAQ;;;;;;;;;;;ACavC,CAAA,IAAI,QAAQ,GAAGH,iBAAuB,EAAA,CAAC,QAAQ;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAc,WAAA,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE;KACnD,IAAI,MAAM,GAAG;WACP,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,EAAE;AAC9C,WAAU,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;KAC1C,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AAC5B,KAAI,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC;KACnC,IAAI,KAAK,GAAG,CAAC;KACb,IAAI,WAAW,GAAG,CAAC;KACnB,IAAI,IAAI,GAAG,CAAC;AAChB,KAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC1C,SAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;AAC3B,SAAQ,QAAQ;aACJ,CAAC,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,CAAC;AAC7C,aAAY,iBAAiB,GAAG,KAAK,GAAG,GAAG;UAClC;AACT,SAAQ,WAAW,GAAG,CAAC,WAAW,IAAI,IAAI,IAAI,KAAK;SAC3C,IAAI,IAAI,IAAI;AACpB,SAAQ,OAAO,IAAI,IAAI,EAAE,EAAE;aACf,IAAI,IAAI,EAAE;aACV,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI;AACxD,aAAY,EAAE,KAAK;AACnB;AACA;KACI,IAAI,CAAC,UAAU,EAAE;AACrB,SAAQ,IAAI,IAAI,GAAG,CAAC,EAAE;AACtB,aAAY,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI;AAC/D,aAAY,EAAE,KAAK;AACnB;AACA,MAAK,MAAM;AACX,SAAQ,QAAQ;AAChB,aAAY,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,WAAW,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC;AACtE,aAAY,+BAA+B;AAC3C,iBAAgB,EAAE;AAClB,iBAAgB,kDAAkD;UACzD;AACT;AACA,KAAI,OAAO,MAAM;EAChB;;;;;;;;;;;CChED,IAAI,MAAM,GAAGA,aAAmB,EAAA;CAChC,IAAI,MAAM,GAAGG,iBAAsB,EAAA;CACnC,IAAI,SAAS,GAAGE,gBAAoB,EAAA;CACpC,IAAI,WAAW,GAAGC,kBAAwB,EAAA;CAC1C,IAAI,UAAU,GAAGC,iBAAuB,EAAA;AACxC,CAAA,IAAI,QAAQ,GAAG,UAAU,CAAC,QAAQ;;AAElC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAA,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE;AACpC,KAAI,QAAQ;SACJ,OAAO,MAAM,KAAK,QAAQ,IAAI,aAAa,CAAC,MAAM,CAAC;AAC3D,SAAQ,kBAAkB,GAAG,MAAM,GAAG,GAAG;MACpC;AACL,KAAI,QAAQ,CAAC,OAAO,IAAI,KAAK,QAAQ,EAAE,gBAAgB,GAAG,IAAI,GAAG,GAAG,CAAC;AACrE,KAAI,QAAQ;AACZ,SAAQ,IAAI,YAAY,UAAU,IAAI,OAAO,IAAI,KAAK,QAAQ;AAC9D,SAAQ,gBAAgB,GAAG,IAAI,GAAG,iCAAiC;MAC9D;AACL,KAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAClC,SAAQ,IAAI,GAAG,kBAAkB,CAAC,IAAI,CAAC;AACvC;AACA,KAAI,IAAI,UAAU,GAAG,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;AAC1E,KAAI,IAAI,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC;AAC7E,KAAI,IAAI,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;KAC3E,IAAI,YAAY,GAAG,MAAM;AAC7B,SAAQ,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC;AACvC,SAAQ,IAAI,UAAU,CAAC,CAAC,CAAC;MACpB;KACD,IAAI,OAAO,GAAG,MAAM;AACxB,SAAQ,WAAW;AACnB,SAAQ,oBAAoB,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;MAC9C;KACD,OAAO,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAA,SAAS,MAAM,CAAC,OAAO,EAAE,YAAY,GAAG,KAAK,EAAE;AAC/C,KAAI,QAAQ;SACJ,OAAO,OAAO,KAAK,QAAQ,IAAI,aAAa,CAAC,OAAO,CAAC;AAC7D,SAAQ,mBAAmB,GAAG,OAAO,GAAG,GAAG;MACtC;KACD,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;AACjD;KACI,IAAI,MAAM,EAAE,OAAO;AACvB,KAAI,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AAC7B;SACQ,IAAI,gBAAgB,GAAG,KAAK;AACpC,SAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAC3D,aAAY,MAAM,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC;aACtC,MAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9D,aAAY,gBAAgB,GAAG,aAAa,CAAC,YAAY,EAAE,iBAAiB,CAAC;aACjE,IAAI,gBAAgB,EAAE;AAClC;iBACgB,MAAM,GAAG,YAAY;iBACrB,OAAO,GAAG,iBAAiB;AAC3C;iBACgB;AAChB;AACA;AACA,SAAQ,QAAQ;AAChB,aAAY,gBAAgB;aAChB,CAAC,mBAAmB,EAAE,OAAO,CAAC,oDAAoD,EAAE,cAAc,CAAC,IAAI;AACnH,iBAAgB,IAAI;cACP,CAAC,CAAC,CAAC;UACP;AACT,MAAK,MAAM;AACX,SAAQ,QAAQ,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,mBAAmB,GAAG,OAAO,GAAG,GAAG,CAAC;AAC1E,SAAQ,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;SAClB,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1C,SAAQ,QAAQ;AAChB,aAAY,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC;AAC1C,aAAY,oBAAoB,GAAG,OAAO,GAAG,GAAG;UACvC;AACT;;AAEA,KAAI,IAAI,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC7D,KAAI,IAAI,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC;KAChC,IAAI,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;AACtC,KAAI,QAAQ;SACJ,WAAW,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC;AACpD,SAAQ,qBAAqB,GAAG,OAAO,GAAG,GAAG;MACxC;AACL,KAAI,IAAI,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC;AACnC,KAAI,OAAO;SACH,MAAM,EAAE,MAAM;SACd,IAAI,EAAE,YAAY,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI;SAC9C,IAAI,EAAE,YAAY,GAAG,kBAAkB,CAAC,IAAI,CAAC,GAAG,IAAI;MACvD;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAA,IAAI,eAAe,GAAG,UAAU,CAAC,eAAe;;AAEhD;AACA;AACA;AACA;AACA;AACA,CAAA,IAAI,cAAc,GAAG;AACrB,KAAI,OAAO;AACX,KAAI,aAAa;AACjB,KAAI,cAAc;AAClB,KAAI,QAAQ;AACZ,KAAI,QAAQ;AACZ,KAAI,WAAW;AACf,KAAI,SAAS;AACb,KAAI,QAAQ;EACX;;AAED;AACA;AACA;AACA;AACA;CACA,IAAI,sBAAsB,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,QAAQ,CAAC;;AAE/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,aAAa,CAAC,MAAM,EAAE;KAC3B;SACI,aAAa,CAAC,MAAM,CAAC;SACrB,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,kBAAkB,CAAC,MAAM,EAAE;KAChC,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC;AAC9C,KAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC5C,SAAQ,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE;AAChD;AACA,KAAI,OAAO,MAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,oBAAoB,CAAC,QAAQ,EAAE;AACxC,KAAI,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC;AAClC,KAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AAChC,SAAQ,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE;AACrD,SAAQ,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;AACzC;AACA,KAAI,OAAO,MAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,WAAW,CAAC,IAAI,EAAE;AAC3B,KAAI,QAAQ,IAAI;AAChB,SAAQ,KAAK,OAAO;AACpB,SAAQ,KAAK,OAAO;AACpB,aAAY,OAAO,CAAC;AACpB,SAAQ,KAAK,MAAM;AACnB,SAAQ,KAAK,MAAM;AACnB,aAAY,OAAO,CAAC;SACZ;aACI,MAAM,IAAI,eAAe,CAAC,gBAAgB,GAAG,IAAI,GAAG,GAAG,CAAC;AACpE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,OAAO,CAAC,WAAW,EAAE;KAC1B,QAAQ,WAAW,GAAG,GAAG;AAC7B,SAAQ,KAAK,CAAC;AACd,aAAY,OAAO,OAAO;AAC1B,SAAQ,KAAK,CAAC;AACd,aAAY,OAAO,MAAM;SACjB;aACI,MAAM,IAAI,eAAe;AACrC,iBAAgB,wCAAwC,GAAG,WAAW,GAAG,GAAG;cAC/D;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,eAAe,CAAC,IAAI,EAAE;AAC/B,KAAI,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC;AAC3B,SAAQ,KAAK,GAAG;AAChB,aAAY,OAAO,CAAC;AACpB,SAAQ,KAAK,GAAG;AAChB,aAAY,OAAO,CAAC;AACpB,SAAQ,KAAK,GAAG;AAChB,aAAY,OAAO,CAAC;AACpB,SAAQ,KAAK,GAAG;AAChB,aAAY,OAAO,CAAC;AACpB,SAAQ,KAAK,GAAG;AAChB,aAAY,OAAO,CAAC;AACpB,SAAQ,KAAK,GAAG;AAChB,aAAY,OAAO,CAAC;AACpB,SAAQ,KAAK,GAAG;AAChB,aAAY,OAAO,CAAC;AACpB,SAAQ,KAAK,GAAG;AAChB,aAAY,OAAO,CAAC;SACZ;aACI,MAAM,IAAI,eAAe;AACrC,iBAAgB,qBAAqB,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG;cAC5C;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,WAAW,CAAC,WAAW,EAAE;KAC9B,QAAQ,WAAW,GAAG,CAAC;AAC3B,SAAQ,KAAK,CAAC;AACd,aAAY,OAAO,GAAG;AACtB,SAAQ,KAAK,CAAC;AACd,aAAY,OAAO,GAAG;AACtB,SAAQ,KAAK,CAAC;AACd,aAAY,OAAO,GAAG;AACtB,SAAQ,KAAK,CAAC;AACd,aAAY,OAAO,GAAG;AACtB,SAAQ,KAAK,CAAC;AACd,aAAY,OAAO,GAAG;AACtB,SAAQ,KAAK,CAAC;AACd,aAAY,OAAO,GAAG;AACtB,SAAQ,KAAK,CAAC;AACd,aAAY,OAAO,GAAG;AACtB,SAAQ,KAAK,CAAC;AACd,aAAY,OAAO,GAAG;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,YAAY,CAAC,IAAI,EAAE;KACxB,OAAO,WAAW,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,cAAc,CAAC,IAAI,EAAE;KAC1B,OAAO,WAAW,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAA,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,KAAI,IAAI,EAAE,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;AAChD,KAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;KACT,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;AACvB,KAAI,OAAO,EAAE;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,OAAO,CAAC,IAAI,EAAE;KACnB,IAAI,SAAS,GAAG;SACZ,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY;MACvE;AACL,KAAI,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC;AAC5B,KAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC1C,SAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;SACnB,IAAI,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;AAC7C,SAAQ,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;AACrE,SAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,aAAY,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;iBACxC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACrD;AACA;AACA;AACA,KAAI,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAA,SAAS,aAAa,CAAC,MAAM,EAAE,OAAO,EAAE;AACxC,KAAI,IAAI,UAAU,GAAG,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;KACtE,IAAI,YAAY,GAAG,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC;KAC9C,OAAO,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,aAAa,CAAC,MAAM,EAAE;AAC/B,KAAI,OAAO,MAAM,KAAK,MAAM,CAAC,WAAW,EAAE,IAAI,MAAM,KAAK,MAAM,CAAC,WAAW,EAAE;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,kBAAkB,CAAC,MAAM,EAAE;KAChC,MAAM,MAAM,GAAGH,QAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;KACzC,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC;AACtD,KAAI,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC;AAClD,KAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;SAC3C,UAAU,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;AACjC;AACA,KAAI,OAAO,UAAU;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,kBAAkB,CAAC,UAAU,EAAE;KACpC,IAAI,MAAM,GAAG,EAAE;AACnB,KAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;SAC3C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAClC;KACI,MAAM,SAAS,GAAGA,QAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;KAC5C,MAAM,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC5C,KAAI,OAAO,MAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,8BAA8B,CAAC,YAAY,EAAE;KAClD,MAAM,WAAW,GAAG,QAAQ;KAC5B,MAAM,WAAW,GAAG,MAAM;;KAE1B,MAAM,UAAU,GAAG,MAAM;KACzB,MAAM,UAAU,GAAG,IAAI;;KAEvB,IAAI,IAAI,EAAE,IAAI;;AAElB;KACI;SACI,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,KAAK,WAAW;SACzD,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK;OAClD;AACN;SACQ,IAAI,GAAG,OAAO;;AAEtB;AACA,SAAQ,IAAI,GAAG,YAAY,CAAC,SAAS;aACzB,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC,MAAM;AAClE,aAAY,YAAY,CAAC,WAAW,CAAC,WAAW,CAAC;UACxC;AACT;AACA,MAAK,MAAM;SACH,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK,UAAU;SACvD,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK;OACjD;AACN;SACQ,IAAI,GAAG,MAAM;AACrB;AACA,SAAQ,IAAI,GAAG,YAAY,CAAC,SAAS;aACzB,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,MAAM;AAChE,aAAY,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC;UACvC;AACT,MAAK,MAAM;AACX;AACA,SAAQ,MAAM,IAAI,eAAe,CAAC,4BAA4B,GAAG,YAAY,CAAC;AAC9E;;AAEA;AACA;AACA,KAAI,MAAM,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;AAExD,KAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;SACxC,MAAM,IAAI,eAAe;aACrB,qCAAqC,GAAG,YAAY;UACvD;AACT;AACA,KAAI,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAA,SAAS,kBAAkB,CAAC,YAAY,EAAE,MAAM,GAAG,OAAO,EAAE;AAC5D;KACI,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,8BAA8B,CAAC,YAAY,CAAC;;AAEvE;KACI,OAAO,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,QAAQ,CAAC,WAAW,EAAE;AAC/B,KAAI,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,WAAW,CAAC;KAClD,MAAM,SAAS,GAAG,sBAAsB,CAAC,QAAQ,CAAC,MAAM,CAAC;AAC7D;AACA,KAAI,IAAI,WAAW;AACnB,KAAI,QAAQ,IAAI;AAChB,SAAQ,KAAK,OAAO;AACpB,aAAY,WAAW,GAAG,SAAS,GAAG,CAAC,GAAG,GAAG;aACjC;AACZ,SAAQ,KAAK,MAAM;AACnB,aAAY,WAAW,GAAG,SAAS,GAAG,CAAC,GAAG,GAAG;aACjC;SACJ;AACR,aAAY,MAAM,IAAI,eAAe,CAAC,4BAA4B,GAAG,IAAI,CAAC;AAC1E;AACA,KAAI,IAAI,MAAM,GAAGA,QAAM,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9C,KAAI,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW;AAC3B,KAAI,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AACvB,KAAI,OAAO,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAA,SAAS,kBAAkB,CAAC,WAAW,EAAE,cAAc,GAAG,KAAK,EAAE;AACjE,KAAI,IAAI;SACA,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC,WAAW,CAAC;SACtC,IAAI,cAAc,EAAE;aAChB,OAAO,MAAM,KAAK,cAAc;AAC5C;AACA,SAAQ,OAAO,IAAI;MACd,CAAC,OAAO,GAAG,EAAE;AAClB,SAAQ,OAAO,KAAK;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CACA,SAAS,0BAA0B,CAAC,OAAO,EAAE;AAC7C,KAAI,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC;AAChD,KAAI,IAAI,wBAAwB;AAChC,KAAI,IAAI,IAAI,KAAK,OAAO,EAAE;SAClB,wBAAwB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;AACtD,MAAK,MAAM;SACH,wBAAwB,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;AAClD;AACA,KAAI,OAAO,wBAAwB;AACnC;;AAEA,CAAA,QAAc,GAAG;KACb,MAAM,EAAE,MAAM;KACd,MAAM,EAAE,MAAM;KACd,kBAAkB,EAAE,kBAAkB;KACtC,kBAAkB,EAAE,kBAAkB;KACtC,8BAA8B,EAAE,8BAA8B;KAC9D,QAAQ,EAAE,QAAQ;KAClB,kBAAkB,EAAE,kBAAkB;KACtC,0BAA0B,EAAE,0BAA0B;KACtD,eAAe,EAAE,eAAe;EACnC;;;;;;;;;;;;;;;;;ACplBD;AACA;AACA;AAEA,CAAA,SAAS5D,MAAMA,CAAC4E,GAAG,EAAEC,GAAG,EAAE;GACxB,IAAI,CAACD,GAAG,EAAE;KACR,MAAME,GAAG,GAAG,IAAI9C,KAAK,CAAC6C,GAAG,IAAI,kBAAkB,CAAC;KAEhD,IAAI7C,KAAK,CAAC+C,iBAAiB,EACzB/C,KAAK,CAAC+C,iBAAiB,CAACD,GAAG,EAAE9E,MAAM,CAAC;AAEtC,KAAA,MAAM8E,GAAG;AACX;AACF;;AAEA;AACA;AACA;;AAEAvB,CAAAA,QAAc,GAAGvD,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;CCVvB,MAAMA,MAAM,GAAGC,aAA6B,EAAA;;AAE5C;AACA;AACA;;AAEA,CAAA,MAAM+E,IAAI,CAAC;AACT;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE3C,GAAAA,WAAWA,CAAC4C,IAAI,EAAEC,IAAI,EAAEC,CAAC,GAAG,EAAE,EAAEC,CAAC,GAAG,EAAE,EAAE;AACtCpF,KAAAA,MAAM,CAAC,OAAOiF,IAAI,KAAK,UAAU,CAAC;AAClCjF,KAAAA,MAAM,CAAEkF,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;KAC7BlF,MAAM,CAACqF,KAAK,CAACC,OAAO,CAACH,CAAC,CAAC,CAAC;KACxBnF,MAAM,CAACqF,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,CAAC;KAExB,IAAI,CAACG,IAAI,GAAGN,IAAI;KAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;KAChB,IAAI,CAACC,CAAC,GAAGA,CAAC;KACV,IAAI,CAACC,CAAC,GAAGA,CAAC;AAEV,KAAA,IAAI,CAACI,KAAK,GAAG,IAAIP,IAAI,EAAE;AACvB,KAAA,IAAI,CAACQ,KAAK,GAAG,IAAIR,IAAI,EAAE;AACzB;;AAEA;AACF;AACA;AACA;;GAEES,IAAIA,CAACC,GAAG,EAAE;KACR3F,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACD,GAAG,CAAC,CAAC;;AAE5B;KACA,IAAIA,GAAG,CAAC7E,MAAM,GAAG,IAAI,CAACoE,IAAI,EAAE;AAC1B,OAAA,MAAMD,IAAI,GAAG,IAAI,CAACM,IAAI;AACtB,OAAA,MAAMM,CAAC,GAAG,IAAIZ,IAAI,EAAE;OAEpBY,CAAC,CAACH,IAAI,CAAC,GAAG,IAAI,CAACP,CAAC,CAAC;AACjBU,OAAAA,CAAC,CAACC,MAAM,CAACH,GAAG,CAAC;OAEbA,GAAG,GAAGE,CAAC,CAACE,KAAK,CAAC,GAAG,IAAI,CAACX,CAAC,CAAC;OAExBpF,MAAM,CAAC2F,GAAG,CAAC7E,MAAM,IAAI,IAAI,CAACoE,IAAI,CAAC;AACjC;;AAEA;KACA,MAAMc,GAAG,GAAGpC,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACf,IAAI,CAAC;KAEnC,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,GAAG,CAAC7E,MAAM,EAAEoF,CAAC,EAAE,EACjCF,GAAG,CAACE,CAAC,CAAC,GAAGP,GAAG,CAACO,CAAC,CAAC,GAAG,IAAI;KAExB,KAAK,IAAIA,CAAC,GAAGP,GAAG,CAAC7E,MAAM,EAAEoF,CAAC,GAAGF,GAAG,CAAClF,MAAM,EAAEoF,CAAC,EAAE,EAC1CF,GAAG,CAACE,CAAC,CAAC,GAAG,IAAI;KAEf,IAAI,CAACV,KAAK,CAACE,IAAI,CAAC,GAAG,IAAI,CAACP,CAAC,CAAC;AAC1B,KAAA,IAAI,CAACK,KAAK,CAACM,MAAM,CAACE,GAAG,CAAC;KAEtB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,GAAG,CAAC7E,MAAM,EAAEoF,CAAC,EAAE,EACjCF,GAAG,CAACE,CAAC,CAAC,GAAGP,GAAG,CAACO,CAAC,CAAC,GAAG,IAAI;KAExB,KAAK,IAAIA,CAAC,GAAGP,GAAG,CAAC7E,MAAM,EAAEoF,CAAC,GAAGF,GAAG,CAAClF,MAAM,EAAEoF,CAAC,EAAE,EAC1CF,GAAG,CAACE,CAAC,CAAC,GAAG,IAAI;KAEf,IAAI,CAACT,KAAK,CAACC,IAAI,CAAC,GAAG,IAAI,CAACP,CAAC,CAAC;AAC1B,KAAA,IAAI,CAACM,KAAK,CAACK,MAAM,CAACE,GAAG,CAAC;AAEtB,KAAA,OAAO,IAAI;AACb;;AAEA;AACF;AACA;AACA;;GAEEF,MAAMA,CAACK,IAAI,EAAE;AACX,KAAA,IAAI,CAACX,KAAK,CAACM,MAAM,CAACK,IAAI,CAAC;AACvB,KAAA,OAAO,IAAI;AACb;;AAEA;AACF;AACA;AACA;;AAEEJ,GAAAA,KAAKA,GAAG;AACN,KAAA,IAAI,CAACN,KAAK,CAACK,MAAM,CAAC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,IAAI,CAACX,CAAC,CAAC,CAAC;KAC9C,OAAO,IAAI,CAACK,KAAK,CAACM,KAAK,CAAC,GAAG,IAAI,CAACX,CAAC,CAAC;AACpC;AACF;;AAEA;AACA;AACA;;AAEA7B,CAAAA,IAAc,GAAGyB,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;CCpGrB,MAAMhF,MAAM,GAAGC,aAA4B,EAAA;CAC3C,MAAM+E,IAAI,GAAG/E,WAA0B,EAAA;;AAEvC;AACA;AACA;;CAEA,MAAMmG,SAAS,GAAG,EAAE;CACpB,MAAMC,IAAI,GAAGzC,MAAM,CAACqC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC;CAClC,MAAMK,OAAO,GAAG1C,MAAM,CAACqC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AAEtCK,CAAAA,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI;AAEjB,CAAA,MAAMC,CAAC,GAAG,IAAIC,WAAW,CAAC,CACxpE,GAAAA,WAAWA,GAAG;KACZ,IAAI,CAACqE,KAAK,GAAG,IAAIF,WAAW,CAAC,CAAC,CAAC;KAC/B,IAAI,CAAC3B,GAAG,GAAG,IAAI2B,WAAW,CAAC,EAAE,CAAC;KAC9B,IAAI,CAACG,KAAK,GAAG/C,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;KAC7B,IAAI,CAACf,IAAI,GAAGkB,SAAS;AACvB;AAEAV,GAAAA,IAAIA,GAAG;AACL,KAAA,IAAI,CAACgB,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;KAC1B,IAAI,CAACxB,IAAI,GAAG,CAAC;AACb,KAAA,OAAO,IAAI;AACb;GAEAY,MAAMA,CAACK,IAAI,EAAE;KACXnG,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACO,IAAI,CAAC,CAAC;KAC7B,IAAI,CAACS,OAAO,CAACT,IAAI,EAAEA,IAAI,CAACrF,MAAM,CAAC;AAC/B,KAAA,OAAO,IAAI;AACb;AAEAiF,GAAAA,KAAKA,GAAG;KACN,OAAO,IAAI,CAACc,MAAM,CAACjD,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC,CAAC;AACtC;AAEAW,GAAAA,OAAOA,CAACT,IAAI,EAAEW,GAAG,EAAE;KACjB9G,MAAM,CAAC,IAAI,CAACkF,IAAI,KAAKkB,SAAS,EAAE,6BAA6B,CAAC;AAE9D,KAAA,IAAIW,GAAG,GAAG,IAAI,CAAC7B,IAAI,GAAG,EAAE;KACxB,IAAI8B,GAAG,GAAG,CAAC;KAEX,IAAI,CAAC9B,IAAI,IAAI4B,GAAG;KAEhB,IAAIC,GAAG,GAAG,CAAC,EAAE;AACX,OAAA,IAAIE,IAAI,GAAG,EAAE,GAAGF,GAAG;AAEnB,OAAA,IAAIE,IAAI,GAAGH,GAAG,EACZG,IAAI,GAAGH,GAAG;AAEZX,OAAAA,IAAI,CAACe,IAAI,CAAC,IAAI,CAACP,KAAK,EAAEI,GAAG,EAAEC,GAAG,EAAEA,GAAG,GAAGC,IAAI,CAAC;OAE3CF,GAAG,IAAIE,IAAI;OACXH,GAAG,IAAIG,IAAI;OACXD,GAAG,IAAIC,IAAI;OAEX,IAAIF,GAAG,GAAG,EAAE,EACV;OAEF,IAAI,CAACI,UAAU,CAAC,IAAI,CAACR,KAAK,EAAE,CAAC,CAAC;AAChC;KAEA,OAAOG,GAAG,IAAI,EAAE,EAAE;AAChB,OAAA,IAAI,CAACK,UAAU,CAAChB,IAAI,EAAEa,GAAG,CAAC;OAC1BA,GAAG,IAAI,EAAE;OACTF,GAAG,IAAI,EAAE;AACX;KAEA,IAAIA,GAAG,GAAG,CAAC,EACTX,IAAI,CAACe,IAAI,CAAC,IAAI,CAACP,KAAK,EAAE,CAAC,EAAEK,GAAG,EAAEA,GAAG,GAAGF,GAAG,CAAC;AAC5C;GAEAD,MAAMA,CAACO,GAAG,EAAE;KACVpH,MAAM,CAAC,IAAI,CAACkF,IAAI,KAAKkB,SAAS,EAAE,6BAA6B,CAAC;AAE9D,KAAA,MAAMW,GAAG,GAAG,IAAI,CAAC7B,IAAI,GAAG,EAAE;AAC1B,KAAA,MAAM4B,GAAG,GAAG,IAAI,CAAC5B,IAAI,GAAG,CAAC;AAEzBmC,KAAAA,QAAQ,CAAChB,IAAI,EAAGS,GAAG,IAAI,CAAC,GAAG,WAAW,CAAC,KAAM,CAAC,EAAE,CAAC,CAAC;KAClDO,QAAQ,CAAChB,IAAI,EAAES,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;AAE5B,KAAA,IAAI,CAACF,OAAO,CAACN,OAAO,EAAE,CAAC,IAAK,GAAG,GAAGS,GAAG,GAAI,EAAE,CAAC,CAAC;AAC7C,KAAA,IAAI,CAACH,OAAO,CAACP,IAAI,EAAE,CAAC,CAAC;KAErB,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;AAC1BmB,OAAAA,QAAQ,CAACD,GAAG,EAAE,IAAI,CAACV,KAAK,CAACR,CAAC,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;AACnC,OAAA,IAAI,CAACQ,KAAK,CAACR,CAAC,CAAC,GAAG,CAAC;AACnB;KAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB,IAAI,CAACrB,GAAG,CAACqB,CAAC,CAAC,GAAG,CAAC;KAEjB,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB,IAAI,CAACS,KAAK,CAACT,CAAC,CAAC,GAAG,CAAC;KAEnB,IAAI,CAAChB,IAAI,GAAGkB,SAAS;AAErB,KAAA,OAAOgB,GAAG;AACZ;AAEAD,GAAAA,UAAUA,CAACG,KAAK,EAAEP,GAAG,EAAE;AACrB,KAAA,MAAMQ,CAAC,GAAG,IAAI,CAAC1C,GAAG;KAElB,IAAI2C,CAAC,GAAG,IAAI,CAACd,KAAK,CAAC,CAAC,CAAC;KACrB,IAAIe,CAAC,GAAG,IAAI,CAACf,KAAK,CAAC,CAAC,CAAC;KACrB,IAAIgB,CAAC,GAAG,IAAI,CAAChB,KAAK,CAAC,CAAC,CAAC;KACrB,IAAIiB,CAAC,GAAG,IAAI,CAACjB,KAAK,CAAC,CAAC,CAAC;KACrB,IAAIkB,CAAC,GAAG,IAAI,CAAClB,KAAK,CAAC,CAAC,CAAC;KACrB,IAAImB,CAAC,GAAG,IAAI,CAACnB,KAAK,CAAC,CAAC,CAAC;KACrB,IAAIoB,CAAC,GAAG,IAAI,CAACpB,KAAK,CAAC,CAAC,CAAC;KACrB,IAAIb,CAAC,GAAG,IAAI,CAACa,KAAK,CAAC,CAAC,CAAC;KACrB,IAAIR,CAAC,GAAG,CAAC;KAET,OAAOA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAChBqB,CAAC,CAACrB,CAAC,CAAC,GAAG6B,OAAO,CAACT,KAAK,EAAEP,GAAG,GAAGb,CAAC,GAAG,CAAC,CAAC;KAEpC,OAAOA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAChBqB,CAAC,CAACrB,CAAC,CAAC,GAAG8B,MAAM,CAACT,CAAC,CAACrB,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGqB,CAAC,CAACrB,CAAC,GAAG,CAAC,CAAC,GAAG+B,MAAM,CAACV,CAAC,CAACrB,CAAC,GAAG,EAAE,CAAC,CAAC,GAAGqB,CAAC,CAACrB,CAAC,GAAG,EAAE,CAAC;KAEpE,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;OACvB,MAAMgC,EAAE,GAAGrC,CAAC,GAAGsC,MAAM,CAACP,CAAC,CAAC,GAAGQ,EAAE,CAACR,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGvB,CAAC,CAACL,CAAC,CAAC,GAAGqB,CAAC,CAACrB,CAAC,CAAC;AACpD,OAAA,MAAMmC,EAAE,GAAGC,MAAM,CAACd,CAAC,CAAC,GAAGe,GAAG,CAACf,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;OAEnC7B,CAAC,GAAGiC,CAAC;OACLA,CAAC,GAAGD,CAAC;OACLA,CAAC,GAAGD,CAAC;AAELA,OAAAA,CAAC,GAAID,CAAC,GAAGO,EAAE,KAAM,CAAC;OAElBP,CAAC,GAAGD,CAAC;OACLA,CAAC,GAAGD,CAAC;OACLA,CAAC,GAAGD,CAAC;AAELA,OAAAA,CAAC,GAAIU,EAAE,GAAGG,EAAE,KAAM,CAAC;AACrB;AAEA,KAAA,IAAI,CAAC3B,KAAK,CAAC,CAAC,CAAC,IAAIc,CAAC;AAClB,KAAA,IAAI,CAACd,KAAK,CAAC,CAAC,CAAC,IAAIe,CAAC;AAClB,KAAA,IAAI,CAACf,KAAK,CAAC,CAAC,CAAC,IAAIgB,CAAC;AAClB,KAAA,IAAI,CAAChB,KAAK,CAAC,CAAC,CAAC,IAAIiB,CAAC;AAClB,KAAA,IAAI,CAACjB,KAAK,CAAC,CAAC,CAAC,IAAIkB,CAAC;AAClB,KAAA,IAAI,CAAClB,KAAK,CAAC,CAAC,CAAC,IAAImB,CAAC;AAClB,KAAA,IAAI,CAACnB,KAAK,CAAC,CAAC,CAAC,IAAIoB,CAAC;AAClB,KAAA,IAAI,CAACpB,KAAK,CAAC,CAAC,CAAC,IAAIb,CAAC;AACpB;GAEA,OAAON,IAAIA,GAAG;KACZ,OAAO,IAAIkB,MAAM,EAAE;AACrB;GAEA,OAAO+B,IAAIA,GAAG;AACZ,KAAA,OAAO,IAAIxD,IAAI,CAACyB,MAAM,EAAE,EAAE,CAAC;AAC7B;GAEA,OAAOgC,MAAMA,CAACtC,IAAI,EAAE;AAClB,KAAA,OAAOM,MAAM,CAACiC,GAAG,CAAChD,IAAI,EAAE,CAACI,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,EAAE;AAC/C;AAEA,GAAA,OAAO4C,IAAIA,CAACC,IAAI,EAAEC,KAAK,EAAE;AACvB7I,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACgD,IAAI,CAAC,IAAIA,IAAI,CAAC9H,MAAM,KAAK,EAAE,CAAC;AACnDd,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACiD,KAAK,CAAC,IAAIA,KAAK,CAAC/H,MAAM,KAAK,EAAE,CAAC;KACrD,OAAO2F,MAAM,CAACiC,GAAG,CAAChD,IAAI,EAAE,CAACI,MAAM,CAAC8C,IAAI,CAAC,CAAC9C,MAAM,CAAC+C,KAAK,CAAC,CAAC9C,KAAK,EAAE;AAC7D;GAEA,OAAO+C,KAAKA,CAAC3D,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAE;KACpB,MAAM;OAACL;AAAG,MAAC,GAAGjC,MAAM;KAEpBiC,GAAG,CAAChD,IAAI,EAAE;AACVgD,KAAAA,GAAG,CAAC5C,MAAM,CAACX,CAAC,CAAC;AACbuD,KAAAA,GAAG,CAAC5C,MAAM,CAACV,CAAC,CAAC;KAEb,IAAI2D,CAAC,EACHL,GAAG,CAAC5C,MAAM,CAACiD,CAAC,CAAC;AAEf,KAAA,OAAOL,GAAG,CAAC3C,KAAK,EAAE;AACpB;AAEA,GAAA,OAAOiD,GAAGA,CAAC7C,IAAI,EAAER,GAAG,EAAE;AACpB,KAAA,OAAOc,MAAM,CAAC+B,IAAI,EAAE,CAAC9C,IAAI,CAACC,GAAG,CAAC,CAACG,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,EAAE;AACrD;AACF;;AAEA;AACA;AACA;;CAEAU,MAAM,CAACwC,MAAM,GAAG,CAAC;CACjBxC,MAAM,CAACyC,EAAE,GAAG,QAAQ;CACpBzC,MAAM,CAACvB,IAAI,GAAG,EAAE;CAChBuB,MAAM,CAAC0C,IAAI,GAAG,GAAG;CACjB1C,MAAM,CAAC2C,SAAS,GAAG,EAAE;CACrB3C,MAAM,CAAC4C,IAAI,GAAGzF,MAAM,CAACqC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AACpCQ,CAAAA,MAAM,CAACiC,GAAG,GAAG,IAAIjC,MAAM,EAAE;;AAEzB;AACA;AACA;;CAEA,SAAS6B,MAAMA,CAACnD,CAAC,EAAE;GACjB,OAAO,CAACA,CAAC,KAAK,CAAC,GAAGA,CAAC,IAAI,EAAE,KAAKA,CAAC,KAAK,EAAE,GAAGA,CAAC,IAAI,EAAE,CAAC,IAAIA,CAAC,KAAK,EAAE,GAAGA,CAAC,IAAI,EAAE,CAAC;AAC1E;CAEA,SAASgD,MAAMA,CAAChD,CAAC,EAAE;GACjB,OAAO,CAACA,CAAC,KAAK,CAAC,GAAGA,CAAC,IAAI,EAAE,KAAKA,CAAC,KAAK,EAAE,GAAGA,CAAC,IAAI,EAAE,CAAC,IAAIA,CAAC,KAAK,EAAE,GAAGA,CAAC,IAAI,CAAC,CAAC;AACzE;CAEA,SAAS8C,MAAMA,CAAC9C,CAAC,EAAE;GACjB,OAAO,CAACA,CAAC,KAAK,CAAC,GAAGA,CAAC,IAAI,EAAE,KAAKA,CAAC,KAAK,EAAE,GAAGA,CAAC,IAAI,EAAE,CAAC,GAAIA,CAAC,KAAK,CAAE;AAC/D;CAEA,SAAS6C,MAAMA,CAAC7C,CAAC,EAAE;GACjB,OAAO,CAACA,CAAC,KAAK,EAAE,GAAGA,CAAC,IAAI,EAAE,KAAKA,CAAC,KAAK,EAAE,GAAGA,CAAC,IAAI,EAAE,CAAC,GAAIA,CAAC,KAAK,EAAG;AACjE;AAEA,CAAA,SAASiD,EAAEA,CAACjD,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAE;GACnB,OAAOA,CAAC,GAAI5D,CAAC,IAAIC,CAAC,GAAG2D,CAAC,CAAE;AAC1B;AAEA,CAAA,SAASR,GAAGA,CAACpD,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAE;GACpB,OAAQ5D,CAAC,GAAGC,CAAC,GAAK2D,CAAC,IAAI5D,CAAC,GAAGC,CAAC,CAAE;AAChC;AAEA,CAAA,SAAS2C,OAAOA,CAAC5B,IAAI,EAAEa,GAAG,EAAE;GAC1B,OAAQb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,SAAS,GACvBb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,OAAO,GACrBb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,KAAK,GACnBb,IAAI,CAACa,GAAG,CAAC;AACnB;AAEA,CAAA,SAASK,QAAQA,CAAClB,IAAI,EAAE/F,GAAG,EAAE4G,GAAG,EAAE;GAChCb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG5G,GAAG,KAAK,EAAE;GACxB+F,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG5G,GAAG,KAAK,EAAE;GACxB+F,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG5G,GAAG,KAAK,CAAC;AACvB+F,GAAAA,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG5G,GAAG;AACjB,GAAA,OAAO4G,GAAG;AACZ;;AAEA;AACA;AACA;;AAEAzD,CAAAA,MAAc,GAAGkD,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;CChRvB,MAAMzG,MAAM,GAAGC,aAA4B,EAAA;CAC3C,MAAM+E,IAAI,GAAG/E,WAA0B,EAAA;;AAEvC;AACA;AACA;;CAEA,MAAMmG,SAAS,GAAG,EAAE;CACpB,MAAMC,IAAI,GAAGzC,MAAM,CAACqC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC;CAClC,MAAMK,OAAO,GAAG1C,MAAM,CAACqC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AAEtCK,CAAAA,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI;AAEjB,CAAA,MAAMgD,CAAC,GAAG,IAAIC,UAAU,CAAC,CACvB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACpD,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACpD,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EACpD,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACpD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CACrD,CAAC;AAEF,CAAA,MAAMC,EAAE,GAAG,IAAID,UAAU,CAAC,CACxB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EACpD,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACpD,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EACpD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EACpD,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CACrD,CAAC;AAEF,CAAA,MAAME,CAAC,GAAG,IAAIF,UAAU,CAAC,CACvB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACtD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EACtD,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EACtD,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EACtD,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACvD,CAAC;AAEF,CAAA,MAAMG,EAAE,GAAG,IAAIH,UAAU,CAAC,CACxB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACtD,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtD,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EACtD,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtD,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CACvD,CAAC;;AAEF;AACA;AACA;;AAEA,CAAA,MAAMI,SAAS,CAAC;AACdtH,GAAAA,WAAWA,GAAG;KACZ,IAAI,CAACqE,KAAK,GAAG,IAAIF,WAAW,CAAC,CAAC,CAAC;KAC/B,IAAI,CAAC3B,GAAG,GAAG,IAAI2B,WAAW,CAAC,EAAE,CAAC;KAC9B,IAAI,CAACG,KAAK,GAAG/C,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;KAC7B,IAAI,CAACf,IAAI,GAAGkB,SAAS;AACvB;AAEAV,GAAAA,IAAIA,GAAG;AACL,KAAA,IAAI,CAACgB,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;KAC1B,IAAI,CAACxB,IAAI,GAAG,CAAC;AACb,KAAA,OAAO,IAAI;AACb;GAEAY,MAAMA,CAACK,IAAI,EAAE;KACXnG,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACO,IAAI,CAAC,CAAC;KAC7B,IAAI,CAACS,OAAO,CAACT,IAAI,EAAEA,IAAI,CAACrF,MAAM,CAAC;AAC/B,KAAA,OAAO,IAAI;AACb;AAEAiF,GAAAA,KAAKA,GAAG;KACN,OAAO,IAAI,CAACc,MAAM,CAACjD,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC,CAAC;AACtC;AAEAW,GAAAA,OAAOA,CAACT,IAAI,EAAEW,GAAG,EAAE;KACjB9G,MAAM,CAAC,IAAI,CAACkF,IAAI,KAAKkB,SAAS,EAAE,6BAA6B,CAAC;AAE9D,KAAA,IAAIW,GAAG,GAAG,IAAI,CAAC7B,IAAI,GAAG,EAAE;KACxB,IAAI8B,GAAG,GAAG,CAAC;KAEX,IAAI,CAAC9B,IAAI,IAAI4B,GAAG;KAEhB,IAAIC,GAAG,GAAG,CAAC,EAAE;AACX,OAAA,IAAIE,IAAI,GAAG,EAAE,GAAGF,GAAG;AAEnB,OAAA,IAAIE,IAAI,GAAGH,GAAG,EACZG,IAAI,GAAGH,GAAG;AAEZX,OAAAA,IAAI,CAACe,IAAI,CAAC,IAAI,CAACP,KAAK,EAAEI,GAAG,EAAEC,GAAG,EAAEA,GAAG,GAAGC,IAAI,CAAC;OAE3CF,GAAG,IAAIE,IAAI;OACXH,GAAG,IAAIG,IAAI;OACXD,GAAG,IAAIC,IAAI;OAEX,IAAIF,GAAG,GAAG,EAAE,EACV;OAEF,IAAI,CAACI,UAAU,CAAC,IAAI,CAACR,KAAK,EAAE,CAAC,CAAC;AAChC;KAEA,OAAOG,GAAG,IAAI,EAAE,EAAE;AAChB,OAAA,IAAI,CAACK,UAAU,CAAChB,IAAI,EAAEa,GAAG,CAAC;OAC1BA,GAAG,IAAI,EAAE;OACTF,GAAG,IAAI,EAAE;AACX;KAEA,IAAIA,GAAG,GAAG,CAAC,EACTX,IAAI,CAACe,IAAI,CAAC,IAAI,CAACP,KAAK,EAAE,CAAC,EAAEK,GAAG,EAAEA,GAAG,GAAGF,GAAG,CAAC;AAC5C;GAEAD,MAAMA,CAACO,GAAG,EAAE;KACVpH,MAAM,CAAC,IAAI,CAACkF,IAAI,KAAKkB,SAAS,EAAE,6BAA6B,CAAC;AAE9D,KAAA,MAAMW,GAAG,GAAG,IAAI,CAAC7B,IAAI,GAAG,EAAE;AAC1B,KAAA,MAAM4B,GAAG,GAAG,IAAI,CAAC5B,IAAI,GAAG,CAAC;KAEzBmC,QAAQ,CAAChB,IAAI,EAAES,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;AAC5BO,KAAAA,QAAQ,CAAChB,IAAI,EAAGS,GAAG,IAAI,CAAC,GAAG,WAAW,CAAC,KAAM,CAAC,EAAE,CAAC,CAAC;AAElD,KAAA,IAAI,CAACF,OAAO,CAACN,OAAO,EAAE,CAAC,IAAK,GAAG,GAAGS,GAAG,GAAI,EAAE,CAAC,CAAC;AAC7C,KAAA,IAAI,CAACH,OAAO,CAACP,IAAI,EAAE,CAAC,CAAC;KAErB,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;AAC1BmB,OAAAA,QAAQ,CAACD,GAAG,EAAE,IAAI,CAACV,KAAK,CAACR,CAAC,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;AACnC,OAAA,IAAI,CAACQ,KAAK,CAACR,CAAC,CAAC,GAAG,CAAC;AACnB;KAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB,IAAI,CAACrB,GAAG,CAACqB,CAAC,CAAC,GAAG,CAAC;KAEjB,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB,IAAI,CAACS,KAAK,CAACT,CAAC,CAAC,GAAG,CAAC;KAEnB,IAAI,CAAChB,IAAI,GAAGkB,SAAS;AAErB,KAAA,OAAOgB,GAAG;AACZ;AAEAD,GAAAA,UAAUA,CAACG,KAAK,EAAEP,GAAG,EAAE;AACrB,KAAA,MAAMQ,CAAC,GAAG,IAAI,CAAC1C,GAAG;KAElB,IAAI+E,CAAC,GAAG,IAAI,CAAClD,KAAK,CAAC,CAAC,CAAC;KACrB,IAAImD,CAAC,GAAG,IAAI,CAACnD,KAAK,CAAC,CAAC,CAAC;KACrB,IAAIoD,CAAC,GAAG,IAAI,CAACpD,KAAK,CAAC,CAAC,CAAC;KACrB,IAAIqD,CAAC,GAAG,IAAI,CAACrD,KAAK,CAAC,CAAC,CAAC;KACrB,IAAIsD,CAAC,GAAG,IAAI,CAACtD,KAAK,CAAC,CAAC,CAAC;KACrB,IAAIuD,EAAE,GAAGL,CAAC;KACV,IAAIM,EAAE,GAAGL,CAAC;KACV,IAAIzB,EAAE,GAAG0B,CAAC;KACV,IAAIK,EAAE,GAAGJ,CAAC;KACV,IAAIK,EAAE,GAAGJ,CAAC;KAEV,KAAK,IAAI9D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzBqB,CAAC,CAACrB,CAAC,CAAC,GAAG6B,OAAO,CAACT,KAAK,EAAEP,GAAG,GAAGb,CAAC,GAAG,CAAC,CAAC;KAEpC,KAAK,IAAImE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;OAC3B,IAAI7C,CAAC,GAAGoC,CAAC,GAAG/B,CAAC,CAACwC,CAAC,EAAER,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGxC,CAAC,CAAC+B,CAAC,CAACe,CAAC,CAAC,CAAC,GAAG9D,CAAC,CAAC8D,CAAC,CAAC;OAC1C,IAAI5C,CAAC,GAAG6C,MAAM,CAAC9C,CAAC,EAAEiC,CAAC,CAACY,CAAC,CAAC,CAAC;AACvB,OAAA,IAAIE,CAAC,GAAG9C,CAAC,GAAGuC,CAAC;OAEbJ,CAAC,GAAGI,CAAC;OACLA,CAAC,GAAGD,CAAC;AACLA,OAAAA,CAAC,GAAGO,MAAM,CAACR,CAAC,EAAE,EAAE,CAAC;OACjBA,CAAC,GAAGD,CAAC;OACLA,CAAC,GAAGU,CAAC;OAEL/C,CAAC,GAAGyC,EAAE,GAAGpC,CAAC,CAAC,EAAE,GAAGwC,CAAC,EAAEH,EAAE,EAAE9B,EAAE,EAAE+B,EAAE,CAAC,GAAG5C,CAAC,CAACiC,EAAE,CAACa,CAAC,CAAC,CAAC,GAAGG,EAAE,CAACH,CAAC,CAAC;OACjD5C,CAAC,GAAG6C,MAAM,CAAC9C,CAAC,EAAEkC,EAAE,CAACW,CAAC,CAAC,CAAC;OACpBE,CAAC,GAAG9C,CAAC,GAAG2C,EAAE;OACVH,EAAE,GAAGG,EAAE;OACPA,EAAE,GAAGD,EAAE;AACPA,OAAAA,EAAE,GAAGG,MAAM,CAAClC,EAAE,EAAE,EAAE,CAAC;OACnBA,EAAE,GAAG8B,EAAE;OACPA,EAAE,GAAGK,CAAC;AACR;KAEA,MAAMA,CAAC,GAAG,IAAI,CAAC7D,KAAK,CAAC,CAAC,CAAC,GAAGoD,CAAC,GAAGK,EAAE;AAEhC,KAAA,IAAI,CAACzD,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAGqD,CAAC,GAAGK,EAAE;AACtC,KAAA,IAAI,CAAC1D,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAGsD,CAAC,GAAGC,EAAE;AACtC,KAAA,IAAI,CAACvD,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAGkD,CAAC,GAAGM,EAAE;AACtC,KAAA,IAAI,CAACxD,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAGmD,CAAC,GAAGzB,EAAE;AACtC,KAAA,IAAI,CAAC1B,KAAK,CAAC,CAAC,CAAC,GAAG6D,CAAC;AACnB;GAEA,OAAOhF,IAAIA,GAAG;KACZ,OAAO,IAAIoE,SAAS,EAAE;AACxB;GAEA,OAAOnB,IAAIA,GAAG;AACZ,KAAA,OAAO,IAAIxD,IAAI,CAAC2E,SAAS,EAAE,EAAE,CAAC;AAChC;GAEA,OAAOlB,MAAMA,CAACtC,IAAI,EAAE;AAClB,KAAA,OAAOwD,SAAS,CAACjB,GAAG,CAAChD,IAAI,EAAE,CAACI,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,EAAE;AAClD;AAEA,GAAA,OAAO4C,IAAIA,CAACC,IAAI,EAAEC,KAAK,EAAE;AACvB7I,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACgD,IAAI,CAAC,IAAIA,IAAI,CAAC9H,MAAM,KAAK,EAAE,CAAC;AACnDd,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACiD,KAAK,CAAC,IAAIA,KAAK,CAAC/H,MAAM,KAAK,EAAE,CAAC;KACrD,OAAO6I,SAAS,CAACjB,GAAG,CAAChD,IAAI,EAAE,CAACI,MAAM,CAAC8C,IAAI,CAAC,CAAC9C,MAAM,CAAC+C,KAAK,CAAC,CAAC9C,KAAK,EAAE;AAChE;GAEA,OAAO+C,KAAKA,CAAC3D,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAE;KACpB,MAAM;OAACL;AAAG,MAAC,GAAGiB,SAAS;KAEvBjB,GAAG,CAAChD,IAAI,EAAE;AACVgD,KAAAA,GAAG,CAAC5C,MAAM,CAACX,CAAC,CAAC;AACbuD,KAAAA,GAAG,CAAC5C,MAAM,CAACV,CAAC,CAAC;KAEb,IAAI2D,CAAC,EACHL,GAAG,CAAC5C,MAAM,CAACiD,CAAC,CAAC;AAEf,KAAA,OAAOL,GAAG,CAAC3C,KAAK,EAAE;AACpB;AAEA,GAAA,OAAOiD,GAAGA,CAAC7C,IAAI,EAAER,GAAG,EAAE;AACpB,KAAA,OAAOgE,SAAS,CAACnB,IAAI,EAAE,CAAC9C,IAAI,CAACC,GAAG,CAAC,CAACG,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,EAAE;AACxD;AACF;;AAEA;AACA;AACA;;CAEA4D,SAAS,CAACV,MAAM,GAAG,CAAC;CACpBU,SAAS,CAACT,EAAE,GAAG,WAAW;CAC1BS,SAAS,CAACzE,IAAI,GAAG,EAAE;CACnByE,SAAS,CAACR,IAAI,GAAG,GAAG;CACpBQ,SAAS,CAACP,SAAS,GAAG,EAAE;CACxBO,SAAS,CAACN,IAAI,GAAGzF,MAAM,CAACqC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AACvC0D,CAAAA,SAAS,CAACjB,GAAG,GAAG,IAAIiB,SAAS,EAAE;;AAE/B;AACA;AACA;;AAEA,CAAA,SAASW,MAAMA,CAACG,CAAC,EAAEhD,CAAC,EAAE;GACpB,OAAQgD,CAAC,IAAIhD,CAAC,GAAKgD,CAAC,KAAM,EAAE,GAAGhD,CAAG;AACpC;CAEA,SAASI,CAACA,CAACwC,CAAC,EAAElF,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAE;GACrB,IAAIsB,CAAC,IAAI,EAAE,EACT,OAAOlF,CAAC,GAAGC,CAAC,GAAG2D,CAAC;AAElB,GAAA,IAAIsB,CAAC,IAAI,EAAE,EACT,OAAQlF,CAAC,GAAGC,CAAC,GAAM,CAACD,CAAC,GAAI4D,CAAE;GAE7B,IAAIsB,CAAC,IAAI,EAAE,EACT,OAAO,CAAClF,CAAC,GAAI,CAACC,CAAE,IAAI2D,CAAC;AAEvB,GAAA,IAAIsB,CAAC,IAAI,EAAE,EACT,OAAQlF,CAAC,GAAG4D,CAAC,GAAK3D,CAAC,GAAI,CAAC2D,CAAG;AAE7B,GAAA,OAAO5D,CAAC,IAAIC,CAAC,GAAI,CAAC2D,CAAE,CAAC;AACvB;CAEA,SAASxC,CAACA,CAAC8D,CAAC,EAAE;AACZ,GAAA,IAAIA,CAAC,IAAI,EAAE,EACT,OAAO,UAAU;AAEnB,GAAA,IAAIA,CAAC,IAAI,EAAE,EACT,OAAO,UAAU;AAEnB,GAAA,IAAIA,CAAC,IAAI,EAAE,EACT,OAAO,UAAU;AAEnB,GAAA,IAAIA,CAAC,IAAI,EAAE,EACT,OAAO,UAAU;AAEnB,GAAA,OAAO,UAAU;AACnB;CAEA,SAASG,EAAEA,CAACH,CAAC,EAAE;AACb,GAAA,IAAIA,CAAC,IAAI,EAAE,EACT,OAAO,UAAU;AAEnB,GAAA,IAAIA,CAAC,IAAI,EAAE,EACT,OAAO,UAAU;AAEnB,GAAA,IAAIA,CAAC,IAAI,EAAE,EACT,OAAO,UAAU;AAEnB,GAAA,IAAIA,CAAC,IAAI,EAAE,EACT,OAAO,UAAU;AAEnB,GAAA,OAAO,UAAU;AACnB;AAEA,CAAA,SAAStC,OAAOA,CAAC5B,IAAI,EAAEa,GAAG,EAAE;GAC1B,OAAQb,IAAI,CAACa,GAAG,EAAE,CAAC,GACXb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,KAAK,GACnBb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,OAAO,GACrBb,IAAI,CAACa,GAAG,CAAC,GAAG,SAAS;AAC/B;AAEA,CAAA,SAASK,QAAQA,CAACqD,GAAG,EAAEtK,GAAG,EAAE4G,GAAG,EAAE;AAC/B0D,GAAAA,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG;GAChBA,GAAG,MAAM,CAAC;AACVsK,GAAAA,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG;GAChBA,GAAG,MAAM,CAAC;AACVsK,GAAAA,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG;GAChBA,GAAG,MAAM,CAAC;AACVsK,GAAAA,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG;AAChB,GAAA,OAAO4G,GAAG;AACZ;;AAEA;AACA;AACA;;AAEAzD,CAAAA,SAAc,GAAGoG,SAAS;;;;;;;;;;;;;;;;;;;;CChU1B,MAAM3J,MAAM,GAAGC,aAA4B,EAAA;CAC3C,MAAMwG,MAAM,GAAGxG,aAAmB,EAAA;CAClC,MAAM0J,SAAS,GAAG1J,gBAAsB,EAAA;CACxC,MAAM+E,IAAI,GAAG/E,WAA0B,EAAA;;AAEvC;AACA;AACA;;AAEA,CAAA,MAAM0K,GAAG,GAAG,IAAIhB,SAAS,EAAE;;AAE3B;AACA;AACA;;AAEA,CAAA,MAAMiB,OAAO,CAAC;AACZvI,GAAAA,WAAWA,GAAG;AACZ,KAAA,IAAI,CAACqG,GAAG,GAAG,IAAIjC,MAAM,EAAE;AACzB;AAEAf,GAAAA,IAAIA,GAAG;AACL,KAAA,IAAI,CAACgD,GAAG,CAAChD,IAAI,EAAE;AACf,KAAA,OAAO,IAAI;AACb;GAEAI,MAAMA,CAACK,IAAI,EAAE;AACX,KAAA,IAAI,CAACuC,GAAG,CAAC5C,MAAM,CAACK,IAAI,CAAC;AACrB,KAAA,OAAO,IAAI;AACb;AAEAJ,GAAAA,KAAKA,GAAG;KACN,MAAMqB,GAAG,GAAGxD,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;AAE5B,KAAA,IAAI,CAACyC,GAAG,CAAC7B,MAAM,CAACO,GAAG,CAAC;KAEpBuD,GAAG,CAACjF,IAAI,EAAE;AACViF,KAAAA,GAAG,CAAC7E,MAAM,CAACsB,GAAG,CAAC;AACfuD,KAAAA,GAAG,CAAC9D,MAAM,CAACO,GAAG,CAAC;KAEf,OAAOA,GAAG,CAACyD,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AACzB;GAEA,OAAOtF,IAAIA,GAAG;KACZ,OAAO,IAAIqF,OAAO,EAAE;AACtB;GAEA,OAAOpC,IAAIA,GAAG;AACZ,KAAA,OAAO,IAAIxD,IAAI,CAAC4F,OAAO,EAAE,EAAE,CAAC;AAC9B;GAEA,OAAOnC,MAAMA,CAACtC,IAAI,EAAE;AAClB,KAAA,OAAOyE,OAAO,CAAClC,GAAG,CAAChD,IAAI,EAAE,CAACI,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,EAAE;AAChD;AAEA,GAAA,OAAO4C,IAAIA,CAACC,IAAI,EAAEC,KAAK,EAAE;AACvB7I,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACgD,IAAI,CAAC,IAAIA,IAAI,CAAC9H,MAAM,KAAK,EAAE,CAAC;AACnDd,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACiD,KAAK,CAAC,IAAIA,KAAK,CAAC/H,MAAM,KAAK,EAAE,CAAC;KACrD,OAAO8J,OAAO,CAAClC,GAAG,CAAChD,IAAI,EAAE,CAACI,MAAM,CAAC8C,IAAI,CAAC,CAAC9C,MAAM,CAAC+C,KAAK,CAAC,CAAC9C,KAAK,EAAE;AAC9D;GAEA,OAAO+C,KAAKA,CAAC3D,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAE;KACpB,MAAM;OAACL;AAAG,MAAC,GAAGkC,OAAO;KAErBlC,GAAG,CAAChD,IAAI,EAAE;AACVgD,KAAAA,GAAG,CAAC5C,MAAM,CAACX,CAAC,CAAC;AACbuD,KAAAA,GAAG,CAAC5C,MAAM,CAACV,CAAC,CAAC;KAEb,IAAI2D,CAAC,EACHL,GAAG,CAAC5C,MAAM,CAACiD,CAAC,CAAC;AAEf,KAAA,OAAOL,GAAG,CAAC3C,KAAK,EAAE;AACpB;AAEA,GAAA,OAAOiD,GAAGA,CAAC7C,IAAI,EAAER,GAAG,EAAE;AACpB,KAAA,OAAOiF,OAAO,CAACpC,IAAI,EAAE,CAAC9C,IAAI,CAACC,GAAG,CAAC,CAACG,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,EAAE;AACtD;AACF;;AAEA;AACA;AACA;;CAEA6E,OAAO,CAAC3B,MAAM,GAAG,CAAC;CAClB2B,OAAO,CAAC1B,EAAE,GAAG,SAAS;CACtB0B,OAAO,CAAC1F,IAAI,GAAG,EAAE;CACjB0F,OAAO,CAACzB,IAAI,GAAG,GAAG;CAClByB,OAAO,CAACxB,SAAS,GAAG,EAAE;CACtBwB,OAAO,CAACvB,IAAI,GAAGzF,MAAM,CAACqC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AACrC2E,CAAAA,OAAO,CAAClC,GAAG,GAAG,IAAIkC,OAAO,EAAE;;AAE3B;AACA;AACA;;AAEArH,CAAAA,OAAc,GAAGqH,OAAO;;;;;;;;;;;;;;;;;;;;CC9FxB,MAAM5K,MAAM,GAAGC,aAA4B,EAAA;CAC3C,MAAMwG,MAAM,GAAGxG,aAAmB,EAAA;CAClC,MAAM+E,IAAI,GAAG/E,WAA0B,EAAA;;AAEvC;AACA;AACA;;AAEA,CAAA,MAAM6K,OAAO,CAAC;AACZzI,GAAAA,WAAWA,GAAG;AACZ,KAAA,IAAI,CAACqG,GAAG,GAAG,IAAIjC,MAAM,EAAE;AACzB;AAEAf,GAAAA,IAAIA,GAAG;AACL,KAAA,IAAI,CAACgD,GAAG,CAAChD,IAAI,EAAE;AACf,KAAA,OAAO,IAAI;AACb;GAEAI,MAAMA,CAACK,IAAI,EAAE;AACX,KAAA,IAAI,CAACuC,GAAG,CAAC5C,MAAM,CAACK,IAAI,CAAC;AACrB,KAAA,OAAO,IAAI;AACb;AAEAJ,GAAAA,KAAKA,GAAG;KACN,MAAMqB,GAAG,GAAGxD,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;AAE5B,KAAA,IAAI,CAACyC,GAAG,CAAC7B,MAAM,CAACO,GAAG,CAAC;AACpB,KAAA,IAAI,CAACsB,GAAG,CAAChD,IAAI,EAAE;AACf,KAAA,IAAI,CAACgD,GAAG,CAAC5C,MAAM,CAACsB,GAAG,CAAC;AACpB,KAAA,IAAI,CAACsB,GAAG,CAAC7B,MAAM,CAACO,GAAG,CAAC;AAEpB,KAAA,OAAOA,GAAG;AACZ;GAEA,OAAO7B,IAAIA,GAAG;KACZ,OAAO,IAAIuF,OAAO,EAAE;AACtB;GAEA,OAAOtC,IAAIA,GAAG;AACZ,KAAA,OAAO,IAAIxD,IAAI,CAAC8F,OAAO,EAAE,EAAE,CAAC;AAC9B;GAEA,OAAOrC,MAAMA,CAACtC,IAAI,EAAE;AAClB,KAAA,OAAO2E,OAAO,CAACpC,GAAG,CAAChD,IAAI,EAAE,CAACI,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,EAAE;AAChD;AAEA,GAAA,OAAO4C,IAAIA,CAACC,IAAI,EAAEC,KAAK,EAAE;AACvB7I,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACgD,IAAI,CAAC,IAAIA,IAAI,CAAC9H,MAAM,KAAK,EAAE,CAAC;AACnDd,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACiD,KAAK,CAAC,IAAIA,KAAK,CAAC/H,MAAM,KAAK,EAAE,CAAC;KACrD,OAAOgK,OAAO,CAACpC,GAAG,CAAChD,IAAI,EAAE,CAACI,MAAM,CAAC8C,IAAI,CAAC,CAAC9C,MAAM,CAAC+C,KAAK,CAAC,CAAC9C,KAAK,EAAE;AAC9D;GAEA,OAAO+C,KAAKA,CAAC3D,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAE;KACpB,MAAM;OAACL;AAAG,MAAC,GAAGoC,OAAO;KAErBpC,GAAG,CAAChD,IAAI,EAAE;AACVgD,KAAAA,GAAG,CAAC5C,MAAM,CAACX,CAAC,CAAC;AACbuD,KAAAA,GAAG,CAAC5C,MAAM,CAACV,CAAC,CAAC;KAEb,IAAI2D,CAAC,EACHL,GAAG,CAAC5C,MAAM,CAACiD,CAAC,CAAC;AAEf,KAAA,OAAOL,GAAG,CAAC3C,KAAK,EAAE;AACpB;AAEA,GAAA,OAAOiD,GAAGA,CAAC7C,IAAI,EAAER,GAAG,EAAE;AACpB,KAAA,OAAOmF,OAAO,CAACtC,IAAI,EAAE,CAAC9C,IAAI,CAACC,GAAG,CAAC,CAACG,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,EAAE;AACtD;AACF;;AAEA;AACA;AACA;;CAEA+E,OAAO,CAAC7B,MAAM,GAAG,CAAC;CAClB6B,OAAO,CAAC5B,EAAE,GAAG,SAAS;CACtB4B,OAAO,CAAC5F,IAAI,GAAG,EAAE;CACjB4F,OAAO,CAAC3B,IAAI,GAAG,GAAG;CAClB2B,OAAO,CAAC1B,SAAS,GAAG,EAAE;CACtB0B,OAAO,CAACzB,IAAI,GAAGzF,MAAM,CAACqC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AACrC6E,CAAAA,OAAO,CAACpC,GAAG,GAAG,IAAIoC,OAAO,EAAE;;AAE3B;AACA;AACA;;AAEAvH,CAAAA,OAAc,GAAGuH,OAAO;;;;;;;;;;;;;;;;;;;;ACxFxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEA5K,OAAiB,CAAA,MAAA,GAAA,SAAS6K,MAAMA,CAACC,KAAK,EAAErF,GAAG,EAAEsF,OAAO,EAAEC,MAAM,EAAE;IAC5D,IAAIC,KAAK,GAAG,CAAC;AACb,IAAA,IAAIC,GAAG,GAAGJ,KAAK,CAAClK,MAAM,GAAG,CAAC;IAE1B,OAAOqK,KAAK,IAAIC,GAAG,EAAE;AACnB,MAAA,MAAMrE,GAAG,GAAIoE,KAAK,GAAGC,GAAG,KAAM,CAAC;MAC/B,MAAMC,GAAG,GAAGJ,OAAO,CAACD,KAAK,CAACjE,GAAG,CAAC,EAAEpB,GAAG,CAAC;AAEpC,MAAA,IAAI0F,GAAG,KAAK,CAAC,EACX,OAAOtE,GAAG;AAEZ,MAAA,IAAIsE,GAAG,GAAG,CAAC,EACTF,KAAK,GAAGpE,GAAG,GAAG,CAAC,CAAC,KAEhBqE,GAAG,GAAGrE,GAAG,GAAG,CAAC;AACjB;AAEA,IAAA,IAAI,CAACmE,MAAM,EACT,OAAO,EAAE;AAEX,IAAA,OAAOC,KAAK;GACb;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAjL,OAAiB,CAAA,MAAA,GAAA,SAASgL,MAAMA,CAACF,KAAK,EAAEM,IAAI,EAAEL,OAAO,EAAEM,IAAI,EAAE;AAC3D,IAAA,MAAMrF,CAAC,GAAGhG,OAAO,CAAC6K,MAAM,CAACC,KAAK,EAAEM,IAAI,EAAEL,OAAO,EAAE,IAAI,CAAC;IAEpD,IAAIM,IAAI,IAAIrF,CAAC,GAAG8E,KAAK,CAAClK,MAAM,EAAE;AAC5B,MAAA,IAAImK,OAAO,CAACD,KAAK,CAAC9E,CAAC,CAAC,EAAEoF,IAAI,CAAC,KAAK,CAAC,EAC/B,OAAO,EAAE;AACb;AAEA,IAAA,IAAIpF,CAAC,KAAK,CAAC,EACT8E,KAAK,CAACQ,OAAO,CAACF,IAAI,CAAC,CAAC,KACjB,IAAIpF,CAAC,KAAK8E,KAAK,CAAClK,MAAM,EACzBkK,KAAK,CAACS,IAAI,CAACH,IAAI,CAAC,CAAC,KAEjBN,KAAK,CAACU,MAAM,CAACxF,CAAC,EAAE,CAAC,EAAEoF,IAAI,CAAC;AAE1B,IAAA,OAAOpF,CAAC;GACT;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAhG,OAAiB,CAAA,MAAA,GAAA,SAASyL,MAAMA,CAACX,KAAK,EAAEM,IAAI,EAAEL,OAAO,EAAE;AACrD,IAAA,MAAM/E,CAAC,GAAGhG,OAAO,CAAC6K,MAAM,CAACC,KAAK,EAAEM,IAAI,EAAEL,OAAO,EAAE,KAAK,CAAC;AAErD,IAAA,IAAI/E,CAAC,KAAK,EAAE,EACV,OAAO,KAAK;AAEdwF,IAAAA,MAAM,CAACV,KAAK,EAAE9E,CAAC,CAAC;AAEhB,IAAA,OAAO,IAAI;GACZ;;AAED;AACA;AACA;;AAEA,EAAA,SAASwF,MAAMA,CAACE,IAAI,EAAE1F,CAAC,EAAE;IACvB,IAAIA,CAAC,KAAK,CAAC,EAAE;MACX0F,IAAI,CAACC,KAAK,EAAE;MACZ;AACF;AAEA,IAAA,IAAIC,CAAC,GAAG5F,CAAC,GAAG,CAAC;AAEb,IAAA,OAAO4F,CAAC,GAAGF,IAAI,CAAC9K,MAAM,EACpB8K,IAAI,CAAC1F,CAAC,EAAE,CAAC,GAAG0F,IAAI,CAACE,CAAC,EAAE,CAAC;IAEvBF,IAAI,CAACG,GAAG,EAAE;AACZ,GAAA;;;;;;;;;;;;;;;;;;;;;CC9FA,MAAM;GAAC1I;AAAO,EAAC,GAAGpD,YAAe;AAEjCC,CAAAA,QAAAA,CAAAA,MAAc,GAAGmD,OAAO,CAACI,MAAM,IAAI,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CCgC5C,MAAM;GAACA;AAAM,EAAC,GAAGxD,eAA4B,EAAA;;AAE7C;AACA;AACA;;CAEA,MAAM+L,KAAK,GAAG,CACZ,EAAE,EACF,GAAG,EACH,IAAI,EACJ,KAAK,EACL,MAAM,EACN,OAAO,EACP,QAAQ,EACR,SAAS,EACT,UAAU,EACV,WAAW,EACX,YAAY,EACZ,aAAa,EACb,cAAc,EACd,eAAe,EACf,gBAAgB,EAChB,iBAAiB,EACjB,kBAAkB,EAClB,mBAAmB,EACnB,oBAAoB,EACpB,qBAAqB,EACrB,sBAAsB,EACtB,uBAAuB,EACvB,wBAAwB,EACxB,yBAAyB,EACzB,0BAA0B,EAC1B,2BAA2B,CAC5B;AAED,CAAA,MAAMC,UAAU,GAAG,CACjB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAClC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAClC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAClC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAClC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAClC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CACnC;AAED,CAAA,MAAMC,UAAU,GAAG,CACjB,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAC/C;AAED,CAAA,MAAMC,MAAM,GAAG;GACbC,IAAI,EAAE,IAAI;GACVC,IAAI,EAAE,IAAI;GACVC,IAAI,EAAE,IAAI;GACVC,IAAI,EAAE,IAAI;GACVC,IAAI,EAAE,IAAI;GACVC,MAAM,EAAE,IAAI;AACZC,GAAAA,IAAI,EAAE;EACP;AAED,CAAA,MAAMC,KAAK,GAAG;GACZC,IAAI,EAAE,CAAC;GACPC,GAAG,EAAE,CAAC;GACNC,GAAG,EAAE,CAAC;GACNC,IAAI,EAAE,CAAC;GACPC,MAAM,EAAE,CAAC;AACTC,GAAAA,GAAG,EAAE;EACN;CAED,MAAMC,SAAS,GAAG,CAAC;AACnB,CAAA,MAAMC,QAAQ,GAAG,CAAC,IAAKD,SAAS,GAAG,CAAE;AAErC,CAAA,MAAME,UAAU,GAAG,OAAOC,MAAM,KAAK,UAAU;;AAE/C;AACA;AACA;;AAEA,CAAA,MAAMC,EAAE,CAAC;AACPjL,GAAAA,WAAWA,CAACjC,GAAG,EAAEmN,IAAI,EAAEC,MAAM,EAAE;AAC7B,KAAA,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC,CAAC;KAChB,IAAI,CAAC3M,MAAM,GAAG,CAAC;KACf,IAAI,CAAC4M,QAAQ,GAAG,CAAC;KACjB,IAAI,CAACC,GAAG,GAAG,IAAI;KACf,IAAI,CAAClL,IAAI,CAACrC,GAAG,EAAEmN,IAAI,EAAEC,MAAM,CAAC;AAC9B;;AAEA;AACF;AACA;;AAEEI,GAAAA,KAAKA,CAACpG,CAAC,EAAEC,CAAC,EAAE;KACV,IAAIoG,KAAK,GAAG,CAAC;KACb,IAAI3H,CAAC,GAAG,CAAC;;AAET;AACA,KAAA,IAAIsB,CAAC,CAAC1G,MAAM,GAAG2G,CAAC,CAAC3G,MAAM,EACrB,CAAC0G,CAAC,EAAEC,CAAC,CAAC,GAAG,CAACA,CAAC,EAAED,CAAC,CAAC;KAEjB,IAAIA,CAAC,KAAK,IAAI,EACZ,IAAI,CAACsG,MAAM,CAACtG,CAAC,CAAC1G,MAAM,CAAC;KAEvB,OAAOoF,CAAC,GAAGuB,CAAC,CAAC3G,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACxB,MAAMoD,CAAC,GAAG,CAAC9B,CAAC,CAACiG,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC,KAAKuB,CAAC,CAACgG,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG2H,KAAK;OAErD,IAAI,CAACJ,KAAK,CAACvH,CAAC,CAAC,GAAGoD,CAAC,GAAG,SAAS;OAE7BuE,KAAK,GAAGvE,CAAC,KAAK,EAAE;AAClB;AAEA,KAAA,OAAOuE,KAAK,KAAK,CAAC,IAAI3H,CAAC,GAAGsB,CAAC,CAAC1G,MAAM,EAAEoF,CAAC,EAAE,EAAE;AACvC,OAAA,MAAMoD,CAAC,GAAG,CAAC9B,CAAC,CAACiG,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC,IAAI2H,KAAK;OAElC,IAAI,CAACJ,KAAK,CAACvH,CAAC,CAAC,GAAGoD,CAAC,GAAG,SAAS;OAE7BuE,KAAK,GAAGvE,CAAC,KAAK,EAAE;AAClB;AAEA,KAAA,IAAI,CAACxI,MAAM,GAAG0G,CAAC,CAAC1G,MAAM;KAEtB,IAAI+M,KAAK,KAAK,CAAC,EAAE;OACf,IAAI,CAACC,MAAM,CAAC,IAAI,CAAChN,MAAM,GAAG,CAAC,CAAC;OAC5B,IAAI,CAAC2M,KAAK,CAAC,IAAI,CAAC3M,MAAM,EAAE,CAAC,GAAG+M,KAAK;AACnC,MAAC,MAAM,IAAIrG,CAAC,KAAK,IAAI,EAAE;AACrB;OACA,OAAOtB,CAAC,GAAGsB,CAAC,CAAC1G,MAAM,EAAEoF,CAAC,EAAE,EACtB,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,GAAGsB,CAAC,CAACiG,KAAK,CAACvH,CAAC,CAAC;AAC9B;;AAEA;AACA,KAAA,OAAO,IAAI;AACb;GAEA6H,MAAMA,CAAC3N,GAAG,EAAE;AACV,KAAA,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,IAAIrN,GAAG;KAEpB,IAAI,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,EAC3B,OAAO,IAAI;;AAEb;KACA,IAAIvH,CAAC,GAAG,CAAC;KAET,IAAI,CAAC4H,MAAM,CAAC,IAAI,CAAChN,MAAM,GAAG,CAAC,CAAC;KAE5B,IAAI,CAAC2M,KAAK,CAAC,IAAI,CAAC3M,MAAM,CAAC,GAAG,CAAC;AAE3B,KAAA,OAAOoF,CAAC,GAAG,IAAI,CAACpF,MAAM,IAAI,IAAI,CAAC2M,KAAK,CAACvH,CAAC,CAAC,IAAI,SAAS,EAAEA,CAAC,EAAE,EAAE;AACzD,OAAA,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,IAAI,SAAS;OAC1B,IAAI,CAACuH,KAAK,CAACvH,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AACxB;AAEA,KAAA,IAAI,CAACpF,MAAM,GAAGkN,IAAI,CAACC,GAAG,CAAC,IAAI,CAACnN,MAAM,EAAEoF,CAAC,GAAG,CAAC,CAAC;;AAE1C;AACA,KAAA,OAAO,IAAI;AACb;;AAEA;AACF;AACA;;GAEEgI,IAAIA,CAAC9N,GAAG,EAAE;KACR+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KAEtC,IAAI,IAAI,CAACsN,QAAQ,KAAKtN,GAAG,CAACsN,QAAQ,EAAE;AAClC;AACA;AACA,OAAA,IAAI,CAACE,KAAK,CAAC,IAAI,EAAExN,GAAG,CAAC;AACvB,MAAC,MAAM;AACL;AACA;OACA,MAAMiL,GAAG,GAAG,IAAI,CAACgD,IAAI,CAACjO,GAAG,CAAC;;AAE1B;OACA,IAAIiL,GAAG,KAAK,CAAC,EAAE;AACb,SAAA,IAAI,CAACoC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;SACjB,IAAI,CAAC3M,MAAM,GAAG,CAAC;SACf,IAAI,CAAC4M,QAAQ,GAAG,CAAC;AACjB,SAAA,OAAO,IAAI;AACb;OAEA,IAAIrC,GAAG,GAAG,CAAC,EAAE;AACX,SAAA,IAAI,CAACiD,KAAK,CAAClO,GAAG,EAAE,IAAI,CAAC;SACrB,IAAI,CAACsN,QAAQ,IAAI,CAAC;AACpB,QAAC,MAAM;AACL,SAAA,IAAI,CAACY,KAAK,CAAC,IAAI,EAAElO,GAAG,CAAC;AACvB;AACF;AAEA,KAAA,OAAO,IAAI;AACb;GAEAmO,KAAKA,CAACnO,GAAG,EAAE;KACT+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AAEjC,KAAA,MAAMsN,QAAQ,GAAItN,GAAG,GAAG,CAAC,GAAI,CAAC;AAE9B,KAAA,IAAIsN,QAAQ,EACVtN,GAAG,GAAG,CAACA,GAAG;AAEZ,KAAA,IAAI,IAAI,CAACsN,QAAQ,KAAKA,QAAQ,EAAE;AAC9B;AACA;AACA,OAAA,IAAI,CAACK,MAAM,CAAC3N,GAAG,CAAC;AAClB,MAAC,MAAM;AACL;AACA;AACA,OAAA,IAAI,IAAI,CAACU,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC2M,KAAK,CAAC,CAAC,CAAC,GAAGrN,GAAG,EAAE;AAC5C,SAAA,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,GAAGrN,GAAG,GAAG,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC;SACnC,IAAI,CAACC,QAAQ,IAAI,CAAC;AACpB,QAAC,MAAM;AACL,SAAA,IAAI,CAACe,MAAM,CAACrO,GAAG,CAAC;AAClB;AACF;AAEA,KAAA,OAAO,IAAI;AACb;GAEAsO,GAAGA,CAACtO,GAAG,EAAE;KACP+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AAEtC,KAAA,IAAIA,GAAG,CAACU,MAAM,GAAG,IAAI,CAACA,MAAM,EAC1B,OAAOV,GAAG,CAACuO,KAAK,EAAE,CAACT,IAAI,CAAC,IAAI,CAAC;KAE/B,OAAO,IAAI,CAACS,KAAK,EAAE,CAACT,IAAI,CAAC9N,GAAG,CAAC;AAC/B;GAEAwO,IAAIA,CAACxO,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACJ,KAAK,CAACnO,GAAG,CAAC;AAChC;;AAEA;AACF;AACA;;AAEEkO,GAAAA,KAAKA,CAAC9G,CAAC,EAAEC,CAAC,EAAE;KACV,IAAIoG,KAAK,GAAG,CAAC;KACb,IAAI3H,CAAC,GAAG,CAAC;;AAET;KACAlG,MAAM,CAACwH,CAAC,CAAC1G,MAAM,IAAI2G,CAAC,CAAC3G,MAAM,CAAC;KAE5B,IAAI0G,CAAC,KAAK,IAAI,EACZ,IAAI,CAACsG,MAAM,CAACtG,CAAC,CAAC1G,MAAM,CAAC;KAEvB,OAAOoF,CAAC,GAAGuB,CAAC,CAAC3G,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACxB,MAAMoD,CAAC,GAAG,CAAC9B,CAAC,CAACiG,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC,KAAKuB,CAAC,CAACgG,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG2H,KAAK;OAErDA,KAAK,GAAGvE,CAAC,IAAI,EAAE;OAEf,IAAI,CAACmE,KAAK,CAACvH,CAAC,CAAC,GAAGoD,CAAC,GAAG,SAAS;AAC/B;AAEA,KAAA,OAAOuE,KAAK,KAAK,CAAC,IAAI3H,CAAC,GAAGsB,CAAC,CAAC1G,MAAM,EAAEoF,CAAC,EAAE,EAAE;AACvC,OAAA,MAAMoD,CAAC,GAAG,CAAC9B,CAAC,CAACiG,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC,IAAI2H,KAAK;OAElCA,KAAK,GAAGvE,CAAC,IAAI,EAAE;OAEf,IAAI,CAACmE,KAAK,CAACvH,CAAC,CAAC,GAAGoD,CAAC,GAAG,SAAS;AAC/B;AAEAtJ,KAAAA,MAAM,CAAC6N,KAAK,KAAK,CAAC,CAAC;;AAEnB;KACA,IAAIrG,CAAC,KAAK,IAAI,EAAE;OACd,OAAOtB,CAAC,GAAGsB,CAAC,CAAC1G,MAAM,EAAEoF,CAAC,EAAE,EACtB,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,GAAGsB,CAAC,CAACiG,KAAK,CAACvH,CAAC,CAAC;AAC9B;AAEA,KAAA,IAAI,CAACpF,MAAM,GAAGkN,IAAI,CAACC,GAAG,CAAC,IAAI,CAACnN,MAAM,EAAEoF,CAAC,CAAC;AAEtC,KAAA,OAAO,IAAI,CAAC2I,MAAM,EAAE;AACtB;GAEAJ,MAAMA,CAACrO,GAAG,EAAE;AACV,KAAA,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,IAAIrN,GAAG;AAEpB,KAAA,IAAI,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EACpB,OAAO,IAAI,CAACqB,UAAU,EAAE;AAE1B9O,KAAAA,MAAM,CAAC,IAAI,CAACc,MAAM,KAAK,CAAC,CAAC;;AAEzB;KACA,IAAI,CAACgN,MAAM,CAAC,IAAI,CAAChN,MAAM,GAAG,CAAC,CAAC;KAE5B,KAAK,IAAIoF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,MAAM,IAAI,IAAI,CAAC2M,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;AACzD,OAAA,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,IAAI,SAAS;OAC1B,IAAI,CAACuH,KAAK,CAACvH,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AACxB;KAEA,IAAI,CAACuH,KAAK,CAAC,IAAI,CAAC3M,MAAM,CAAC,GAAG,CAAC;AAE3B,KAAA,OAAO,IAAI,CAAC+N,MAAM,EAAE;AACtB;;AAEA;AACF;AACA;;GAEEE,IAAIA,CAAC3O,GAAG,EAAE;KACR+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KAEtC,IAAI,IAAI,CAACsN,QAAQ,KAAKtN,GAAG,CAACsN,QAAQ,EAAE;AAClC;AACA;AACA,OAAA,IAAI,CAACE,KAAK,CAAC,IAAI,EAAExN,GAAG,CAAC;AACvB,MAAC,MAAM;AACL;AACA;OACA,MAAMiL,GAAG,GAAG,IAAI,CAACgD,IAAI,CAACjO,GAAG,CAAC;;AAE1B;OACA,IAAIiL,GAAG,KAAK,CAAC,EAAE;AACb,SAAA,IAAI,CAACoC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;SACjB,IAAI,CAAC3M,MAAM,GAAG,CAAC;SACf,IAAI,CAAC4M,QAAQ,GAAG,CAAC;AACjB,SAAA,OAAO,IAAI;AACb;OAEA,IAAIrC,GAAG,GAAG,CAAC,EAAE;AACX,SAAA,IAAI,CAACiD,KAAK,CAAClO,GAAG,EAAE,IAAI,CAAC;SACrB,IAAI,CAACsN,QAAQ,IAAI,CAAC;AACpB,QAAC,MAAM;AACL,SAAA,IAAI,CAACY,KAAK,CAAC,IAAI,EAAElO,GAAG,CAAC;AACvB;AACF;AAEA,KAAA,OAAO,IAAI;AACb;GAEA4O,KAAKA,CAAC5O,GAAG,EAAE;KACT+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AAEjC,KAAA,MAAMsN,QAAQ,GAAItN,GAAG,GAAG,CAAC,GAAI,CAAC;AAE9B,KAAA,IAAIsN,QAAQ,EACVtN,GAAG,GAAG,CAACA,GAAG;AAEZ,KAAA,IAAI,IAAI,CAACsN,QAAQ,KAAKA,QAAQ,EAAE;AAC9B;AACA;AACA,OAAA,IAAI,CAACK,MAAM,CAAC3N,GAAG,CAAC;AAClB,MAAC,MAAM;AACL;AACA;AACA,OAAA,IAAI,IAAI,CAACU,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC2M,KAAK,CAAC,CAAC,CAAC,GAAGrN,GAAG,EAAE;AAC5C,SAAA,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,GAAGrN,GAAG,GAAG,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC;SACnC,IAAI,CAACC,QAAQ,IAAI,CAAC;AACpB,QAAC,MAAM;AACL,SAAA,IAAI,CAACe,MAAM,CAACrO,GAAG,CAAC;AAClB;AACF;AAEA,KAAA,OAAO,IAAI;AACb;GAEA6O,GAAGA,CAAC7O,GAAG,EAAE;KACP,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACI,IAAI,CAAC3O,GAAG,CAAC;AAC/B;GAEA8O,IAAIA,CAAC9O,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACK,KAAK,CAAC5O,GAAG,CAAC;AAChC;;AAEA;AACF;AACA;;AAEE+O,GAAAA,IAAIA,CAAC/O,GAAG,EAAEgH,GAAG,EAAE;KACb+G,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KACtC+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChH,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KAEtC,IAAI,IAAI,CAACtG,MAAM,KAAK,EAAE,IAAIV,GAAG,CAACU,MAAM,KAAK,EAAE,EACzC,OAAOsO,WAAW,CAAC,IAAI,EAAEhP,GAAG,EAAEgH,GAAG,CAAC;KAEpC,MAAMN,GAAG,GAAG,IAAI,CAAChG,MAAM,GAAGV,GAAG,CAACU,MAAM;AAEpC,KAAA,IAAIgG,GAAG,GAAG,EAAE,EACV,OAAOuI,UAAU,CAAC,IAAI,EAAEjP,GAAG,EAAEgH,GAAG,CAAC;AAEnC,KAAA,IAAIN,GAAG,GAAG,IAAI,EACZ,OAAOwI,QAAQ,CAAC,IAAI,EAAElP,GAAG,EAAEgH,GAAG,CAAC;KAEjC,OAAOmI,UAAU,CAAC,IAAI,EAAEnP,GAAG,EAAEgH,GAAG,CAAC;AACnC;;AAEA;AACF;AACA;;GAEEoI,IAAIA,CAACpP,GAAG,EAAE;KACR,OAAO,IAAI,CAACqP,GAAG,CAACrP,GAAG,CAAC,CAACsP,KAAK,CAAC,IAAI,CAAC;AAClC;GAEAC,KAAKA,CAACvP,GAAG,EAAE;KACT+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AAEjC,KAAA,MAAMwP,GAAG,GAAIxP,GAAG,GAAG,CAAC,GAAI,CAAC;AAEzB,KAAA,IAAIwP,GAAG,EACLxP,GAAG,GAAG,CAACA,GAAG;;AAEZ;KACA,IAAIyN,KAAK,GAAG,CAAC;AAEb,KAAA,KAAK,IAAI3H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACpC,MAAMuE,CAAC,GAAG,IAAI,CAACgD,KAAK,CAACvH,CAAC,CAAC,GAAG9F,GAAG;OAC7B,MAAMO,EAAE,GAAG,CAAC8J,CAAC,GAAG,SAAS,KAAKoD,KAAK,GAAG,SAAS,CAAC;OAEhDA,KAAK,KAAK,EAAE;AACZA,OAAAA,KAAK,IAAKpD,CAAC,GAAG,SAAS,GAAI,CAAC;OAC5BoD,KAAK,IAAIlN,EAAE,KAAK,EAAE;OAElB,IAAI,CAAC8M,KAAK,CAACvH,CAAC,CAAC,GAAGvF,EAAE,GAAG,SAAS;AAChC;KAEA,IAAI,CAAC+M,QAAQ,IAAIkC,GAAG;KAEpB,IAAI/B,KAAK,KAAK,CAAC,EAAE;OACf,IAAI,CAACC,MAAM,CAAC,IAAI,CAAChN,MAAM,GAAG,CAAC,CAAC;OAC5B,IAAI,CAAC2M,KAAK,CAAC,IAAI,CAAC3M,MAAM,EAAE,CAAC,GAAG+M,KAAK;AACnC,MAAC,MAAM;OACL,IAAI,CAACgB,MAAM,EAAE;AACf;AAEA,KAAA,OAAO,IAAI;AACb;GAEAY,GAAGA,CAACrP,GAAG,EAAE;KACP+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KAEtC,MAAM0G,GAAG,GAAG,IAAI,CAAChG,MAAM,GAAGV,GAAG,CAACU,MAAM;AACpC,KAAA,MAAMsG,GAAG,GAAG,IAAIkG,EAAE,EAAE;KAEpBlG,GAAG,CAACqG,KAAK,GAAG,IAAIpI,KAAK,CAACyB,GAAG,CAAC;KAE1B,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,GAAG,EAAEZ,CAAC,EAAG,EAC3BkB,GAAG,CAACqG,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC;KAElB,OAAO,IAAI,CAACiJ,IAAI,CAAC/O,GAAG,EAAEgH,GAAG,CAAC;AAC5B;GAEAyI,IAAIA,CAACzP,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACgB,KAAK,CAACvP,GAAG,CAAC;AAChC;;AAEA;AACF;AACA;;AAEE0P,GAAAA,QAAQA,CAAC1P,GAAG,EAAE+I,IAAI,EAAE;KAClBgF,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KACtC+N,OAAO,CAAEhF,IAAI,KAAK,CAAC,KAAMA,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;KAEhD,MAAMG,CAAC,GAAG,IAAI,CAACmG,GAAG,CAACrP,GAAG,CAAC;KACvB,MAAMqH,CAAC,GAAG6B,CAAC,CAACyG,MAAM,CAAC5G,IAAI,GAAG,CAAC,CAAC;AAE5BG,KAAAA,CAAC,CAAC0G,MAAM,CAAC7G,IAAI,CAAC;AAEd,KAAA,IAAI,IAAI,CAACuE,QAAQ,GAAGtN,GAAG,CAACsN,QAAQ,EAC9B,OAAOpE,CAAC,CAAC0F,KAAK,CAACvH,CAAC,CAAC;AAEnB,KAAA,OAAO6B,CAAC,CAACiF,KAAK,CAAC9G,CAAC,CAAC;AACnB;;AAEA;AACF;AACA;;AAEEwI,GAAAA,IAAIA,CAAC7P,GAAG,EAAE8P,KAAK,EAAE;KACf/B,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KACtCJ,MAAM,CAAC,CAACkQ,KAAK,GAAGvD,KAAK,CAACM,GAAG,MAAMiD,KAAK,CAAC;AACrClQ,KAAAA,MAAM,CAACkQ,KAAK,KAAKvD,KAAK,CAACC,IAAI,CAAC;KAE5B,MAAMpF,CAAC,GAAG,IAAI;KACd,MAAMC,CAAC,GAAGrH,GAAG;AAEb+P,KAAAA,OAAO,CAAC,CAAC1I,CAAC,CAAC2I,MAAM,EAAE,CAAC;AAEpB,KAAA,IAAI5I,CAAC,CAAC4I,MAAM,EAAE,EACZ,OAAO,CAAC,IAAI9C,EAAE,CAAC,CAAC,CAAC,EAAE,IAAIA,EAAE,CAAC,CAAC,CAAC,CAAC;AAE/B,KAAA,MAAM+C,EAAE,GAAG7I,CAAC,CAACkG,QAAQ;AACrB,KAAA,MAAM4C,EAAE,GAAG7I,CAAC,CAACiG,QAAQ;KAErBlG,CAAC,CAACkG,QAAQ,GAAG,CAAC;KACdjG,CAAC,CAACiG,QAAQ,GAAG,CAAC;KAEd,IAAI6C,CAAC,GAAG,IAAI;KACZ,IAAIjH,CAAC,GAAG,IAAI;KAEZ,IAAI9B,CAAC,CAAC6G,IAAI,CAAC5G,CAAC,CAAC,GAAG,CAAC,EAAE;AACjB,OAAA,IAAIyI,KAAK,GAAGvD,KAAK,CAACE,GAAG,EACnB0D,CAAC,GAAG,IAAIjD,EAAE,CAAC,CAAC,CAAC;AAEf,OAAA,IAAI4C,KAAK,GAAGvD,KAAK,CAACG,GAAG,EACnBxD,CAAC,GAAG9B,CAAC,CAACmH,KAAK,EAAE;AACjB,MAAC,MAAM,IAAIlH,CAAC,CAAC3G,MAAM,KAAK,CAAC,EAAE;AACzB,OAAA,IAAIoP,KAAK,GAAGvD,KAAK,CAACE,GAAG,EACnB0D,CAAC,GAAG/I,CAAC,CAACgJ,IAAI,CAAC/I,CAAC,CAACgG,KAAK,CAAC,CAAC,CAAC,CAAC;AAExB,OAAA,IAAIyC,KAAK,GAAGvD,KAAK,CAACG,GAAG,EACnBxD,CAAC,GAAG9B,CAAC,CAACiJ,IAAI,CAAChJ,CAAC,CAACgG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1B,MAAC,MAAM;AACL,OAAA,CAAC8C,CAAC,EAAEjH,CAAC,CAAC,GAAG9B,CAAC,CAACkJ,QAAQ,CAACjJ,CAAC,EAAEyI,KAAK,CAAC;AAC/B;KAEA1I,CAAC,CAACkG,QAAQ,GAAG2C,EAAE;KACf5I,CAAC,CAACiG,QAAQ,GAAG4C,EAAE;AAEf,KAAA,IAAIJ,KAAK,GAAGvD,KAAK,CAACE,GAAG,EAAE;OACrB0D,CAAC,CAAC7C,QAAQ,GAAGlG,CAAC,CAACkG,QAAQ,GAAGjG,CAAC,CAACiG,QAAQ;OACpC6C,CAAC,CAACzB,UAAU,EAAE;AAChB;AAEA,KAAA,IAAIoB,KAAK,GAAGvD,KAAK,CAACG,GAAG,EAAE;AACrBxD,OAAAA,CAAC,CAACoE,QAAQ,GAAGlG,CAAC,CAACkG,QAAQ;OACvBpE,CAAC,CAACwF,UAAU,EAAE;AAChB;AAEA,KAAA,IAAIoB,KAAK,GAAGvD,KAAK,CAACK,MAAM,EAAE;AACxB,OAAA,IAAIkD,KAAK,GAAGvD,KAAK,CAACE,GAAG,EAAE;SACrB7M,MAAM,CAAC,CAACkQ,KAAK,GAAGvD,KAAK,CAACG,GAAG,MAAM,CAAC,CAAC;AAEjC,SAAA,IAAIxD,CAAC,CAACoE,QAAQ,KAAK,CAAC,EAAE;WACpB,IAAIjG,CAAC,CAACiG,QAAQ,KAAK,CAAC,EAClB6C,CAAC,CAAChC,KAAK,CAAC,CAAC,CAAC,CAAC,KAEXgC,CAAC,CAACvB,KAAK,CAAC,CAAC,CAAC;AACd;AACF;AAEA,OAAA,IAAIkB,KAAK,GAAGvD,KAAK,CAACG,GAAG,EAAE;AACrB,SAAA,IAAIxD,CAAC,CAACoE,QAAQ,KAAK,CAAC,EAAE;WACpB,IAAIjG,CAAC,CAACiG,QAAQ,KAAK,CAAC,EAClBpE,CAAC,CAACyF,IAAI,CAACtH,CAAC,CAAC,CAAC,KAEV6B,CAAC,CAAC4E,IAAI,CAACzG,CAAC,CAAC;AACb;AACF;AACF;AAEA,KAAA,OAAO,CAAC8I,CAAC,EAAEjH,CAAC,CAAC;AACf;AAEAoH,GAAAA,QAAQA,CAACtQ,GAAG,EAAE8P,KAAK,EAAE;AACnB,KAAA,IAAI1I,CAAC,GAAG,IAAI,CAACmH,KAAK,EAAE;KACpB,IAAIlH,CAAC,GAAGrH,GAAG;KACX,IAAImQ,CAAC,GAAG,IAAI;AACZ,KAAA,IAAI3P,EAAE;;AAEN;AACA,KAAA,MAAM+P,IAAI,GAAGlJ,CAAC,CAACgG,KAAK,CAAChG,CAAC,CAAC3G,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;KACtC,MAAM+K,KAAK,GAAG,EAAE,GAAG+E,SAAS,CAACD,IAAI,CAAC;KAElC,IAAI9E,KAAK,KAAK,CAAC,EAAE;AACfpE,OAAAA,CAAC,GAAGA,CAAC,CAACkH,KAAK,EAAE;AAEbnH,OAAAA,CAAC,CAACqJ,MAAM,CAAChF,KAAK,CAAC;AACfpE,OAAAA,CAAC,CAACoJ,MAAM,CAAChF,KAAK,CAAC;AAEfjL,OAAAA,EAAE,GAAG6G,CAAC,CAACgG,KAAK,CAAChG,CAAC,CAAC3G,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;AAChC,MAAC,MAAM;OACLF,EAAE,GAAG+P,IAAI;AACX;;AAEA;KACA,MAAMG,CAAC,GAAGtJ,CAAC,CAAC1G,MAAM,GAAG2G,CAAC,CAAC3G,MAAM;AAE7Bd,KAAAA,MAAM,CAAC8Q,CAAC,IAAI,CAAC,CAAC;AAEd,KAAA,IAAIZ,KAAK,GAAGvD,KAAK,CAACE,GAAG,EAAE;AACrB0D,OAAAA,CAAC,GAAG,IAAIjD,EAAE,CAAC,CAAC,CAAC;AACbiD,OAAAA,CAAC,CAACzP,MAAM,GAAGgQ,CAAC,GAAG,CAAC;OAChBP,CAAC,CAAC9C,KAAK,GAAG,IAAIpI,KAAK,CAACkL,CAAC,CAACzP,MAAM,CAAC;OAE7B,KAAK,IAAIoF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqK,CAAC,CAACzP,MAAM,EAAEoF,CAAC,EAAE,EAC/BqK,CAAC,CAAC9C,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC;AAClB;;AAEA;AACA,KAAA,MAAMyB,CAAC,GAAGH,CAAC,CAACmH,KAAK,EAAE;KAEnBhH,CAAC,CAACoJ,YAAY,CAACtJ,CAAC,EAAE,CAAC,EAAEqJ,CAAC,CAAC;AAEvB,KAAA,IAAInJ,CAAC,CAAC+F,QAAQ,KAAK,CAAC,EAAE;OACpB,IAAI6C,CAAC,EACHA,CAAC,CAAC9C,KAAK,CAACqD,CAAC,CAAC,GAAG,CAAC;OAEhBtJ,CAAC,GAAGG,CAAC;AACP;;AAEA;AACA,KAAA,KAAK,IAAI0C,CAAC,GAAGyG,CAAC,GAAG,CAAC,EAAEzG,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;OAC/B,MAAM2G,GAAG,GAAGxJ,CAAC,CAACiG,KAAK,CAAChG,CAAC,CAAC3G,MAAM,GAAGuJ,CAAC,CAAC;AACjC,OAAA,MAAM4G,GAAG,GAAGzJ,CAAC,CAACiG,KAAK,CAAChG,CAAC,CAAC3G,MAAM,GAAGuJ,CAAC,GAAG,CAAC,CAAC;OACrC,MAAM6G,GAAG,GAAI,CAACF,GAAG,GAAG,SAAS,GAAGC,GAAG,IAAIrQ,EAAE,GAAI,CAAC;OAE9C,IAAIuQ,EAAE,GAAGnD,IAAI,CAACoD,GAAG,CAACF,GAAG,EAAE,SAAS,CAAC;OAEjC1J,CAAC,CAACuJ,YAAY,CAACtJ,CAAC,EAAE0J,EAAE,EAAE9G,CAAC,CAAC;AAExB,OAAA,OAAO7C,CAAC,CAACkG,QAAQ,KAAK,CAAC,EAAE;SACvByD,EAAE,IAAI,CAAC;SACP3J,CAAC,CAACkG,QAAQ,GAAG,CAAC;SACdlG,CAAC,CAACuJ,YAAY,CAACtJ,CAAC,EAAE,CAAC,EAAE4C,CAAC,CAAC;SACvB7C,CAAC,CAAC6J,IAAI,EAAE;AACV;OAEA,IAAId,CAAC,EACHA,CAAC,CAAC9C,KAAK,CAACpD,CAAC,CAAC,GAAG8G,EAAE;AACnB;;AAEA;AACA,KAAA,IAAIZ,CAAC,EACHA,CAAC,CAAC1B,MAAM,EAAE;;AAEZ;AACA;AACA,KAAA,IAAKqB,KAAK,GAAGvD,KAAK,CAACG,GAAG,IAAKjB,KAAK,KAAK,CAAC,EACpCrE,CAAC,CAACwI,MAAM,CAACnE,KAAK,CAAC;AAEjB,KAAA,OAAO,CAAC0E,CAAC,EAAE/I,CAAC,CAAC;AACf;AAEAuJ,GAAAA,YAAYA,CAAC3Q,GAAG,EAAEqP,GAAG,EAAE5D,KAAK,EAAE;KAC5B,IAAIgC,KAAK,GAAG,CAAC;KACb,IAAI3H,CAAC,GAAG,CAAC;KAET,IAAI,CAACoL,OAAO,CAAClR,GAAG,CAACU,MAAM,GAAG+K,KAAK,CAAC;KAEhC,OAAO3F,CAAC,GAAG9F,GAAG,CAACU,MAAM,EAAEoF,CAAC,EAAE,EAAE;AAC1B,OAAA,MAAM4F,CAAC,GAAG,CAAC,IAAI,CAAC2B,KAAK,CAACvH,CAAC,GAAG2F,KAAK,CAAC,GAAG,CAAC,IAAIgC,KAAK;OAC7C,MAAMvE,CAAC,GAAGlJ,GAAG,CAACqN,KAAK,CAACvH,CAAC,CAAC,GAAGuJ,GAAG;OAC5B,MAAMhF,CAAC,GAAGqB,CAAC,IAAIxC,CAAC,GAAG,SAAS,CAAC;OAE7BuE,KAAK,GAAG,CAACpD,CAAC,IAAI,EAAE,KAAMnB,CAAC,GAAG,SAAS,GAAI,CAAC,CAAC;OAEzC,IAAI,CAACmE,KAAK,CAACvH,CAAC,GAAG2F,KAAK,CAAC,GAAGpB,CAAC,GAAG,SAAS;AACvC;KAEA,OAAOvE,CAAC,GAAG,IAAI,CAACpF,MAAM,GAAG+K,KAAK,EAAE3F,CAAC,EAAE,EAAE;AACnC,OAAA,MAAMuE,CAAC,GAAG,CAAC,IAAI,CAACgD,KAAK,CAACvH,CAAC,GAAG2F,KAAK,CAAC,GAAG,CAAC,IAAIgC,KAAK;OAE7CA,KAAK,GAAGpD,CAAC,IAAI,EAAE;OAEf,IAAI,CAACgD,KAAK,CAACvH,CAAC,GAAG2F,KAAK,CAAC,GAAGpB,CAAC,GAAG,SAAS;AACvC;KAEA,IAAIoD,KAAK,KAAK,CAAC,EACb,OAAO,IAAI,CAACgB,MAAM,EAAE;;AAEtB;AACA7O,KAAAA,MAAM,CAAC6N,KAAK,KAAK,EAAE,CAAC;KAEpBA,KAAK,GAAG,CAAC;AAET,KAAA,KAAK,IAAI3H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,MAAM,EAAEoF,CAAC,EAAE,EAAE;AACpC,OAAA,MAAMuE,CAAC,GAAG,EAAE,IAAI,CAACgD,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG2H,KAAK;OAEtCA,KAAK,GAAGpD,CAAC,IAAI,EAAE;OAEf,IAAI,CAACgD,KAAK,CAACvH,CAAC,CAAC,GAAGuE,CAAC,GAAG,SAAS;AAC/B;KAEA,IAAI,CAACiD,QAAQ,GAAG,CAAC;AAEjB,KAAA,OAAO,IAAI,CAACmB,MAAM,EAAE;AACtB;;AAEA;AACF;AACA;;GAEE0C,MAAMA,CAACnR,GAAG,EAAE;KACV,OAAO,IAAI,CAAC6P,IAAI,CAAC7P,GAAG,EAAEuM,KAAK,CAACI,IAAI,CAAC;AACnC;;AAEA;AACF;AACA;;GAEEyE,IAAIA,CAACpR,GAAG,EAAE;KACR,OAAO,IAAI,CAAC8Q,GAAG,CAAC9Q,GAAG,CAAC,CAACsP,KAAK,CAAC,IAAI,CAAC;AAClC;GAEA+B,KAAKA,CAACrR,GAAG,EAAE;KACT+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjC+P,KAAAA,OAAO,CAAC/P,GAAG,KAAK,CAAC,CAAC;AAElB,KAAA,MAAMwP,GAAG,GAAIxP,GAAG,GAAG,CAAC,GAAI,CAAC;AAEzB,KAAA,IAAIwP,GAAG,EACLxP,GAAG,GAAG,CAACA,GAAG;KAEZ,IAAIyN,KAAK,GAAG,CAAC;AAEb,KAAA,KAAK,IAAI3H,CAAC,GAAG,IAAI,CAACpF,MAAM,GAAG,CAAC,EAAEoF,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;AACzC,OAAA,MAAMuE,CAAC,GAAG,CAAC,IAAI,CAACgD,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC,IAAI2H,KAAK,GAAG,SAAS;OAEjD,IAAI,CAACJ,KAAK,CAACvH,CAAC,CAAC,GAAIuE,CAAC,GAAGrK,GAAG,GAAI,CAAC;OAE7ByN,KAAK,GAAGpD,CAAC,GAAGrK,GAAG;AACjB;KAEA,IAAI,CAACsN,QAAQ,IAAIkC,GAAG;AAEpB,KAAA,OAAO,IAAI,CAACf,MAAM,EAAE;AACtB;GAEAqC,GAAGA,CAAC9Q,GAAG,EAAE;AACP,KAAA,OAAO,IAAI,CAAC6P,IAAI,CAAC7P,GAAG,EAAEuM,KAAK,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC;AACrC;GAEA2D,IAAIA,CAACpQ,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAAC8C,KAAK,CAACrR,GAAG,CAAC;AAChC;;AAEA;AACF;AACA;;GAEEsR,IAAIA,CAACtR,GAAG,EAAE;KACR,OAAO,IAAI,CAACuR,GAAG,CAACvR,GAAG,CAAC,CAACsP,KAAK,CAAC,IAAI,CAAC;AAClC;GAEAkC,KAAKA,CAACxR,GAAG,EAAE;KACT,IAAI0Q,CAAC,GAAG,IAAI,CAACe,KAAK,CAACzR,GAAG,CAAC;KAEvB,IAAI0Q,CAAC,GAAG,CAAC,EACPA,CAAC,GAAG,CAACA,CAAC;AAER,KAAA,IAAI,CAACrD,KAAK,CAAC,CAAC,CAAC,GAAGqD,CAAC;KACjB,IAAI,CAAChQ,MAAM,GAAG,CAAC;AAEf,KAAA,OAAO,IAAI,CAACgO,UAAU,EAAE;AAC1B;GAEA6C,GAAGA,CAACvR,GAAG,EAAE;AACP,KAAA,OAAO,IAAI,CAAC6P,IAAI,CAAC7P,GAAG,EAAEuM,KAAK,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC;AACrC;GAEA2D,IAAIA,CAACrQ,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACiD,KAAK,CAACxR,GAAG,CAAC;AAChC;GAEAyR,KAAKA,CAACzR,GAAG,EAAE;KACT+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjC+P,KAAAA,OAAO,CAAC/P,GAAG,KAAK,CAAC,CAAC;KAElB,IAAIA,GAAG,GAAG,CAAC,EACTA,GAAG,GAAG,CAACA,GAAG;KAEZ,MAAM0R,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI1R,GAAG;KAEzB,IAAI2R,GAAG,GAAG,CAAC;AAEX,KAAA,KAAK,IAAI7L,CAAC,GAAG,IAAI,CAACpF,MAAM,GAAG,CAAC,EAAEoF,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EACvC6L,GAAG,GAAG,CAACD,CAAC,GAAGC,GAAG,IAAI,IAAI,CAACtE,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI9F,GAAG;KAE7C,OAAO,IAAI,CAACsN,QAAQ,KAAK,CAAC,GAAI,CAACqE,GAAG,GAAG,CAAC,GAAIA,GAAG;AAC/C;;AAEA;AACF;AACA;;GAEEC,MAAMA,CAAC5R,GAAG,EAAE;AACV,KAAA,OAAO,IAAI,CAAC6P,IAAI,CAAC7P,GAAG,EAAEuM,KAAK,CAACI,IAAI,GAAGJ,KAAK,CAACK,MAAM,CAAC;AAClD;;AAEA;AACF;AACA;;GAEEiF,IAAIA,CAAC7R,GAAG,EAAE;KACR,OAAO,IAAI,CAAC8B,GAAG,CAAC9B,GAAG,CAAC,CAACsP,KAAK,CAAC,IAAI,CAAC;AAClC;GAEAwC,KAAKA,CAAC9R,GAAG,EAAE;AACT,KAAA,IAAI,IAAI,CAACsN,QAAQ,KAAK,CAAC,EACrB,OAAO,IAAI,CAAC+D,KAAK,CAACrR,GAAG,CAAC;KAExB,MAAMkJ,CAAC,GAAG,IAAI,CAACuI,KAAK,CAACzR,GAAG,CAAC;AAEzB,KAAA,IAAI,CAACqR,KAAK,CAACrR,GAAG,CAAC;KAEf,IAAIkJ,CAAC,GAAG,CAAC,EAAE;AACT,OAAA,IAAIlJ,GAAG,GAAG,CAAC,EACT,IAAI,CAACmO,KAAK,CAAC,CAAC,CAAC,CAAC,KAEd,IAAI,CAACS,KAAK,CAAC,CAAC,CAAC;AACjB;AAEA,KAAA,OAAO,IAAI;AACb;GAEA9M,GAAGA,CAAC9B,GAAG,EAAE;AACP,KAAA,OAAO,IAAI,CAAC6P,IAAI,CAAC7P,GAAG,EAAEuM,KAAK,CAACI,IAAI,GAAGJ,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;AACrD;GAEAmF,IAAIA,CAAC/R,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACuD,KAAK,CAAC9R,GAAG,CAAC;AAChC;;AAEA;AACF;AACA;;GAEEgS,IAAIA,CAAChS,GAAG,EAAE;KACR,IAAI,IAAI,CAACiO,IAAI,CAACjO,GAAG,CAAC,GAAG,CAAC,EAAE;AACtB,OAAA,IAAI,IAAI,CAACsN,QAAQ,KAAK,CAAC,EAAE;AACvB,SAAA,IAAI,CAACY,KAAK,CAAClO,GAAG,EAAE,IAAI,CAAC;SACrB,IAAI,CAACsN,QAAQ,GAAG,CAAC;AACnB;AACA,OAAA,OAAO,IAAI;AACb;KAEA,OAAO,IAAI,CAACzL,GAAG,CAAC7B,GAAG,CAAC,CAACsP,KAAK,CAAC,IAAI,CAAC;AAClC;GAEA2C,KAAKA,CAACjS,GAAG,EAAE;KACT,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC6E,KAAK,CAAClS,GAAG,CAAC;KAC/B,IAAI,CAACU,MAAM,GAAG,CAAC;KACf,IAAI,CAAC4M,QAAQ,GAAG,CAAC;AACjB,KAAA,OAAO,IAAI;AACb;GAEAzL,GAAGA,CAAC7B,GAAG,EAAE;AACP,KAAA,OAAO,IAAI,CAAC6P,IAAI,CAAC7P,GAAG,EAAEuM,KAAK,CAACG,GAAG,GAAGH,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;AACpD;GAEAuF,IAAIA,CAACnS,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAAC0D,KAAK,CAACjS,GAAG,CAAC;AAChC;GAEAkS,KAAKA,CAAClS,GAAG,EAAE;KACT+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;KAEjC,IAAIkJ,CAAC,GAAG,IAAI,CAACuI,KAAK,CAACzR,GAAG,CAAC;KAEvB,IAAIkJ,CAAC,GAAG,CAAC,EAAE;OACT,IAAIlJ,GAAG,GAAG,CAAC,EACTkJ,CAAC,IAAIlJ,GAAG,CAAC,KAETkJ,CAAC,IAAIlJ,GAAG;AACZ;AAEA,KAAA,OAAOkJ,CAAC;AACV;;AAEA;AACF;AACA;;GAEEkJ,QAAQA,CAACpS,GAAG,EAAE;KACZ,MAAM,CAACmQ,CAAC,EAAEjH,CAAC,CAAC,GAAG,IAAI,CAACiI,MAAM,CAACnR,GAAG,CAAC;;AAE/B;AACA,KAAA,IAAIkJ,CAAC,CAAC8G,MAAM,EAAE,EACZ,OAAOG,CAAC;KAEV,MAAMkC,GAAG,GAAGrS,GAAG,CAACqN,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AAE5BrN,KAAAA,GAAG,CAAC4P,MAAM,CAAC,CAAC,CAAC;KAEb,MAAM3E,GAAG,GAAG/B,CAAC,CAAC+E,IAAI,CAACjO,GAAG,CAAC;AAEvBA,KAAAA,GAAG,CAACyQ,MAAM,CAAC,CAAC,CAAC;AAEbzQ,KAAAA,GAAG,CAACqN,KAAK,CAAC,CAAC,CAAC,IAAIgF,GAAG;;AAEnB;AACA,KAAA,IAAIpH,GAAG,GAAG,CAAC,IAAKjL,GAAG,CAACsS,KAAK,EAAE,IAAIrH,GAAG,KAAK,CAAE,EACvC,OAAOkF,CAAC;;AAEV;AACA,KAAA,IAAI,IAAI,CAAC7C,QAAQ,GAAGtN,GAAG,CAACsN,QAAQ,EAC9B,OAAO6C,CAAC,CAACvB,KAAK,CAAC,CAAC,CAAC;AAEnB,KAAA,OAAOuB,CAAC,CAAChC,KAAK,CAAC,CAAC,CAAC;AACnB;;AAEA;AACF;AACA;;GAEEoE,IAAIA,CAACvS,GAAG,EAAE;KACR,OAAO,IAAI,CAACwS,GAAG,CAACxS,GAAG,CAAC,CAACsP,KAAK,CAAC,IAAI,CAAC;AAClC;GAEAmD,KAAKA,CAACzS,GAAG,EAAE;KACT,OAAO,IAAI,CAAC0S,IAAI,CAAC1S,GAAG,CAAC,CAACsP,KAAK,CAAC,IAAI,CAAC;AACnC;GAEAkD,GAAGA,CAACxS,GAAG,EAAE;KACP+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AAEtC,KAAA,IAAIqH,CAAC,GAAGmJ,SAAS,CAACxQ,GAAG,CAACqN,KAAK,CAACrN,GAAG,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC;AAC5C,KAAA,IAAIwI,CAAC,GAAG,IAAIgE,EAAE,CAAC,CAAC,CAAC;AAEjB,KAAA,KAAK,IAAIpH,CAAC,GAAG9F,GAAG,CAACU,MAAM,GAAG,CAAC,EAAEoF,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;OACxC,MAAMyK,IAAI,GAAGvQ,GAAG,CAACqN,KAAK,CAACvH,CAAC,CAAC;AAEzB,OAAA,KAAK,IAAImE,CAAC,GAAG5C,CAAC,GAAG,CAAC,EAAE4C,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;AAC/Bf,SAAAA,CAAC,GAAGA,CAAC,CAACyJ,GAAG,EAAE;AAEX,SAAA,IAAKpC,IAAI,IAAItG,CAAC,GAAI,CAAC,EACjBf,CAAC,GAAGA,CAAC,CAACmG,GAAG,CAAC,IAAI,CAAC;AACnB;OAEAhI,CAAC,GAAG,EAAE;AACR;AAEA,KAAA,OAAO6B,CAAC;AACV;GAEAwJ,IAAIA,CAAC1S,GAAG,EAAE;KACR+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;KAEjC,IAAIA,GAAG,GAAG,CAAC,EACTA,GAAG,GAAG,CAACA,GAAG;KAEZ,IAAIA,GAAG,KAAK,CAAC,EACX,OAAO,IAAIkN,EAAE,CAAC,CAAC,CAAC;KAElB,IAAIlN,GAAG,KAAK,CAAC,EACX,OAAO,IAAI,CAACuO,KAAK,EAAE;AAErB,KAAA,MAAMxF,IAAI,GAAGyH,SAAS,CAACxQ,GAAG,CAAC;KAE3B,IAAIkJ,CAAC,GAAG,IAAI;AAEZ,KAAA,KAAK,IAAIpD,CAAC,GAAGiD,IAAI,GAAG,CAAC,EAAEjD,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;AAClCoD,OAAAA,CAAC,GAAGA,CAAC,CAACyJ,GAAG,EAAE;AAEX,OAAA,IAAK3S,GAAG,IAAI8F,CAAC,GAAI,CAAC,EAChBoD,CAAC,GAAGA,CAAC,CAACmG,GAAG,CAAC,IAAI,CAAC;AACnB;AAEA,KAAA,OAAOnG,CAAC;AACV;AAEA0J,GAAAA,IAAIA,GAAG;AACL,KAAA,OAAO,IAAI,CAACxD,IAAI,CAAC,IAAI,CAAC;AACxB;AAEAuD,GAAAA,GAAGA,GAAG;AACJ,KAAA,OAAO,IAAI,CAACtD,GAAG,CAAC,IAAI,CAAC;AACvB;;AAEA;AACF;AACA;;AAEEwD,GAAAA,QAAQA,CAACL,GAAG,EAAEjB,GAAG,EAAE;KACjBxD,OAAO,CAAEyE,GAAG,KAAK,CAAC,KAAMA,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;KAE7C,IAAIA,GAAG,KAAK,CAAC,EACX,MAAM,IAAIM,UAAU,CAAC,cAAc,CAAC;AAEtC,KAAA,IAAI,CAACN,GAAG,GAAG,IAAI,CAAClF,QAAQ,EACtB,MAAM,IAAIwF,UAAU,CAAC,0BAA0B,CAAC;KAElD,IAAI,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EACpB,OAAO,CAAC,IAAI,CAACxE,KAAK,EAAE,EAAE,IAAIrB,EAAE,CAAC,CAAC,CAAC,CAAC;AAElC,KAAA,IAAI8F,CAAC,GAAG,IAAI9F,EAAE,CAAC,CAAC,CAAC;AACjB,KAAA,IAAI+F,CAAC,GAAG/F,EAAE,CAACzB,KAAK,CAAC,CAAC,EAAE,IAAI,CAACyH,SAAS,EAAE,GAAGV,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KACnD,IAAIW,CAAC,EAAEjK,CAAC;KAER,IAAI,IAAI,CAACoE,QAAQ,KAAK,CAAC,EACrB2F,CAAC,CAAChC,IAAI,EAAE;KAEV,IAAIuB,GAAG,KAAK,CAAC,EAAE;OACb,GAAG;SACDQ,CAAC,GAAGC,CAAC;AACLA,SAAAA,CAAC,GAAG,IAAI,CAACnC,GAAG,CAACkC,CAAC,CAAC;AACfC,SAAAA,CAAC,CAACnF,IAAI,CAACkF,CAAC,CAAC;AACTC,SAAAA,CAAC,CAACrD,MAAM,CAAC,CAAC,CAAC;QACZ,QAAQqD,CAAC,CAAChF,IAAI,CAAC+E,CAAC,CAAC,GAAG,CAAC;AACxB,MAAC,MAAM;OACL,GAAG;SACDA,CAAC,GAAGC,CAAC;SACLA,CAAC,GAAGD,CAAC,CAACN,IAAI,CAACF,GAAG,GAAG,CAAC,CAAC;AACnBS,SAAAA,CAAC,GAAG,IAAI,CAACnC,GAAG,CAACmC,CAAC,CAAC;SACfE,CAAC,GAAGH,CAAC,CAACvD,IAAI,CAAC+C,GAAG,GAAG,CAAC,CAAC;AACnBS,SAAAA,CAAC,CAACnF,IAAI,CAACqF,CAAC,CAAC;AACTF,SAAAA,CAAC,GAAGA,CAAC,CAAC7C,IAAI,CAACoC,GAAG,CAAC;QAChB,QAAQS,CAAC,CAAChF,IAAI,CAAC+E,CAAC,CAAC,GAAG,CAAC;AACxB;KAEA,IAAIzB,GAAG,EAAE;AACP0B,OAAAA,CAAC,GAAGD,CAAC,CAACN,IAAI,CAACF,GAAG,CAAC;AACftJ,OAAAA,CAAC,GAAG,IAAI,CAAC2F,GAAG,CAACoE,CAAC,CAAC;AACjB;AAEA,KAAA,OAAO,CAACD,CAAC,EAAE9J,CAAC,CAAC;AACf;;AAEA;AACF;AACA;;GAEEkK,OAAOA,CAACZ,GAAG,EAAE;KACX,OAAO,IAAI,CAACK,QAAQ,CAACL,GAAG,EAAE,CAAC,CAAC;AAC9B;GAEAa,KAAKA,CAACb,GAAG,EAAE;KACT,OAAO,IAAI,CAACjK,IAAI,CAACiK,GAAG,CAAC,CAAClD,KAAK,CAAC,IAAI,CAAC;AACnC;GAEA/G,IAAIA,CAACiK,GAAG,EAAE;KACR,OAAO,IAAI,CAACK,QAAQ,CAACL,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC;GAEAc,OAAOA,CAACd,GAAG,EAAE;KACXzE,OAAO,CAAEyE,GAAG,KAAK,CAAC,KAAMA,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;AAE7C,KAAA,IAAIA,GAAG,KAAK,CAAC,IAAK,CAACA,GAAG,GAAG,IAAI,CAAClF,QAAS,EACrC,OAAO,KAAK;KAEd,MAAM,GAAGpE,CAAC,CAAC,GAAG,IAAI,CAACkK,OAAO,CAACZ,GAAG,CAAC;AAE/B,KAAA,OAAOtJ,CAAC,CAAC9I,IAAI,EAAE,KAAK,CAAC;AACvB;AAEAmT,GAAAA,OAAOA,GAAG;AACR,KAAA,OAAO,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC;AACxB;AAEAI,GAAAA,KAAKA,GAAG;KACN,OAAO,IAAI,CAACC,IAAI,EAAE,CAACnE,KAAK,CAAC,IAAI,CAAC;AAChC;AAEAmE,GAAAA,IAAIA,GAAG;AACL,KAAA,OAAO,IAAI,CAAClL,IAAI,CAAC,CAAC,CAAC;AACrB;AAEAmL,GAAAA,QAAQA,GAAG;AACT,KAAA,OAAO,IAAI,CAACJ,OAAO,CAAC,CAAC,CAAC;AACxB;;AAEA;AACF;AACA;;GAEEK,IAAIA,CAAC3T,GAAG,EAAE;KACR+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KAEtC,IAAI+E,CAAC,GAAG,IAAI;KACZ,IAAIC,CAAC,GAAGhF,GAAG;AAEX,KAAA,IAAI+E,CAAC,KAAKC,CAAC,EACT,OAAOD,CAAC;AAEV,KAAA,IAAI,CAACA,CAAC,CAACuI,QAAQ,GAAGtI,CAAC,CAACsI,QAAQ,MAAM,CAAC,EACjC,OAAOvI,CAAC,CAAC6O,KAAK,CAAC5O,CAAC,CAAC;KAEnB,IAAI,CAACD,CAAC,CAACuI,QAAQ,GAAGtI,CAAC,CAACsI,QAAQ,MAAM,CAAC,EAAE;AACnC;AACA;AACA;AACAvI,OAAAA,CAAC,CAACoJ,KAAK,CAAC,CAAC,CAAC;AACVnJ,OAAAA,CAAC,CAACmJ,KAAK,CAAC,CAAC,CAAC;AACVpJ,OAAAA,CAAC,CAAC8O,IAAI,CAAC7O,CAAC,CAAC;AACTD,OAAAA,CAAC,CAAC6J,KAAK,CAAC,CAAC,CAAC;AACV5J,OAAAA,CAAC,CAAC4J,KAAK,CAAC,CAAC,CAAC;AACV,OAAA,OAAO7J,CAAC;AACV;;AAEA;KACA,IAAIA,CAAC,CAACuI,QAAQ,KAAK,CAAC,EAClB,CAACvI,CAAC,EAAEC,CAAC,CAAC,GAAG,CAACA,CAAC,CAACuJ,KAAK,EAAE,EAAExJ,CAAC,CAAC;;AAEzB;AACA;AACA,KAAA,MAAM+O,KAAK,GAAG/O,CAAC,CAACmO,SAAS,EAAE;AAE3BlO,KAAAA,CAAC,CAACmJ,KAAK,CAAC,CAAC,CAAC;AACVnJ,KAAAA,CAAC,CAAC+O,KAAK,CAACD,KAAK,CAAC;AACd/O,KAAAA,CAAC,CAAC6O,KAAK,CAAC5O,CAAC,CAAC;AACVA,KAAAA,CAAC,CAAC+O,KAAK,CAACD,KAAK,CAAC;AACd9O,KAAAA,CAAC,CAAC4J,KAAK,CAAC,CAAC,CAAC;AAEV,KAAA,OAAO7J,CAAC,CAACuK,KAAK,CAAC,IAAI,CAAC;AACtB;GAEA0E,KAAKA,CAAChU,GAAG,EAAE;KACT+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;KAEjC,IAAI,CAAC,IAAI,CAACsN,QAAQ,GAAItN,GAAG,GAAG,CAAE,MAAM,CAAC,EACnC,OAAO,IAAI,CAAC2T,IAAI,CAAC,IAAIzG,EAAE,CAAClN,GAAG,CAAC,CAAC;AAE/B,KAAA,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,IAAIrN,GAAG;KACpB,IAAI,CAACU,MAAM,GAAG,CAAC;AAEf,KAAA,OAAO,IAAI;AACb;GAEAuT,GAAGA,CAACjU,GAAG,EAAE;KACP,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACoF,IAAI,CAAC3T,GAAG,CAAC;AAC/B;GAEAkU,IAAIA,CAAClU,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACyF,KAAK,CAAChU,GAAG,CAAC;AAChC;GAEAmU,KAAKA,CAACnU,GAAG,EAAE;KACT+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;KAEjC,IAAI,CAAC,IAAI,CAACsN,QAAQ,GAAItN,GAAG,GAAG,CAAE,MAAM,CAAC,EAAE;OACrC,MAAMoU,CAAC,GAAG,IAAI,CAACT,IAAI,CAAC,IAAIzG,EAAE,CAAClN,GAAG,CAAC,CAAC;OAEhC,IAAIoU,CAAC,CAAC1T,MAAM,GAAG,CAAC,EACd,MAAM,IAAIoS,UAAU,CAAC,yBAAyB,CAAC;OAEjD,OAAOsB,CAAC,CAAC9G,QAAQ,KAAK,CAAC,GAAG,CAAC8G,CAAC,CAAC/G,KAAK,CAAC,CAAC,CAAC,GAAG+G,CAAC,CAAC/G,KAAK,CAAC,CAAC,CAAC;AACpD;KAEA,OAAO,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAGrN,GAAG;AAC5B;;AAEA;AACF;AACA;;GAEE4T,KAAKA,CAAC5T,GAAG,EAAE;KACT+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AAEtC,KAAA,IAAI,CAACU,MAAM,GAAGkN,IAAI,CAACoD,GAAG,CAAC,IAAI,CAACtQ,MAAM,EAAEV,GAAG,CAACU,MAAM,CAAC;KAE/C,KAAK,IAAIoF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,MAAM,EAAEoF,CAAC,EAAE,EAClC,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,IAAI9F,GAAG,CAACqN,KAAK,CAACvH,CAAC,CAAC;AAE/B,KAAA,OAAO,IAAI,CAAC2I,MAAM,EAAE;AACtB;GAEA4F,MAAMA,CAACrU,GAAG,EAAE;KACV+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;KAEjC,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,IAAIO,IAAI,CAAC0G,GAAG,CAACtU,GAAG,CAAC;KAC9B,IAAI,CAACU,MAAM,GAAG,CAAC;AAEf,KAAA,OAAO,IAAI,CAACgO,UAAU,EAAE;AAC1B;GAEA6F,IAAIA,CAACvU,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACqF,KAAK,CAAC5T,GAAG,CAAC;AAChC;GAEAwU,KAAKA,CAACxU,GAAG,EAAE;KACT,OAAO,IAAI,CAACuO,KAAK,EAAE,CAAC8F,MAAM,CAACrU,GAAG,CAAC;AACjC;GAEAyU,MAAMA,CAACzU,GAAG,EAAE;KACV+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AAEjC,KAAA,MAAMoU,CAAC,GAAG,IAAI,CAAC/G,KAAK,CAAC,CAAC,CAAC,GAAGO,IAAI,CAAC0G,GAAG,CAACtU,GAAG,CAAC;KAEvC,OAAO,IAAI,CAACsN,QAAQ,KAAK,CAAC,GAAI,CAAC8G,CAAC,GAAG,CAAC,GAAIA,CAAC;AAC3C;;AAEA;AACF;AACA;;GAEEM,GAAGA,CAAC1U,GAAG,EAAE;KACP+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KAEtC,IAAI+E,CAAC,GAAG,IAAI;KACZ,IAAIC,CAAC,GAAGhF,GAAG;AAEX,KAAA,IAAI+E,CAAC,KAAKC,CAAC,EACT,OAAOD,CAAC;AAEV,KAAA,IAAI,CAACA,CAAC,CAACuI,QAAQ,GAAGtI,CAAC,CAACsI,QAAQ,MAAM,CAAC,EACjC,OAAOvI,CAAC,CAAC8O,IAAI,CAAC7O,CAAC,CAAC;KAElB,IAAI,CAACD,CAAC,CAACuI,QAAQ,GAAGtI,CAAC,CAACsI,QAAQ,MAAM,CAAC,EAAE;AACnC;AACA;AACA;AACAvI,OAAAA,CAAC,CAACoJ,KAAK,CAAC,CAAC,CAAC;AACVnJ,OAAAA,CAAC,CAACmJ,KAAK,CAAC,CAAC,CAAC;AACVpJ,OAAAA,CAAC,CAAC6O,KAAK,CAAC5O,CAAC,CAAC;AACVD,OAAAA,CAAC,CAAC6J,KAAK,CAAC,CAAC,CAAC;AACV5J,OAAAA,CAAC,CAAC4J,KAAK,CAAC,CAAC,CAAC;AACV,OAAA,OAAO7J,CAAC;AACV;;AAEA;AACAC,KAAAA,CAAC,GAAGA,CAAC,CAACuJ,KAAK,EAAE;AAEb,KAAA,IAAIxJ,CAAC,CAACuI,QAAQ,KAAK,CAAC,EAClB,CAACvI,CAAC,EAAEC,CAAC,CAAC,GAAG,CAACA,CAAC,EAAED,CAAC,CAAC;;AAEjB;AACA;AACA;AACAC,KAAAA,CAAC,CAACmJ,KAAK,CAAC,CAAC,CAAC;KACVpJ,CAAC,CAACgP,KAAK,CAAC/O,CAAC,CAACkO,SAAS,EAAE,CAAC;AACtBlO,KAAAA,CAAC,CAAC4O,KAAK,CAAC7O,CAAC,CAAC;AACVC,KAAAA,CAAC,CAAC4J,KAAK,CAAC,CAAC,CAAC;AAEV,KAAA,OAAO5J,CAAC,CAACsK,KAAK,CAAC,IAAI,CAAC;AACtB;GAEAqF,IAAIA,CAAC3U,GAAG,EAAE;KACR+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;KAEjC,IAAI,CAAC,IAAI,CAACsN,QAAQ,GAAItN,GAAG,GAAG,CAAE,MAAM,CAAC,EACnC,OAAO,IAAI,CAAC0U,GAAG,CAAC,IAAIxH,EAAE,CAAClN,GAAG,CAAC,CAAC;AAE9B,KAAA,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,IAAIrN,GAAG;AAEpB,KAAA,OAAO,IAAI;AACb;GAEA4U,EAAEA,CAAC5U,GAAG,EAAE;KACN,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACmG,GAAG,CAAC1U,GAAG,CAAC;AAC9B;GAEA6U,GAAGA,CAAC7U,GAAG,EAAE;KACP,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACoG,IAAI,CAAC3U,GAAG,CAAC;AAC/B;;AAEA;AACF;AACA;;GAEE6T,IAAIA,CAAC7T,GAAG,EAAE;KACR+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AAEtC,KAAA,IAAI,CAACkR,OAAO,CAAClR,GAAG,CAACU,MAAM,CAAC;KAExB,KAAK,IAAIoF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9F,GAAG,CAACU,MAAM,EAAEoF,CAAC,EAAE,EACjC,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,IAAI9F,GAAG,CAACqN,KAAK,CAACvH,CAAC,CAAC;;AAE/B;AACA,KAAA,OAAO,IAAI;AACb;GAEAgP,KAAKA,CAAC9U,GAAG,EAAE;KACT+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;KAEjC,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,IAAIO,IAAI,CAAC0G,GAAG,CAACtU,GAAG,CAAC;AAE9B,KAAA,OAAO,IAAI;AACb;GAEA+U,GAAGA,CAAC/U,GAAG,EAAE;KACP,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACsF,IAAI,CAAC7T,GAAG,CAAC;AAC/B;GAEAgV,IAAIA,CAAChV,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACuG,KAAK,CAAC9U,GAAG,CAAC;AAChC;;AAEA;AACF;AACA;;GAEEiV,IAAIA,CAACjV,GAAG,EAAE;KACR+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KAEtC,IAAI+E,CAAC,GAAG,IAAI;KACZ,IAAIC,CAAC,GAAGhF,GAAG;KAEX,IAAI+E,CAAC,KAAKC,CAAC,EAAE;AACXD,OAAAA,CAAC,CAACsI,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;OACdtI,CAAC,CAACrE,MAAM,GAAG,CAAC;OACZqE,CAAC,CAACuI,QAAQ,GAAG,CAAC;AACd,OAAA,OAAOvI,CAAC;AACV;AAEA,KAAA,IAAI,CAACA,CAAC,CAACuI,QAAQ,GAAGtI,CAAC,CAACsI,QAAQ,MAAM,CAAC,EACjC,OAAOvI,CAAC,CAACmQ,KAAK,CAAClQ,CAAC,CAAC;KAEnB,IAAI,CAACD,CAAC,CAACuI,QAAQ,GAAGtI,CAAC,CAACsI,QAAQ,MAAM,CAAC,EAAE;AACnC;AACA;AACAvI,OAAAA,CAAC,CAACoJ,KAAK,CAAC,CAAC,CAAC;AACVnJ,OAAAA,CAAC,CAACmJ,KAAK,CAAC,CAAC,CAAC;AACVpJ,OAAAA,CAAC,CAACmQ,KAAK,CAAClQ,CAAC,CAAC;OACVD,CAAC,CAACkM,IAAI,EAAE;AACRjM,OAAAA,CAAC,CAAC4J,KAAK,CAAC,CAAC,CAAC;AACV,OAAA,OAAO7J,CAAC;AACV;;AAEA;KACA,IAAIA,CAAC,CAACuI,QAAQ,KAAK,CAAC,EAClB,CAACvI,CAAC,EAAEC,CAAC,CAAC,GAAG,CAACA,CAAC,CAACuJ,KAAK,EAAE,EAAExJ,CAAC,CAAC;;AAEzB;AACA;AACA;AACAC,KAAAA,CAAC,CAACmJ,KAAK,CAAC,CAAC,CAAC;AACVpJ,KAAAA,CAAC,CAACmQ,KAAK,CAAClQ,CAAC,CAAC;AACVD,KAAAA,CAAC,CAACoJ,KAAK,CAAC,CAAC,CAAC;KACVpJ,CAAC,CAACkM,IAAI,EAAE;AACRjM,KAAAA,CAAC,CAAC4J,KAAK,CAAC,CAAC,CAAC;AAEV,KAAA,OAAO7J,CAAC,CAACuK,KAAK,CAAC,IAAI,CAAC;AACtB;GAEA6F,KAAKA,CAACnV,GAAG,EAAE;KACT+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;KAEjC,IAAI,CAAC,IAAI,CAACsN,QAAQ,GAAItN,GAAG,GAAG,CAAE,MAAM,CAAC,EACnC,OAAO,IAAI,CAACiV,IAAI,CAAC,IAAI/H,EAAE,CAAClN,GAAG,CAAC,CAAC;AAE/B,KAAA,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,IAAIrN,GAAG;AAEpB,KAAA,OAAO,IAAI;AACb;GAEAoV,GAAGA,CAACpV,GAAG,EAAE;KACP,OAAO,IAAI,CAACuO,KAAK,EAAE,CAAC0G,IAAI,CAACjV,GAAG,CAAC;AAC/B;GAEAqV,IAAIA,CAACrV,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAAC4G,KAAK,CAACnV,GAAG,CAAC;AAChC;;AAEA;AACF;AACA;;GAEEkV,KAAKA,CAAClV,GAAG,EAAE;KACT+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KAEtC,IAAIoH,CAAC,GAAG,IAAI;KACZ,IAAIC,CAAC,GAAGrH,GAAG;AAEX,KAAA,IAAIoH,CAAC,CAAC1G,MAAM,GAAG2G,CAAC,CAAC3G,MAAM,EACrB,CAAC0G,CAAC,EAAEC,CAAC,CAAC,GAAG,CAACA,CAAC,EAAED,CAAC,CAAC;KAEjB,IAAItB,CAAC,GAAG,CAAC;AAET,KAAA,OAAOA,CAAC,GAAGuB,CAAC,CAAC3G,MAAM,EAAEoF,CAAC,EAAE,EACtB,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,GAAGsB,CAAC,CAACiG,KAAK,CAACvH,CAAC,CAAC,GAAGuB,CAAC,CAACgG,KAAK,CAACvH,CAAC,CAAC;KAEzC,IAAIsB,CAAC,KAAK,IAAI,EAAE;AACd,OAAA,IAAI,CAACsG,MAAM,CAACtG,CAAC,CAAC1G,MAAM,CAAC;OAErB,OAAOoF,CAAC,GAAGsB,CAAC,CAAC1G,MAAM,EAAEoF,CAAC,EAAE,EACtB,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,GAAGsB,CAAC,CAACiG,KAAK,CAACvH,CAAC,CAAC;AAC9B;AAEA,KAAA,IAAI,CAACpF,MAAM,GAAG0G,CAAC,CAAC1G,MAAM;AAEtB,KAAA,OAAO,IAAI,CAAC+N,MAAM,EAAE;AACtB;GAEA6G,MAAMA,CAACtV,GAAG,EAAE;KACV+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;KAEjC,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,IAAIO,IAAI,CAAC0G,GAAG,CAACtU,GAAG,CAAC;AAE9B,KAAA,OAAO,IAAI,CAAC0O,UAAU,EAAE;AAC1B;GAEA6G,IAAIA,CAACvV,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAAC2G,KAAK,CAAClV,GAAG,CAAC;AAChC;GAEAwV,KAAKA,CAACxV,GAAG,EAAE;KACT,OAAO,IAAI,CAACuO,KAAK,EAAE,CAAC+G,MAAM,CAACtV,GAAG,CAAC;AACjC;;AAEA;AACF;AACA;;AAEEyV,GAAAA,IAAIA,GAAG;AACL,KAAA,IAAI,IAAI,CAACnI,QAAQ,KAAK,CAAC,EAAE;AACvB;OACA,IAAI,CAAC2D,IAAI,EAAE,CAACrC,KAAK,CAAC,CAAC,CAAC;AACtB,MAAC,MAAM;AACL;OACA,IAAI,CAACT,KAAK,CAAC,CAAC,CAAC,CAAC8C,IAAI,EAAE;AACtB;AACA,KAAA,OAAO,IAAI;AACb;AAEAyE,GAAAA,GAAGA,GAAG;KACJ,OAAO,IAAI,CAACnH,KAAK,EAAE,CAACkH,IAAI,EAAE;AAC5B;GAEA1B,KAAKA,CAACD,KAAK,EAAE;KACX/F,OAAO,CAAE+F,KAAK,KAAK,CAAC,KAAMA,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;AAEnD,KAAA,MAAM5K,CAAC,GAAG4K,KAAK,GAAG,EAAE;KAEpB,IAAIzK,CAAC,GAAGuE,IAAI,CAAC+H,IAAI,CAAC7B,KAAK,GAAG,EAAE,CAAC;KAC7B,IAAIhO,CAAC,GAAG,CAAC;;AAET;AACA,KAAA,IAAI,CAACoL,OAAO,CAAC7H,CAAC,CAAC;AAEf,KAAA,IAAIH,CAAC,GAAG,CAAC,EACPG,CAAC,IAAI,CAAC;;AAER;AACA,KAAA,OAAOvD,CAAC,GAAGuD,CAAC,EAAEvD,CAAC,EAAE,EACf,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,IAAI,SAAS;;AAE5B;AACA,KAAA,IAAIoD,CAAC,GAAG,CAAC,EACP,IAAI,CAACmE,KAAK,CAACvH,CAAC,CAAC,IAAI,CAAC,CAAC,IAAIoD,CAAC,IAAI,CAAC;;AAE/B;AACA,KAAA,OAAO,IAAI,CAACuF,MAAM,EAAE;AACtB;GAEAmH,IAAIA,CAAC9B,KAAK,EAAE;KACV,OAAO,IAAI,CAACvF,KAAK,EAAE,CAACwF,KAAK,CAACD,KAAK,CAAC;AAClC;;AAEA;AACF;AACA;;GAEE+B,IAAIA,CAAC7V,GAAG,EAAE;KACR+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC;AACvC+N,KAAAA,OAAO,CAAC/N,GAAG,CAACkT,SAAS,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC;KAChD,OAAO,IAAI,CAAC4C,KAAK,CAAC9V,GAAG,CAAC+V,QAAQ,EAAE,CAAC;AACnC;GAEAD,KAAKA,CAAC/M,IAAI,EAAE;AACV,KAAA,OAAO,IAAI,CAAC0H,MAAM,CAAC1H,IAAI,CAAC;AAC1B;GAEAiN,GAAGA,CAAChW,GAAG,EAAE;KACP,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACsH,IAAI,CAAC7V,GAAG,CAAC;AAC/B;GAEAiW,IAAIA,CAAClN,IAAI,EAAE;KACT,OAAO,IAAI,CAACwF,KAAK,EAAE,CAACuH,KAAK,CAAC/M,IAAI,CAAC;AACjC;;AAEA;AACF;AACA;;GAEEmN,KAAKA,CAAClW,GAAG,EAAE;KACT+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC;AACvC+N,KAAAA,OAAO,CAAC/N,GAAG,CAACkT,SAAS,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC;KAChD,OAAO,IAAI,CAACzC,MAAM,CAACzQ,GAAG,CAAC+V,QAAQ,EAAE,CAAC;AACpC;GAEAtF,MAAMA,CAAC1H,IAAI,EAAE;KACXgF,OAAO,CAAEhF,IAAI,KAAK,CAAC,KAAMA,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;AAEhD,KAAA,MAAMG,CAAC,GAAGH,IAAI,GAAG,EAAE;KACnB,MAAMM,CAAC,GAAG,CAACN,IAAI,GAAGG,CAAC,IAAI,EAAE;KACzB,MAAMiN,IAAI,GAAI,CAAC,CAAC,IAAIjN,CAAC,IAAI,CAAC,IAAM,EAAE,GAAGA,CAAE;KAEvC,IAAIA,CAAC,KAAK,CAAC,EAAE;OACX,IAAIuE,KAAK,GAAG,CAAC;AAEb,OAAA,KAAK,IAAI3H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,MAAM,EAAEoF,CAAC,EAAE,EAAE;SACpC,MAAMsQ,MAAM,GAAG,IAAI,CAAC/I,KAAK,CAACvH,CAAC,CAAC,GAAGqQ,IAAI;AACnC,SAAA,MAAM7O,CAAC,GAAI,CAAC,IAAI,CAAC+F,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC,IAAIsQ,MAAM,IAAKlN,CAAC;SAE7C,IAAI,CAACmE,KAAK,CAACvH,CAAC,CAAC,GAAGwB,CAAC,GAAGmG,KAAK;AAEzBA,SAAAA,KAAK,GAAG2I,MAAM,KAAM,EAAE,GAAGlN,CAAE;AAC7B;OAEA,IAAIuE,KAAK,KAAK,CAAC,EAAE;SACf,IAAI,CAACC,MAAM,CAAC,IAAI,CAAChN,MAAM,GAAG,CAAC,CAAC;SAC5B,IAAI,CAAC2M,KAAK,CAAC,IAAI,CAAC3M,MAAM,EAAE,CAAC,GAAG+M,KAAK;AACnC;AACF;KAEA,IAAIpE,CAAC,KAAK,CAAC,EAAE;OACX,IAAI,CAACqE,MAAM,CAAC,IAAI,CAAChN,MAAM,GAAG2I,CAAC,CAAC;AAE5B,OAAA,KAAK,IAAIvD,CAAC,GAAG,IAAI,CAACpF,MAAM,GAAG,CAAC,EAAEoF,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EACvC,IAAI,CAACuH,KAAK,CAACvH,CAAC,GAAGuD,CAAC,CAAC,GAAG,IAAI,CAACgE,KAAK,CAACvH,CAAC,CAAC;OAEnC,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuD,CAAC,EAAEvD,CAAC,EAAE,EACxB,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC;OAEnB,IAAI,CAACpF,MAAM,IAAI2I,CAAC;AAClB;AAEA,KAAA,OAAO,IAAI,CAACoF,MAAM,EAAE;AACtB;GAEA4H,IAAIA,CAACrW,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAAC2H,KAAK,CAAClW,GAAG,CAAC;AAChC;GAEAsW,KAAKA,CAACvN,IAAI,EAAE;KACV,OAAO,IAAI,CAACwF,KAAK,EAAE,CAACkC,MAAM,CAAC1H,IAAI,CAAC;AAClC;;AAEA;AACF;AACA;;AAEEwN,GAAAA,MAAMA,CAACxN,IAAI,EAAEyN,MAAM,EAAE;AACnB,KAAA,MAAMtN,CAAC,GAAGH,IAAI,GAAG,EAAE;AACnB,KAAA,MAAMM,CAAC,GAAGuE,IAAI,CAACoD,GAAG,CAAC,CAACjI,IAAI,GAAGG,CAAC,IAAI,EAAE,EAAE,IAAI,CAACxI,MAAM,CAAC;KAChD,MAAMyV,IAAI,GAAG,CAAC,CAAC,IAAIjN,CAAC,IAAI,CAAC;;AAEzB;KACA,IAAIsN,MAAM,EAAE;AACVA,OAAAA,MAAM,CAAC9I,MAAM,CAACrE,CAAC,CAAC;OAEhB,KAAK,IAAIvD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuD,CAAC,EAAEvD,CAAC,EAAE,EACxB0Q,MAAM,CAACnJ,KAAK,CAACvH,CAAC,CAAC,GAAG,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC;OAEjC0Q,MAAM,CAAC9V,MAAM,GAAG2I,CAAC;AACnB;KAEA,IAAIA,CAAC,KAAK,CAAC,EAAE,CAEZ,MAAM,IAAI,IAAI,CAAC3I,MAAM,GAAG2I,CAAC,EAAE;OAC1B,IAAI,CAAC3I,MAAM,IAAI2I,CAAC;AAChB,OAAA,KAAK,IAAIvD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,MAAM,EAAEoF,CAAC,EAAE,EAClC,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,GAAG,IAAI,CAACuH,KAAK,CAACvH,CAAC,GAAGuD,CAAC,CAAC;AACrC,MAAC,MAAM;AACL,OAAA,IAAI,CAACgE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;OACjB,IAAI,CAAC3M,MAAM,GAAG,CAAC;AACjB;KAEA,IAAI+M,KAAK,GAAG,CAAC;KAEb,IAAIvE,CAAC,KAAK,CAAC,EAAE;AACX,OAAA,KAAK,IAAIpD,CAAC,GAAG,IAAI,CAACpF,MAAM,GAAG,CAAC,EAAEoF,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;SACzC,MAAMyK,IAAI,GAAG,IAAI,CAAClD,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC;AAE9B,SAAA,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,GAAI2H,KAAK,IAAK,EAAE,GAAGvE,CAAE,GAAKqH,IAAI,KAAKrH,CAAE;SAElDuE,KAAK,GAAG8C,IAAI,GAAG4F,IAAI;AACrB;AACF;;AAEA;KACA,IAAIK,MAAM,EAAE;OACV,IAAI/I,KAAK,KAAK,CAAC,EAAE;SACf+I,MAAM,CAAC9I,MAAM,CAAC8I,MAAM,CAAC9V,MAAM,GAAG,CAAC,CAAC;SAChC8V,MAAM,CAACnJ,KAAK,CAACmJ,MAAM,CAAC9V,MAAM,EAAE,CAAC,GAAG+M,KAAK;AACvC,QAAC,MAAM;AACL,SAAA,IAAI+I,MAAM,CAAC9V,MAAM,KAAK,CAAC,EACrB8V,MAAM,CAACnJ,KAAK,CAACmJ,MAAM,CAAC9V,MAAM,EAAE,CAAC,GAAG,CAAC;SAEnC8V,MAAM,CAAC/H,MAAM,EAAE;AACjB;AACF;AAEA,KAAA,OAAO,IAAI,CAACA,MAAM,EAAE;AACtB;;AAEA;AACF;AACA;;GAEEgI,IAAIA,CAACzW,GAAG,EAAE;KACR+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC;AACvC+N,KAAAA,OAAO,CAAC/N,GAAG,CAACkT,SAAS,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC;KAChD,OAAO,IAAI,CAACwD,KAAK,CAAC1W,GAAG,CAAC+V,QAAQ,EAAE,CAAC;AACnC;GAEAW,KAAKA,CAAC3N,IAAI,EAAE;KACVgF,OAAO,CAAEhF,IAAI,KAAK,CAAC,KAAMA,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;AAEhD,KAAA,IAAI,IAAI,CAACuE,QAAQ,KAAK,CAAC,EAAE;AACvB;AACA;AACA;AACA,OAAA,IAAI,CAACa,KAAK,CAAC,CAAC,CAAC;AACb,OAAA,IAAI,CAACyB,MAAM,CAAC7G,IAAI,CAAC;AACjB,OAAA,IAAI,CAAC6F,KAAK,CAAC,CAAC,CAAC;AACb,OAAA,OAAO,IAAI;AACb;AAEA,KAAA,OAAO,IAAI,CAACgB,MAAM,CAAC7G,IAAI,CAAC;AAC1B;GAEA4N,GAAGA,CAAC3W,GAAG,EAAE;KACP,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACkI,IAAI,CAACzW,GAAG,CAAC;AAC/B;GAEA4W,IAAIA,CAAC7N,IAAI,EAAE;KACT,OAAO,IAAI,CAACwF,KAAK,EAAE,CAACmI,KAAK,CAAC3N,IAAI,CAAC;AACjC;;AAEA;AACF;AACA;;GAEE8N,KAAKA,CAAC7W,GAAG,EAAE;KACT+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC;AACvC+N,KAAAA,OAAO,CAAC/N,GAAG,CAACkT,SAAS,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC;KAChD,OAAO,IAAI,CAACtD,MAAM,CAAC5P,GAAG,CAAC+V,QAAQ,EAAE,CAAC;AACpC;GAEAnG,MAAMA,CAAC7G,IAAI,EAAE;KACXgF,OAAO,CAAEhF,IAAI,KAAK,CAAC,KAAMA,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;KAChD,OAAO,IAAI,CAACwN,MAAM,CAACxN,IAAI,EAAE,IAAI,CAAC;AAChC;GAEA+N,IAAIA,CAAC9W,GAAG,EAAE;KACR,OAAO,IAAI,CAACuO,KAAK,EAAE,CAACsI,KAAK,CAAC7W,GAAG,CAAC;AAChC;GAEA+W,KAAKA,CAAChO,IAAI,EAAE;KACV,OAAO,IAAI,CAACwF,KAAK,EAAE,CAACqB,MAAM,CAAC7G,IAAI,CAAC;AAClC;;AAEA;AACF;AACA;;AAEEiO,GAAAA,IAAIA,CAAC3E,GAAG,EAAE7N,GAAG,EAAE;KACbuJ,OAAO,CAAEsE,GAAG,KAAK,CAAC,KAAMA,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;AAE7C,KAAA,IAAI,IAAI,CAAC/E,QAAQ,KAAK,CAAC,EAAE;AACvB,OAAA,IAAI,CAACa,KAAK,CAAC,CAAC,CAAC;OACb,IAAI,CAAC8I,KAAK,CAAC5E,GAAG,EAAE,CAAC7N,GAAG,CAAC;AACrB,OAAA,IAAI,CAACoK,KAAK,CAAC,CAAC,CAAC;AACb,OAAA,OAAO,IAAI;AACb;KAEA,OAAO,IAAI,CAACqI,KAAK,CAAC5E,GAAG,EAAE7N,GAAG,CAAC;AAC7B;AAEAyS,GAAAA,KAAKA,CAAC5E,GAAG,EAAE7N,GAAG,EAAE;KACduJ,OAAO,CAAEsE,GAAG,KAAK,CAAC,KAAMA,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;AAE7C,KAAA,MAAMnJ,CAAC,GAAGmJ,GAAG,GAAG,EAAE;KAClB,MAAMhJ,CAAC,GAAG,CAACgJ,GAAG,GAAGnJ,CAAC,IAAI,EAAE;AAExB,KAAA,IAAI,CAACgI,OAAO,CAAC7H,CAAC,GAAG,CAAC,CAAC;KAEnB,IAAI7E,GAAG,EACL,IAAI,CAAC6I,KAAK,CAAChE,CAAC,CAAC,IAAK,CAAC,IAAIH,CAAE,CAAC,KAE1B,IAAI,CAACmE,KAAK,CAAChE,CAAC,CAAC,IAAI,EAAE,CAAC,IAAIH,CAAC,CAAC;AAE5B,KAAA,OAAO,IAAI,CAACuF,MAAM,EAAE;AACtB;GAEAyI,KAAKA,CAAC7E,GAAG,EAAE;KACTtE,OAAO,CAAEsE,GAAG,KAAK,CAAC,KAAMA,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;AAE7C,KAAA,MAAMnJ,CAAC,GAAGmJ,GAAG,GAAG,EAAE;KAClB,MAAMhJ,CAAC,GAAG,CAACgJ,GAAG,GAAGnJ,CAAC,IAAI,EAAE;;AAExB;KACA,IAAI,IAAI,CAACxI,MAAM,IAAI2I,CAAC,EAClB,OAAO,IAAI,CAACiE,QAAQ;;AAEtB;KACA,MAAMjD,CAAC,GAAG,IAAI,CAACgD,KAAK,CAAChE,CAAC,CAAC;AACvB,KAAA,MAAM7E,GAAG,GAAI6F,CAAC,IAAInB,CAAC,GAAI,CAAC;AAExB,KAAA,IAAI,IAAI,CAACoE,QAAQ,KAAK,CAAC,EAAE;AACvB,OAAA,IAAIpE,CAAC,GAAG,CAAC,IAAKmB,CAAC,GAAI,CAAC,CAAC,IAAInB,CAAC,IAAI,CAAG,EAC/B,OAAO1E,GAAG,GAAG,CAAC;OAEhB,IAAIyF,CAAC,GAAGZ,CAAC;OAET,OAAOY,CAAC,EAAE,EAAE;AACV,SAAA,IAAI,IAAI,CAACoD,KAAK,CAACpD,CAAC,CAAC,GAAG,CAAC,EACnB,OAAOzF,GAAG,GAAG,CAAC;AAClB;AACF;AAEA,KAAA,OAAOA,GAAG;AACZ;GAEAmL,MAAMA,CAAC0C,GAAG,EAAE;KACVtE,OAAO,CAAEsE,GAAG,KAAK,CAAC,KAAMA,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;AAE7C,KAAA,MAAMnJ,CAAC,GAAGmJ,GAAG,GAAG,EAAE;KAClB,MAAMhJ,CAAC,GAAG,CAACgJ,GAAG,GAAGnJ,CAAC,IAAI,EAAE;;AAExB;KACA,IAAI,IAAI,CAACxI,MAAM,IAAI2I,CAAC,EAClB,OAAO,CAAC;;AAEV;KACA,OAAQ,IAAI,CAACgE,KAAK,CAAChE,CAAC,CAAC,IAAIH,CAAC,GAAI,CAAC;AACjC;GAEAiO,MAAMA,CAACpO,IAAI,EAAE;KACXgF,OAAO,CAAEhF,IAAI,KAAK,CAAC,KAAMA,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;AAEhD,KAAA,IAAI,IAAI,CAACuE,QAAQ,KAAK,CAAC,EAAE;AACvB,OAAA,IAAI,CAACa,KAAK,CAAC,CAAC,CAAC;AACb,OAAA,IAAI,CAAC4F,KAAK,CAAChL,IAAI,GAAG,CAAC,CAAC;OACpB,IAAI,CAACkI,IAAI,EAAE;AACb;AAEA,KAAA,OAAO,IAAI,CAACmG,OAAO,CAACrO,IAAI,CAAC;AAC3B;GAEAsO,KAAKA,CAACtO,IAAI,EAAE;KACV,OAAO,IAAI,CAACwF,KAAK,EAAE,CAAC4I,MAAM,CAACpO,IAAI,CAAC;AAClC;GAEAqO,OAAOA,CAACrO,IAAI,EAAE;KACZgF,OAAO,CAAEhF,IAAI,KAAK,CAAC,KAAMA,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;AAEhD,KAAA,MAAMG,CAAC,GAAGH,IAAI,GAAG,EAAE;KAEnB,IAAIM,CAAC,GAAG,CAACN,IAAI,GAAGG,CAAC,IAAI,EAAE;KAEvB,IAAI,IAAI,CAACxI,MAAM,IAAI2I,CAAC,EAClB,OAAO,IAAI;AAEb,KAAA,IAAIH,CAAC,KAAK,CAAC,EACTG,CAAC,IAAI,CAAC;AAER,KAAA,IAAI,CAAC3I,MAAM,GAAGkN,IAAI,CAACoD,GAAG,CAAC3H,CAAC,EAAE,IAAI,CAAC3I,MAAM,CAAC;KAEtC,IAAIwI,CAAC,KAAK,CAAC,EACT,IAAI,CAACmE,KAAK,CAAC,IAAI,CAAC3M,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAIwI,CAAC,IAAI,CAAC;AAE7C,KAAA,IAAI,IAAI,CAACxI,MAAM,KAAK,CAAC,EACnB,IAAI,CAAC2M,KAAK,CAAC,IAAI,CAAC3M,MAAM,EAAE,CAAC,GAAG,CAAC;AAE/B,KAAA,OAAO,IAAI,CAAC+N,MAAM,EAAE;AACtB;GAEA6I,MAAMA,CAACvO,IAAI,EAAE;KACX,OAAO,IAAI,CAACwF,KAAK,EAAE,CAAC6I,OAAO,CAACrO,IAAI,CAAC;AACnC;GAEAwO,KAAKA,CAACvX,GAAG,EAAE;KACT,OAAO,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,GAAGrN,GAAG;AAC5B;GAEAqS,GAAGA,CAAC1L,GAAG,EAAE;AACP,KAAA,OAAO,IAAI,CAACgJ,MAAM,CAAChJ,GAAG,CAAC;AACzB;AAEAoC,GAAAA,IAAIA,CAACpC,GAAG,EAAEmN,KAAK,EAAE;KACf/F,OAAO,CAAEpH,GAAG,KAAK,CAAC,KAAMA,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;KAC7CoH,OAAO,CAAE+F,KAAK,KAAK,CAAC,KAAMA,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;KACnD/F,OAAO,CAAC+F,KAAK,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC;AAEtC,KAAA,MAAMrI,KAAK,GAAG9E,GAAG,GAAG,EAAE;KACtB,MAAM5F,KAAK,GAAG,CAAC4F,GAAG,GAAG8E,KAAK,IAAI,EAAE;KAEhC,IAAI1K,KAAK,IAAI,IAAI,CAACL,MAAM,EACtB,OAAO,CAAC;AAEV,KAAA,IAAIqI,IAAI,GAAI,IAAI,CAACsE,KAAK,CAACtM,KAAK,CAAC,IAAI0K,KAAK,GAAK,CAAC,CAAC,IAAIqI,KAAK,IAAI,CAAE;AAE5D,KAAA,IAAIrI,KAAK,GAAGqI,KAAK,GAAG,EAAE,IAAI/S,KAAK,GAAG,CAAC,GAAG,IAAI,CAACL,MAAM,EAAE;AACjD,OAAA,MAAM8W,IAAI,GAAG/L,KAAK,GAAGqI,KAAK,GAAG,EAAE;AAC/B,OAAA,MAAM2D,IAAI,GAAG,IAAI,CAACpK,KAAK,CAACtM,KAAK,GAAG,CAAC,CAAC,GAAI,CAAC,CAAC,IAAIyW,IAAI,IAAI,CAAE;AAEtDzO,OAAAA,IAAI,IAAI0O,IAAI,IAAK,EAAE,GAAGhM,KAAM;AAC9B;AAEA,KAAA,OAAO1C,IAAI;AACb;;AAEA;AACF;AACA;;AAEEkI,GAAAA,IAAIA,GAAG;KACL,IAAI,CAAC,IAAI,CAACjB,MAAM,EAAE,EAChB,IAAI,CAAC1C,QAAQ,IAAI,CAAC;AAEpB,KAAA,OAAO,IAAI;AACb;AAEAkC,GAAAA,GAAGA,GAAG;KACJ,OAAO,IAAI,CAACjB,KAAK,EAAE,CAAC0C,IAAI,EAAE;AAC5B;AAEAyG,GAAAA,IAAIA,GAAG;KACL,IAAI,CAACpK,QAAQ,GAAG,CAAC;AACjB,KAAA,OAAO,IAAI;AACb;AAEAgH,GAAAA,GAAGA,GAAG;KACJ,OAAO,IAAI,CAAC/F,KAAK,EAAE,CAACmJ,IAAI,EAAE;AAC5B;;AAEA;AACF;AACA;;GAEEzM,GAAGA,CAACjL,GAAG,EAAE;KACP+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AAEtC,KAAA,IAAI,IAAI,CAACsN,QAAQ,KAAKtN,GAAG,CAACsN,QAAQ,EAChC,OAAOtN,GAAG,CAACsN,QAAQ,GAAG,IAAI,CAACA,QAAQ;KAErC,MAAMqK,GAAG,GAAG,IAAI,CAAC1J,IAAI,CAACjO,GAAG,CAAC;KAE1B,IAAI,IAAI,CAACsN,QAAQ,KAAK,CAAC,EACrB,OAAO,CAACqK,GAAG,GAAG,CAAC;AAEjB,KAAA,OAAOA,GAAG;AACZ;GAEAC,IAAIA,CAAC5X,GAAG,EAAE;KACR+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AAEjC,KAAA,MAAMsN,QAAQ,GAAItN,GAAG,GAAG,CAAC,GAAI,CAAC;KAE9B,IAAI,IAAI,CAACsN,QAAQ,KAAKA,QAAQ,EAC5B,OAAOA,QAAQ,GAAG,IAAI,CAACA,QAAQ;KAEjC,MAAMqK,GAAG,GAAG,IAAI,CAAC5E,KAAK,CAAC/S,GAAG,CAAC;KAE3B,IAAI,IAAI,CAACsN,QAAQ,KAAK,CAAC,EACrB,OAAO,CAACqK,GAAG,GAAG,CAAC;AAEjB,KAAA,OAAOA,GAAG;AACZ;GAEAE,EAAEA,CAAC7X,GAAG,EAAE;KACN,OAAO,IAAI,CAACiL,GAAG,CAACjL,GAAG,CAAC,KAAK,CAAC;AAC5B;GAEA8X,GAAGA,CAAC9X,GAAG,EAAE;KACP,OAAO,IAAI,CAAC4X,IAAI,CAAC5X,GAAG,CAAC,KAAK,CAAC;AAC7B;GAEA+X,EAAEA,CAAC/X,GAAG,EAAE;KACN,OAAO,IAAI,CAACiL,GAAG,CAACjL,GAAG,CAAC,GAAG,CAAC;AAC1B;GAEAgY,GAAGA,CAAChY,GAAG,EAAE;KACP,OAAO,IAAI,CAAC4X,IAAI,CAAC5X,GAAG,CAAC,GAAG,CAAC;AAC3B;GAEAiY,GAAGA,CAACjY,GAAG,EAAE;KACP,OAAO,IAAI,CAACiL,GAAG,CAACjL,GAAG,CAAC,IAAI,CAAC;AAC3B;GAEAkY,IAAIA,CAAClY,GAAG,EAAE;KACR,OAAO,IAAI,CAAC4X,IAAI,CAAC5X,GAAG,CAAC,IAAI,CAAC;AAC5B;GAEAmY,EAAEA,CAACnY,GAAG,EAAE;KACN,OAAO,IAAI,CAACiL,GAAG,CAACjL,GAAG,CAAC,GAAG,CAAC;AAC1B;GAEAoY,GAAGA,CAACpY,GAAG,EAAE;KACP,OAAO,IAAI,CAAC4X,IAAI,CAAC5X,GAAG,CAAC,GAAG,CAAC;AAC3B;GAEAqY,GAAGA,CAACrY,GAAG,EAAE;KACP,OAAO,IAAI,CAACiL,GAAG,CAACjL,GAAG,CAAC,IAAI,CAAC;AAC3B;GAEAsY,IAAIA,CAACtY,GAAG,EAAE;KACR,OAAO,IAAI,CAAC4X,IAAI,CAAC5X,GAAG,CAAC,IAAI,CAAC;AAC5B;AAEAI,GAAAA,IAAIA,GAAG;KACL,IAAI,IAAI,CAACkN,QAAQ,KAAK,CAAC,EACrB,OAAO,EAAE;AAEX,KAAA,IAAI,IAAI,CAAC5M,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC2M,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAC1C,OAAO,CAAC;AAEV,KAAA,OAAO,CAAC;AACV;AAEA2C,GAAAA,MAAMA,GAAG;AACP,KAAA,OAAO,IAAI,CAACtP,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC2M,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;AACjD;AAEAkL,GAAAA,KAAKA,GAAG;AACN,KAAA,OAAO,IAAI,CAACjL,QAAQ,KAAK,CAAC;AAC5B;AAEAkL,GAAAA,KAAKA,GAAG;AACN,KAAA,OAAO,IAAI,CAAClL,QAAQ,KAAK,CAAC;AAC5B;AAEAgF,GAAAA,KAAKA,GAAG;KACN,OAAO,CAAC,IAAI,CAACjF,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;AAClC;AAEAoL,GAAAA,MAAMA,GAAG;KACP,OAAO,CAAC,IAAI,CAACpL,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;AAClC;;AAEA;AACF;AACA;;GAEEY,IAAIA,CAACjO,GAAG,EAAE;KACR+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KAEtC,IAAI,IAAI,CAACU,MAAM,GAAGV,GAAG,CAACU,MAAM,EAC1B,OAAO,EAAE;KAEX,IAAI,IAAI,CAACA,MAAM,GAAGV,GAAG,CAACU,MAAM,EAC1B,OAAO,CAAC;AAEV,KAAA,KAAK,IAAIoF,CAAC,GAAG,IAAI,CAACpF,MAAM,GAAG,CAAC,EAAEoF,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;OACzC,MAAMsB,CAAC,GAAG,IAAI,CAACiG,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC;OAC3B,MAAMuB,CAAC,GAAGrH,GAAG,CAACqN,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC;OAE1B,IAAIsB,CAAC,KAAKC,CAAC,EACT;OAEF,OAAO,CAACD,CAAC,GAAGC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;AAC1B;AAEA,KAAA,OAAO,CAAC;AACV;GAEA0L,KAAKA,CAAC/S,GAAG,EAAE;KACT+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;KAEjC,IAAI,IAAI,CAACU,MAAM,GAAG,CAAC,EACjB,OAAO,CAAC;KAEV,MAAM2J,CAAC,GAAG,IAAI,CAACgD,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;KAE3B,IAAIrN,GAAG,GAAG,CAAC,EACTA,GAAG,GAAG,CAACA,GAAG;KAEZ,OAAO,CAACqK,CAAC,GAAGrK,GAAG,KAAKqK,CAAC,GAAGrK,GAAG,CAAC;AAC9B;;AAEA;AACF;AACA;;GAEE0Y,QAAQA,CAAC1Y,GAAG,EAAE;AACZ,KAAA,MAAMuN,GAAG,GAAGP,UAAU,GAAGE,EAAE,CAACK,GAAG,CAACvN,GAAG,CAAC,GAAGkN,EAAE,CAACyL,IAAI,CAAC3Y,GAAG,CAAC;KACnD,OAAO,IAAI,CAAC4Y,KAAK,CAACrL,GAAG,CAAC,CAACsL,WAAW,EAAE;AACtC;GAEAC,MAAMA,CAAC9Y,GAAG,EAAE;AACV;AACA;AACA;KACA+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AAEtC,KAAA,IAAIA,GAAG,CAACgQ,MAAM,EAAE,IAAIhQ,GAAG,CAACyY,MAAM,EAAE,EAC9B,MAAM,IAAI7W,KAAK,CAAC,4BAA4B,CAAC;AAE/C,KAAA,IAAIwF,CAAC,GAAG,IAAI,CAAC2R,YAAY,EAAE;AAC3B,KAAA,IAAI1R,CAAC,GAAGrH,GAAG,CAACuO,KAAK,EAAE;KACnB,IAAItE,CAAC,GAAG,CAAC;AAET,KAAA,IAAI5C,CAAC,CAACkR,KAAK,EAAE,EAAE;OACb,IAAInR,CAAC,CAACmR,KAAK,EAAE,EACXtO,CAAC,GAAG,EAAE;OACR5C,CAAC,CAAC4J,IAAI,EAAE;AACV;KAEA,IAAI7J,CAAC,CAACmR,KAAK,EAAE,IAAInR,CAAC,CAAC6G,IAAI,CAAC5G,CAAC,CAAC,IAAI,CAAC,EAC7BD,CAAC,CAAC4K,IAAI,CAAC3K,CAAC,CAAC;AAEX,KAAA,OAAO,CAACD,CAAC,CAAC4I,MAAM,EAAE,EAAE;AAClB,OAAA,MAAMjH,IAAI,GAAG3B,CAAC,CAAC4R,QAAQ,EAAE;OAEzB,IAAIjQ,IAAI,GAAG,CAAC,EAAE;SACZ,MAAMkQ,KAAK,GAAG5R,CAAC,CAACkQ,KAAK,CAAC,CAAC,CAAC;SAExB,IAAI0B,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,CAAC,EAC5BhP,CAAC,GAAG,CAACA,CAAC;AACV;OAEA,IAAI7C,CAAC,CAAC6G,IAAI,CAAC5G,CAAC,CAAC,GAAG,CAAC,EAAE;SACjB,CAACD,CAAC,EAAEC,CAAC,CAAC,GAAG,CAACA,CAAC,EAAED,CAAC,CAAC;SAEf,IAAIA,CAAC,CAACmQ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIlQ,CAAC,CAACkQ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EACtCtN,CAAC,GAAG,CAACA,CAAC;AACV;OAEA7C,CAAC,CAAC8G,KAAK,CAAC9G,CAAC,EAAEC,CAAC,CAAC,CAACuI,MAAM,CAAC,CAAC,CAAC;OAEvB,MAAMqJ,KAAK,GAAG5R,CAAC,CAACkQ,KAAK,CAAC,CAAC,CAAC;OAExB,IAAI0B,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,CAAC,EAC5BhP,CAAC,GAAG,CAACA,CAAC;AACV;KAEA,IAAI5C,CAAC,CAACuQ,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EACjB,OAAO,CAAC;AAEV,KAAA,OAAO3N,CAAC;AACV;GAEAiP,SAASA,CAAClZ,GAAG,EAAE;KACb+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AAEtC,KAAA,IAAI,IAAI,CAACgQ,MAAM,EAAE,EACf,OAAOhQ,GAAG,CAAC+S,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;AAEnC,KAAA,IAAI/S,GAAG,CAACgQ,MAAM,EAAE,EACd,OAAO,IAAI,CAAC+C,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;KAEpC,IAAI,CAAC,CAAC,IAAI,CAAC1F,KAAK,CAAC,CAAC,CAAC,GAAGrN,GAAG,CAACqN,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAC5C,OAAO,CAAC;KAEV,MAAMtI,CAAC,GAAG,IAAI;AACd,KAAA,MAAMC,CAAC,GAAGhF,GAAG,CAACuO,KAAK,EAAE;AACrB,KAAA,MAAMxF,IAAI,GAAG/D,CAAC,CAACgU,QAAQ,EAAE;KACzB,MAAMG,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;KAExC,IAAIzN,CAAC,GAAG3G,CAAC,CAAC+T,MAAM,CAAC9T,CAAC,CAAC;AAEnB,KAAA,IAAI+D,IAAI,GAAG,CAAC,EACV2C,CAAC,IAAIyN,KAAK,CAACpU,CAAC,CAACwS,KAAK,CAAC,CAAC,CAAC,CAAC;KAExB,OAAO7L,CAAC,GAAG,CAAC;AACd;GAEA0N,IAAIA,CAACpZ,GAAG,EAAE;KACR,OAAO,IAAI,CAACqZ,GAAG,CAACrZ,GAAG,CAAC,CAACsP,KAAK,CAAC,IAAI,CAAC;AAClC;GAEA+J,GAAGA,CAACrZ,GAAG,EAAE;KACP+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KAEtC,IAAI,IAAI,CAACgQ,MAAM,EAAE,EACf,OAAOhQ,GAAG,CAACsU,GAAG,EAAE;KAElB,IAAItU,GAAG,CAACgQ,MAAM,EAAE,EACd,OAAO,IAAI,CAACsE,GAAG,EAAE;AAEnB,KAAA,IAAIlN,CAAC,GAAG,IAAI,CAACmH,KAAK,EAAE;AACpB,KAAA,IAAIlH,CAAC,GAAGrH,GAAG,CAACuO,KAAK,EAAE;KAEnBnH,CAAC,CAACkG,QAAQ,GAAG,CAAC;KACdjG,CAAC,CAACiG,QAAQ,GAAG,CAAC;;AAEd;KACA,MAAM7B,KAAK,GAAGrE,CAAC,CAACkS,QAAQ,CAACjS,CAAC,CAAC;KAE3B,IAAIoE,KAAK,KAAK,CAAC,EAAE;AACfrE,OAAAA,CAAC,CAACwI,MAAM,CAACnE,KAAK,CAAC;AACfpE,OAAAA,CAAC,CAACuI,MAAM,CAACnE,KAAK,CAAC;AACjB;KAEA,SAAS;OACPrE,CAAC,CAAC4R,QAAQ,EAAE;OACZ3R,CAAC,CAAC2R,QAAQ,EAAE;OAEZ,MAAM/N,GAAG,GAAG7D,CAAC,CAAC6G,IAAI,CAAC5G,CAAC,CAAC;OAErB,IAAI4D,GAAG,GAAG,CAAC,EAAE;AACX;SACA,CAAC7D,CAAC,EAAEC,CAAC,CAAC,GAAG,CAACA,CAAC,EAAED,CAAC,CAAC;AACjB,QAAC,MAAM,IAAI6D,GAAG,KAAK,CAAC,IAAI5D,CAAC,CAAC0L,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AACxC;AACA;SACA;AACF;AAEA3L,OAAAA,CAAC,CAAC8G,KAAK,CAAC9G,CAAC,EAAEC,CAAC,CAAC;AACf;AAEA,KAAA,OAAOA,CAAC,CAACoJ,MAAM,CAAChF,KAAK,CAAC;AACxB;GAEA8N,IAAIA,CAACvZ,GAAG,EAAE;KACR,OAAO,IAAI,CAACwZ,GAAG,CAACxZ,GAAG,CAAC,CAACsP,KAAK,CAAC,IAAI,CAAC;AAClC;GAEAkK,GAAGA,CAACxZ,GAAG,EAAE;KACP+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AAEtC,KAAA,IAAI,IAAI,CAACgQ,MAAM,EAAE,IAAIhQ,GAAG,CAACgQ,MAAM,EAAE,EAC/B,OAAO,IAAI9C,EAAE,CAAC,CAAC,CAAC;AAElB,KAAA,OAAO,IAAI,CAAC4D,GAAG,CAAC,IAAI,CAACuI,GAAG,CAACrZ,GAAG,CAAC,CAAC,CAACqP,GAAG,CAACrP,GAAG,CAAC,CAAC0X,IAAI,EAAE;AAChD;GAEA+B,IAAIA,CAACzZ,GAAG,EAAE;KACR+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AAEtC,KAAA,IAAI,IAAI,CAACgQ,MAAM,EAAE,EAAE;OACjB,OAAO,CACL,IAAI9C,EAAE,CAAC,CAAC,CAAC,EACT,IAAIA,EAAE,CAAClN,GAAG,CAACI,IAAI,EAAE,CAAC,EAClBJ,GAAG,CAACsU,GAAG,EAAE,CACV;AACH;AAEA,KAAA,IAAItU,GAAG,CAACgQ,MAAM,EAAE,EAAE;OAChB,OAAO,CACL,IAAI9C,EAAE,CAAC,IAAI,CAAC9M,IAAI,EAAE,CAAC,EACnB,IAAI8M,EAAE,CAAC,CAAC,CAAC,EACT,IAAI,CAACoH,GAAG,EAAE,CACX;AACH;AAEA,KAAA,MAAMvP,CAAC,GAAG,IAAI,CAACwJ,KAAK,EAAE;AACtB,KAAA,MAAMvJ,CAAC,GAAGhF,GAAG,CAACuO,KAAK,EAAE;KAErBxJ,CAAC,CAACuI,QAAQ,GAAG,CAAC;KACdtI,CAAC,CAACsI,QAAQ,GAAG,CAAC;;AAEd;AACA,KAAA,MAAM9D,CAAC,GAAG,IAAI0D,EAAE,CAAC,CAAC,CAAC;AACnB,KAAA,MAAMzD,CAAC,GAAG,IAAIyD,EAAE,CAAC,CAAC,CAAC;;AAEnB;AACA,KAAA,MAAMxD,CAAC,GAAG,IAAIwD,EAAE,CAAC,CAAC,CAAC;AACnB,KAAA,MAAMvD,CAAC,GAAG,IAAIuD,EAAE,CAAC,CAAC,CAAC;;AAEnB;KACA,MAAMxF,CAAC,GAAG3C,CAAC,CAACuU,QAAQ,CAACtU,CAAC,CAAC;KAEvB,IAAI0C,CAAC,GAAG,CAAC,EAAE;AACT3C,OAAAA,CAAC,CAAC6K,MAAM,CAAClI,CAAC,CAAC;AACX1C,OAAAA,CAAC,CAAC4K,MAAM,CAAClI,CAAC,CAAC;AACb;AAEA,KAAA,MAAMgS,EAAE,GAAG3U,CAAC,CAACwJ,KAAK,EAAE;AACpB,KAAA,MAAMoL,EAAE,GAAG3U,CAAC,CAACuJ,KAAK,EAAE;AAEpB,KAAA,OAAO,CAACxJ,CAAC,CAACiL,MAAM,EAAE,EAAE;AAClB,OAAA,IAAIlK,CAAC,GAAGf,CAAC,CAACiU,QAAQ,EAAE;AACpB,OAAA,IAAI/O,CAAC,GAAGjF,CAAC,CAACgU,QAAQ,EAAE;OAEpB,OAAOlT,CAAC,EAAE,EAAE;SACV,IAAI0D,CAAC,CAAC8I,KAAK,EAAE,IAAI7I,CAAC,CAAC6I,KAAK,EAAE,EAAE;AAC1B9I,WAAAA,CAAC,CAACsE,IAAI,CAAC6L,EAAE,CAAC;AACVlQ,WAAAA,CAAC,CAACkF,IAAI,CAAC+K,EAAE,CAAC;AACZ;AAEAlQ,SAAAA,CAAC,CAACoG,MAAM,CAAC,CAAC,CAAC;AACXnG,SAAAA,CAAC,CAACmG,MAAM,CAAC,CAAC,CAAC;AACb;OAEA,OAAO3F,CAAC,EAAE,EAAE;SACV,IAAIP,CAAC,CAAC4I,KAAK,EAAE,IAAI3I,CAAC,CAAC2I,KAAK,EAAE,EAAE;AAC1B5I,WAAAA,CAAC,CAACoE,IAAI,CAAC6L,EAAE,CAAC;AACVhQ,WAAAA,CAAC,CAACgF,IAAI,CAAC+K,EAAE,CAAC;AACZ;AAEAhQ,SAAAA,CAAC,CAACkG,MAAM,CAAC,CAAC,CAAC;AACXjG,SAAAA,CAAC,CAACiG,MAAM,CAAC,CAAC,CAAC;AACb;OAEA,IAAI7K,CAAC,CAACkG,GAAG,CAACjG,CAAC,CAAC,IAAI,CAAC,EAAE;AACjBD,SAAAA,CAAC,CAAC4J,IAAI,CAAC3J,CAAC,CAAC;AACTwE,SAAAA,CAAC,CAACmF,IAAI,CAACjF,CAAC,CAAC;AACTD,SAAAA,CAAC,CAACkF,IAAI,CAAChF,CAAC,CAAC;AACX,QAAC,MAAM;AACL3E,SAAAA,CAAC,CAAC2J,IAAI,CAAC5J,CAAC,CAAC;AACT2E,SAAAA,CAAC,CAACiF,IAAI,CAACnF,CAAC,CAAC;AACTG,SAAAA,CAAC,CAACgF,IAAI,CAAClF,CAAC,CAAC;AACX;AACF;KAEA,IAAI,IAAI,CAAC6D,QAAQ,KAAK,CAAC,EACrB5D,CAAC,CAACuH,IAAI,EAAE;KAEV,IAAIjR,GAAG,CAACsN,QAAQ,KAAK,CAAC,EACpB3D,CAAC,CAACsH,IAAI,EAAE;KAEV,OAAO,CAACvH,CAAC,EAAEC,CAAC,EAAE3E,CAAC,CAACyL,MAAM,CAAC/I,CAAC,CAAC,CAAC;AAC5B;GAEAkS,OAAOA,CAAC5Z,GAAG,EAAE;KACX,OAAO,IAAI,CAAC6Z,MAAM,CAAC7Z,GAAG,CAAC,CAACsP,KAAK,CAAC,IAAI,CAAC;AACrC;GAEAuK,MAAMA,CAAC7Z,GAAG,EAAE;KACV+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KACtC8Z,KAAK,CAAC9Z,GAAG,CAACI,IAAI,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC;AAE/B,KAAA,IAAIJ,GAAG,CAACsS,KAAK,EAAE,EACb,OAAO,IAAI,CAACyH,QAAQ,CAAC/Z,GAAG,CAAC;AAE3B,KAAA,IAAIA,GAAG,CAAC4X,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EACnB,MAAM,IAAI9E,UAAU,CAAC,iBAAiB,CAAC;KAEzC,MAAM,CAACzJ,CAAC,GAAG3B,CAAC,CAAC,GAAG,IAAI,CAAC+R,IAAI,CAACzZ,GAAG,CAAC;AAE9B,KAAA,IAAI0H,CAAC,CAACkQ,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EACjB,MAAM,IAAI9E,UAAU,CAAC,iBAAiB,CAAC;AAEzC,KAAA,OAAOzJ,CAAC,CAAC2I,IAAI,CAAChS,GAAG,CAAC;AACpB;GAEAga,OAAOA,CAACha,GAAG,EAAE;KACX,OAAO,IAAI,CAACia,MAAM,CAACja,GAAG,CAAC,CAACsP,KAAK,CAAC,IAAI,CAAC;AACrC;GAEA2K,MAAMA,CAACja,GAAG,EAAE;AACV,KAAA,MAAMuN,GAAG,GAAGP,UAAU,GAAGE,EAAE,CAACK,GAAG,CAACvN,GAAG,CAAC,GAAGkN,EAAE,CAACyL,IAAI,CAAC3Y,GAAG,CAAC;AACnD,KAAA,OAAO,IAAI,CAAC4Y,KAAK,CAACrL,GAAG,CAAC,CAAC2M,SAAS,EAAE,CAACC,OAAO,EAAE;AAC9C;AAEAC,GAAAA,KAAKA,CAACpV,CAAC,EAAE0L,CAAC,EAAEiI,IAAI,EAAE;AAChB,KAAA,OAAO,IAAI,CAAC0B,IAAI,CAACrV,CAAC,EAAE0L,CAAC,EAAEiI,IAAI,CAAC,CAACrJ,KAAK,CAAC,IAAI,CAAC;AAC1C;AAEA+K,GAAAA,IAAIA,CAACrV,CAAC,EAAE0L,CAAC,EAAEiI,IAAI,EAAE;KACf,MAAMpL,GAAG,GAAG,CAACP,UAAU,IAAI2L,IAAI,GAAGzL,EAAE,CAACyL,IAAI,CAACjI,CAAC,CAAC,GAAGxD,EAAE,CAACK,GAAG,CAACmD,CAAC,CAAC;AACxD,KAAA,OAAO,IAAI,CAACkI,KAAK,CAACrL,GAAG,CAAC,CAAC+M,MAAM,CAACtV,CAAC,CAAC,CAACmV,OAAO,EAAE;AAC5C;AAEAI,GAAAA,MAAMA,CAACvV,CAAC,EAAE0L,CAAC,EAAEiI,IAAI,EAAE;AACjB,KAAA,OAAO,IAAI,CAAC6B,KAAK,CAACxV,CAAC,EAAE0L,CAAC,EAAEiI,IAAI,CAAC,CAACrJ,KAAK,CAAC,IAAI,CAAC;AAC3C;AAEAkL,GAAAA,KAAKA,CAACxV,CAAC,EAAE0L,CAAC,EAAEiI,IAAI,EAAE;AAChB,KAAA,MAAMpL,GAAG,GAAGoL,IAAI,GAAGzL,EAAE,CAACyL,IAAI,CAACjI,CAAC,CAAC,GAAGxD,EAAE,CAACK,GAAG,CAACmD,CAAC,CAAC;AACzC,KAAA,OAAO,IAAI,CAACkI,KAAK,CAACrL,GAAG,CAAC,CAACkN,OAAO,CAACzV,CAAC,CAAC,CAACmV,OAAO,EAAE;AAC7C;GAEAO,MAAMA,CAAChJ,CAAC,EAAE;KACR,OAAO,IAAI,CAACiJ,KAAK,CAACjJ,CAAC,CAAC,CAACpC,KAAK,CAAC,IAAI,CAAC;AAClC;GAEAqL,KAAKA,CAACjJ,CAAC,EAAE;KACP3D,OAAO,CAACb,EAAE,CAACc,IAAI,CAAC0D,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC;AAElC,KAAA,IAAInE,GAAG;AAEP,KAAA,IAAImE,CAAC,CAAC6F,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI7F,CAAC,CAAC6F,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AACxC;AACAhK,OAAAA,GAAG,GAAGL,EAAE,CAACK,GAAG,CAACmE,CAAC,CAAC;AACjB,MAAC,MAAM;AACLnE,OAAAA,GAAG,GAAGL,EAAE,CAACyL,IAAI,CAACjH,CAAC,CAAC;AAClB;AAEA,KAAA,OAAO,IAAI,CAACkH,KAAK,CAACrL,GAAG,CAAC,CAACqN,OAAO,EAAE,CAACT,OAAO,EAAE;AAC5C;AAEAU,GAAAA,OAAOA,CAACnJ,CAAC,EAAEvB,CAAC,EAAE;AACZ,KAAA,OAAO,IAAI,CAAC2K,MAAM,CAACpJ,CAAC,EAAEvB,CAAC,CAAC,CAACb,KAAK,CAAC,IAAI,CAAC;AACtC;AAEAwL,GAAAA,MAAMA,CAACpJ,CAAC,EAAEvB,CAAC,EAAE;KACX,MAAM4K,EAAE,GAAG,IAAI,CAACJ,KAAK,CAACjJ,CAAC,CAAC;KACxB,MAAMsJ,EAAE,GAAG,IAAI,CAACL,KAAK,CAACxK,CAAC,CAAC;KACxB,MAAM,CAAC8K,EAAE,EAAEC,EAAE,CAAC,GAAGxJ,CAAC,CAAC+H,IAAI,CAACtJ,CAAC,CAAC;AAC1B,KAAA,MAAMgL,GAAG,GAAGH,EAAE,CAAC3L,GAAG,CAAC4L,EAAE,CAAC,CAAC5L,GAAG,CAACqC,CAAC,CAAC;AAC7B,KAAA,MAAM0J,GAAG,GAAGL,EAAE,CAAC1L,GAAG,CAAC6L,EAAE,CAAC,CAAC7L,GAAG,CAACc,CAAC,CAAC;KAC7B,MAAMiE,CAAC,GAAG1C,CAAC,CAACrC,GAAG,CAACc,CAAC,CAAC;KAElB,OAAOgL,GAAG,CAACrN,IAAI,CAACsN,GAAG,CAAC,CAACpJ,IAAI,CAACoC,CAAC,CAAC;AAC9B;;AAEA;AACF;AACA;;AAEEiH,GAAAA,OAAOA,CAACC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAE;KACxBzN,OAAO,CAAEwN,IAAI,KAAK,CAAC,KAAMA,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;AAEhD,KAAA,IAAI,CAAC,IAAI,CAACE,SAAS,CAACH,GAAG,EAAEC,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,EACtC,OAAO,KAAK;KAEd,IAAI,CAAC,IAAI,CAACG,YAAY,CAACF,KAAK,CAAC,EAC3B,OAAO,KAAK;AAEd,KAAA,OAAO,IAAI;AACb;GAEAC,SAASA,CAACH,GAAG,EAAEC,IAAI,EAAEI,MAAM,GAAG,KAAK,EAAE;KACnC5N,OAAO,CAAEwN,IAAI,KAAK,CAAC,KAAMA,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;KAChDxN,OAAO,CAACwN,IAAI,GAAG,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC;KACpCxN,OAAO,CAAC,OAAO4N,MAAM,KAAK,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC;KAEzD,MAAMvH,CAAC,GAAG,IAAI;KAEd,IAAIA,CAAC,CAACwD,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;OACjB,OAAOxD,CAAC,CAACwD,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IACfxD,CAAC,CAACwD,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IACfxD,CAAC,CAACwD,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;AACxB;AAEA,KAAA,IAAIxD,CAAC,CAACqE,MAAM,EAAE,EACZ,OAAO,KAAK;KAEd,MAAMmD,GAAG,GAAGxH,CAAC,CAACtF,IAAI,CAAC,CAAC,CAAC;KACrB,MAAM+M,GAAG,GAAGD,GAAG,CAAC9M,IAAI,CAAC,CAAC,CAAC;AACvB,KAAA,MAAMpD,CAAC,GAAGkQ,GAAG,CAACE,QAAQ,EAAE;KACxB,MAAM3L,CAAC,GAAGyL,GAAG,CAAC7E,KAAK,CAACrL,CAAC,CAAC;KAEtB,MAAM6B,GAAG,GAAGL,EAAE,CAACK,GAAG,CAAC6G,CAAC,CAAC;KACrB,MAAM2H,IAAI,GAAGH,GAAG,CAAChD,KAAK,CAACrL,GAAG,CAAC;KAC3B,MAAMyO,IAAI,GAAG,IAAI9O,EAAE,CAAC,CAAC,CAAC,CAAC0L,KAAK,CAACrL,GAAG,CAAC;AAErCkK,KAAAA,IAAI,EACA,KAAK,IAAI3R,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyV,IAAI,EAAEzV,CAAC,EAAE,EAAE;AAC7B,OAAA,IAAIf,CAAC;OAEL,IAAIe,CAAC,KAAKyV,IAAI,GAAG,CAAC,IAAII,MAAM,EAAE;AAC5B5W,SAAAA,CAAC,GAAG,IAAImI,EAAE,CAAC,CAAC,CAAC;AACf,QAAC,MAAM;SACLnI,CAAC,GAAGmI,EAAE,CAAC+O,MAAM,CAACX,GAAG,EAAE,CAAC,EAAEO,GAAG,CAAC;AAC1B9W,SAAAA,CAAC,CAACoJ,KAAK,CAAC,CAAC,CAAC;AACZ;AAEA,OAAA,IAAInJ,CAAC,GAAGD,CAAC,CAAC6T,KAAK,CAACrL,GAAG,CAAC,CAAC+M,MAAM,CAACnK,CAAC,CAAC;AAE9B,OAAA,IAAInL,CAAC,CAACiG,GAAG,CAAC+Q,IAAI,CAAC,KAAK,CAAC,IAAIhX,CAAC,CAACiG,GAAG,CAAC8Q,IAAI,CAAC,KAAK,CAAC,EACxC;OAEF,KAAK,IAAI9R,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyB,CAAC,EAAEzB,CAAC,EAAE,EAAE;AAC1BjF,SAAAA,CAAC,GAAGA,CAAC,CAACkX,MAAM,EAAE;SAEd,IAAIlX,CAAC,CAACiG,GAAG,CAAC8Q,IAAI,CAAC,KAAK,CAAC,EACnB,SAAStE,IAAI;SAEf,IAAIzS,CAAC,CAACiG,GAAG,CAAC+Q,IAAI,CAAC,KAAK,CAAC,EACnB,OAAO,KAAK;AAChB;AAEA,OAAA,OAAO,KAAK;AACd;AAEA,KAAA,OAAO,IAAI;AACb;AAEAN,GAAAA,YAAYA,CAACF,KAAK,GAAG,CAAC,EAAE;KACtBzN,OAAO,CAAEyN,KAAK,KAAK,CAAC,KAAMA,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;KAEnD,MAAMpH,CAAC,GAAG,IAAI;;AAEd;KACA,IAAIA,CAAC,CAACwD,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAChB,OAAO,KAAK;;AAEd;AACA,KAAA,IAAIxD,CAAC,CAACqE,MAAM,EAAE,EACZ,OAAOrE,CAAC,CAACwD,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;KAExB,IAAIlG,CAAC,GAAG,CAAC;KAET,SAAS;OACP,IAAIA,CAAC,GAAG,KAAK,EAAE;AACb;SACA,MAAM,IAAI9P,KAAK,CAAC,CAA8BwS,2BAAAA,EAAAA,CAAC,CAAC3T,QAAQ,CAAC,EAAE,CAAC,CAAA,CAAA,CAAG,CAAC;AAClE;OAEA,IAAI+a,KAAK,KAAK,CAAC,IAAI9J,CAAC,GAAG8J,KAAK,EAAE;AAC5B;AACA,SAAA,OAAO,KAAK;AACd;OAEA,MAAMjU,CAAC,GAAG,IAAI2F,EAAE,CAACwE,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAC;OAC3B,MAAMzH,CAAC,GAAG1C,CAAC,CAACuR,MAAM,CAAC1E,CAAC,CAAC;AAErB,OAAA,IAAInK,CAAC,KAAK,EAAE,EACV;AAEF,OAAA,IAAIA,CAAC,KAAK,CAAC,EACT,OAAOmK,CAAC,CAACwD,IAAI,CAAClG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;OAE5B,IAAIA,CAAC,KAAK,EAAE,EAAE;AACZ,SAAA,IAAI0C,CAAC,CAACV,QAAQ,EAAE,EACd,OAAO,KAAK;AAChB;OAEAhC,CAAC,IAAI,CAAC;AACR;KAEA,MAAMrI,CAAC,GAAG+K,CAAC,CAAC5F,IAAI,CAAC,CAAC,CAAC;AACnB,KAAA,MAAMtF,CAAC,GAAGG,CAAC,CAAC2P,QAAQ,EAAE;AAEtB,KAAA,IAAImD,EAAE,GAAG,IAAIjP,EAAE,CAAC,CAAC,CAAC;AAClB,KAAA,IAAIkP,GAAG,GAAG,IAAIlP,EAAE,CAACwE,CAAC,CAAC;AAEnB,KAAA,KAAK,IAAI5L,CAAC,GAAGuD,CAAC,CAAC6J,SAAS,EAAE,EAAEpN,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;AACvC,OAAA,IAAIuD,CAAC,CAACsG,MAAM,CAAC7J,CAAC,CAAC,EAAE;AACfqW,SAAAA,EAAE,GAAGA,EAAE,CAAC9M,GAAG,CAAC+M,GAAG,CAAC,CAACxN,KAAK,CAAC8C,CAAC,CAAC,CAACM,IAAI,CAACoC,CAAC,CAAC;AACjCgI,SAAAA,GAAG,GAAGA,GAAG,CAACzJ,GAAG,EAAE,CAAC/D,KAAK,CAAC,CAAC,CAAC,CAACoD,IAAI,CAACoC,CAAC,CAAC;AAClC,QAAC,MAAM;AACLgI,SAAAA,GAAG,GAAGA,GAAG,CAAC/M,GAAG,CAAC8M,EAAE,CAAC,CAACvN,KAAK,CAAC8C,CAAC,CAAC,CAACM,IAAI,CAACoC,CAAC,CAAC;AAClC+H,SAAAA,EAAE,GAAGA,EAAE,CAACxJ,GAAG,EAAE,CAAC/D,KAAK,CAAC,CAAC,CAAC,CAACoD,IAAI,CAACoC,CAAC,CAAC;AAChC;AACF;KAEA,IAAI+H,EAAE,CAACvE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIuE,EAAE,CAAClR,GAAG,CAACmJ,CAAC,CAACtF,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AAC/C,OAAA,MAAM1H,CAAC,GAAG+U,EAAE,CAAC1M,IAAI,CAACiC,CAAC,CAAC,CAACM,IAAI,CAACoC,CAAC,CAAC;AAC5B,OAAA,MAAM/M,CAAC,GAAG+U,GAAG,CAAC9F,KAAK,CAAC,CAAC,CAAC,CAACtE,IAAI,CAACoC,CAAC,CAAC;OAE9B,IAAIhN,CAAC,CAAC6D,GAAG,CAAC5D,CAAC,CAAC,KAAK,CAAC,EAChB,OAAO,IAAI;AACf;AAEA,KAAA,KAAK,IAAI4L,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG/J,CAAC,GAAG,CAAC,EAAE+J,CAAC,EAAE,EAAE;AAC9B,OAAA,IAAIkJ,EAAE,CAACnM,MAAM,EAAE,EACb,OAAO,IAAI;OAEb,IAAImM,EAAE,CAACvE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAClB,OAAO,KAAK;AAEduE,OAAAA,EAAE,GAAGA,EAAE,CAACxJ,GAAG,EAAE,CAAC/D,KAAK,CAAC,CAAC,CAAC,CAACoD,IAAI,CAACoC,CAAC,CAAC;AAChC;AAEA,KAAA,OAAO,KAAK;AACd;;AAEA;AACF;AACA;;GAEEiI,MAAMA,CAACvI,KAAK,EAAE;KACZ,IAAI,IAAI,CAACxG,QAAQ,KAAK,CAAC,EACrB,OAAO,IAAI,CAACgH,GAAG,EAAE,CAACP,KAAK,CAACD,KAAK,CAAC,CAAC3F,KAAK,CAAC,CAAC,CAAC;AAEzC,KAAA,OAAO,IAAI,CAACI,KAAK,EAAE;AACrB;GAEA+N,QAAQA,CAACxI,KAAK,EAAE;KACd/F,OAAO,CAAE+F,KAAK,KAAK,CAAC,KAAMA,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;AACnDgG,KAAAA,KAAK,CAAChG,KAAK,GAAG,CAAC,EAAE,OAAO,CAAC;KAEzB,IAAI,IAAI,CAACoD,KAAK,CAACpD,KAAK,GAAG,CAAC,CAAC,EACvB,OAAO,IAAI,CAAC8B,IAAI,CAAC9B,KAAK,CAAC,CAAC3F,KAAK,CAAC,CAAC,CAAC,CAAC8C,IAAI,EAAE;AAEzC,KAAA,OAAO,IAAI,CAAC1C,KAAK,EAAE;AACrB;;AAEA;AACF;AACA;;GAEEqK,KAAKA,CAACtQ,GAAG,EAAE;KACTyF,OAAO,CAACzF,GAAG,YAAYiU,GAAG,EAAE,KAAK,EAAE,mBAAmB,CAAC;KAEvD,IAAI,IAAI,CAAChP,GAAG,EACV,MAAM,IAAI3L,KAAK,CAAC,+BAA+B,CAAC;AAElD,KAAA,OAAO0G,GAAG,CAACkU,SAAS,CAAC,IAAI,CAAC;AAC5B;AAEArC,GAAAA,OAAOA,GAAG;AACR5M,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAACkP,WAAW,CAAC,IAAI,CAAC;AACnC;GAEAC,QAAQA,CAACpU,GAAG,EAAE;KACZyF,OAAO,CAACzF,GAAG,YAAYiU,GAAG,EAAE,KAAK,EAAE,mBAAmB,CAAC;KAEvD,IAAI,IAAI,CAAChP,GAAG,EAAE;AACZ,OAAA,IAAI,CAACjF,GAAG,CAACoI,CAAC,CAACmH,EAAE,CAAC,IAAI,CAACtK,GAAG,CAACmD,CAAC,CAAC,IAAIpI,GAAG,CAACqQ,IAAI,KAAK,IAAI,CAACpL,GAAG,CAACoL,IAAI,EACrD,MAAM,IAAI/W,KAAK,CAAC,+BAA+B,CAAC;AACpD,MAAC,MAAM;OACLkY,KAAK,CAAC,IAAI,CAACxM,QAAQ,KAAK,CAAC,EAAE,KAAK,CAAC;AACjCwM,OAAAA,KAAK,CAAC,IAAI,CAAC7L,IAAI,CAAC3F,GAAG,CAACoI,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC;AACpC;KAEA,OAAO,IAAI,CAACnC,KAAK,EAAE,CAACoO,SAAS,CAACrU,GAAG,CAAC;AACpC;GAEAsU,OAAOA,CAAC5c,GAAG,EAAE;KACX+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AACtCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAACO,IAAI,CAAC,IAAI,EAAE9N,GAAG,CAAC;AACjC;GAEA6c,MAAMA,CAAC7c,GAAG,EAAE;KACV+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AACtCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,QAAQ,CAAC;KACvB,OAAO,IAAI,CAACA,GAAG,CAACe,GAAG,CAAC,IAAI,EAAEtO,GAAG,CAAC;AAChC;GAEA8c,QAAQA,CAAC9c,GAAG,EAAE;KACZ+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,UAAU,CAAC;KACzB,OAAO,IAAI,CAACA,GAAG,CAACY,KAAK,CAAC,IAAI,EAAEnO,GAAG,CAAC;AAClC;GAEA+c,OAAOA,CAAC/c,GAAG,EAAE;KACX+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAACiB,IAAI,CAAC,IAAI,EAAExO,GAAG,CAAC;AACjC;GAEAgd,OAAOA,CAAChd,GAAG,EAAE;KACX+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AACtCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAACoB,IAAI,CAAC,IAAI,EAAE3O,GAAG,CAAC;AACjC;GAEAid,MAAMA,CAACjd,GAAG,EAAE;KACV+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AACtCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,QAAQ,CAAC;KACvB,OAAO,IAAI,CAACA,GAAG,CAACsB,GAAG,CAAC,IAAI,EAAE7O,GAAG,CAAC;AAChC;GAEAkd,QAAQA,CAACld,GAAG,EAAE;KACZ+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,UAAU,CAAC;KACzB,OAAO,IAAI,CAACA,GAAG,CAACqB,KAAK,CAAC,IAAI,EAAE5O,GAAG,CAAC;AAClC;GAEAmd,OAAOA,CAACnd,GAAG,EAAE;KACX+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAACuB,IAAI,CAAC,IAAI,EAAE9O,GAAG,CAAC;AACjC;GAEAod,OAAOA,CAACpd,GAAG,EAAE;KACX+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AACtCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAAC6B,IAAI,CAAC,IAAI,EAAEpP,GAAG,CAAC;AACjC;GAEAqd,MAAMA,CAACrd,GAAG,EAAE;KACV+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AACtCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,QAAQ,CAAC;KACvB,OAAO,IAAI,CAACA,GAAG,CAAC8B,GAAG,CAAC,IAAI,EAAErP,GAAG,CAAC;AAChC;GAEAsd,QAAQA,CAACtd,GAAG,EAAE;KACZ+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,UAAU,CAAC;KACzB,OAAO,IAAI,CAACA,GAAG,CAACgC,KAAK,CAAC,IAAI,EAAEvP,GAAG,CAAC;AAClC;GAEAud,OAAOA,CAACvd,GAAG,EAAE;KACX+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAACkC,IAAI,CAAC,IAAI,EAAEzP,GAAG,CAAC;AACjC;GAEAwd,OAAOA,CAACxd,GAAG,EAAE;KACX+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AACtCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAACsE,IAAI,CAAC,IAAI,EAAE7R,GAAG,CAAC;AACjC;GAEAyd,MAAMA,CAACzd,GAAG,EAAE;KACV+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AACtCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,QAAQ,CAAC;KACvB,OAAO,IAAI,CAACA,GAAG,CAACzL,GAAG,CAAC,IAAI,EAAE9B,GAAG,CAAC;AAChC;GAEA0d,QAAQA,CAAC1d,GAAG,EAAE;KACZ+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,UAAU,CAAC;KACzB,OAAO,IAAI,CAACA,GAAG,CAACuE,KAAK,CAAC,IAAI,EAAE9R,GAAG,CAAC;AAClC;GAEA2d,OAAOA,CAAC3d,GAAG,EAAE;KACX+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAACwE,IAAI,CAAC,IAAI,EAAE/R,GAAG,CAAC;AACjC;GAEA4d,OAAOA,CAAC5d,GAAG,EAAE;KACX+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AACtCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxBsQ,MAAM,CAAC,CAAC7d,GAAG,CAACuN,GAAG,EAAE,SAAS,CAAC;KAC3B,OAAO,IAAI,CAACA,GAAG,CAACgF,IAAI,CAAC,IAAI,EAAEvS,GAAG,CAAC;AACjC;GAEAsa,MAAMA,CAACta,GAAG,EAAE;KACV+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AACtCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,QAAQ,CAAC;KACvBsQ,MAAM,CAAC,CAAC7d,GAAG,CAACuN,GAAG,EAAE,QAAQ,CAAC;KAC1B,OAAO,IAAI,CAACA,GAAG,CAACiF,GAAG,CAAC,IAAI,EAAExS,GAAG,CAAC;AAChC;GAEA8d,QAAQA,CAAC9d,GAAG,EAAE;KACZ+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,UAAU,CAAC;KACzB,OAAO,IAAI,CAACA,GAAG,CAACkF,KAAK,CAAC,IAAI,EAAEzS,GAAG,CAAC;AAClC;GAEAya,OAAOA,CAACza,GAAG,EAAE;KACX+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAACmF,IAAI,CAAC,IAAI,EAAE1S,GAAG,CAAC;AACjC;AAEA+d,GAAAA,OAAOA,GAAG;AACRxQ,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAACqF,IAAI,CAAC,IAAI,CAAC;AAC5B;AAEAsJ,GAAAA,MAAMA,GAAG;AACP3O,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,QAAQ,CAAC;KACvB,OAAO,IAAI,CAACA,GAAG,CAACoF,GAAG,CAAC,IAAI,CAAC;AAC3B;AAEAqL,GAAAA,QAAQA,GAAG;AACTzQ,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,UAAU,CAAC;KACzB,OAAO,IAAI,CAACA,GAAG,CAACiG,KAAK,CAAC,IAAI,CAAC;AAC7B;AAEAoH,GAAAA,OAAOA,GAAG;AACRrN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAACkG,IAAI,CAAC,IAAI,CAAC;AAC5B;GAEAwK,WAAWA,CAAC9K,CAAC,EAAE;AACb5F,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,aAAa,CAAC;KAC5B,OAAO,IAAI,CAACA,GAAG,CAAC2Q,QAAQ,CAAC,IAAI,EAAE/K,CAAC,CAAC;AACnC;GAEAgL,UAAUA,CAAChL,CAAC,EAAE;AACZ5F,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,YAAY,CAAC;KAC3B,OAAO,IAAI,CAACA,GAAG,CAAC6Q,OAAO,CAAC,IAAI,EAAEjL,CAAC,CAAC;AAClC;AAEAkL,GAAAA,WAAWA,GAAG;AACZ9Q,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,aAAa,CAAC;KAC5B,OAAO,IAAI,CAACA,GAAG,CAACmG,QAAQ,CAAC,IAAI,CAAC;AAChC;GAEA4K,OAAOA,CAACte,GAAG,EAAE;KACX+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AACtCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxBsQ,MAAM,CAAC,CAAC7d,GAAG,CAACuN,GAAG,EAAE,SAAS,CAAC;KAC3B,OAAO,IAAI,CAACA,GAAG,CAACsI,IAAI,CAAC,IAAI,EAAE7V,GAAG,CAAC;AACjC;GAEAue,MAAMA,CAACve,GAAG,EAAE;KACV+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AACtCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,QAAQ,CAAC;KACvBsQ,MAAM,CAAC,CAAC7d,GAAG,CAACuN,GAAG,EAAE,QAAQ,CAAC;KAC1B,OAAO,IAAI,CAACA,GAAG,CAACyI,GAAG,CAAC,IAAI,EAAEhW,GAAG,CAAC;AAChC;GAEAwe,QAAQA,CAACxe,GAAG,EAAE;KACZ+N,OAAO,CAAE/N,GAAG,KAAK,CAAC,KAAMA,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;AAC7CuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,UAAU,CAAC;KACzB,OAAO,IAAI,CAACA,GAAG,CAACuI,KAAK,CAAC,IAAI,EAAE9V,GAAG,CAAC;AAClC;GAEAye,OAAOA,CAACze,GAAG,EAAE;KACX+N,OAAO,CAAE/N,GAAG,KAAK,CAAC,KAAMA,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;AAC7CuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAAC0I,IAAI,CAAC,IAAI,EAAEjW,GAAG,CAAC;AACjC;AAEA0e,GAAAA,OAAOA,GAAG;AACRnR,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,SAAS,CAAC;KACxB,OAAO,IAAI,CAACA,GAAG,CAAC0D,IAAI,CAAC,IAAI,CAAC;AAC5B;AAEA0N,GAAAA,MAAMA,GAAG;AACPpR,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,QAAQ,CAAC;KACvB,OAAO,IAAI,CAACA,GAAG,CAACiC,GAAG,CAAC,IAAI,CAAC;AAC3B;GAEAoP,KAAKA,CAAC5e,GAAG,EAAE;KACT+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AACtCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,OAAO,CAAC;KACtB,OAAO,IAAI,CAACA,GAAG,CAACsK,EAAE,CAAC,IAAI,EAAE7X,GAAG,CAAC;AAC/B;GAEA6e,MAAMA,CAAC7e,GAAG,EAAE;KACV+N,OAAO,CAACK,KAAK,CAACpO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjCuN,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,QAAQ,CAAC;KACvB,OAAO,IAAI,CAACA,GAAG,CAACuK,GAAG,CAAC,IAAI,EAAE9X,GAAG,CAAC;AAChC;AAEA8e,GAAAA,SAASA,GAAG;AACVvR,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,WAAW,CAAC;KAC1B,OAAO,IAAI,CAACA,GAAG,CAACwR,MAAM,CAAC,IAAI,CAAC;AAC9B;AAEAC,GAAAA,QAAQA,GAAG;AACTzR,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,UAAU,CAAC;KACzB,OAAO,IAAI,CAACA,GAAG,CAAC0R,KAAK,CAAC,IAAI,CAAC;AAC7B;AAEAC,GAAAA,QAAQA,GAAG;AACT3R,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,UAAU,CAAC;KACzB,OAAO,IAAI,CAACA,GAAG,CAAC+E,KAAK,CAAC,IAAI,CAAC;AAC7B;AAEA6M,GAAAA,SAASA,GAAG;AACV5R,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,WAAW,CAAC;KAC1B,OAAO,IAAI,CAACA,GAAG,CAACkL,MAAM,CAAC,IAAI,CAAC;AAC9B;AAEAI,GAAAA,WAAWA,GAAG;AACZtL,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,aAAa,CAAC;KAC5B,OAAO,IAAI,CAACA,GAAG,CAACmL,QAAQ,CAAC,IAAI,CAAC;AAChC;AAEA0G,GAAAA,SAASA,GAAG;AACV7R,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,WAAW,CAAC;KAC1B,OAAO,IAAI,CAACA,GAAG,CAACuL,MAAM,CAAC,IAAI,CAAC;AAC9B;AAEAuG,GAAAA,YAAYA,GAAG;AACb9R,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,cAAc,CAAC;KAC7B,OAAO,IAAI,CAACA,GAAG,CAAC2L,SAAS,CAAC,IAAI,CAAC;AACjC;AAEAoG,GAAAA,UAAUA,GAAG;AACX/R,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,YAAY,CAAC;KAC3B,OAAO,IAAI,CAACA,GAAG,CAACqM,OAAO,CAAC,IAAI,CAAC;AAC/B;AAEA2F,GAAAA,SAASA,GAAG;AACVhS,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,WAAW,CAAC;KAC1B,OAAO,IAAI,CAACA,GAAG,CAACsM,MAAM,CAAC,IAAI,CAAC;AAC9B;AAEA2F,GAAAA,UAAUA,GAAG;AACXjS,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,YAAY,CAAC;KAC3B,OAAO,IAAI,CAACA,GAAG,CAACyM,OAAO,CAAC,IAAI,CAAC;AAC/B;AAEAE,GAAAA,SAASA,GAAG;AACV3M,KAAAA,GAAG,CAAC,IAAI,CAACA,GAAG,EAAE,WAAW,CAAC;KAC1B,OAAO,IAAI,CAACA,GAAG,CAAC0M,MAAM,CAAC,IAAI,CAAC;AAC9B;;AAEA;AACF;AACA;;GAEE3K,KAAKA,CAACmQ,IAAI,EAAE;AACVA,KAAAA,IAAI,CAACpS,KAAK,GAAG,IAAI,CAACA,KAAK;AACvBoS,KAAAA,IAAI,CAAC/e,MAAM,GAAG,IAAI,CAACA,MAAM;AACzB+e,KAAAA,IAAI,CAACnS,QAAQ,GAAG,IAAI,CAACA,QAAQ;AAC7BmS,KAAAA,IAAI,CAAClS,GAAG,GAAG,IAAI,CAACA,GAAG;AACnB,KAAA,OAAOkS,IAAI;AACb;GAEA/R,MAAMA,CAAC5I,IAAI,EAAE;AACX,KAAA,OAAO,IAAI,CAACuI,KAAK,CAAC3M,MAAM,GAAGoE,IAAI,EAC7B,IAAI,CAACuI,KAAK,CAAChC,IAAI,CAAC,CAAC,CAAC;AAEpB,KAAA,OAAO,IAAI;AACb;GAEA6F,OAAOA,CAACpM,IAAI,EAAE;AACZ,KAAA,IAAI,CAAC4I,MAAM,CAAC5I,IAAI,CAAC;AAEjB,KAAA,OAAO,IAAI,CAACpE,MAAM,GAAGoE,IAAI,EACvB,IAAI,CAACuI,KAAK,CAAC,IAAI,CAAC3M,MAAM,EAAE,CAAC,GAAG,CAAC;AAE/B,KAAA,OAAO,IAAI;AACb;AAEA+N,GAAAA,MAAMA,GAAG;KACP,OAAO,IAAI,CAAC/N,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC2M,KAAK,CAAC,IAAI,CAAC3M,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EACzD,IAAI,CAACA,MAAM,IAAI,CAAC;AAElB,KAAA,OAAO,IAAI,CAACgO,UAAU,EAAE;AAC1B;AAEAA,GAAAA,UAAUA,GAAG;AACX9O,KAAAA,MAAM,CAAC,IAAI,CAACc,MAAM,GAAG,CAAC,CAAC;;AAEvB;KACA,IAAI,IAAI,CAACA,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC2M,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAC1C,IAAI,CAACC,QAAQ,GAAG,CAAC;AAEnB,KAAA,OAAO,IAAI;AACb;AAEAoS,GAAAA,MAAMA,GAAG;AACP;AACA9f,KAAAA,MAAM,CAAC,IAAI,CAACc,MAAM,GAAG,CAAC,CAAC;;AAEvB;KACAd,MAAM,CAAC,IAAI,CAACc,MAAM,IAAI,IAAI,CAAC2M,KAAK,CAAC3M,MAAM,CAAC;AAExC,KAAA,IAAI,IAAI,CAACA,MAAM,KAAK,CAAC,EAAE;AACrB;AACA,OAAA,IAAI,IAAI,CAAC2M,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EACrBzN,MAAM,CAAC,IAAI,CAAC0N,QAAQ,KAAK,CAAC,CAAC;AAC7B,OAAA,OAAO,IAAI;AACb;;AAEA;AACA1N,KAAAA,MAAM,CAAC,IAAI,CAACyN,KAAK,CAAC,IAAI,CAAC3M,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;AAEzC,KAAA,OAAO,IAAI;AACb;GAEAqZ,QAAQA,CAACrI,CAAC,EAAE;AACV;AACA;AACA;AACA;AACA;AACA;KACA3D,OAAO,CAACb,EAAE,CAACc,IAAI,CAAC0D,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC;KAClCoI,KAAK,CAACpI,CAAC,CAACtR,IAAI,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC;AAC7BR,KAAAA,MAAM,CAAC8R,CAAC,CAACY,KAAK,EAAE,CAAC;AAEjB,KAAA,IAAIZ,CAAC,CAACkG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EACjB,MAAM,IAAI9E,UAAU,CAAC,iBAAiB,CAAC;AAEzC,KAAA,MAAM1L,CAAC,GAAG,IAAI,CAACmH,KAAK,EAAE;AACtB,KAAA,MAAMlH,CAAC,GAAGqK,CAAC,CAACnD,KAAK,EAAE;AACnB,KAAA,MAAMyE,CAAC,GAAG,IAAI9F,EAAE,CAAC,CAAC,CAAC;AACnB,KAAA,MAAMiG,CAAC,GAAG,IAAIjG,EAAE,CAAC,CAAC,CAAC;KAEnB,IAAI9F,CAAC,CAACmR,KAAK,EAAE,IAAInR,CAAC,CAAC6G,IAAI,CAAC5G,CAAC,CAAC,IAAI,CAAC,EAC7BD,CAAC,CAAC4K,IAAI,CAAC3K,CAAC,CAAC;AAEX,KAAA,OAAO,CAACD,CAAC,CAAC4I,MAAM,EAAE,EAAE;AAClB,OAAA,IAAIlK,CAAC,GAAGsB,CAAC,CAAC4R,QAAQ,EAAE;AACpB,OAAA,IAAI/O,CAAC,GAAG5C,CAAC,CAAC2R,QAAQ,EAAE;OAEpB,OAAOlT,CAAC,EAAE,EAAE;AACV,SAAA,IAAIkN,CAAC,CAACV,KAAK,EAAE,EACXU,CAAC,CAACxF,KAAK,CAACwF,CAAC,EAAEtB,CAAC,CAAC;AAEfsB,SAAAA,CAAC,CAACpD,MAAM,CAAC,CAAC,CAAC;AACb;OAEA,OAAO3F,CAAC,EAAE,EAAE;AACV,SAAA,IAAIkJ,CAAC,CAACb,KAAK,EAAE,EACXa,CAAC,CAAC3F,KAAK,CAAC2F,CAAC,EAAEzB,CAAC,CAAC;AAEfyB,SAAAA,CAAC,CAACvD,MAAM,CAAC,CAAC,CAAC;AACb;OAEA,IAAIxI,CAAC,CAAC6G,IAAI,CAAC5G,CAAC,CAAC,IAAI,CAAC,EAAE;AAClBD,SAAAA,CAAC,CAAC8G,KAAK,CAAC9G,CAAC,EAAEC,CAAC,CAAC;SACb,IAAI2L,CAAC,CAAC/E,IAAI,CAACkF,CAAC,CAAC,GAAG,CAAC,EAAE;AACjBH,WAAAA,CAAC,CAAC9E,KAAK,CAACiF,CAAC,EAAEH,CAAC,CAAC;AACbA,WAAAA,CAAC,CAAC9E,KAAK,CAACwD,CAAC,EAAEsB,CAAC,CAAC;AACf,UAAC,MAAM;AACLA,WAAAA,CAAC,CAAC9E,KAAK,CAAC8E,CAAC,EAAEG,CAAC,CAAC;AACf;AACF,QAAC,MAAM;AACL9L,SAAAA,CAAC,CAAC6G,KAAK,CAAC7G,CAAC,EAAED,CAAC,CAAC;SACb,IAAI+L,CAAC,CAAClF,IAAI,CAAC+E,CAAC,CAAC,GAAG,CAAC,EAAE;AACjBG,WAAAA,CAAC,CAACjF,KAAK,CAAC8E,CAAC,EAAEG,CAAC,CAAC;AACbA,WAAAA,CAAC,CAACjF,KAAK,CAACwD,CAAC,EAAEyB,CAAC,CAAC;AACf,UAAC,MAAM;AACLA,WAAAA,CAAC,CAACjF,KAAK,CAACiF,CAAC,EAAEH,CAAC,CAAC;AACf;AACF;AACF;AAEA,KAAA,IAAI3L,CAAC,CAACuQ,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EACjB,MAAM,IAAI9E,UAAU,CAAC,iBAAiB,CAAC;AAEzClT,KAAAA,MAAM,CAACuT,CAAC,CAAC7F,QAAQ,KAAK,CAAC,CAAC;KACxB1N,MAAM,CAACuT,CAAC,CAAClF,IAAI,CAACyD,CAAC,CAAC,GAAG,CAAC,CAAC;AAErB,KAAA,OAAOyB,CAAC;AACV;AAEA6F,GAAAA,QAAQA,GAAG;AACT,KAAA,MAAMvN,KAAK,GAAG,IAAI,CAACqQ,QAAQ,EAAE;KAE7B,IAAIrQ,KAAK,GAAG,CAAC,EACX,IAAI,CAACmE,MAAM,CAACnE,KAAK,CAAC;AAEpB,KAAA,OAAOA,KAAK;AACd;GAEA6N,QAAQA,CAACtZ,GAAG,EAAE;AACZ;AACA;AACA,KAAA,IAAI,CAAC,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,GAAGrN,GAAG,CAACqN,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EACpC,OAAO,CAAC;AAEV,KAAA,MAAM3G,GAAG,GAAGkH,IAAI,CAACoD,GAAG,CAAC,IAAI,CAACtQ,MAAM,EAAEV,GAAG,CAACU,MAAM,CAAC;KAE7C,IAAIwI,CAAC,GAAG,CAAC;KAET,KAAK,IAAIpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,GAAG,EAAEZ,CAAC,EAAE,EAAE;AAC5B,OAAA,MAAMuB,CAAC,GAAGyU,QAAQ,CAAC,IAAI,CAACzO,KAAK,CAACvH,CAAC,CAAC,GAAG9F,GAAG,CAACqN,KAAK,CAACvH,CAAC,CAAC,CAAC;OAEhDoD,CAAC,IAAI7B,CAAC;OAEN,IAAIA,CAAC,KAAK,EAAE,EACV;AACJ;AAEA,KAAA,OAAO6B,CAAC;AACV;AAEA6P,GAAAA,YAAYA,GAAG;AACb,KAAA,OAAO,IAAI,CAACxL,GAAG,GAAG,IAAI,CAAC4M,OAAO,EAAE,GAAG,IAAI,CAAC5L,KAAK,EAAE;AACjD;GAEAoO,SAASA,CAACrU,GAAG,EAAE;KACb,IAAI,CAACiF,GAAG,GAAGjF,GAAG;AACd,KAAA,OAAO,IAAI;AACb;;AAEA;AACF;AACA;;AAEEiG,GAAAA,KAAKA,GAAG;AACN,KAAA,MAAMzH,IAAI,GAAG,IAAIoG,EAAE,EAAE;KAErBpG,IAAI,CAACuG,KAAK,GAAG,IAAIpI,KAAK,CAAC,IAAI,CAACvE,MAAM,CAAC;KAEnC,KAAK,IAAIoF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,MAAM,EAAEoF,CAAC,EAAE,EAClCgB,IAAI,CAACuG,KAAK,CAACvH,CAAC,CAAC,GAAG,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC;AAE/BgB,KAAAA,IAAI,CAACpG,MAAM,GAAG,IAAI,CAACA,MAAM;AACzBoG,KAAAA,IAAI,CAACwG,QAAQ,GAAG,IAAI,CAACA,QAAQ;AAC7BxG,KAAAA,IAAI,CAACyG,GAAG,GAAG,IAAI,CAACA,GAAG;AAEnB,KAAA,OAAOzG,IAAI;AACb;GAEA6Y,MAAMA,CAAC3f,GAAG,EAAE;KACV+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AAEtC,KAAA,IAAI,CAAC0N,MAAM,CAAC1N,GAAG,CAACU,MAAM,CAAC;KAEvB,KAAK,IAAIoF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9F,GAAG,CAACU,MAAM,EAAEoF,CAAC,EAAE,EACjC,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,GAAG9F,GAAG,CAACqN,KAAK,CAACvH,CAAC,CAAC;AAE9B,KAAA,IAAI,CAACpF,MAAM,GAAGV,GAAG,CAACU,MAAM;AACxB,KAAA,IAAI,CAAC4M,QAAQ,GAAGtN,GAAG,CAACsN,QAAQ;AAC5B,KAAA,IAAI,CAACC,GAAG,GAAGvN,GAAG,CAACuN,GAAG;AAElB,KAAA,OAAO,IAAI;AACb;AAEAqS,GAAAA,GAAGA,CAAC5f,GAAG,EAAEoN,MAAM,EAAE;KACf,OAAO,IAAI,CAACyS,UAAU,CAAC7f,GAAG,EAAEoN,MAAM,CAAC;AACrC;GAEA0S,IAAIA,CAAC9f,GAAG,EAAE;KACR+N,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KAEtC,MAAM+E,CAAC,GAAG,IAAI;KACd,MAAMC,CAAC,GAAGhF,GAAG;AAEb,KAAA,CAAC+E,CAAC,CAACsI,KAAK,EAAErI,CAAC,CAACqI,KAAK,CAAC,GAAG,CAACrI,CAAC,CAACqI,KAAK,EAAEtI,CAAC,CAACsI,KAAK,CAAC;AACvC,KAAA,CAACtI,CAAC,CAACrE,MAAM,EAAEsE,CAAC,CAACtE,MAAM,CAAC,GAAG,CAACsE,CAAC,CAACtE,MAAM,EAAEqE,CAAC,CAACrE,MAAM,CAAC;AAC3C,KAAA,CAACqE,CAAC,CAACuI,QAAQ,EAAEtI,CAAC,CAACsI,QAAQ,CAAC,GAAG,CAACtI,CAAC,CAACsI,QAAQ,EAAEvI,CAAC,CAACuI,QAAQ,CAAC;AACnD,KAAA,CAACvI,CAAC,CAACwI,GAAG,EAAEvI,CAAC,CAACuI,GAAG,CAAC,GAAG,CAACvI,CAAC,CAACuI,GAAG,EAAExI,CAAC,CAACwI,GAAG,CAAC;AAE/B,KAAA,OAAOxI,CAAC;AACV;AAEAgb,GAAAA,OAAOA,GAAG;AACR,KAAA,MAAMvQ,GAAG,GAAG,IAAI,CAAClC,QAAQ;KAEzB,IAAI,CAAC0S,UAAU,CAAC,IAAI,CAACC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;KAC1C,IAAI,CAAC3S,QAAQ,GAAGkC,GAAG;AAEnB,KAAA,OAAO,IAAI;AACb;AAEA0Q,GAAAA,UAAUA,GAAG;KACX,OAAOtS,IAAI,CAAC+H,IAAI,CAAC,IAAI,CAACzC,SAAS,EAAE,GAAG,CAAC,CAAC;AACxC;AAEAA,GAAAA,SAASA,GAAG;KACV,MAAM7I,CAAC,GAAG,IAAI,CAACgD,KAAK,CAAC,IAAI,CAAC3M,MAAM,GAAG,CAAC,CAAC;AACrC,KAAA,MAAMF,EAAE,GAAGgQ,SAAS,CAACnG,CAAC,CAAC;KACvB,OAAO,CAAC,IAAI,CAAC3J,MAAM,GAAG,CAAC,IAAI,EAAE,GAAGF,EAAE;AACpC;AAEAsb,GAAAA,QAAQA,GAAG;AACT,KAAA,IAAI,IAAI,CAAC9L,MAAM,EAAE,EACf,OAAO,CAAC;AAEV,KAAA,IAAI,IAAI,CAACsC,KAAK,EAAE,EACd,OAAO,CAAC;KAEV,IAAIpJ,CAAC,GAAG,CAAC;AAET,KAAA,KAAK,IAAIpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACpC,MAAMuB,CAAC,GAAGyU,QAAQ,CAAC,IAAI,CAACzO,KAAK,CAACvH,CAAC,CAAC,CAAC;OAEjCoD,CAAC,IAAI7B,CAAC;OAEN,IAAIA,CAAC,KAAK,EAAE,EACV;AACJ;AAEA,KAAA,OAAO6B,CAAC;AACV;AAEAiX,GAAAA,MAAMA,GAAG;KACP,IAAI,IAAI,CAACzf,MAAM,IAAI,CAAC,EAClB,OAAO,IAAI;AAEb,KAAA,IAAI,IAAI,CAACA,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC2M,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,EAC7C,OAAO,IAAI;AAEb,KAAA,OAAO,KAAK;AACd;GAEAkD,IAAIA,CAAC5J,GAAG,EAAE;KACRoH,OAAO,CAAEpH,GAAG,KAAK,CAAC,KAAMA,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;KAE7C,IAAIA,GAAG,IAAI,IAAI,CAACjG,MAAM,EACpB,OAAO,CAAC;AAEV,KAAA,OAAO,IAAI,CAAC2M,KAAK,CAAC1G,GAAG,CAAC;AACxB;GAEA,CAACtD,MAAM,CAAI,GAAA;KACT,IAAI+c,MAAM,GAAG,IAAI;AAEjB,KAAA,IAAI,IAAI,CAAC7S,GAAG,EACV6S,MAAM,GAAG,MAAM;KAEjB,OAAO,CAAA,CAAA,EAAIA,MAAM,CAAK,EAAA,EAAA,IAAI,CAAC3f,QAAQ,CAAC,EAAE,CAAC,CAAG,CAAA,CAAA;AAC5C;;AAEA;AACF;AACA;;AAEEsV,GAAAA,QAAQA,GAAG;KACT,IAAI/V,GAAG,GAAG,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC;AAEvB,KAAA,IAAI,IAAI,CAAC3M,MAAM,KAAK,CAAC,EAAE;OACrBV,GAAG,IAAI,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS;AAClC,MAAC,MAAM,IAAI,IAAI,CAAC3M,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC2M,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AACtD;OACArN,GAAG,IAAI,gBAAgB,GAAI,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,GAAG,SAAU;AACvD,MAAC,MAAM,IAAI,IAAI,CAAC3M,MAAM,GAAG,CAAC,EAAE;AAC1B,OAAA,MAAM,IAAIoS,UAAU,CAAC,6CAA6C,CAAC;AACrE;KAEA,OAAO,IAAI,CAACxF,QAAQ,KAAK,CAAC,GAAG,CAACtN,GAAG,GAAGA,GAAG;AACzC;AAEAqgB,GAAAA,QAAQA,GAAG;KACT,IAAIrgB,GAAG,GAAG,CAAC;KAEX,KAAK,IAAI8F,CAAC,GAAG,IAAI,CAACpF,MAAM,GAAG,CAAC,EAAEoF,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EACvC9F,GAAG,GAAIA,GAAG,GAAG,SAAS,GAAI,IAAI,CAACqN,KAAK,CAACvH,CAAC,CAAC;KAEzC,OAAO,IAAI,CAACwH,QAAQ,KAAK,CAAC,GAAG,CAACtN,GAAG,GAAGA,GAAG;AACzC;AAEAsgB,GAAAA,OAAOA,GAAG;AACR,KAAA,OAAO,IAAI,CAACD,QAAQ,EAAE;AACxB;AAEAE,GAAAA,QAAQA,GAAG;KACT,IAAI,CAACvT,UAAU,EACb,MAAM,IAAIpL,KAAK,CAAC,0BAA0B,CAAC;AAE7C,KAAA,MAAM4e,GAAG,GAAGvT,MAAM,CAAC,EAAE,CAAC;AACtB,KAAA,MAAMwT,GAAG,GAAGxT,MAAM,CAAC,EAAE,CAAC;AAEtB,KAAA,IAAInH,CAAC,GAAG,IAAI,CAACpF,MAAM,GAAG,CAAC;AACvB,KAAA,IAAIV,GAAG,GAAGiN,MAAM,CAAC,CAAC,CAAC;KAEnB,OAAOnH,CAAC,IAAI,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;OACrB,MAAMtF,EAAE,GAAG,IAAI,CAAC6M,KAAK,CAACvH,CAAC,CAAC,GAAG,SAAS;OACpC,MAAMvF,EAAE,GAAG,IAAI,CAAC8M,KAAK,CAACvH,CAAC,GAAG,CAAC,CAAC;OAE5B9F,GAAG,GAAIA,GAAG,IAAIwgB,GAAG,GAAIvT,MAAM,CAACzM,EAAE,GAAGD,EAAE,CAAC;AACtC;AAEA,KAAA,IAAIuF,CAAC,IAAI,CAAC,EACR9F,GAAG,GAAIA,GAAG,IAAIygB,GAAG,GAAIxT,MAAM,CAAC,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;KAE5C,OAAO,IAAI,CAACC,QAAQ,KAAK,CAAC,GAAG,CAACtN,GAAG,GAAGA,GAAG;AACzC;AAEA0gB,GAAAA,MAAMA,GAAG;AACP,KAAA,OAAO,CAAC,IAAI,CAAC1Q,MAAM,EAAE;AACvB;AAEAvP,GAAAA,QAAQA,CAAC0M,IAAI,EAAEwT,OAAO,EAAE;AACtBxT,KAAAA,IAAI,GAAGyT,OAAO,CAACzT,IAAI,CAAC;AAEpB,KAAA,IAAIwT,OAAO,IAAI,IAAI,EACjBA,OAAO,GAAG,CAAC;AAEb,KAAA,IAAIA,OAAO,KAAK,CAAC,EACfA,OAAO,GAAG,CAAC;KAEb5S,OAAO,CAAEZ,IAAI,KAAK,CAAC,KAAMA,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;KAChDY,OAAO,CAAE4S,OAAO,KAAK,CAAC,KAAMA,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC;AAEzD,KAAA,IAAIxT,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAG,EAAE,EACvB,MAAM,IAAI2F,UAAU,CAAC,+BAA+B,CAAC;KAEvD,IAAI,CAAC4M,MAAM,EAAE;KAEb,IAAIvS,IAAI,KAAK,EAAE,EAAE;OACf,IAAInG,GAAG,GAAG,EAAE;OACZ,IAAIJ,GAAG,GAAG,CAAC;OACX,IAAI6G,KAAK,GAAG,CAAC;AAEb,OAAA,KAAK,IAAI3H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,MAAM,EAAEoF,CAAC,EAAE,EAAE;SACpC,MAAMuE,CAAC,GAAG,IAAI,CAACgD,KAAK,CAACvH,CAAC,CAAC;AACvB,SAAA,MAAMyK,IAAI,GAAG,CAAC,CAAElG,CAAC,IAAIzD,GAAG,GAAI6G,KAAK,IAAI,QAAQ,EAAEhN,QAAQ,CAAC,EAAE,CAAC;SAE3DgN,KAAK,GAAIpD,CAAC,KAAM,EAAE,GAAGzD,GAAI,GAAI,QAAQ;AAErC,SAAA,IAAI6G,KAAK,KAAK,CAAC,IAAI3H,CAAC,KAAK,IAAI,CAACpF,MAAM,GAAG,CAAC,EACtCsG,GAAG,GAAG4E,KAAK,CAAC,CAAC,GAAG2E,IAAI,CAAC7P,MAAM,CAAC,GAAG6P,IAAI,GAAGvJ,GAAG,CAAC,KAE1CA,GAAG,GAAGuJ,IAAI,GAAGvJ,GAAG;SAElBJ,GAAG,IAAI,CAAC;SAER,IAAIA,GAAG,IAAI,EAAE,EAAE;WACbA,GAAG,IAAI,EAAE;WACTd,CAAC,IAAI,CAAC;AACR;AACF;AAEA,OAAA,IAAI2H,KAAK,KAAK,CAAC,EACbzG,GAAG,GAAGyG,KAAK,CAAChN,QAAQ,CAAC,EAAE,CAAC,GAAGuG,GAAG;AAEhC,OAAA,OAAOA,GAAG,CAACtG,MAAM,GAAGigB,OAAO,KAAK,CAAC,EAC/B3Z,GAAG,GAAG,GAAG,GAAGA,GAAG;OAEjB,IAAI,IAAI,CAACsG,QAAQ,KAAK,CAAC,EACrBtG,GAAG,GAAG,GAAG,GAAGA,GAAG;AAEjB,OAAA,OAAOA,GAAG;AACZ;KAEA,MAAM6Z,SAAS,GAAGhV,UAAU,CAACsB,IAAI,GAAG,CAAC,CAAC;KACtC,MAAM2T,SAAS,GAAGhV,UAAU,CAACqB,IAAI,GAAG,CAAC,CAAC;AACtC,KAAA,MAAM7F,CAAC,GAAG,IAAI,CAACiH,KAAK,EAAE;KAEtB,IAAIvH,GAAG,GAAG,EAAE;KAEZM,CAAC,CAACgG,QAAQ,GAAG,CAAC;AAEd,KAAA,OAAO,CAAChG,CAAC,CAAC0I,MAAM,EAAE,EAAE;AAClB,OAAA,MAAM9G,CAAC,GAAG5B,CAAC,CAACmK,KAAK,CAACqP,SAAS,CAAC,CAACrgB,QAAQ,CAAC0M,IAAI,CAAC;AAE3C7F,OAAAA,CAAC,CAAC+J,KAAK,CAACyP,SAAS,CAAC;OAElB,IAAI,CAACxZ,CAAC,CAAC0I,MAAM,EAAE,EACbhJ,GAAG,GAAG4E,KAAK,CAACiV,SAAS,GAAG3X,CAAC,CAACxI,MAAM,CAAC,GAAGwI,CAAC,GAAGlC,GAAG,CAAC,KAE5CA,GAAG,GAAGkC,CAAC,GAAGlC,GAAG;AACjB;KAEA,IAAI,IAAI,CAACgJ,MAAM,EAAE,EACfhJ,GAAG,GAAG,GAAG;AAEX,KAAA,OAAOA,GAAG,CAACtG,MAAM,GAAGigB,OAAO,KAAK,CAAC,EAC/B3Z,GAAG,GAAG,GAAG,GAAGA,GAAG;KAEjB,IAAI,IAAI,CAACsG,QAAQ,KAAK,CAAC,EACrBtG,GAAG,GAAG,GAAG,GAAGA,GAAG;AAEjB,KAAA,OAAOA,GAAG;AACZ;AAEA+Z,GAAAA,MAAMA,GAAG;KACP,OAAO,IAAI,CAACtgB,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;AAC7B;AAEAugB,GAAAA,OAAOA,CAAC5T,MAAM,EAAE1M,MAAM,EAAE;KACtB,OAAO,IAAI,CAACugB,WAAW,CAAChc,KAAK,EAAEmI,MAAM,EAAE1M,MAAM,CAAC;AAChD;AAEAuf,GAAAA,QAAQA,CAAC7S,MAAM,EAAE1M,MAAM,EAAE;KACvB,OAAO,IAAI,CAACugB,WAAW,CAACzd,MAAM,EAAE4J,MAAM,EAAE1M,MAAM,CAAC;AACjD;AAEAugB,GAAAA,WAAWA,CAACC,SAAS,EAAE9T,MAAM,EAAE1M,MAAM,EAAE;AACrC,KAAA,IAAI0M,MAAM,IAAI,IAAI,EAChBA,MAAM,GAAG,IAAI;AAEf,KAAA,IAAI1M,MAAM,IAAI,IAAI,EAChBA,MAAM,GAAG,CAAC;KAEZqN,OAAO,CAAC,OAAOmT,SAAS,KAAK,UAAU,EAAE,WAAW,EAAE,UAAU,CAAC;AACjEnT,KAAAA,OAAO,CAACX,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC;KACnEW,OAAO,CAAErN,MAAM,KAAK,CAAC,KAAMA,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC;KAEtD,IAAI,CAACgf,MAAM,EAAE;AAEb,KAAA,MAAMyB,KAAK,GAAG,IAAI,CAACjB,UAAU,EAAE;KAC/B,MAAMpb,IAAI,GAAGpE,MAAM,IAAIkN,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEsT,KAAK,CAAC;KAEzC,IAAIA,KAAK,GAAGrc,IAAI,EACd,MAAM,IAAIgO,UAAU,CAAC,wCAAwC,CAAC;KAEhE,MAAM6E,GAAG,GAAGyJ,QAAQ,CAACF,SAAS,EAAEpc,IAAI,CAAC;;AAErC;KACA,IAAIsI,MAAM,KAAK,IAAI,EAAE;AACnB,OAAA,IAAIzG,GAAG,GAAGgR,GAAG,CAACjX,MAAM,GAAG,CAAC;OACxB,IAAI+M,KAAK,GAAG,CAAC;AAEb,OAAA,KAAK,IAAI3H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,MAAM,EAAEoF,CAAC,EAAE,EAAE;SACpC,MAAM2F,KAAK,GAAG,CAAC3F,CAAC,GAAG,CAAC,KAAK,CAAC;SAC1B,MAAMyK,IAAI,GAAI,IAAI,CAAClD,KAAK,CAACvH,CAAC,CAAC,IAAI2F,KAAK,GAAIgC,KAAK;SAE7CkK,GAAG,CAAChR,GAAG,EAAE,CAAC,GAAG4J,IAAI,GAAG,IAAI;AAExB,SAAA,IAAI5J,GAAG,IAAI,CAAC,EACVgR,GAAG,CAAChR,GAAG,EAAE,CAAC,GAAI4J,IAAI,KAAK,CAAC,GAAI,IAAI;AAElC,SAAA,IAAI5J,GAAG,IAAI,CAAC,EACVgR,GAAG,CAAChR,GAAG,EAAE,CAAC,GAAI4J,IAAI,KAAK,EAAE,GAAI,IAAI;SAEnC,IAAI9E,KAAK,KAAK,CAAC,EAAE;AACf,WAAA,IAAI9E,GAAG,IAAI,CAAC,EACVgR,GAAG,CAAChR,GAAG,EAAE,CAAC,GAAI4J,IAAI,KAAK,EAAE,GAAI,IAAI;WAEnC9C,KAAK,GAAG,CAAC;AACX,UAAC,MAAM;WACLA,KAAK,GAAG8C,IAAI,KAAK,EAAE;AACrB;AACF;OAEA,IAAI5J,GAAG,IAAI,CAAC,EAAE;AACZgR,SAAAA,GAAG,CAAChR,GAAG,EAAE,CAAC,GAAG8G,KAAK;SAElB,OAAO9G,GAAG,IAAI,CAAC,EACbgR,GAAG,CAAChR,GAAG,EAAE,CAAC,GAAG,CAAC;SAEhB8G,KAAK,GAAG,CAAC;AACX;AAEA7N,OAAAA,MAAM,CAAC6N,KAAK,KAAK,CAAC,CAAC;AACrB,MAAC,MAAM;OACL,IAAI9G,GAAG,GAAG,CAAC;OACX,IAAI8G,KAAK,GAAG,CAAC;AAEb,OAAA,KAAK,IAAI3H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,MAAM,EAAEoF,CAAC,EAAE,EAAE;SACpC,MAAM2F,KAAK,GAAG,CAAC3F,CAAC,GAAG,CAAC,KAAK,CAAC;SAC1B,MAAMyK,IAAI,GAAI,IAAI,CAAClD,KAAK,CAACvH,CAAC,CAAC,IAAI2F,KAAK,GAAIgC,KAAK;SAE7CkK,GAAG,CAAChR,GAAG,EAAE,CAAC,GAAG4J,IAAI,GAAG,IAAI;AAExB,SAAA,IAAI5J,GAAG,GAAGgR,GAAG,CAACjX,MAAM,EAClBiX,GAAG,CAAChR,GAAG,EAAE,CAAC,GAAI4J,IAAI,KAAK,CAAC,GAAI,IAAI;AAElC,SAAA,IAAI5J,GAAG,GAAGgR,GAAG,CAACjX,MAAM,EAClBiX,GAAG,CAAChR,GAAG,EAAE,CAAC,GAAI4J,IAAI,KAAK,EAAE,GAAI,IAAI;SAEnC,IAAI9E,KAAK,KAAK,CAAC,EAAE;AACf,WAAA,IAAI9E,GAAG,GAAGgR,GAAG,CAACjX,MAAM,EAClBiX,GAAG,CAAChR,GAAG,EAAE,CAAC,GAAI4J,IAAI,KAAK,EAAE,GAAI,IAAI;WAEnC9C,KAAK,GAAG,CAAC;AACX,UAAC,MAAM;WACLA,KAAK,GAAG8C,IAAI,KAAK,EAAE;AACrB;AACF;AAEA,OAAA,IAAI5J,GAAG,GAAGgR,GAAG,CAACjX,MAAM,EAAE;AACpBiX,SAAAA,GAAG,CAAChR,GAAG,EAAE,CAAC,GAAG8G,KAAK;AAElB,SAAA,OAAO9G,GAAG,GAAGgR,GAAG,CAACjX,MAAM,EACrBiX,GAAG,CAAChR,GAAG,EAAE,CAAC,GAAG,CAAC;SAEhB8G,KAAK,GAAG,CAAC;AACX;AAEA7N,OAAAA,MAAM,CAAC6N,KAAK,KAAK,CAAC,CAAC;AACrB;AAEA,KAAA,OAAOkK,GAAG;AACZ;AAEA5X,GAAAA,MAAMA,CAACqN,MAAM,EAAE1M,MAAM,EAAE;KACrB,OAAO,IAAI,CAACuf,QAAQ,CAAC7S,MAAM,EAAE1M,MAAM,CAAC;AACtC;;AAEA;AACF;AACA;;AAEE2gB,GAAAA,EAAEA,CAACrhB,GAAG,EAAEoN,MAAM,EAAE;KACd,OAAO,IAAI,CAACyS,UAAU,CAAC7f,GAAG,EAAEoN,MAAM,CAAC;AACrC;AAEAyS,GAAAA,UAAUA,CAAC7f,GAAG,EAAEoN,MAAM,EAAE;AACtB,KAAA,IAAIA,MAAM,IAAI,IAAI,EAChBA,MAAM,GAAG,IAAI;KAEfW,OAAO,CAACuT,SAAS,CAACthB,GAAG,CAAC,EAAE,KAAK,EAAE,SAAS,CAAC;AACzC+N,KAAAA,OAAO,CAACX,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC;AAEnE,KAAA,MAAMoC,GAAG,GAAIxP,GAAG,GAAG,CAAC,GAAI,CAAC;AAEzB,KAAA,IAAIwP,GAAG,EACLxP,GAAG,GAAG,CAACA,GAAG;KAEZ,IAAIA,GAAG,GAAG,SAAS,EAAE;OACnB,IAAI,CAACqN,KAAK,CAAC,CAAC,CAAC,GAAGrN,GAAG,GAAG,SAAS;OAC/B,IAAI,CAACU,MAAM,GAAG,CAAC;AACjB,MAAC,MAAM,IAAIV,GAAG,GAAG,gBAAgB,EAAE;AACjC,OAAA,IAAI,CAACqN,KAAK,GAAG,CACXrN,GAAG,GAAG,SAAS,EACdA,GAAG,GAAG,SAAS,GAAI,SAAS,CAC9B;OACD,IAAI,CAACU,MAAM,GAAG,CAAC;AACjB,MAAC,MAAM;AACL,OAAA,IAAI,CAAC2M,KAAK,GAAG,CACXrN,GAAG,GAAG,SAAS,EACdA,GAAG,GAAG,SAAS,GAAI,SAAS,EAC7B,CAAC,CACF;OACD,IAAI,CAACU,MAAM,GAAG,CAAC;AACjB;KAEA,IAAI,CAAC4M,QAAQ,GAAGkC,GAAG;KAEnB,IAAIpC,MAAM,KAAK,IAAI,EACjB,IAAI,CAAC2S,OAAO,EAAE;AAEhB,KAAA,OAAO,IAAI;AACb;AAEAwB,GAAAA,UAAUA,CAACvhB,GAAG,EAAEoN,MAAM,EAAE;AACtB,KAAA,IAAIA,MAAM,IAAI,IAAI,EAChBA,MAAM,GAAG,IAAI;KAEfW,OAAO,CAAC,OAAO/N,GAAG,KAAK,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC;AACjD+N,KAAAA,OAAO,CAACX,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC;KAEnE,IAAI,CAAC1L,QAAQ,CAAC1B,GAAG,CAAC,EAChBA,GAAG,GAAG,CAAC;KAET,MAAMwP,GAAG,GAAIxP,GAAG,IAAI,EAAE,GAAI,CAAC;KAE3B,IAAIA,GAAG,GAAG,CAAC,EACTA,GAAG,GAAG,CAACA,GAAG;AAEZA,KAAAA,GAAG,GAAG4N,IAAI,CAAC4T,KAAK,CAACxhB,GAAG,CAAC;KAErB,IAAI,CAACqN,KAAK,GAAG,EAAE;KAEf,OAAOrN,GAAG,GAAG,CAAC,EAAE;AACd,OAAA,MAAMO,EAAE,GAAGP,GAAG,GAAG,SAAS;OAC1B,MAAMQ,EAAE,GAAG,CAACR,GAAG,GAAGO,EAAE,IAAI,SAAS;AAEjC,OAAA,IAAI,CAAC8M,KAAK,CAAChC,IAAI,CAAC9K,EAAE,CAAC;OAEnBP,GAAG,GAAGQ,EAAE;AACV;AAEA,KAAA,IAAI,IAAI,CAAC6M,KAAK,CAAC3M,MAAM,KAAK,CAAC,EACzB,IAAI,CAAC2M,KAAK,CAAChC,IAAI,CAAC,CAAC,CAAC;KAEpB,IAAI,CAAC3K,MAAM,GAAG,IAAI,CAAC2M,KAAK,CAAC3M,MAAM;KAC/B,IAAI,CAAC4M,QAAQ,GAAGkC,GAAG;KAEnB,IAAIpC,MAAM,KAAK,IAAI,EACjB,IAAI,CAAC2S,OAAO,EAAE;AAEhB,KAAA,OAAO,IAAI;AACb;AAEA0B,GAAAA,UAAUA,CAACzhB,GAAG,EAAEoN,MAAM,EAAE;AACtB,KAAA,IAAIA,MAAM,IAAI,IAAI,EAChBA,MAAM,GAAG,IAAI;KAEfW,OAAO,CAAC,OAAO/N,GAAG,KAAK,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC;AACjD+N,KAAAA,OAAO,CAACX,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC;KAEnE,IAAI,CAACJ,UAAU,EACb,MAAM,IAAIpL,KAAK,CAAC,0BAA0B,CAAC;;AAE7C;AACA;AACA;KACA,MAAMmJ,KAAK,GAAI/K,GAAG,GAAGiN,MAAM,CAAC,CAAC,CAAC,GAAI,CAAC;KAEnC,IAAI,CAACyU,QAAQ,CAAC1hB,GAAG,CAACS,QAAQ,CAAC,EAAE,CAAC,EAAEsK,KAAK,CAAC;KACtC,IAAI,CAACuC,QAAQ,GAAGvC,KAAK;KAErB,IAAIqC,MAAM,KAAK,IAAI,EACjB,IAAI,CAAC2S,OAAO,EAAE;AAEhB,KAAA,OAAO,IAAI;AACb;GAEA4B,QAAQA,CAACzf,KAAK,EAAE;KACd6L,OAAO,CAAC,OAAO7L,KAAK,KAAK,SAAS,EAAE,OAAO,EAAE,SAAS,CAAC;KAEvD,IAAI,CAACmL,KAAK,CAAC,CAAC,CAAC,GAAGnL,KAAK,GAAG,CAAC;KACzB,IAAI,CAACxB,MAAM,GAAG,CAAC;KACf,IAAI,CAAC4M,QAAQ,GAAG,CAAC;AAEjB,KAAA,OAAO,IAAI;AACb;AAEAsU,GAAAA,UAAUA,CAAC/gB,GAAG,EAAEsM,IAAI,EAAEC,MAAM,EAAE;AAC5B,KAAA,IAAID,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,IAAI,EAChC,CAACA,IAAI,EAAEC,MAAM,CAAC,GAAG,CAACA,MAAM,EAAED,IAAI,CAAC;AAEjCA,KAAAA,IAAI,GAAGyT,OAAO,CAACzT,IAAI,CAAC;AAEpB,KAAA,IAAIC,MAAM,IAAI,IAAI,EAChBA,MAAM,GAAG,IAAI;KAEfW,OAAO,CAAC,OAAOlN,GAAG,KAAK,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;KACpDkN,OAAO,CAAEZ,IAAI,KAAK,CAAC,KAAMA,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;AAChDY,KAAAA,OAAO,CAACX,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC;AAEnE,KAAA,IAAID,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAG,EAAE,EACvB,MAAM,IAAIvL,KAAK,CAAC,+BAA+B,CAAC;KAElDf,GAAG,GAAGA,GAAG,CAACF,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;KAE7B,IAAIoK,KAAK,GAAG,CAAC;AAEb,KAAA,IAAIlK,GAAG,CAACH,MAAM,GAAG,CAAC,IAAIG,GAAG,CAACghB,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI,EAC9C9W,KAAK,GAAG,CAAC;KAEX,IAAIoC,IAAI,KAAK,EAAE,EACb,IAAI,CAACuU,QAAQ,CAAC7gB,GAAG,EAAEkK,KAAK,CAAC,CAAC,KAE1B,IAAI,CAAC+W,SAAS,CAACjhB,GAAG,EAAEsM,IAAI,EAAEpC,KAAK,CAAC;KAElC,IAAI,CAACuC,QAAQ,GAAGvC,KAAK;KAErB,IAAI,CAAC2D,UAAU,EAAE;KAEjB,IAAItB,MAAM,KAAK,IAAI,EACjB,IAAI,CAAC2S,OAAO,EAAE;AAEhB,KAAA,OAAO,IAAI;AACb;AAEA2B,GAAAA,QAAQA,CAAC7gB,GAAG,EAAEkK,KAAK,EAAE;KACnB,IAAI,CAACrK,MAAM,GAAGkN,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAAC+H,IAAI,CAAC,CAAC9U,GAAG,CAACH,MAAM,GAAGqK,KAAK,IAAI,CAAC,CAAC,CAAC;KAC9D,IAAI,CAACsC,KAAK,GAAG,IAAIpI,KAAK,CAAC,IAAI,CAACvE,MAAM,CAAC;KAEnC,KAAK,IAAIoF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,MAAM,EAAEoF,CAAC,EAAE,EAClC,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC;;AAEnB;KACA,IAAIc,GAAG,GAAG,CAAC;AACX,KAAA,IAAId,CAAC,GAAGjF,GAAG,CAACH,MAAM,GAAG,CAAC;KACtB,IAAIuJ,CAAC,GAAG,CAAC;KAET,OAAOnE,CAAC,IAAIiF,KAAK,EAAEjF,CAAC,IAAI,CAAC,EAAE;OACzB,MAAMuE,CAAC,GAAG0X,QAAQ,CAAClhB,GAAG,EAAEiF,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;OAEjC,IAAI,CAACuH,KAAK,CAACpD,CAAC,CAAC,IAAKI,CAAC,IAAIzD,GAAG,GAAI,SAAS;;AAEvC;AACA,OAAA,IAAI,CAACyG,KAAK,CAACpD,CAAC,GAAG,CAAC,CAAC,IAAKI,CAAC,KAAM,EAAE,GAAGzD,GAAI,GAAI,QAAQ;OAElDA,GAAG,IAAI,EAAE;OAET,IAAIA,GAAG,IAAI,EAAE,EAAE;SACbA,GAAG,IAAI,EAAE;SACTqD,CAAC,IAAI,CAAC;AACR;AACF;AAEA,KAAA,IAAInE,CAAC,GAAG,CAAC,KAAKiF,KAAK,EAAE;OACnB,MAAMV,CAAC,GAAG0X,QAAQ,CAAClhB,GAAG,EAAEkK,KAAK,EAAEjF,CAAC,GAAG,CAAC,CAAC;OAErC,IAAI,CAACuH,KAAK,CAACpD,CAAC,CAAC,IAAKI,CAAC,IAAIzD,GAAG,GAAI,SAAS;AACvC,OAAA,IAAI,CAACyG,KAAK,CAACpD,CAAC,GAAG,CAAC,CAAC,IAAKI,CAAC,KAAM,EAAE,GAAGzD,GAAI,GAAI,QAAQ;AACpD;AAEA,KAAA,OAAO,IAAI,CAAC6H,MAAM,EAAE;AACtB;AAEAqT,GAAAA,SAASA,CAACjhB,GAAG,EAAEsM,IAAI,EAAEpC,KAAK,EAAE;AAC1B;AACA,KAAA,IAAI,CAACsC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;KACjB,IAAI,CAAC3M,MAAM,GAAG,CAAC;KACf,IAAI,CAAC4M,QAAQ,GAAG,CAAC;;AAEjB;KACA,IAAI0U,OAAO,GAAG,CAAC;KACf,IAAIC,OAAO,GAAG,CAAC;KAEf,OAAOA,OAAO,IAAI,SAAS,EAAEA,OAAO,IAAI9U,IAAI,EAC1C6U,OAAO,IAAI,CAAC;KAEdA,OAAO,IAAI,CAAC;AACZC,KAAAA,OAAO,GAAIA,OAAO,GAAG9U,IAAI,GAAI,CAAC;AAE9B,KAAA,MAAM+U,KAAK,GAAGrhB,GAAG,CAACH,MAAM,GAAGqK,KAAK;AAChC,KAAA,MAAMlJ,GAAG,GAAGqgB,KAAK,GAAGF,OAAO;AAC3B,KAAA,MAAMhX,GAAG,GAAG4C,IAAI,CAACoD,GAAG,CAACkR,KAAK,EAAEA,KAAK,GAAGrgB,GAAG,CAAC,GAAGkJ,KAAK;KAEhD,IAAIjF,CAAC,GAAGiF,KAAK;KAEb,OAAOjF,CAAC,GAAGkF,GAAG,EAAElF,CAAC,IAAIkc,OAAO,EAAE;AAC5B,OAAA,MAAMzR,IAAI,GAAG4R,SAAS,CAACthB,GAAG,EAAEiF,CAAC,EAAEA,CAAC,GAAGkc,OAAO,EAAE7U,IAAI,CAAC;AAEjD,OAAA,IAAI,CAACoC,KAAK,CAAC0S,OAAO,CAAC;AACnB,OAAA,IAAI,CAACtU,MAAM,CAAC4C,IAAI,CAAC;AACnB;KAEA,IAAI1O,GAAG,KAAK,CAAC,EAAE;OACb,MAAM2Q,GAAG,GAAG5E,IAAI,CAAC4E,GAAG,CAACrF,IAAI,EAAEtL,GAAG,CAAC;AAC/B,OAAA,MAAM0O,IAAI,GAAG4R,SAAS,CAACthB,GAAG,EAAEiF,CAAC,EAAEjF,GAAG,CAACH,MAAM,EAAEyM,IAAI,CAAC;AAEhD,OAAA,IAAI,CAACoC,KAAK,CAACiD,GAAG,CAAC;AACf,OAAA,IAAI,CAAC7E,MAAM,CAAC4C,IAAI,CAAC;AACnB;AAEA,KAAA,OAAO,IAAI;AACb;GAEA6R,QAAQA,CAACC,IAAI,EAAE;AACb,KAAA,IAAInV,EAAE,CAACc,IAAI,CAACqU,IAAI,CAAC,EAAE;OACjB,IAAIA,IAAI,CAAC9U,GAAG,EACV,OAAO8U,IAAI,CAAClI,OAAO,EAAE;AAEvB,OAAA,OAAOkI,IAAI,CAAC9T,KAAK,EAAE;AACrB;AAEA,KAAA,IAAItJ,KAAK,CAACC,OAAO,CAACmd,IAAI,CAAC,EAAE;AACvB,OAAA,KAAK,MAAMnb,KAAK,IAAImb,IAAI,EACtBtU,OAAO,CAAC,OAAO7G,KAAK,KAAK,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;AAEvDmb,OAAAA,IAAI,GAAGA,IAAI,CAACC,IAAI,CAAC,EAAE,CAAC;AACtB;KAEA,OAAO,IAAI,CAACV,UAAU,CAACS,IAAI,EAAE,EAAE,CAAC;AAClC;GAEAE,MAAMA,CAACviB,GAAG,EAAE;AACV,KAAA,OAAO,IAAI,CAAC2f,MAAM,CAAC3f,GAAG,CAAC;AACzB;AAEAwiB,GAAAA,SAASA,CAACzc,IAAI,EAAEqH,MAAM,EAAE;KACtBW,OAAO,CAAC9I,KAAK,CAACC,OAAO,CAACa,IAAI,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC;KAC7C,OAAO,IAAI,CAAC0c,aAAa,CAAC1c,IAAI,EAAEqH,MAAM,CAAC;AACzC;AAEA4S,GAAAA,UAAUA,CAACja,IAAI,EAAEqH,MAAM,EAAE;KACvBW,OAAO,CAACvK,MAAM,CAACgC,QAAQ,CAACO,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC;KAChD,OAAO,IAAI,CAAC0c,aAAa,CAAC1c,IAAI,EAAEqH,MAAM,CAAC;AACzC;AAEAqV,GAAAA,aAAaA,CAAC1c,IAAI,EAAEqH,MAAM,EAAE;AAC1B,KAAA,IAAIA,MAAM,IAAI,IAAI,EAChBA,MAAM,GAAG,IAAI;AAEfW,KAAAA,OAAO,CAAChI,IAAI,IAAKA,IAAI,CAACrF,MAAM,KAAK,CAAC,KAAMqF,IAAI,CAACrF,MAAM,EAAE,MAAM,EAAE,YAAY,CAAC;AAC1EqN,KAAAA,OAAO,CAACX,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC;AAEnE,KAAA,IAAIrH,IAAI,CAACrF,MAAM,KAAK,CAAC,EAAE;AACrB,OAAA,IAAI,CAAC2M,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;OACjB,IAAI,CAAC3M,MAAM,GAAG,CAAC;OACf,IAAI,CAAC4M,QAAQ,GAAG,CAAC;AACjB,OAAA,OAAO,IAAI;AACb;KAEA,IAAI,CAAC5M,MAAM,GAAGkN,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAAC+H,IAAI,CAAC5P,IAAI,CAACrF,MAAM,GAAG,CAAC,CAAC,CAAC;KACrD,IAAI,CAAC2M,KAAK,GAAG,IAAIpI,KAAK,CAAC,IAAI,CAACvE,MAAM,CAAC;KACnC,IAAI,CAAC4M,QAAQ,GAAG,CAAC;KAEjB,KAAK,IAAIxH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpF,MAAM,EAAEoF,CAAC,EAAE,EAClC,IAAI,CAACuH,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC;AAEnB,KAAA,MAAM0C,IAAI,GAAGzC,IAAI,CAACrF,MAAM,GAAG,CAAC;KAE5B,IAAIkG,GAAG,GAAG,CAAC;KACX,IAAIqD,CAAC,GAAG,CAAC;KACT,IAAII,CAAC,GAAG,CAAC;KAET,IAAI+C,MAAM,KAAK,IAAI,EAAE;AACnB,OAAA,KAAK,IAAItH,CAAC,GAAGC,IAAI,CAACrF,MAAM,GAAG,CAAC,EAAEoF,CAAC,IAAI,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;SAC5C,MAAMuE,CAAC,GAAGtE,IAAI,CAACD,CAAC,CAAC,GAAIC,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,GAAIC,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,IAAI,EAAG;SAE5D,IAAI,CAACuH,KAAK,CAACpD,CAAC,CAAC,IAAKI,CAAC,IAAIzD,GAAG,GAAI,SAAS;AACvC,SAAA,IAAI,CAACyG,KAAK,CAACpD,CAAC,GAAG,CAAC,CAAC,GAAII,CAAC,KAAM,EAAE,GAAGzD,GAAI,GAAI,SAAS;SAElDA,GAAG,IAAI,EAAE;SAET,IAAIA,GAAG,IAAI,EAAE,EAAE;WACbA,GAAG,IAAI,EAAE;WACTqD,CAAC,IAAI,CAAC;AACR;AACF;AAEA,OAAA,QAAQzB,IAAI;AACV,SAAA,KAAK,CAAC;WACJ6B,CAAC,GAAGtE,IAAI,CAAC,CAAC,CAAC,GAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE;WAC5B;AACF,SAAA,KAAK,CAAC;AACJsE,WAAAA,CAAC,GAAGtE,IAAI,CAAC,CAAC,CAAC;WACX;AACJ;AACF,MAAC,MAAM;AACL,OAAA,MAAMW,GAAG,GAAGX,IAAI,CAACrF,MAAM,GAAG8H,IAAI;AAE9B,OAAA,KAAK,IAAI1C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,GAAG,EAAEZ,CAAC,IAAI,CAAC,EAAE;SAC/B,MAAMuE,CAAC,GAAGtE,IAAI,CAACD,CAAC,CAAC,GAAIC,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,GAAIC,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,IAAI,EAAG;SAE5D,IAAI,CAACuH,KAAK,CAACpD,CAAC,CAAC,IAAKI,CAAC,IAAIzD,GAAG,GAAI,SAAS;AACvC,SAAA,IAAI,CAACyG,KAAK,CAACpD,CAAC,GAAG,CAAC,CAAC,GAAII,CAAC,KAAM,EAAE,GAAGzD,GAAI,GAAI,SAAS;SAElDA,GAAG,IAAI,EAAE;SAET,IAAIA,GAAG,IAAI,EAAE,EAAE;WACbA,GAAG,IAAI,EAAE;WACTqD,CAAC,IAAI,CAAC;AACR;AACF;AAEA,OAAA,QAAQzB,IAAI;AACV,SAAA,KAAK,CAAC;AACJ6B,WAAAA,CAAC,GAAGtE,IAAI,CAACW,GAAG,CAAC,GAAIX,IAAI,CAACW,GAAG,GAAG,CAAC,CAAC,IAAI,CAAE;WACpC;AACF,SAAA,KAAK,CAAC;AACJ2D,WAAAA,CAAC,GAAGtE,IAAI,CAACW,GAAG,CAAC;WACb;AACJ;AACF;KAEA,IAAI8B,IAAI,GAAG,CAAC,EAAE;OACZ,IAAI,CAAC6E,KAAK,CAACpD,CAAC,CAAC,IAAKI,CAAC,IAAIzD,GAAG,GAAI,SAAS;AACvC,OAAA,IAAI,CAACyG,KAAK,CAACpD,CAAC,GAAG,CAAC,CAAC,GAAII,CAAC,KAAM,EAAE,GAAGzD,GAAI,GAAI,SAAS;AACpD;AAEA,KAAA,OAAO,IAAI,CAAC6H,MAAM,EAAE;AACtB;AAEA7N,GAAAA,MAAMA,CAACmF,IAAI,EAAEqH,MAAM,EAAE;KACnB,OAAO,IAAI,CAAC4S,UAAU,CAACja,IAAI,EAAEqH,MAAM,CAAC;AACtC;AAEA/K,GAAAA,IAAIA,CAACrC,GAAG,EAAEmN,IAAI,EAAEC,MAAM,EAAE;AACtB,KAAA,IAAIpN,GAAG,IAAI,IAAI,EACb,OAAO,IAAI;AAEb,KAAA,IAAImN,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,IAAI,EAChC,CAACA,IAAI,EAAEC,MAAM,CAAC,GAAG,CAACA,MAAM,EAAED,IAAI,CAAC;AAEjC,KAAA,IAAI,OAAOnN,GAAG,KAAK,QAAQ,EACzB,OAAO,IAAI,CAAC6f,UAAU,CAAC7f,GAAG,EAAEoN,MAAM,CAAC;AAErC,KAAA,IAAI,OAAOpN,GAAG,KAAK,QAAQ,EACzB,OAAO,IAAI,CAACyhB,UAAU,CAACzhB,GAAG,EAAEoN,MAAM,CAAC;AAErC,KAAA,IAAI,OAAOpN,GAAG,KAAK,QAAQ,EACzB,OAAO,IAAI,CAAC4hB,UAAU,CAAC5hB,GAAG,EAAEmN,IAAI,EAAEC,MAAM,CAAC;AAE3C,KAAA,IAAI,OAAOpN,GAAG,KAAK,QAAQ,EAAE;AAC3B,OAAA,IAAIkN,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EACd,OAAO,IAAI,CAACuiB,MAAM,CAACviB,GAAG,EAAEoN,MAAM,CAAC;AAEjC,OAAA,IAAKpN,GAAG,CAACU,MAAM,KAAK,CAAC,KAAMV,GAAG,CAACU,MAAM,EACnC,OAAO,IAAI,CAAC+hB,aAAa,CAACziB,GAAG,EAAEoN,MAAM,CAAC;AAC1C;KAEA,IAAI,OAAOpN,GAAG,KAAK,SAAS,EAC1B,OAAO,IAAI,CAAC2hB,QAAQ,CAAC3hB,GAAG,CAAC;AAE3B,KAAA,MAAM,IAAI0iB,SAAS,CAAC,kCAAkC,CAAC;AACzD;;AAEA;AACF;AACA;;AAEE,GAAA,OAAO1R,GAAGA,CAAC,GAAG2R,IAAI,EAAE;KAClB,IAAI3R,GAAG,GAAG,IAAI;AAEd,KAAA,KAAK,MAAMhR,GAAG,IAAI2iB,IAAI,EAAE;OACtB5U,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AAEtC,OAAA,IAAI,CAACgR,GAAG,IAAIhR,GAAG,CAACiL,GAAG,CAAC+F,GAAG,CAAC,GAAG,CAAC,EAC1BA,GAAG,GAAGhR,GAAG;AACb;AAEA,KAAA,OAAOgR,GAAG,IAAI,IAAI9D,EAAE,CAAC,CAAC,CAAC;AACzB;AAEA,GAAA,OAAOW,GAAGA,CAAC,GAAG8U,IAAI,EAAE;KAClB,IAAI9U,GAAG,GAAG,IAAI;AAEd,KAAA,KAAK,MAAM7N,GAAG,IAAI2iB,IAAI,EAAE;OACtB5U,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;AAEtC,OAAA,IAAI,CAAC6N,GAAG,IAAI7N,GAAG,CAACiL,GAAG,CAAC4C,GAAG,CAAC,GAAG,CAAC,EAC1BA,GAAG,GAAG7N,GAAG;AACb;AAEA,KAAA,OAAO6N,GAAG,IAAI,IAAIX,EAAE,CAAC,CAAC,CAAC;AACzB;AAEA,GAAA,OAAOjC,GAAGA,CAAC7D,CAAC,EAAEC,CAAC,EAAE;KACf0G,OAAO,CAACb,EAAE,CAACc,IAAI,CAAC5G,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC;AAClC,KAAA,OAAOA,CAAC,CAAC6D,GAAG,CAAC5D,CAAC,CAAC;AACjB;AAEA,GAAA,OAAO4G,IAAIA,CAAC7G,CAAC,EAAEC,CAAC,EAAE;KAChB0G,OAAO,CAACb,EAAE,CAACc,IAAI,CAAC5G,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC;AAClC,KAAA,OAAOA,CAAC,CAAC6G,IAAI,CAAC5G,CAAC,CAAC;AAClB;GAEA,OAAOkG,GAAGA,CAACvN,GAAG,EAAE;AACd,KAAA,OAAO,IAAIuc,GAAG,CAACvc,GAAG,CAAC;AACrB;GAEA,OAAO4iB,OAAOA,CAAC5iB,GAAG,EAAE;AAClB,KAAA,OAAO,IAAI6iB,OAAO,CAAC7iB,GAAG,CAAC;AACzB;GAEA,OAAO2Y,IAAIA,CAAC3Y,GAAG,EAAE;AACf,KAAA,OAAO,IAAI8iB,IAAI,CAAC9iB,GAAG,CAAC;AACtB;GAEA,OAAO+iB,MAAMA,CAACC,IAAI,EAAE;KAClB,IAAIjX,MAAM,CAACiX,IAAI,CAAC,EACd,OAAOjX,MAAM,CAACiX,IAAI,CAAC;AAErB,KAAA,IAAIC,KAAK;KAET,IAAID,IAAI,KAAK,MAAM,EACjBC,KAAK,GAAG,IAAIC,IAAI,EAAE,CAAC,KAChB,IAAIF,IAAI,KAAK,MAAM,EACtBC,KAAK,GAAG,IAAIE,IAAI,EAAE,CAAC,KAChB,IAAIH,IAAI,KAAK,MAAM,EACtBC,KAAK,GAAG,IAAIG,IAAI,EAAE,CAAC,KAChB,IAAIJ,IAAI,KAAK,MAAM,EACtBC,KAAK,GAAG,IAAII,IAAI,EAAE,CAAC,KAChB,IAAIL,IAAI,KAAK,MAAM,EACtBC,KAAK,GAAG,IAAIK,IAAI,EAAE,CAAC,KAChB,IAAIN,IAAI,KAAK,QAAQ,EACxBC,KAAK,GAAG,IAAIM,MAAM,EAAE,CAAC,KAClB,IAAIP,IAAI,KAAK,MAAM,EACtBC,KAAK,GAAG,IAAIO,IAAI,EAAE,CAAC,KAEnB,MAAM,IAAI5hB,KAAK,CAAC,CAAA,gBAAA,EAAmBohB,IAAI,CAAA,EAAA,CAAI,CAAC;AAE9CjX,KAAAA,MAAM,CAACiX,IAAI,CAAC,GAAGC,KAAK;AAEpB,KAAA,OAAOA,KAAK;AACd;GAEA,OAAOA,KAAKA,CAACD,IAAI,EAAE;KACjB,OAAO9V,EAAE,CAAC6V,MAAM,CAACC,IAAI,CAAC,CAACtR,CAAC,CAACnD,KAAK,EAAE;AAClC;AAEA,GAAA,OAAOiE,GAAGA,CAACxS,GAAG,EAAEC,GAAG,EAAE;AACnB,KAAA,IAAID,GAAG,KAAK,CAAC,EACX,OAAOkN,EAAE,CAACzB,KAAK,CAAC,CAAC,EAAExL,GAAG,CAAC;AAEzB,KAAA,OAAO,IAAIiN,EAAE,EAAE,CAAC2S,UAAU,CAAC7f,GAAG,CAAC,CAAC0S,IAAI,CAACzS,GAAG,CAAC;AAC3C;AAEA,GAAA,OAAOwL,KAAKA,CAACzL,GAAG,EAAE+I,IAAI,EAAE;AACtB,KAAA,IAAI/I,GAAG,KAAK,CAAC,EACX,OAAO,IAAIkN,EAAE,CAAC,CAAC,CAAC,CAAC+J,KAAK,CAAClO,IAAI,EAAE,CAAC,CAAC;AAEjC,KAAA,OAAO,IAAImE,EAAE,EAAE,CAAC2S,UAAU,CAAC7f,GAAG,CAAC,CAAC8V,KAAK,CAAC/M,IAAI,CAAC;AAC7C;GAEA,OAAOoN,IAAIA,CAACpN,IAAI,EAAE;AAChB,KAAA,OAAOmE,EAAE,CAACzB,KAAK,CAAC,CAAC,EAAE1C,IAAI,CAAC,CAAC6F,KAAK,CAAC,CAAC,CAAC;AACnC;AAEA,GAAA,OAAO6U,UAAUA,CAACnI,GAAG,EAAEvS,IAAI,EAAE;KAC3BgF,OAAO,CAACuN,GAAG,IAAI,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;KAClCvN,OAAO,CAAEhF,IAAI,KAAK,CAAC,KAAMA,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;AAEhD,KAAA,IAAI,OAAOuS,GAAG,KAAK,QAAQ,EAAE;OAC3BvN,OAAO,CAAC,OAAOuN,GAAG,CAACoI,WAAW,KAAK,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC;AAE5D,OAAA,MAAM5e,IAAI,GAAIiE,IAAI,GAAG,CAAC,KAAM,CAAC;AAC7B,OAAA,MAAMmZ,KAAK,GAAGpd,IAAI,GAAG,CAAC;OACtB,MAAMqc,KAAK,GAAG7F,GAAG,CAACoI,WAAW,CAAC5e,IAAI,CAAC;OAEnCiJ,OAAO,CAACvK,MAAM,CAACgC,QAAQ,CAAC2b,KAAK,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC;OAElD,IAAIA,KAAK,CAACzgB,MAAM,KAAKoE,IAAI,EACvB,MAAM,IAAIgO,UAAU,CAAC,4CAA4C,CAAC;OAEpE,MAAM9S,GAAG,GAAGkN,EAAE,CAAC8S,UAAU,CAACmB,KAAK,CAAC;OAEhC,IAAIe,KAAK,GAAGnZ,IAAI,EACd/I,GAAG,CAAC4P,MAAM,CAACsS,KAAK,GAAGnZ,IAAI,CAAC;AAE1B,OAAA,OAAO/I,GAAG;AACZ;KAEA+N,OAAO,CAAC,OAAOuN,GAAG,KAAK,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC;AAEhD,KAAA,MAAMtb,GAAG,GAAGsb,GAAG,CAACvS,IAAI,CAAC;KAErBgF,OAAO,CAACb,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC;KACtC8Z,KAAK,CAAC9Z,GAAG,CAACsN,QAAQ,KAAK,CAAC,EAAE,KAAK,CAAC;KAChCuQ,MAAM,CAAC,CAAC7d,GAAG,CAACuN,GAAG,EAAE,KAAK,CAAC;AAEvB,KAAA,IAAIvN,GAAG,CAACkT,SAAS,EAAE,GAAGnK,IAAI,EACxB,MAAM,IAAI+J,UAAU,CAAC,2CAA2C,CAAC;AAEnE,KAAA,OAAO9S,GAAG;AACZ;GAEA,OAAOic,MAAMA,CAACX,GAAG,EAAEtK,GAAG,EAAEnD,GAAG,EAAE;KAC3BmD,GAAG,GAAG9D,EAAE,CAACyW,IAAI,CAAC3S,GAAG,EAAE,EAAE,CAAC;KACtBnD,GAAG,GAAGX,EAAE,CAACyW,IAAI,CAAC9V,GAAG,EAAE,EAAE,CAAC;AAEtB,KAAA,IAAImD,GAAG,CAAC/F,GAAG,CAAC4C,GAAG,CAAC,GAAG,CAAC,EAClB,MAAM,IAAIiF,UAAU,CAAC,yCAAyC,CAAC;KAEjE,MAAM8Q,KAAK,GAAG/V,GAAG,CAACgB,GAAG,CAACmC,GAAG,CAAC,CAAC0G,IAAI,EAAE;AACjC,KAAA,MAAM3O,IAAI,GAAG6a,KAAK,CAAC1Q,SAAS,EAAE;KAE9B,IAAInK,IAAI,KAAK,CAAC,EACZ,OAAOiI,GAAG,CAACzC,KAAK,EAAE;KAEpB,SAAS;OACP,MAAMvO,GAAG,GAAGkN,EAAE,CAACuW,UAAU,CAACnI,GAAG,EAAEvS,IAAI,CAAC;;AAEpC;OACA,IAAI/I,GAAG,CAACiL,GAAG,CAAC2Y,KAAK,CAAC,IAAI,CAAC,EACrB;;AAEF;AACA5jB,OAAAA,GAAG,CAAC8N,IAAI,CAACkD,GAAG,CAAC;AAEb,OAAA,OAAOhR,GAAG;AACZ;AACF;AAEA,GAAA,OAAOqhB,EAAEA,CAACrhB,GAAG,EAAEoN,MAAM,EAAE;KACrB,OAAO,IAAIF,EAAE,EAAE,CAACmU,EAAE,CAACrhB,GAAG,EAAEoN,MAAM,CAAC;AACjC;AAEA,GAAA,OAAOyS,UAAUA,CAAC7f,GAAG,EAAEoN,MAAM,EAAE;KAC7B,OAAO,IAAIF,EAAE,EAAE,CAAC2S,UAAU,CAAC7f,GAAG,EAAEoN,MAAM,CAAC;AACzC;AAEA,GAAA,OAAOmU,UAAUA,CAACvhB,GAAG,EAAEoN,MAAM,EAAE;KAC7B,OAAO,IAAIF,EAAE,EAAE,CAACqU,UAAU,CAACvhB,GAAG,EAAEoN,MAAM,CAAC;AACzC;AAEA,GAAA,OAAOqU,UAAUA,CAACzhB,GAAG,EAAEoN,MAAM,EAAE;KAC7B,OAAO,IAAIF,EAAE,EAAE,CAACuU,UAAU,CAACzhB,GAAG,EAAEoN,MAAM,CAAC;AACzC;GAEA,OAAOuU,QAAQA,CAACzf,KAAK,EAAE;KACrB,OAAO,IAAIgL,EAAE,EAAE,CAACyU,QAAQ,CAACzf,KAAK,CAAC;AACjC;GAEA,OAAO0f,UAAUA,CAAC/gB,GAAG,EAAEsM,IAAI,EAAEC,MAAM,EAAE;AACnC,KAAA,OAAO,IAAIF,EAAE,EAAE,CAAC0U,UAAU,CAAC/gB,GAAG,EAAEsM,IAAI,EAAEC,MAAM,CAAC;AAC/C;GAEA,OAAOgV,QAAQA,CAACC,IAAI,EAAE;KACpB,OAAO,IAAInV,EAAE,EAAE,CAACkV,QAAQ,CAACC,IAAI,CAAC;AAChC;GAEA,OAAOE,MAAMA,CAACviB,GAAG,EAAE;KACjB,OAAO,IAAIkN,EAAE,EAAE,CAACqV,MAAM,CAACviB,GAAG,CAAC;AAC7B;AAEA,GAAA,OAAOwiB,SAASA,CAACzc,IAAI,EAAEqH,MAAM,EAAE;KAC7B,OAAO,IAAIF,EAAE,EAAE,CAACsV,SAAS,CAACzc,IAAI,EAAEqH,MAAM,CAAC;AACzC;AAEA,GAAA,OAAO4S,UAAUA,CAACja,IAAI,EAAEqH,MAAM,EAAE;KAC9B,OAAO,IAAIF,EAAE,EAAE,CAAC8S,UAAU,CAACja,IAAI,EAAEqH,MAAM,CAAC;AAC1C;AAEA,GAAA,OAAOqV,aAAaA,CAAC1c,IAAI,EAAEqH,MAAM,EAAE;KACjC,OAAO,IAAIF,EAAE,EAAE,CAACuV,aAAa,CAAC1c,IAAI,EAAEqH,MAAM,CAAC;AAC7C;AAEA,GAAA,OAAOxM,MAAMA,CAACmF,IAAI,EAAEqH,MAAM,EAAE;KAC1B,OAAO,IAAIF,EAAE,EAAE,CAACtM,MAAM,CAACmF,IAAI,EAAEqH,MAAM,CAAC;AACtC;GAEA,OAAO/K,IAAIA,CAACrC,GAAG,EAAEmN,IAAI,EAAEC,MAAM,EAAE;AAC7B,KAAA,OAAO,IAAIF,EAAE,EAAE,CAAC7K,IAAI,CAACrC,GAAG,EAAEmN,IAAI,EAAEC,MAAM,CAAC;AACzC;GAEA,OAAOuW,IAAIA,CAAC3jB,GAAG,EAAEmN,IAAI,EAAEC,MAAM,EAAE;KAC7B,IAAIF,EAAE,CAACc,IAAI,CAAChO,GAAG,CAAC,EACd,OAAOA,GAAG;KAEZ,OAAO,IAAIkN,EAAE,CAAClN,GAAG,EAAEmN,IAAI,EAAEC,MAAM,CAAC;AAClC;GAEA,OAAOY,IAAIA,CAAC6V,GAAG,EAAE;KACf,OAAOA,GAAG,YAAY3W,EAAE;AAC1B;AACF;;AAEA;AACA;AACA;;CAEAA,EAAE,CAACA,EAAE,GAAGA,EAAE;CACVA,EAAE,CAAC4W,QAAQ,GAAG,EAAE;CAChB5W,EAAE,CAACrE,MAAM,GAAG,CAAC;;AAEb;AACA;AACA;;AAEA,CAAA,MAAMkb,KAAK,CAAC;AACV9hB,GAAAA,WAAWA,CAAC+gB,IAAI,EAAEtR,CAAC,EAAE;AACnB;KACA,IAAI,CAACsR,IAAI,GAAGA,IAAI;KAChB,IAAI,CAACtR,CAAC,GAAG,IAAIxE,EAAE,CAACwE,CAAC,EAAE,EAAE,CAAC;KACtB,IAAI,CAAC0C,CAAC,GAAG,IAAI,CAAC1C,CAAC,CAACwB,SAAS,EAAE;KAC3B,IAAI,CAACxH,CAAC,GAAGwB,EAAE,CAACzB,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC2I,CAAC,CAAC,CAACzF,IAAI,CAAC,IAAI,CAAC+C,CAAC,CAAC;KACzC,IAAI,CAACnR,EAAE,GAAG,IAAI,CAACmR,CAAC,CAACnD,KAAK,EAAE;KACxB,IAAI,CAACyV,GAAG,GAAG,IAAI,CAACtS,CAAC,CAACnD,KAAK,EAAE;AAC3B;GAEA0V,OAAOA,CAACjkB,GAAG,EAAE;AACX;AACA;AACA,KAAA,MAAMwP,GAAG,GAAGxP,GAAG,CAACsN,QAAQ,KAAK,CAAC;;AAE9B;AACA,KAAA,IAAIvE,IAAI,GAAG/I,GAAG,CAACkT,SAAS,EAAE;;AAE1B;KACAtT,MAAM,CAACmJ,IAAI,IAAI,IAAI,CAACqL,CAAC,GAAG,CAAC,CAAC;;AAE1B;KACApU,GAAG,CAACsN,QAAQ,GAAG,CAAC;;AAEhB;AACA,KAAA,OAAOvE,IAAI,GAAG,IAAI,CAACqL,CAAC,EAAE;AACpB;AACA;OACA,IAAI,CAAC8P,KAAK,CAAClkB,GAAG,EAAE,IAAI,CAACO,EAAE,CAAC;;AAExB;AACA,OAAA,IAAI,CAAC4jB,KAAK,CAACnkB,GAAG,CAAC;;AAEf;OACAA,GAAG,CAACwN,KAAK,CAACxN,GAAG,EAAE,IAAI,CAACO,EAAE,CAAC;;AAEvB;AACAwI,OAAAA,IAAI,GAAG/I,GAAG,CAACkT,SAAS,EAAE;AACxB;;AAEA;AACA,KAAA,MAAMjI,GAAG,GAAGlC,IAAI,GAAG,IAAI,CAACqL,CAAC,GAAG,EAAE,GAAGpU,GAAG,CAACiO,IAAI,CAAC,IAAI,CAACyD,CAAC,CAAC;KAEjD,IAAIzG,GAAG,KAAK,CAAC,EAAE;AACbjL,OAAAA,GAAG,CAACqN,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;OAChBrN,GAAG,CAACU,MAAM,GAAG,CAAC;AAChB,MAAC,MAAM,IAAIuK,GAAG,GAAG,CAAC,EAAE;OAClBjL,GAAG,CAACkO,KAAK,CAAClO,GAAG,EAAE,IAAI,CAAC0R,CAAC,CAAC;AACxB,MAAC,MAAM;;AAIP;AACA,KAAA,IAAIlC,GAAG,IAAI,CAACxP,GAAG,CAACgQ,MAAM,EAAE,EACtBhQ,GAAG,CAACkO,KAAK,CAAC,IAAI,CAACwD,CAAC,EAAE1R,GAAG,CAAC;AAExB,KAAA,OAAOA,GAAG;AACZ;AAEAkkB,GAAAA,KAAKA,CAACE,KAAK,EAAEpd,GAAG,EAAE;KAChBod,KAAK,CAAC7N,MAAM,CAAC,IAAI,CAACnC,CAAC,EAAEpN,GAAG,CAAC;AAC3B;GAEAmd,KAAKA,CAACnkB,GAAG,EAAE;KACT,OAAOA,GAAG,CAACoP,IAAI,CAAC,IAAI,CAAC1D,CAAC,CAAC;AACzB;GAEA2Y,GAAGA,CAACC,EAAE,EAAE;AACN;AACA,KAAA,MAAM,IAAI1iB,KAAK,CAAC,kBAAkB,CAAC;AACrC;GAEAqY,MAAMA,CAAClV,CAAC,EAAE;AACR,KAAA,OAAO,IAAI,CAACsf,GAAG,CAACtf,CAAC,CAAC;AACpB;AACF;;AAEA;AACA;AACA;;CAEA,MAAMwf,OAAO,SAASR,KAAK,CAAC;AAC1B9hB,GAAAA,WAAWA,CAAC+gB,IAAI,EAAEtR,CAAC,EAAE;AACnB,KAAA,KAAK,CAACsR,IAAI,EAAEtR,CAAC,CAAC;AAChB;GAEA8S,KAAKA,CAACF,EAAE,EAAE;AACR;AACA,KAAA,MAAM,IAAI1iB,KAAK,CAAC,kBAAkB,CAAC;AACrC;GAEA6iB,KAAKA,CAACH,EAAE,EAAE;AACR;AACA,KAAA,MAAM,IAAI1iB,KAAK,CAAC,kBAAkB,CAAC;AACrC;GAEA6R,IAAIA,CAAC1O,CAAC,EAAE;AACN;KACA,MAAM;OAACwI;AAAG,MAAC,GAAGxI,CAAC;KACf,MAAMmE,CAAC,GAAG,IAAI,CAACub,KAAK,CAAC1f,CAAC,CAAC;AAEvB,KAAA,IAAI,CAACwI,GAAG,CAACoF,GAAG,CAACzJ,CAAC,CAAC,CAAC2O,EAAE,CAAC9S,CAAC,CAAC,EACnB,MAAM,IAAI2f,eAAe,CAACxb,CAAC,CAAC;AAE9B,KAAA,OAAOA,CAAC;AACV;AAEAkV,GAAAA,OAAOA,CAACpL,CAAC,EAAEG,CAAC,EAAE;AACZ;KACA,MAAM;OAAC5F;AAAG,MAAC,GAAGyF,CAAC;KACf,MAAM2R,EAAE,GAAGpX,GAAG,CAACoF,GAAG,CAACK,CAAC,CAAC;KACrB,MAAM4R,EAAE,GAAGrX,GAAG,CAAC8B,GAAG,CAACsV,EAAE,EAAE3R,CAAC,CAAC;KACzB,MAAM6R,EAAE,GAAGtX,GAAG,CAAC8B,GAAG,CAACuV,EAAE,EAAED,EAAE,CAAC;AAC1B,KAAA,MAAMG,EAAE,GAAGvX,GAAG,CAAC8B,GAAG,CAAC9B,GAAG,CAACoF,GAAG,CAACQ,CAAC,CAAC,EAAEA,CAAC,CAAC;AACjC,KAAA,MAAMzB,CAAC,GAAG,IAAI,CAAC8S,KAAK,CAACjX,GAAG,CAAC8B,GAAG,CAACwV,EAAE,EAAEC,EAAE,CAAC,CAAC;AACrC,KAAA,MAAM/f,CAAC,GAAGwI,GAAG,CAAC8B,GAAG,CAAC9B,GAAG,CAAC8B,GAAG,CAACuV,EAAE,EAAEzR,CAAC,CAAC,EAAEzB,CAAC,CAAC;AACpC,KAAA,MAAMpK,CAAC,GAAGiG,GAAG,CAAC8B,GAAG,CAAC8D,CAAC,EAAE5F,GAAG,CAACoF,GAAG,CAAC5N,CAAC,CAAC,CAAC;KAEhC,IAAIuC,CAAC,CAACuQ,EAAE,CAAC7E,CAAC,CAAC,EACT,OAAOjO,CAAC;AAEV,KAAA,MAAM,IAAI2f,eAAe,CAAC3f,CAAC,CAAC;AAC9B;AACF;;AAEA;AACA;AACA;;CAEA,MAAMggB,OAAO,SAAShB,KAAK,CAAC;AAC1B9hB,GAAAA,WAAWA,CAAC+gB,IAAI,EAAEtR,CAAC,EAAEsT,GAAG,EAAE;AACxB,KAAA,KAAK,CAAChC,IAAI,EAAEtR,CAAC,CAAC;KAEd,IAAI,CAACsT,GAAG,GAAG,IAAI9X,EAAE,CAAC8X,GAAG,EAAE,EAAE,CAAC;AAC5B;GAEAC,KAAKA,CAACX,EAAE,EAAE;AACR;AACA,KAAA,MAAM,IAAI1iB,KAAK,CAAC,kBAAkB,CAAC;AACrC;GAEAsjB,KAAKA,CAACZ,EAAE,EAAE;AACR;AACA,KAAA,MAAM,IAAI1iB,KAAK,CAAC,kBAAkB,CAAC;AACrC;GAEA6R,IAAIA,CAAC1O,CAAC,EAAE;AACN;KACA,MAAM;OAACwI;AAAG,MAAC,GAAGxI,CAAC;KACf,MAAMigB,GAAG,GAAG,IAAI,CAACA,GAAG,CAACrI,SAAS,CAACpP,GAAG,CAAC;KACnC,MAAMrE,CAAC,GAAG,IAAI,CAACgc,KAAK,CAACngB,CAAC,CAAC;AAEvB,KAAA,IAAIwI,GAAG,CAACoF,GAAG,CAACzJ,CAAC,CAAC,CAAC2O,EAAE,CAAC9S,CAAC,CAAC,EAClB,OAAOmE,CAAC;KAEV,MAAM5B,CAAC,GAAGiG,GAAG,CAAC8B,GAAG,CAACnG,CAAC,EAAE8b,GAAG,CAAC;AAEzB,KAAA,IAAIzX,GAAG,CAACoF,GAAG,CAACrL,CAAC,CAAC,CAACuQ,EAAE,CAAC9S,CAAC,CAAC,EAClB,OAAOuC,CAAC;AAEV,KAAA,MAAM,IAAIod,eAAe,CAACxb,CAAC,CAAC;AAC9B;AAEAkV,GAAAA,OAAOA,CAACpL,CAAC,EAAEG,CAAC,EAAE;AACZ;KACA,MAAM;OAAC5F;AAAG,MAAC,GAAGyF,CAAC;KACf,MAAMgS,GAAG,GAAG,IAAI,CAACA,GAAG,CAACrI,SAAS,CAACpP,GAAG,CAAC;AACnC,KAAA,MAAMuX,EAAE,GAAGvX,GAAG,CAAC8B,GAAG,CAAC9B,GAAG,CAACoF,GAAG,CAACQ,CAAC,CAAC,EAAEA,CAAC,CAAC;AACjC,KAAA,MAAMgS,EAAE,GAAG5X,GAAG,CAAC8B,GAAG,CAAC9B,GAAG,CAACoF,GAAG,CAACmS,EAAE,CAAC,EAAE3R,CAAC,CAAC;AAClC,KAAA,MAAMzB,CAAC,GAAG,IAAI,CAACuT,KAAK,CAAC1X,GAAG,CAAC8B,GAAG,CAAC2D,CAAC,EAAEmS,EAAE,CAAC,CAAC;AACpC,KAAA,MAAMpgB,CAAC,GAAGwI,GAAG,CAAC8B,GAAG,CAAC9B,GAAG,CAAC8B,GAAG,CAAC2D,CAAC,EAAE8R,EAAE,CAAC,EAAEpT,CAAC,CAAC;AACpC,KAAA,MAAMpK,CAAC,GAAGiG,GAAG,CAAC8B,GAAG,CAAC8D,CAAC,EAAE5F,GAAG,CAACoF,GAAG,CAAC5N,CAAC,CAAC,CAAC;KAEhC,IAAIuC,CAAC,CAACuQ,EAAE,CAAC7E,CAAC,CAAC,EACT,OAAOjO,CAAC;KAEV,MAAMqgB,EAAE,GAAG7X,GAAG,CAAC0D,IAAI,CAAC3J,CAAC,CAAC;AAEtB,KAAA,IAAI8d,EAAE,CAACvN,EAAE,CAAC7E,CAAC,CAAC,EACV,OAAOzF,GAAG,CAAC8B,GAAG,CAACtK,CAAC,EAAEigB,GAAG,CAAC;KAExB,IAAII,EAAE,CAACvN,EAAE,CAACtK,GAAG,CAAC8B,GAAG,CAAC2D,CAAC,EAAEgS,GAAG,CAAC,CAAC,EACxB,MAAM,IAAIN,eAAe,CAACnX,GAAG,CAAC8B,GAAG,CAACtK,CAAC,EAAEigB,GAAG,CAAC,CAAC;AAE5C,KAAA,MAAM,IAAIN,eAAe,CAAC3f,CAAC,CAAC;AAC9B;AACF;;AAEA;AACA;AACA;;CAEA,MAAMsgB,QAAQ,SAAStB,KAAK,CAAC;AAC3B9hB,GAAAA,WAAWA,CAAC+gB,IAAI,EAAEtR,CAAC,EAAEhK,CAAC,EAAE;AACtB,KAAA,KAAK,CAACsb,IAAI,EAAEtR,CAAC,CAAC;KAEd,IAAI,CAAChK,CAAC,GAAG,IAAIwF,EAAE,CAACxF,CAAC,EAAE,EAAE,CAAC;AACtB,KAAA,IAAI,CAACiB,CAAC,GAAG,IAAI,CAAC+I,CAAC,CAAC5C,IAAI,CAAC,CAAC,CAAC,CAACgN,QAAQ,EAAE;AACpC;GAEAwJ,IAAIA,CAAChB,EAAE,EAAE;AACP;AACA,KAAA,MAAM,IAAI1iB,KAAK,CAAC,kBAAkB,CAAC;AACrC;GAEA2jB,IAAIA,CAACjB,EAAE,EAAE;AACP;AACA,KAAA,MAAM,IAAI1iB,KAAK,CAAC,kBAAkB,CAAC;AACrC;GAEA6R,IAAIA,CAAC1O,CAAC,EAAE;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;KACA,MAAM;OAACwI;AAAG,MAAC,GAAGxI,CAAC;AAEf,KAAA,QAAQwI,GAAG,CAACuL,MAAM,CAAC/T,CAAC,CAAC;OACnB,KAAK,EAAE;AACL,SAAA,MAAM,IAAI2f,eAAe,CAAC3f,CAAC,CAAC;AAC9B,OAAA,KAAK,CAAC;AACJ,SAAA,OAAOA,CAAC,CAACwJ,KAAK,EAAE;AAGpB;KAEA,IAAI7G,CAAC,GAAG,IAAI,CAACA,CAAC,CAACiV,SAAS,CAACpP,GAAG,CAAC;KAC7B,IAAIvI,CAAC,GAAG,IAAI,CAACugB,IAAI,CAACxgB,CAAC,CAAC;KACpB,IAAIsC,CAAC,GAAG,IAAI,CAACie,IAAI,CAACvgB,CAAC,CAAC;AACpB,KAAA,IAAI2G,CAAC,GAAG,IAAI,CAAC/C,CAAC;KAEd,SAAS;OACP,IAAIsK,CAAC,GAAG5L,CAAC;OACT,IAAIqJ,CAAC,GAAG,CAAC;AAET,OAAA,OAAOuC,CAAC,CAAC2E,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIlH,CAAC,GAAGhF,CAAC,EAAE;AAC/BuH,SAAAA,CAAC,GAAG1F,GAAG,CAACoF,GAAG,CAACM,CAAC,CAAC;SACdvC,CAAC,IAAI,CAAC;AACR;OAEA,IAAIA,CAAC,KAAK,CAAC,EACT;AAEF9Q,OAAAA,MAAM,CAAC8Q,CAAC,GAAGhF,CAAC,CAAC;AAEbuH,OAAAA,CAAC,GAAG1F,GAAG,CAACiY,IAAI,CAAC9d,CAAC,EAAEgE,CAAC,GAAGgF,CAAC,GAAG,CAAC,CAAC;AAC1BhJ,OAAAA,CAAC,GAAG6F,GAAG,CAACoF,GAAG,CAACM,CAAC,CAAC;OACdjO,CAAC,GAAGuI,GAAG,CAAC8B,GAAG,CAACrK,CAAC,EAAEiO,CAAC,CAAC;OACjB5L,CAAC,GAAGkG,GAAG,CAAC8B,GAAG,CAAChI,CAAC,EAAEK,CAAC,CAAC;OACjBgE,CAAC,GAAGgF,CAAC;AACP;AAEA,KAAA,OAAO1L,CAAC;AACV;AAEAoZ,GAAAA,OAAOA,CAACpL,CAAC,EAAEG,CAAC,EAAE;KACZ,MAAM;OAAC5F;AAAG,MAAC,GAAGyF,CAAC;KAEf,IAAIG,CAAC,CAACnD,MAAM,EAAE,EACZ,MAAM,IAAI0U,eAAe,CAACvR,CAAC,CAAC;AAE9B,KAAA,OAAO,IAAI,CAACM,IAAI,CAAClG,GAAG,CAACzL,GAAG,CAACkR,CAAC,EAAEG,CAAC,CAAC,CAAC;AACjC;AACF;;AAEA;AACA;AACA;;CAEA,MAAM+P,IAAI,SAASqB,OAAO,CAAC;AACzBtiB,GAAAA,WAAWA,GAAG;AACZ;AACA,KAAA,KAAK,CAAC,MAAM,EAAE,qCAAqC,GACrC,mBAAmB,CAAC;AACpC;GAEAkiB,KAAKA,CAACnkB,GAAG,EAAE;AACT;AACA;KACA,MAAMgkB,GAAG,GAAG,IAAI,CAACA,GAAG,CAACrE,MAAM,CAAC3f,GAAG,CAAC;AAChC,KAAA,OAAOA,GAAG,CAACyQ,MAAM,CAAC,EAAE,CAAC,CAACjD,KAAK,CAACxN,GAAG,EAAEgkB,GAAG,CAAC;AACvC;GAEAyB,IAAIA,CAACnB,EAAE,EAAE;AACP;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAMsB,EAAE,GAAGrY,GAAG,CAACoY,OAAO,CAACD,EAAE,EAAE,CAAC,EAAEpB,EAAE,CAAC;KACjC,MAAMuB,EAAE,GAAGtY,GAAG,CAACoY,OAAO,CAACC,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAME,GAAG,GAAGvY,GAAG,CAACoY,OAAO,CAACE,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KAClC,MAAME,GAAG,GAAGxY,GAAG,CAACoY,OAAO,CAACG,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,GAAG,GAAGzY,GAAG,CAACoY,OAAO,CAACI,GAAG,EAAE,CAAC,EAAEF,EAAE,CAAC;KACnC,MAAMI,GAAG,GAAG1Y,GAAG,CAACoY,OAAO,CAACK,GAAG,EAAE,CAAC,EAAE1B,EAAE,CAAC;KACnC,MAAM4B,GAAG,GAAG3Y,GAAG,CAACoY,OAAO,CAACM,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,IAAI,GAAG5Y,GAAG,CAACoY,OAAO,CAACO,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACtC,MAAME,IAAI,GAAG7Y,GAAG,CAACoY,OAAO,CAACQ,IAAI,EAAE,CAAC,EAAEP,EAAE,CAAC;KACrC,MAAMS,EAAE,GAAG9Y,GAAG,CAACiY,IAAI,CAACY,IAAI,EAAE,CAAC,CAAC;KAC5B,MAAME,EAAE,GAAG/Y,GAAG,CAACoY,OAAO,CAACU,EAAE,EAAE,EAAE,EAAEH,GAAG,CAAC;AAEnC,KAAA,OAAOI,EAAE;AACX;GAEA9B,KAAKA,CAACF,EAAE,EAAE;AACR;AACA;AACA,KAAA,OAAO,IAAI,CAACmB,IAAI,CAACnB,EAAE,CAAC;AACtB;GAEAD,GAAGA,CAACC,EAAE,EAAE;AACN;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAM+B,EAAE,GAAG,IAAI,CAACZ,IAAI,CAACnB,EAAE,CAAC;KACxB,MAAMgC,EAAE,GAAG/Y,GAAG,CAACiY,IAAI,CAACa,EAAE,EAAE,CAAC,CAAC;KAC1B,MAAME,EAAE,GAAGhZ,GAAG,CAACoY,OAAO,CAACW,EAAE,EAAE,CAAC,EAAEhC,EAAE,CAAC;AAEjC,KAAA,OAAOiC,EAAE;AACX;GAEA9B,KAAKA,CAACH,EAAE,EAAE;AACR;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAMkC,EAAE,GAAGjZ,GAAG,CAACoY,OAAO,CAACD,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAMe,EAAE,GAAGlZ,GAAG,CAACoY,OAAO,CAACa,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAME,GAAG,GAAGnZ,GAAG,CAACoY,OAAO,CAACc,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KAClC,MAAME,GAAG,GAAGpZ,GAAG,CAACoY,OAAO,CAACe,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,GAAG,GAAGrZ,GAAG,CAACoY,OAAO,CAACgB,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,IAAI,GAAGtZ,GAAG,CAACoY,OAAO,CAACiB,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACtC,MAAMP,EAAE,GAAG9Y,GAAG,CAACiY,IAAI,CAACqB,IAAI,EAAE,EAAE,CAAC;AAE7B,KAAA,OAAOR,EAAE;AACX;AACF;;AAEA;AACA;AACA;;CAEA,MAAMlD,IAAI,SAASkC,QAAQ,CAAC;AAC1BpjB,GAAAA,WAAWA,GAAG;AACZ;KACA,KAAK,CAAC,MAAM,EAAE,qCAAqC,GACrC,4BAA4B,EAC5B,qCAAqC,GACrC,4BAA4B,CAAC;AAC7C;GAEAkiB,KAAKA,CAACnkB,GAAG,EAAE;AACT;AACA;KACA,MAAMgkB,GAAG,GAAG,IAAI,CAACA,GAAG,CAACrE,MAAM,CAAC3f,GAAG,CAAC;AAChC,KAAA,OAAOA,GAAG,CAACyQ,MAAM,CAAC,EAAE,CAAC,CAACvC,KAAK,CAAClO,GAAG,EAAEgkB,GAAG,CAAC;AACvC;GAEAsB,IAAIA,CAAChB,EAAE,EAAE;AACP;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAMkC,EAAE,GAAGjZ,GAAG,CAACoY,OAAO,CAACD,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAMe,EAAE,GAAGlZ,GAAG,CAACoY,OAAO,CAACa,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAME,GAAG,GAAGnZ,GAAG,CAACoY,OAAO,CAACc,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KAClC,MAAME,GAAG,GAAGpZ,GAAG,CAACoY,OAAO,CAACe,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,GAAG,GAAGrZ,GAAG,CAACoY,OAAO,CAACgB,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,IAAI,GAAGtZ,GAAG,CAACoY,OAAO,CAACiB,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;AAEtC,KAAA,OAAOC,IAAI;AACb;GAEAtB,IAAIA,CAACjB,EAAE,EAAE;AACP;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAM+B,EAAE,GAAG9Y,GAAG,CAACiY,IAAI,CAAClB,EAAE,EAAE,GAAG,CAAC;AAE5B,KAAA,OAAO+B,EAAE;AACX;GAEAhC,GAAGA,CAACC,EAAE,EAAE;AACN;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAMsB,EAAE,GAAGrY,GAAG,CAACoY,OAAO,CAACD,EAAE,EAAE,CAAC,EAAEpB,EAAE,CAAC;KACjC,MAAMuB,EAAE,GAAGtY,GAAG,CAACoY,OAAO,CAACC,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAME,GAAG,GAAGvY,GAAG,CAACoY,OAAO,CAACE,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KAClC,MAAME,GAAG,GAAGxY,GAAG,CAACoY,OAAO,CAACG,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAMgB,GAAG,GAAGvZ,GAAG,CAACoY,OAAO,CAACI,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAMgB,GAAG,GAAGxZ,GAAG,CAACoY,OAAO,CAACmB,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,IAAI,GAAGzZ,GAAG,CAACoY,OAAO,CAACoB,GAAG,EAAE,EAAE,EAAEhB,GAAG,CAAC;KACtC,MAAMkB,IAAI,GAAG1Z,GAAG,CAACoY,OAAO,CAACqB,IAAI,EAAE,CAAC,EAAEnB,EAAE,CAAC;KACrC,MAAMO,IAAI,GAAG7Y,GAAG,CAACoY,OAAO,CAACsB,IAAI,EAAE,CAAC,EAAE3C,EAAE,CAAC;KACrC,MAAM+B,EAAE,GAAG9Y,GAAG,CAACiY,IAAI,CAACY,IAAI,EAAE,CAAC,CAAC;KAC5B,MAAME,EAAE,GAAG/Y,GAAG,CAACoY,OAAO,CAACU,EAAE,EAAE,EAAE,EAAEU,GAAG,CAAC;AAEnC,KAAA,OAAOT,EAAE;AACX;AACF;;AAEA;AACA;AACA;;CAEA,MAAMlD,IAAI,SAASmB,OAAO,CAAC;AACzBtiB,GAAAA,WAAWA,GAAG;AACZ;AACA,KAAA,KAAK,CAAC,MAAM,EAAE,qCAAqC,GACrC,qCAAqC,GACrC,qCAAqC,GACrC,qCAAqC,GACrC,UAAU,CAAC;AAC3B;GAEAkiB,KAAKA,CAACnkB,GAAG,EAAE;AACT;AACA,KAAA,OAAOA,GAAG;AACZ;GAEAylB,IAAIA,CAACnB,EAAE,EAAE;AACP;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAMsB,EAAE,GAAGrY,GAAG,CAACoY,OAAO,CAACD,EAAE,EAAE,CAAC,EAAEpB,EAAE,CAAC;KACjC,MAAMuB,EAAE,GAAGtY,GAAG,CAACoY,OAAO,CAACC,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAMsB,EAAE,GAAG3Z,GAAG,CAACoY,OAAO,CAACE,EAAE,EAAE,CAAC,EAAEvB,EAAE,CAAC;KACjC,MAAMmC,EAAE,GAAGlZ,GAAG,CAACoY,OAAO,CAACuB,EAAE,EAAE,CAAC,EAAE5C,EAAE,CAAC;KACjC,MAAMoC,GAAG,GAAGnZ,GAAG,CAACoY,OAAO,CAACc,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KAClC,MAAME,GAAG,GAAGpZ,GAAG,CAACoY,OAAO,CAACe,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,GAAG,GAAGrZ,GAAG,CAACoY,OAAO,CAACgB,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,IAAI,GAAGtZ,GAAG,CAACoY,OAAO,CAACiB,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACtC,MAAMO,IAAI,GAAG5Z,GAAG,CAACoY,OAAO,CAACkB,IAAI,EAAE,GAAG,EAAEA,IAAI,CAAC;KACzC,MAAMO,IAAI,GAAG7Z,GAAG,CAACoY,OAAO,CAACwB,IAAI,EAAE,GAAG,EAAEA,IAAI,CAAC;KACzC,MAAME,IAAI,GAAG9Z,GAAG,CAACoY,OAAO,CAACyB,IAAI,EAAE,CAAC,EAAEF,EAAE,CAAC;AAErC,KAAA,OAAOG,IAAI;AACb;GAEA7C,KAAKA,CAACF,EAAE,EAAE;AACR;AACA;AACA,KAAA,OAAO,IAAI,CAACmB,IAAI,CAACnB,EAAE,CAAC;AACtB;GAEAD,GAAGA,CAACC,EAAE,EAAE;AACN;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAM+B,EAAE,GAAG,IAAI,CAACZ,IAAI,CAACnB,EAAE,CAAC;KACxB,MAAMgC,EAAE,GAAG/Y,GAAG,CAACiY,IAAI,CAACa,EAAE,EAAE,CAAC,CAAC;KAC1B,MAAME,EAAE,GAAGhZ,GAAG,CAACoY,OAAO,CAACW,EAAE,EAAE,CAAC,EAAEhC,EAAE,CAAC;AAEjC,KAAA,OAAOiC,EAAE;AACX;GAEA9B,KAAKA,CAACH,EAAE,EAAE;AACR;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAM+B,EAAE,GAAG9Y,GAAG,CAACiY,IAAI,CAAClB,EAAE,EAAE,GAAG,CAAC;AAE5B,KAAA,OAAO+B,EAAE;AACX;AACF;;AAEA;AACA;AACA;;CAEA,MAAMhD,IAAI,SAASkB,OAAO,CAAC;AACzBtiB,GAAAA,WAAWA,GAAG;AACZ;AACA,KAAA,KAAK,CAAC,MAAM,EAAE,qCAAqC,GACrC,qCAAqC,CAAC;AACtD;AAEAiiB,GAAAA,KAAKA,CAACE,KAAK,EAAE5N,MAAM,EAAE;AACnB;KACA,MAAML,IAAI,GAAG,QAAQ;KACrB,MAAMzP,GAAG,GAAGkH,IAAI,CAACoD,GAAG,CAACoT,KAAK,CAAC1jB,MAAM,EAAE,CAAC,CAAC;AAErC8V,KAAAA,MAAM,CAAC9I,MAAM,CAAChH,GAAG,GAAG,CAAC,CAAC;KAEtB,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,GAAG,EAAEZ,CAAC,EAAE,EAC1B0Q,MAAM,CAACnJ,KAAK,CAACvH,CAAC,CAAC,GAAGse,KAAK,CAAC/W,KAAK,CAACvH,CAAC,CAAC;KAElC0Q,MAAM,CAAC9V,MAAM,GAAGgG,GAAG;AAEnB,KAAA,IAAI0d,KAAK,CAAC1jB,MAAM,IAAI,CAAC,EAAE;OACrB8V,MAAM,CAAC/H,MAAM,EAAE;AACf2V,OAAAA,KAAK,CAAC/W,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;OAClB+W,KAAK,CAAC1jB,MAAM,GAAG,CAAC;OAChB;AACF;;AAEA;KACA,IAAI4mB,IAAI,GAAGlD,KAAK,CAAC/W,KAAK,CAAC,CAAC,CAAC;KACzB,IAAIvH,CAAC,GAAG,EAAE;KAEV0Q,MAAM,CAACnJ,KAAK,CAACmJ,MAAM,CAAC9V,MAAM,EAAE,CAAC,GAAG4mB,IAAI,GAAGnR,IAAI;KAC3CK,MAAM,CAAC/H,MAAM,EAAE;KAEf,OAAO3I,CAAC,GAAGse,KAAK,CAAC1jB,MAAM,EAAEoF,CAAC,EAAE,EAAE;OAC5B,MAAM2R,IAAI,GAAG2M,KAAK,CAAC/W,KAAK,CAACvH,CAAC,CAAC,GAAG,CAAC;AAE/Bse,OAAAA,KAAK,CAAC/W,KAAK,CAACvH,CAAC,GAAG,EAAE,CAAC,GAAI,CAAC2R,IAAI,GAAGtB,IAAI,KAAK,CAAC,GAAKmR,IAAI,KAAK,EAAG;OAE1DA,IAAI,GAAG7P,IAAI;AACb;KAEA6P,IAAI,MAAM,EAAE;KAEZlD,KAAK,CAAC/W,KAAK,CAACvH,CAAC,GAAG,EAAE,CAAC,GAAGwhB,IAAI;KAE1B,IAAIA,IAAI,KAAK,CAAC,IAAIlD,KAAK,CAAC1jB,MAAM,GAAG,EAAE,EACjC0jB,KAAK,CAAC1jB,MAAM,IAAI,EAAE,CAAC,KAEnB0jB,KAAK,CAAC1jB,MAAM,IAAI,CAAC;AAEnB0jB,KAAAA,KAAK,CAAC3V,MAAM,EAAE,CAAC;AACjB;GAEA0V,KAAKA,CAACnkB,GAAG,EAAE;AACT;AACA;KACAA,GAAG,CAACkR,OAAO,CAAClR,GAAG,CAACU,MAAM,GAAG,CAAC,CAAC;;AAE3B;KACA,IAAIH,EAAE,GAAG,CAAC;AAEV,KAAA,KAAK,IAAIuF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9F,GAAG,CAACU,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACnC,MAAMuE,CAAC,GAAGrK,GAAG,CAACqN,KAAK,CAACvH,CAAC,CAAC;OAEtBvF,EAAE,IAAI8J,CAAC,GAAG,KAAK;OAEfrK,GAAG,CAACqN,KAAK,CAACvH,CAAC,CAAC,GAAGvF,EAAE,GAAG,SAAS;AAE7BA,OAAAA,EAAE,GAAG8J,CAAC,GAAG,IAAI,GAAGuD,IAAI,CAAC4T,KAAK,CAACjhB,EAAE,GAAG,SAAS,CAAC;AAC5C;;AAEA;AACA,KAAA,IAAIP,GAAG,CAACqN,KAAK,CAACrN,GAAG,CAACU,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;OACnCV,GAAG,CAACU,MAAM,IAAI,CAAC;AACf,OAAA,IAAIV,GAAG,CAACqN,KAAK,CAACrN,GAAG,CAACU,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EACjCV,GAAG,CAACU,MAAM,IAAI,CAAC;AACnB;;AAEA;AACA,KAAA,OAAOV,GAAG;AACZ;AAEAylB,GAAAA,IAAIA,CAACnB,EAAE,EAAEoB,EAAE,EAAE;AACX;AACA;KACA,MAAM;OAACnY;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMsB,EAAE,GAAGrY,GAAG,CAACoY,OAAO,CAACD,EAAE,EAAE,CAAC,EAAEpB,EAAE,CAAC;KACjC,MAAMuB,EAAE,GAAGtY,GAAG,CAACoY,OAAO,CAACC,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAM2B,EAAE,GAAGha,GAAG,CAACoY,OAAO,CAACE,EAAE,EAAE,CAAC,EAAED,EAAE,CAAC;KACjC,MAAM4B,GAAG,GAAGja,GAAG,CAACoY,OAAO,CAAC4B,EAAE,EAAE,CAAC,EAAE7B,EAAE,CAAC;KAClC,MAAM+B,GAAG,GAAGla,GAAG,CAACoY,OAAO,CAAC6B,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,GAAG,GAAGna,GAAG,CAACoY,OAAO,CAAC8B,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,GAAG,GAAGpa,GAAG,CAACoY,OAAO,CAAC+B,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,IAAI,GAAGra,GAAG,CAACoY,OAAO,CAACgC,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACtC,MAAME,IAAI,GAAGta,GAAG,CAACoY,OAAO,CAACiC,IAAI,EAAE,EAAE,EAAEF,GAAG,CAAC;KACvC,MAAMI,IAAI,GAAGva,GAAG,CAACoY,OAAO,CAACkC,IAAI,EAAE,CAAC,EAAEjC,EAAE,CAAC;KACrC,MAAMS,EAAE,GAAG9Y,GAAG,CAACiY,IAAI,CAACsC,IAAI,EAAE,CAAC,CAAC;KAC5B,MAAMxB,EAAE,GAAG/Y,GAAG,CAACoY,OAAO,CAACU,EAAE,EAAE,EAAE,EAAEoB,GAAG,CAAC;KACnC,MAAMlB,EAAE,GAAGhZ,GAAG,CAACiY,IAAI,CAACc,EAAE,EAAE,CAAC,CAAC;AAE1B,KAAA,OAAOC,EAAE;AACX;GAEA/B,KAAKA,CAACF,EAAE,EAAE;AACR;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAMiC,EAAE,GAAG,IAAI,CAACd,IAAI,CAACnB,EAAE,EAAEoB,EAAE,CAAC;KAC5B,MAAMqC,EAAE,GAAGxa,GAAG,CAACoY,OAAO,CAACY,EAAE,EAAE,CAAC,EAAEjC,EAAE,CAAC;KACjC,MAAM0D,EAAE,GAAGza,GAAG,CAACiY,IAAI,CAACuC,EAAE,EAAE,CAAC,CAAC;KAC1B,MAAME,EAAE,GAAG1a,GAAG,CAACoY,OAAO,CAACqC,EAAE,EAAE,CAAC,EAAEtC,EAAE,CAAC;AAEjC,KAAA,OAAOuC,EAAE;AACX;GAEA5D,GAAGA,CAACC,EAAE,EAAE;AACN;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAMiC,EAAE,GAAG,IAAI,CAACd,IAAI,CAACnB,EAAE,EAAEoB,EAAE,CAAC;KAC5B,MAAMqC,EAAE,GAAGxa,GAAG,CAACoY,OAAO,CAACY,EAAE,EAAE,CAAC,EAAEjC,EAAE,CAAC;KACjC,MAAM0D,EAAE,GAAGza,GAAG,CAACiY,IAAI,CAACuC,EAAE,EAAE,CAAC,CAAC;KAC1B,MAAME,EAAE,GAAG1a,GAAG,CAACoY,OAAO,CAACqC,EAAE,EAAE,CAAC,EAAEtC,EAAE,CAAC;KACjC,MAAMwC,EAAE,GAAG3a,GAAG,CAACiY,IAAI,CAACyC,EAAE,EAAE,CAAC,CAAC;KAC1B,MAAME,EAAE,GAAG5a,GAAG,CAACoY,OAAO,CAACuC,EAAE,EAAE,CAAC,EAAE5D,EAAE,CAAC;AAEjC,KAAA,OAAO6D,EAAE;AACX;GAEA1D,KAAKA,CAACH,EAAE,EAAE;AACR;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAMiC,EAAE,GAAG,IAAI,CAACd,IAAI,CAACnB,EAAE,EAAEoB,EAAE,CAAC;KAC5B,MAAMqC,EAAE,GAAGxa,GAAG,CAACoY,OAAO,CAACY,EAAE,EAAE,CAAC,EAAEb,EAAE,CAAC;KACjC,MAAMsC,EAAE,GAAGza,GAAG,CAACiY,IAAI,CAACuC,EAAE,EAAE,CAAC,CAAC;AAE1B,KAAA,OAAOC,EAAE;AACX;AACF;;AAEA;AACA;AACA;;CAEA,MAAM1E,IAAI,SAASiB,OAAO,CAAC;AACzBtiB,GAAAA,WAAWA,GAAG;AACZ;AACA,KAAA,KAAK,CAAC,MAAM,EAAE,qCAAqC,GACrC,qCAAqC,CAAC;AACtD;GAEAkiB,KAAKA,CAACnkB,GAAG,EAAE;AACT;AACA,KAAA,IAAIA,GAAG,CAACgQ,MAAM,EAAE,EACd,OAAOhQ,GAAG;KAEZ,IAAIyN,KAAK,GAAG,CAAC;AAEb,KAAA,KAAK,IAAI3H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9F,GAAG,CAACU,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACnC,MAAMuE,CAAC,GAAGrK,GAAG,CAACqN,KAAK,CAACvH,CAAC,CAAC,GAAG,IAAI,GAAG2H,KAAK;OAErCA,KAAK,GAAGpD,CAAC,KAAK,EAAE;OAEhBrK,GAAG,CAACqN,KAAK,CAACvH,CAAC,CAAC,GAAGuE,CAAC,GAAG,SAAS;AAC9B;KAEA,IAAIoD,KAAK,KAAK,CAAC,EAAE;OACfzN,GAAG,CAAC0N,MAAM,CAAC1N,GAAG,CAACU,MAAM,GAAG,CAAC,CAAC;OAC1BV,GAAG,CAACqN,KAAK,CAACrN,GAAG,CAACU,MAAM,EAAE,CAAC,GAAG+M,KAAK;AACjC;;AAEA;AACA,KAAA,OAAOzN,GAAG;AACZ;GAEAylB,IAAIA,CAACnB,EAAE,EAAE;AACP;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAMsB,EAAE,GAAGrY,GAAG,CAACoY,OAAO,CAACD,EAAE,EAAE,CAAC,EAAEpB,EAAE,CAAC;KACjC,MAAMuB,EAAE,GAAGtY,GAAG,CAACoY,OAAO,CAACC,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAME,GAAG,GAAGvY,GAAG,CAACoY,OAAO,CAACE,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KAClC,MAAME,GAAG,GAAGxY,GAAG,CAACoY,OAAO,CAACG,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAMgB,GAAG,GAAGvZ,GAAG,CAACoY,OAAO,CAACI,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAMgB,GAAG,GAAGxZ,GAAG,CAACoY,OAAO,CAACmB,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAMsB,IAAI,GAAG7a,GAAG,CAACoY,OAAO,CAACoB,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACtC,MAAMsB,IAAI,GAAG9a,GAAG,CAACoY,OAAO,CAACyC,IAAI,EAAE,EAAE,EAAEtB,GAAG,CAAC;KACvC,MAAMwB,IAAI,GAAG/a,GAAG,CAACoY,OAAO,CAAC0C,IAAI,EAAE,CAAC,EAAExC,EAAE,CAAC;KACrC,MAAM0C,IAAI,GAAGhb,GAAG,CAACoY,OAAO,CAAC2C,IAAI,EAAE,CAAC,EAAEhE,EAAE,CAAC;AAErC,KAAA,OAAOiE,IAAI;AACb;GAEA/D,KAAKA,CAACF,EAAE,EAAE;AACR;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAM+B,EAAE,GAAG,IAAI,CAACZ,IAAI,CAACnB,EAAE,CAAC;KACxB,MAAMgC,EAAE,GAAG/Y,GAAG,CAACiY,IAAI,CAACa,EAAE,EAAE,CAAC,CAAC;KAC1B,MAAME,EAAE,GAAGhZ,GAAG,CAACoY,OAAO,CAACW,EAAE,EAAE,CAAC,EAAEhC,EAAE,CAAC;AAEjC,KAAA,OAAOiC,EAAE;AACX;GAEAlC,GAAGA,CAACC,EAAE,EAAE;AACN;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAM+B,EAAE,GAAG,IAAI,CAACZ,IAAI,CAACnB,EAAE,CAAC;KACxB,MAAMgC,EAAE,GAAG/Y,GAAG,CAACiY,IAAI,CAACa,EAAE,EAAE,CAAC,CAAC;KAC1B,MAAME,EAAE,GAAGhZ,GAAG,CAACoY,OAAO,CAACW,EAAE,EAAE,CAAC,EAAEhC,EAAE,CAAC;KACjC,MAAMyD,EAAE,GAAGxa,GAAG,CAACiY,IAAI,CAACe,EAAE,EAAE,CAAC,CAAC;KAC1B,MAAMyB,EAAE,GAAGza,GAAG,CAACoY,OAAO,CAACoC,EAAE,EAAE,CAAC,EAAEzD,EAAE,CAAC;AAEjC,KAAA,OAAO0D,EAAE;AACX;GAEAvD,KAAKA,CAACH,EAAE,EAAE;AACR;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAM+B,EAAE,GAAG,IAAI,CAACZ,IAAI,CAACnB,EAAE,CAAC;KACxB,MAAMgC,EAAE,GAAG/Y,GAAG,CAACoY,OAAO,CAACU,EAAE,EAAE,CAAC,EAAE/B,EAAE,CAAC;KACjC,MAAMiC,EAAE,GAAGhZ,GAAG,CAACiY,IAAI,CAACc,EAAE,EAAE,CAAC,CAAC;AAE1B,KAAA,OAAOC,EAAE;AACX;AACF;;AAEA;AACA;AACA;;CAEA,MAAMhD,MAAM,SAASwB,OAAO,CAAC;AAC3B9iB,GAAAA,WAAWA,GAAG;AACZ;KACA,KAAK,CAAC,QAAQ,EAAE,qCAAqC,GACrC,qCAAqC,EACrC,qCAAqC,GACrC,qCAAqC,CAAC;AACxD;GAEAkiB,KAAKA,CAACnkB,GAAG,EAAE;AACT;KACA,IAAIyN,KAAK,GAAG,CAAC;AAEb,KAAA,KAAK,IAAI3H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9F,GAAG,CAACU,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACnC,MAAMuE,CAAC,GAAGrK,GAAG,CAACqN,KAAK,CAACvH,CAAC,CAAC,GAAG,IAAI,GAAG2H,KAAK;OAErCA,KAAK,GAAGpD,CAAC,KAAK,EAAE;OAEhBrK,GAAG,CAACqN,KAAK,CAACvH,CAAC,CAAC,GAAGuE,CAAC,GAAG,SAAS;AAC9B;KAEA,IAAIoD,KAAK,KAAK,CAAC,EAAE;OACfzN,GAAG,CAAC0N,MAAM,CAAC1N,GAAG,CAACU,MAAM,GAAG,CAAC,CAAC;OAC1BV,GAAG,CAACqN,KAAK,CAACrN,GAAG,CAACU,MAAM,EAAE,CAAC,GAAG+M,KAAK;AACjC;;AAEA;AACA,KAAA,OAAOzN,GAAG;AACZ;AAEAylB,GAAAA,IAAIA,CAACnB,EAAE,EAAEoB,EAAE,EAAE;AACX;AACA;KACA,MAAM;OAACnY;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMkC,EAAE,GAAGjZ,GAAG,CAACoY,OAAO,CAACD,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAM8C,EAAE,GAAGjb,GAAG,CAACoY,OAAO,CAACa,EAAE,EAAE,CAAC,EAAElC,EAAE,CAAC;KACjC,MAAMmE,GAAG,GAAGlb,GAAG,CAACoY,OAAO,CAAC6C,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KAClC,MAAME,GAAG,GAAGnb,GAAG,CAACoY,OAAO,CAAC8C,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,GAAG,GAAGpb,GAAG,CAACoY,OAAO,CAAC+C,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,GAAG,GAAGrb,GAAG,CAACoY,OAAO,CAACgD,GAAG,EAAE,EAAE,EAAEF,GAAG,CAAC;KACrC,MAAMI,IAAI,GAAGtb,GAAG,CAACoY,OAAO,CAACiD,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACtC,MAAME,IAAI,GAAGvb,GAAG,CAACoY,OAAO,CAACkD,IAAI,EAAE,GAAG,EAAEA,IAAI,CAAC;KACzC,MAAME,IAAI,GAAGxb,GAAG,CAACoY,OAAO,CAACmD,IAAI,EAAE,EAAE,EAAEF,GAAG,CAAC;AAEvC,KAAA,OAAOG,IAAI;AACb;GAEA9D,KAAKA,CAACX,EAAE,EAAE;AACR;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAM+B,EAAE,GAAG,IAAI,CAACZ,IAAI,CAACnB,EAAE,EAAEoB,EAAE,CAAC;KAC5B,MAAMY,EAAE,GAAG/Y,GAAG,CAACiY,IAAI,CAACa,EAAE,EAAE,CAAC,CAAC;KAC1B,MAAME,EAAE,GAAGhZ,GAAG,CAACoY,OAAO,CAACW,EAAE,EAAE,CAAC,EAAEhC,EAAE,CAAC;AAEjC,KAAA,OAAOiC,EAAE;AACX;GAEAlC,GAAGA,CAACC,EAAE,EAAE;AACN;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAM+B,EAAE,GAAG,IAAI,CAACZ,IAAI,CAACnB,EAAE,EAAEoB,EAAE,CAAC;KAC5B,MAAMY,EAAE,GAAG/Y,GAAG,CAACiY,IAAI,CAACa,EAAE,EAAE,CAAC,CAAC;KAC1B,MAAME,EAAE,GAAGhZ,GAAG,CAACoY,OAAO,CAACW,EAAE,EAAE,CAAC,EAAEhC,EAAE,CAAC;KACjC,MAAMyD,EAAE,GAAGxa,GAAG,CAACiY,IAAI,CAACe,EAAE,EAAE,CAAC,CAAC;KAC1B,MAAMyB,EAAE,GAAGza,GAAG,CAACoY,OAAO,CAACoC,EAAE,EAAE,CAAC,EAAErC,EAAE,CAAC;AAEjC,KAAA,OAAOsC,EAAE;AACX;GAEA9C,KAAKA,CAACZ,EAAE,EAAE;AACR;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAM+B,EAAE,GAAG,IAAI,CAACZ,IAAI,CAACnB,EAAE,EAAEoB,EAAE,CAAC;KAC5B,MAAMY,EAAE,GAAG/Y,GAAG,CAACoY,OAAO,CAACU,EAAE,EAAE,CAAC,EAAE/B,EAAE,CAAC;KACjC,MAAMiC,EAAE,GAAGhZ,GAAG,CAACiY,IAAI,CAACc,EAAE,EAAE,CAAC,CAAC;AAE1B,KAAA,OAAOC,EAAE;AACX;AACF;;AAEA;AACA;AACA;;CAEA,MAAM/C,IAAI,SAASe,OAAO,CAAC;AACzBtiB,GAAAA,WAAWA,GAAG;AACZ;KACA,KAAK,CAAC,MAAM,EAAE,qCAAqC,GACrC,qCAAqC,GACrC,qCAAqC,GACrC,mBAAmB,CAAC;AACpC;GAEAkiB,KAAKA,CAACnkB,GAAG,EAAE;AACT;AACA;KACA,MAAMgkB,GAAG,GAAG,IAAI,CAACA,GAAG,CAACrE,MAAM,CAAC3f,GAAG,CAAC;AAChC,KAAA,OAAOA,GAAG,CAACyQ,MAAM,CAAC,GAAG,CAAC,CAACjD,KAAK,CAACxN,GAAG,EAAEgkB,GAAG,CAAC;AACxC;AAEAyB,GAAAA,IAAIA,CAACnB,EAAE,EAAEoB,EAAE,EAAE;AACX;AACA;KACA,MAAM;OAACnY;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMsB,EAAE,GAAGrY,GAAG,CAACoY,OAAO,CAACD,EAAE,EAAE,CAAC,EAAEpB,EAAE,CAAC;KACjC,MAAMuB,EAAE,GAAGtY,GAAG,CAACoY,OAAO,CAACC,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAM2B,EAAE,GAAGha,GAAG,CAACoY,OAAO,CAACE,EAAE,EAAE,CAAC,EAAED,EAAE,CAAC;KACjC,MAAM4B,GAAG,GAAGja,GAAG,CAACoY,OAAO,CAAC4B,EAAE,EAAE,CAAC,EAAE7B,EAAE,CAAC;KAClC,MAAM+B,GAAG,GAAGla,GAAG,CAACoY,OAAO,CAAC6B,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,GAAG,GAAGna,GAAG,CAACoY,OAAO,CAAC8B,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,GAAG,GAAGpa,GAAG,CAACoY,OAAO,CAAC+B,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACrC,MAAME,IAAI,GAAGra,GAAG,CAACoY,OAAO,CAACgC,GAAG,EAAE,EAAE,EAAEA,GAAG,CAAC;KACtC,MAAME,IAAI,GAAGta,GAAG,CAACoY,OAAO,CAACiC,IAAI,EAAE,EAAE,EAAEF,GAAG,CAAC;KACvC,MAAMsB,IAAI,GAAGzb,GAAG,CAACoY,OAAO,CAACkC,IAAI,EAAE,CAAC,EAAEnC,EAAE,CAAC;AAErC,KAAA,OAAOsD,IAAI;AACb;GAEAxE,KAAKA,CAACF,EAAE,EAAE;AACR;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAM0E,IAAI,GAAG,IAAI,CAACvD,IAAI,CAACnB,EAAE,EAAEoB,EAAE,CAAC;KAC9B,MAAMW,EAAE,GAAG9Y,GAAG,CAACoY,OAAO,CAACqD,IAAI,EAAE,CAAC,EAAE1E,EAAE,CAAC;KACnC,MAAMgC,EAAE,GAAG/Y,GAAG,CAACiY,IAAI,CAACa,EAAE,EAAE,CAAC,CAAC;KAC1B,MAAME,EAAE,GAAGhZ,GAAG,CAACoY,OAAO,CAACW,EAAE,EAAE,GAAG,EAAE0C,IAAI,CAAC;AAErC,KAAA,OAAOzC,EAAE;AACX;GAEAlC,GAAGA,CAACC,EAAE,EAAE;AACN;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAM+B,EAAE,GAAG,IAAI,CAAC7B,KAAK,CAACF,EAAE,CAAC;KACzB,MAAMgC,EAAE,GAAG/Y,GAAG,CAACiY,IAAI,CAACa,EAAE,EAAE,CAAC,CAAC;KAC1B,MAAME,EAAE,GAAGhZ,GAAG,CAACoY,OAAO,CAACW,EAAE,EAAE,CAAC,EAAEhC,EAAE,CAAC;AAEjC,KAAA,OAAOiC,EAAE;AACX;GAEA9B,KAAKA,CAACH,EAAE,EAAE;AACR;AACA;KACA,MAAM;OAAC/W;AAAG,MAAC,GAAG+W,EAAE;KAChB,MAAMoB,EAAE,GAAGnY,GAAG,CAACoY,OAAO,CAACrB,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC;KACjC,MAAM+B,EAAE,GAAG,IAAI,CAACZ,IAAI,CAACnB,EAAE,EAAEoB,EAAE,CAAC;KAC5B,MAAMY,EAAE,GAAG/Y,GAAG,CAACoY,OAAO,CAACU,EAAE,EAAE,CAAC,EAAEX,EAAE,CAAC;KACjC,MAAMa,EAAE,GAAGhZ,GAAG,CAACiY,IAAI,CAACc,EAAE,EAAE,GAAG,CAAC;AAE5B,KAAA,OAAOC,EAAE;AACX;AACF;;AAEA;AACA;AACA;;AAEA,CAAA,MAAMhK,GAAG,CAAC;GACRta,WAAWA,CAACyO,CAAC,EAAE;KACb,IAAIuS,KAAK,GAAG,IAAI;AAEhB,KAAA,IAAI,OAAOvS,CAAC,KAAK,QAAQ,EAAE;AACzBuS,OAAAA,KAAK,GAAG/V,EAAE,CAAC6V,MAAM,CAACrS,CAAC,CAAC;OACpBA,CAAC,GAAGuS,KAAK,CAACvR,CAAC;AACb;KAEA3D,OAAO,CAACb,EAAE,CAACc,IAAI,CAAC0C,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC;KAClCmN,MAAM,CAAC,CAACnN,CAAC,CAACnD,GAAG,EAAE,WAAW,CAAC;KAC3BuM,KAAK,CAACpJ,CAAC,CAACtQ,IAAI,EAAE,GAAG,CAAC,EAAE,WAAW,CAAC;KAEhC,IAAI,CAACsQ,CAAC,GAAGA,CAAC;KACV,IAAI,CAACuS,KAAK,GAAGA,KAAK;KAClB,IAAI,CAACgG,EAAE,GAAG,IAAI;KACd,IAAI,CAACjE,GAAG,GAAG,IAAI;AACjB;GAEAkE,QAAQA,CAAC9hB,CAAC,EAAE;KACV0S,KAAK,CAAC1S,CAAC,CAACkG,QAAQ,KAAK,CAAC,EAAE,KAAK,CAAC;KAC9BC,GAAG,CAACnG,CAAC,CAACmG,GAAG,IAAI,IAAI,EAAE,KAAK,CAAC;AAC3B;AAEA4b,GAAAA,QAAQA,CAAC/hB,CAAC,EAAEC,CAAC,EAAE;AACbyS,KAAAA,KAAK,CAAC,CAAC1S,CAAC,CAACkG,QAAQ,GAAGjG,CAAC,CAACiG,QAAQ,MAAM,CAAC,EAAE,KAAK,CAAC;AAC7CC,KAAAA,GAAG,CAACnG,CAAC,CAACmG,GAAG,IAAI,IAAI,IAAInG,CAAC,CAACmG,GAAG,KAAKlG,CAAC,CAACkG,GAAG,EAAE,KAAK,CAAC;AAC9C;GAEA,IAAIoL,IAAIA,GAAG;AACT,KAAA,OAAO,KAAK;AACd;AAEAyQ,GAAAA,UAAUA,GAAG;AACX;AACA,KAAA,IAAI,IAAI,CAACpE,GAAG,KAAK,IAAI,IAAI,IAAI,CAACtU,CAAC,CAAC6G,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;OAC9C,IAAI,IAAI,CAAC0L,KAAK,EAAE;AACd,SAAA,IAAI,CAAC+B,GAAG,GAAG,IAAI,CAAC/B,KAAK,CAAC+B,GAAG,CAACzW,KAAK,EAAE,CAACoO,SAAS,CAAC,IAAI,CAAC;AACnD,QAAC,MAAM;SACL,MAAM5X,CAAC,GAAG,IAAImI,EAAE,CAAC,CAAC,CAAC,CAAC0L,KAAK,CAAC,IAAI,CAAC;AAC/B,SAAA,MAAMpR,CAAC,GAAG,IAAI,CAACkJ,CAAC,CAAC5B,IAAI,CAAC,CAAC,CAAC,CAACc,MAAM,CAAC,CAAC,CAAC;;AAElC;SACA,IAAI,CAACoV,GAAG,GAAG,IAAI,CAACxS,GAAG,CAACzN,CAAC,EAAEyC,CAAC,CAAC;AAC3B;AACF;AAEA,KAAA,OAAO,IAAI;AACb;GAEAgV,SAASA,CAACxc,GAAG,EAAE;KACb,MAAM2X,GAAG,GAAG3X,GAAG,CAAC6B,GAAG,CAAC,IAAI,CAAC6O,CAAC,CAAC;KAC3BiH,GAAG,CAACpK,GAAG,GAAG,IAAI;AACd,KAAA,OAAOoK,GAAG;AACZ;GAEA8E,WAAWA,CAACzc,GAAG,EAAE;AACf,KAAA,MAAM2X,GAAG,GAAG3X,GAAG,CAACuO,KAAK,EAAE;KACvBoJ,GAAG,CAACpK,GAAG,GAAG,IAAI;AACd,KAAA,OAAOoK,GAAG;AACZ;GAEA0R,KAAKA,CAACjiB,CAAC,EAAE;AACP,KAAA,OAAOA,CAAC;AACV;GAEAkiB,OAAOA,CAACliB,CAAC,EAAE;AACT,KAAA,OAAOA,CAAC;AACV;GAEA4K,IAAIA,CAAC5K,CAAC,EAAE;AACN,KAAA,IAAI,IAAI,CAAC6b,KAAK,EACZ,OAAO,IAAI,CAACA,KAAK,CAACgB,OAAO,CAAC7c,CAAC,CAAC,CAACuV,SAAS,CAAC,IAAI,CAAC;AAE9C,KAAA,OAAOvV,CAAC,CAAC4K,IAAI,CAAC,IAAI,CAACtB,CAAC,CAAC,CAACiM,SAAS,CAAC,IAAI,CAAC;AACvC;AAEA7O,GAAAA,IAAIA,CAAC1G,CAAC,EAAEC,CAAC,EAAE;AACT,KAAA,IAAI,CAAC8hB,QAAQ,CAAC/hB,CAAC,EAAEC,CAAC,CAAC;AAEnBD,KAAAA,CAAC,CAACoG,KAAK,CAACpG,CAAC,EAAEC,CAAC,CAAC;KAEb,IAAID,CAAC,CAAC6G,IAAI,CAAC,IAAI,CAACyC,CAAC,CAAC,IAAI,CAAC,EACrBtJ,CAAC,CAAC8G,KAAK,CAAC9G,CAAC,EAAE,IAAI,CAACsJ,CAAC,CAAC;AAEpB,KAAA,OAAOtJ,CAAC;AACV;AAEAkH,GAAAA,GAAGA,CAAClH,CAAC,EAAEC,CAAC,EAAE;KACR,IAAID,CAAC,CAAC1G,MAAM,GAAG2G,CAAC,CAAC3G,MAAM,EACrB,OAAO,IAAI,CAACoN,IAAI,CAACzG,CAAC,CAACkH,KAAK,EAAE,EAAEnH,CAAC,CAAC;KAEhC,OAAO,IAAI,CAAC0G,IAAI,CAAC1G,CAAC,CAACmH,KAAK,EAAE,EAAElH,CAAC,CAAC;AAChC;AAEA8G,GAAAA,KAAKA,CAAC/G,CAAC,EAAEpH,GAAG,EAAE;AACZ,KAAA,IAAI,CAACkpB,QAAQ,CAAC9hB,CAAC,CAAC;AAEhB,KAAA,IAAIpH,GAAG,GAAG,CAAC,EACT,OAAO,IAAI,CAAC4O,KAAK,CAACxH,CAAC,EAAE,CAACpH,GAAG,CAAC;AAE5B,KAAA,IAAI,IAAI,CAAC0Q,CAAC,CAAChQ,MAAM,KAAK,CAAC,EACrBV,GAAG,IAAI,IAAI,CAAC0Q,CAAC,CAACrD,KAAK,CAAC,CAAC,CAAC;AAExBjG,KAAAA,CAAC,CAACuG,MAAM,CAAC3N,GAAG,CAAC;KAEb,IAAIoH,CAAC,CAAC6G,IAAI,CAAC,IAAI,CAACyC,CAAC,CAAC,IAAI,CAAC,EACrBtJ,CAAC,CAAC8G,KAAK,CAAC9G,CAAC,EAAE,IAAI,CAACsJ,CAAC,CAAC;AAEpB,KAAA,OAAOtJ,CAAC;AACV;AAEAoH,GAAAA,IAAIA,CAACpH,CAAC,EAAEpH,GAAG,EAAE;KACX,OAAO,IAAI,CAACmO,KAAK,CAAC/G,CAAC,CAACmH,KAAK,EAAE,EAAEvO,GAAG,CAAC;AACnC;AAEA2O,GAAAA,IAAIA,CAACvH,CAAC,EAAEC,CAAC,EAAE;AACT,KAAA,IAAI,CAAC8hB,QAAQ,CAAC/hB,CAAC,EAAEC,CAAC,CAAC;;AAEnB;AACA;AACA;KACA,MAAM4D,GAAG,GAAG7D,CAAC,CAAC6G,IAAI,CAAC5G,CAAC,CAAC;KAErB,IAAI4D,GAAG,KAAK,CAAC,EAAE;AACb7D,OAAAA,CAAC,CAACiG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;OACdjG,CAAC,CAAC1G,MAAM,GAAG,CAAC;AACZ,OAAA,OAAO0G,CAAC;AACV;KAEA,IAAI6D,GAAG,GAAG,CAAC,EAAE;AACX7D,OAAAA,CAAC,CAAC8G,KAAK,CAAC7G,CAAC,EAAED,CAAC,CAAC;OACbA,CAAC,CAAC8G,KAAK,CAAC,IAAI,CAACwC,CAAC,EAAEtJ,CAAC,CAAC;AACpB,MAAC,MAAM;AACLA,OAAAA,CAAC,CAAC8G,KAAK,CAAC9G,CAAC,EAAEC,CAAC,CAAC;AACf;AAEA,KAAA,OAAOD,CAAC;AACV;AAEAyH,GAAAA,GAAGA,CAACzH,CAAC,EAAEC,CAAC,EAAE;KACR,OAAO,IAAI,CAACsH,IAAI,CAACvH,CAAC,CAACmH,KAAK,EAAE,EAAElH,CAAC,CAAC;AAChC;AAEAuH,GAAAA,KAAKA,CAACxH,CAAC,EAAEpH,GAAG,EAAE;AACZ,KAAA,IAAI,CAACkpB,QAAQ,CAAC9hB,CAAC,CAAC;AAEhB,KAAA,IAAIpH,GAAG,GAAG,CAAC,EACT,OAAO,IAAI,CAACmO,KAAK,CAAC/G,CAAC,EAAE,CAACpH,GAAG,CAAC;AAE5B,KAAA,IAAI,IAAI,CAAC0Q,CAAC,CAAChQ,MAAM,KAAK,CAAC,EACrBV,GAAG,IAAI,IAAI,CAAC0Q,CAAC,CAACrD,KAAK,CAAC,CAAC,CAAC;;AAExB;AACA;AACA,KAAA,IAAIjG,CAAC,CAAC1G,MAAM,KAAK,CAAC,IAAI0G,CAAC,CAACiG,KAAK,CAAC,CAAC,CAAC,GAAGrN,GAAG,EAAE;AACtCoH,OAAAA,CAAC,CAACiG,KAAK,CAAC,CAAC,CAAC,GAAGrN,GAAG,GAAGoH,CAAC,CAACiG,KAAK,CAAC,CAAC,CAAC;OAC7BjG,CAAC,CAAC8G,KAAK,CAAC,IAAI,CAACwC,CAAC,EAAEtJ,CAAC,CAAC;AACpB,MAAC,MAAM;AACLA,OAAAA,CAAC,CAACiH,MAAM,CAACrO,GAAG,CAAC;AACf;AAEA,KAAA,OAAOoH,CAAC;AACV;AAEA0H,GAAAA,IAAIA,CAAC1H,CAAC,EAAEpH,GAAG,EAAE;KACX,OAAO,IAAI,CAAC4O,KAAK,CAACxH,CAAC,CAACmH,KAAK,EAAE,EAAEvO,GAAG,CAAC;AACnC;AAEAoP,GAAAA,IAAIA,CAAChI,CAAC,EAAEC,CAAC,EAAE;AACT,KAAA,IAAI,CAAC8hB,QAAQ,CAAC/hB,CAAC,EAAEC,CAAC,CAAC;KACnB,OAAO,IAAI,CAAC2K,IAAI,CAAC5K,CAAC,CAACgI,IAAI,CAAC/H,CAAC,CAAC,CAAC;AAC7B;AAEAgI,GAAAA,GAAGA,CAACjI,CAAC,EAAEC,CAAC,EAAE;AACR,KAAA,IAAI,CAAC8hB,QAAQ,CAAC/hB,CAAC,EAAEC,CAAC,CAAC;KACnB,OAAO,IAAI,CAAC2K,IAAI,CAAC5K,CAAC,CAACiI,GAAG,CAAChI,CAAC,CAAC,CAAC;AAC5B;AAEAkI,GAAAA,KAAKA,CAACnI,CAAC,EAAEpH,GAAG,EAAE;AACZ,KAAA,IAAI,CAACkpB,QAAQ,CAAC9hB,CAAC,CAAC;AAEhB,KAAA,IAAIA,CAAC,CAAC4I,MAAM,EAAE,EACZ,OAAO5I,CAAC;KAEV,IAAIpH,GAAG,KAAK,CAAC,EAAE;AACboH,OAAAA,CAAC,CAACiG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;OACdjG,CAAC,CAAC1G,MAAM,GAAG,CAAC;AACZ,OAAA,OAAO0G,CAAC;AACV;AAEA,KAAA,MAAMoI,GAAG,GAAGxP,GAAG,GAAG,CAAC;AAEnB,KAAA,IAAIwP,GAAG,EACLxP,GAAG,GAAG,CAACA,GAAG;AAEZ,KAAA,IAAI,IAAI,CAAC0Q,CAAC,CAAChQ,MAAM,KAAK,CAAC,EACrBV,GAAG,IAAI,IAAI,CAAC0Q,CAAC,CAACrD,KAAK,CAAC,CAAC,CAAC;AAExBjG,KAAAA,CAAC,CAACmI,KAAK,CAACvP,GAAG,CAAC;KAEZ,IAAIA,GAAG,IAAI,EAAE,EAAE;AACb;OACA,OAAOoH,CAAC,CAAC6G,IAAI,CAAC,IAAI,CAACyC,CAAC,CAAC,IAAI,CAAC,EACxBtJ,CAAC,CAAC8G,KAAK,CAAC9G,CAAC,EAAE,IAAI,CAACsJ,CAAC,CAAC;AACtB,MAAC,MAAM;AACL,OAAA,IAAI,CAACsB,IAAI,CAAC5K,CAAC,CAAC;AACd;KAEA,IAAIoI,GAAG,EACL,IAAI,CAACyB,IAAI,CAAC7J,CAAC,CAAC;AAEd,KAAA,OAAOA,CAAC;AACV;AAEAqI,GAAAA,IAAIA,CAACrI,CAAC,EAAEpH,GAAG,EAAE;KACX,OAAO,IAAI,CAACuP,KAAK,CAACnI,CAAC,CAACmH,KAAK,EAAE,EAAEvO,GAAG,CAAC;AACnC;AAEA6R,GAAAA,IAAIA,CAACzK,CAAC,EAAEC,CAAC,EAAE;AACT,KAAA,OAAO,IAAI,CAACvF,GAAG,CAACsF,CAAC,EAAEC,CAAC,CAAC,CAACiI,KAAK,CAAClI,CAAC,CAAC;AAChC;AAEAtF,GAAAA,GAAGA,CAACsF,CAAC,EAAEC,CAAC,EAAE;AACR,KAAA,OAAO,IAAI,CAACgI,GAAG,CAACjI,CAAC,EAAE,IAAI,CAACyS,MAAM,CAACxS,CAAC,CAAC,CAAC;AACpC;AAEAyK,GAAAA,KAAKA,CAAC1K,CAAC,EAAEpH,GAAG,EAAE;AACZ,KAAA,OAAO,IAAI,CAAC+R,IAAI,CAAC3K,CAAC,EAAEpH,GAAG,CAAC,CAACsP,KAAK,CAAClI,CAAC,CAAC;AACnC;AAEA2K,GAAAA,IAAIA,CAAC3K,CAAC,EAAEpH,GAAG,EAAE;AACX,KAAA,OAAO,IAAI,CAAC8B,GAAG,CAACsF,CAAC,EAAE,IAAI,CAACoV,SAAS,CAAC,IAAItP,EAAE,CAAClN,GAAG,CAAC,CAAC,CAAC;AACjD;AAEAuS,GAAAA,IAAIA,CAACnL,CAAC,EAAEpH,GAAG,EAAE;AACX,KAAA,OAAO,IAAI,CAACwS,GAAG,CAACpL,CAAC,EAAEpH,GAAG,CAAC,CAACsP,KAAK,CAAClI,CAAC,CAAC;AAClC;AAEAoL,GAAAA,GAAGA,CAACpL,CAAC,EAAEpH,GAAG,EAAE;AACV,KAAA,IAAI,CAACkpB,QAAQ,CAAC9hB,CAAC,CAAC;AAEhB,KAAA,IAAIpH,GAAG,CAACuY,KAAK,EAAE,EACbnR,CAAC,GAAG,IAAI,CAACyS,MAAM,CAACzS,CAAC,CAAC;;AAEpB;KACA,IAAIpH,GAAG,CAACU,MAAM,KAAK,CAAC,EAClB,OAAO,IAAI,CAACgS,IAAI,CAACtL,CAAC,EAAEpH,GAAG,CAACqN,KAAK,CAAC,CAAC,CAAC,CAAC;;AAEnC;AACA,KAAA,IAAIL,UAAU,IAAI,CAAC,IAAI,CAACiW,KAAK,EAC3B,OAAO,IAAI,CAACsG,MAAM,CAACniB,CAAC,EAAEpH,GAAG,CAAC;;AAE5B;KACA,OAAO,IAAI,CAACwpB,MAAM,CAACpiB,CAAC,EAAEpH,GAAG,CAAC;AAC5B;AAEAwpB,GAAAA,MAAMA,CAACpiB,CAAC,EAAEpH,GAAG,EAAE;AACb;KACA,MAAMgkB,GAAG,GAAG,IAAI9W,EAAE,CAAC,CAAC,CAAC,CAAC0L,KAAK,CAAC,IAAI,CAAC;AACjC,KAAA,MAAM6Q,GAAG,GAAG,IAAIxkB,KAAK,CAAC8H,QAAQ,CAAC;KAC/B,MAAM2c,EAAE,GAAG,IAAI,CAAC/W,GAAG,CAACvL,CAAC,CAAC;AAEtBqiB,KAAAA,GAAG,CAAC,CAAC,CAAC,GAAGriB,CAAC;AAEV,KAAA,KAAK,IAAItB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiH,QAAQ,EAAEjH,CAAC,EAAE,EAC/B2jB,GAAG,CAAC3jB,CAAC,CAAC,GAAG,IAAI,CAACuJ,GAAG,CAACoa,GAAG,CAAC3jB,CAAC,GAAG,CAAC,CAAC,EAAE4jB,EAAE,CAAC;AAEnC,KAAA,IAAI5jB,CAAC,GAAG9F,GAAG,CAACkT,SAAS,EAAE;KACvB,IAAIhK,CAAC,GAAG8a,GAAG;KAEX,OAAOle,CAAC,IAAIgH,SAAS,EAAE;OACrB,IAAIgH,KAAK,GAAGhH,SAAS;OACrB,IAAI/D,IAAI,GAAG/I,GAAG,CAAC+I,IAAI,CAACjD,CAAC,GAAGgO,KAAK,EAAEA,KAAK,CAAC;OAErC,IAAI/K,IAAI,GAAGgE,QAAQ,EAAE;AACnB7D,SAAAA,CAAC,GAAG,IAAI,CAACyJ,GAAG,CAACzJ,CAAC,CAAC;SACfpD,CAAC,IAAI,CAAC;SACN;AACF;AAEA,OAAA,OAAO,CAACiD,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE;SACvB+K,KAAK,IAAI,CAAC;SACV/K,IAAI,KAAK,CAAC;AACZ;OAEA,IAAIG,CAAC,KAAK8a,GAAG,EAAE;SACb9a,CAAC,GAAGugB,GAAG,CAAC1gB,IAAI,IAAI,CAAC,CAAC,CAACwF,KAAK,EAAE;AAC5B,QAAC,MAAM;SACLrF,CAAC,GAAG,IAAI,CAACsc,IAAI,CAACtc,CAAC,EAAE4K,KAAK,CAAC;AACvB5K,SAAAA,CAAC,GAAG,IAAI,CAACmG,GAAG,CAACnG,CAAC,EAAEugB,GAAG,CAAC1gB,IAAI,IAAI,CAAC,CAAC,CAAC;AACjC;OAEAjD,CAAC,IAAIgO,KAAK;AACZ;KAEA,IAAIhO,CAAC,GAAG,CAAC,EAAE;OACT,MAAMiD,IAAI,GAAG/I,GAAG,CAAC+I,IAAI,CAAC,CAAC,EAAEjD,CAAC,CAAC;OAE3B,OAAOA,CAAC,EAAE,EAAE;AACVoD,SAAAA,CAAC,GAAG,IAAI,CAACyJ,GAAG,CAACzJ,CAAC,CAAC;AAEf,SAAA,IAAKH,IAAI,IAAIjD,CAAC,GAAI,CAAC,EACjBoD,CAAC,GAAG,IAAI,CAACmG,GAAG,CAACnG,CAAC,EAAE9B,CAAC,CAAC;AACtB;AACF;AAEA,KAAA,OAAO8B,CAAC;AACV;AAEAqgB,GAAAA,MAAMA,CAACniB,CAAC,EAAEpH,GAAG,EAAE;AACb,KAAA,IAAI,IAAI,CAACipB,EAAE,KAAK,IAAI,EAClB,IAAI,CAACA,EAAE,GAAG,IAAI,CAACvY,CAAC,CAAC6P,QAAQ,EAAE;KAE7B,MAAMxb,CAAC,GAAG,IAAI,CAACukB,OAAO,CAACliB,CAAC,CAACmZ,QAAQ,EAAE,CAAC;KACpC,MAAMvb,CAAC,GAAGukB,MAAM,CAACxkB,CAAC,EAAE/E,GAAG,EAAE,IAAI,CAACipB,EAAE,CAAC;KACjC,MAAMtgB,CAAC,GAAG,IAAI,CAAC0gB,KAAK,CAACrkB,CAAC,CAAC;KAEvB,OAAOkI,EAAE,CAACuU,UAAU,CAAC9Y,CAAC,CAAC,CAACgU,SAAS,CAAC,IAAI,CAAC;AACzC;AAEA6I,GAAAA,IAAIA,CAACpe,CAAC,EAAEgN,CAAC,EAAE;KACT,OAAOA,CAAC,EAAE,EACRhN,CAAC,GAAG,IAAI,CAACuL,GAAG,CAACvL,CAAC,CAAC;AAEjB,KAAA,OAAOA,CAAC;AACV;AAEAue,GAAAA,OAAOA,CAACve,CAAC,EAAEgN,CAAC,EAAE/M,CAAC,EAAE;AACf,KAAA,OAAO,IAAI,CAACgI,GAAG,CAAC,IAAI,CAACmW,IAAI,CAACpe,CAAC,EAAEgN,CAAC,CAAC,EAAE/M,CAAC,CAAC;AACrC;AAEAoL,GAAAA,KAAKA,CAACrL,CAAC,EAAEpH,GAAG,EAAE;AACZ,KAAA,OAAO,IAAI,CAAC0S,IAAI,CAACtL,CAAC,EAAEpH,GAAG,CAAC,CAACsP,KAAK,CAAClI,CAAC,CAAC;AACnC;AAEAsL,GAAAA,IAAIA,CAACtL,CAAC,EAAEpH,GAAG,EAAE;AACX,KAAA,IAAI,CAACkpB,QAAQ,CAAC9hB,CAAC,CAAC;KAEhB,IAAIpH,GAAG,GAAG,CAAC,EAAE;AACXoH,OAAAA,CAAC,GAAG,IAAI,CAACyS,MAAM,CAACzS,CAAC,CAAC;OAClBpH,GAAG,GAAG,CAACA,GAAG;AACZ;AAEA,KAAA,IAAIA,GAAG,KAAK,CAAC,EACX,OAAO,IAAIkN,EAAE,CAAC,CAAC,CAAC,CAAC0L,KAAK,CAAC,IAAI,CAAC;KAE9B,IAAI5Y,GAAG,KAAK,CAAC,EACX,OAAOoH,CAAC,CAACmH,KAAK,EAAE;AAElB,KAAA,MAAMxF,IAAI,GAAGyH,SAAS,CAACxQ,GAAG,CAAC;KAE3B,IAAIkJ,CAAC,GAAG9B,CAAC;AAET,KAAA,KAAK,IAAItB,CAAC,GAAGiD,IAAI,GAAG,CAAC,EAAEjD,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;AAClCoD,OAAAA,CAAC,GAAG,IAAI,CAACyJ,GAAG,CAACzJ,CAAC,CAAC;AAEf,OAAA,IAAKlJ,GAAG,IAAI8F,CAAC,GAAI,CAAC,EAChBoD,CAAC,GAAG,IAAI,CAACmG,GAAG,CAACnG,CAAC,EAAE9B,CAAC,CAAC;AACtB;AAEA,KAAA,OAAO8B,CAAC;AACV;GAEA0J,IAAIA,CAACxL,CAAC,EAAE;KACN,OAAO,IAAI,CAACgI,IAAI,CAAChI,CAAC,EAAEA,CAAC,CAAC;AACxB;GAEAuL,GAAGA,CAACvL,CAAC,EAAE;KACL,OAAO,IAAI,CAACiI,GAAG,CAACjI,CAAC,EAAEA,CAAC,CAAC;AACvB;GAEAoM,KAAKA,CAACzO,CAAC,EAAE;KACP,OAAO,IAAI,CAAC0O,IAAI,CAAC1O,CAAC,CAAC,CAACuK,KAAK,CAACvK,CAAC,CAAC;AAC9B;GAEA0O,IAAIA,CAAC1O,CAAC,EAAE;AACN,KAAA,IAAI,CAACmkB,QAAQ,CAACnkB,CAAC,CAAC;;AAEhB;AACA,KAAA,IAAI,IAAI,CAACke,KAAK,EACZ,OAAO,IAAI,CAACA,KAAK,CAACxP,IAAI,CAAC1O,CAAC,CAAC;;AAE3B;AACA,KAAA,IAAI,IAAI,CAAC2L,CAAC,CAAC6G,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EACvB,OAAO,IAAI,CAACoS,SAAS,CAAC5kB,CAAC,CAAC;;AAE1B;KACA,IAAI,IAAI,CAAC2L,CAAC,CAAC6G,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AACzB,OAAA,IAAI,IAAI,CAACyN,GAAG,IAAI,IAAI,EAClB,OAAO,IAAI,CAAC4E,YAAY,CAAC7kB,CAAC,CAAC;AAC7B,OAAA,OAAO,IAAI,CAAC8kB,SAAS,CAAC9kB,CAAC,CAAC;AAC1B;;AAEA;AACA,KAAA,OAAO,IAAI,CAAC+kB,KAAK,CAAC/kB,CAAC,CAAC;AACtB;GAEA4kB,SAASA,CAAC5kB,CAAC,EAAE;AACX,KAAA,MAAMyC,CAAC,GAAG,IAAI,CAACkJ,CAAC,CAAClC,IAAI,CAAC,CAAC,CAAC,CAACoB,MAAM,CAAC,CAAC,CAAC,CAAC;KACnC,MAAMvI,CAAC,GAAG,IAAI,CAACmL,GAAG,CAACzN,CAAC,EAAEyC,CAAC,CAAC;AAExB,KAAA,IAAI,CAAC,IAAI,CAACmL,GAAG,CAACtL,CAAC,CAAC,CAACwQ,EAAE,CAAC9S,CAAC,CAAC,EACpB,MAAM,IAAI2f,eAAe,CAACrd,CAAC,CAAC;AAE9B,KAAA,OAAOA,CAAC;AACV;GAEAwiB,SAASA,CAAC9kB,CAAC,EAAE;AACX;KACA,MAAMif,GAAG,GAAG,IAAI9W,EAAE,CAAC,CAAC,CAAC,CAAC0L,KAAK,CAAC,IAAI,CAAC;KACjC,MAAMpR,CAAC,GAAG,IAAI,CAACkJ,CAAC,CAACqG,KAAK,CAAC,CAAC,CAAC,CAAC;KAC1B,MAAM2O,EAAE,GAAG,IAAI,CAACpX,GAAG,CAACvJ,CAAC,EAAEA,CAAC,CAAC;KACzB,MAAMglB,KAAK,GAAG,IAAI,CAACvX,GAAG,CAACkT,EAAE,EAAEle,CAAC,CAAC;AAC7B,KAAA,MAAMwiB,IAAI,GAAG,IAAI,CAAC3a,GAAG,CAACqW,EAAE,EAAE,IAAI,CAAC/S,GAAG,CAACoX,KAAK,CAAC,CAAC;KAC1C,MAAM1iB,CAAC,GAAG,IAAI,CAACgI,GAAG,CAAC,IAAI,CAACA,GAAG,CAAC0a,KAAK,EAAEhlB,CAAC,CAAC,EAAE,IAAI,CAAC4J,IAAI,CAACqb,IAAI,EAAEhG,GAAG,CAAC,CAAC;AAE5D,KAAA,IAAI,CAAC,IAAI,CAACrR,GAAG,CAACtL,CAAC,CAAC,CAACwQ,EAAE,CAAC9S,CAAC,CAAC,EACpB,MAAM,IAAI2f,eAAe,CAACrd,CAAC,CAAC;AAE9B,KAAA,OAAOA,CAAC;AACV;GAEAuiB,YAAYA,CAAC7kB,CAAC,EAAE;AACd,KAAA,MAAMyC,CAAC,GAAG,IAAI,CAACkJ,CAAC,CAAClC,IAAI,CAAC,CAAC,CAAC,CAACoB,MAAM,CAAC,CAAC,CAAC,CAAC;KACnC,MAAMvI,CAAC,GAAG,IAAI,CAACmL,GAAG,CAACzN,CAAC,EAAEyC,CAAC,CAAC;AAExB,KAAA,IAAI,IAAI,CAACmL,GAAG,CAACtL,CAAC,CAAC,CAACwQ,EAAE,CAAC9S,CAAC,CAAC,EACnB,OAAOsC,CAAC;KAEV,MAAMC,CAAC,GAAG,IAAI,CAAC+H,GAAG,CAAChI,CAAC,EAAE,IAAI,CAAC2d,GAAG,CAAC;AAE/B,KAAA,IAAI,IAAI,CAACrS,GAAG,CAACrL,CAAC,CAAC,CAACuQ,EAAE,CAAC9S,CAAC,CAAC,EACnB,OAAOuC,CAAC;AAEV,KAAA,MAAM,IAAIod,eAAe,CAACrd,CAAC,CAAC;AAC9B;GAEAyiB,KAAKA,CAAC/kB,CAAC,EAAE;KACP,IAAI,IAAI,CAAC2L,CAAC,CAACkH,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAClH,CAAC,CAAC4B,KAAK,EAAE,EACzC,MAAM,IAAI1Q,KAAK,CAAC,gBAAgB,CAAC;AAEnC,KAAA,QAAQ,IAAI,CAACkX,MAAM,CAAC/T,CAAC,CAAC;OACpB,KAAK,EAAE;AACL,SAAA,MAAM,IAAI2f,eAAe,CAAC3f,CAAC,CAAC;AAC9B,OAAA,KAAK,CAAC;AACJ,SAAA,OAAOA,CAAC,CAACwJ,KAAK,EAAE;AAGpB;KAEA,MAAMyV,GAAG,GAAG,IAAI9W,EAAE,CAAC,CAAC,CAAC,CAAC0L,KAAK,CAAC,IAAI,CAAC;KACjC,MAAMvP,CAAC,GAAG,IAAI,CAACqH,CAAC,CAAC5B,IAAI,CAAC,CAAC,CAAC;AACxB,KAAA,MAAMtH,CAAC,GAAG6B,CAAC,CAAC2P,QAAQ,EAAE;KACtB,MAAM5E,CAAC,GAAG,IAAIlH,EAAE,CAAC,CAAC,CAAC,CAAC0L,KAAK,CAAC,IAAI,CAAC;AAE/B,KAAA,OAAO,IAAI,CAACE,MAAM,CAAC1E,CAAC,CAAC,KAAK,EAAE,EAC1B,IAAI,CAACtG,IAAI,CAACsG,CAAC,EAAE4P,GAAG,CAAC;KAEnB,IAAItc,CAAC,GAAG,IAAI,CAAC8K,GAAG,CAAC4B,CAAC,EAAE/K,CAAC,CAAC;KACtB,IAAIhC,CAAC,GAAG,IAAI,CAACmL,GAAG,CAACzN,CAAC,EAAEsE,CAAC,CAAC;KACtB,IAAIrE,CAAC,GAAG,IAAI,CAACwN,GAAG,CAACzN,CAAC,EAAEsE,CAAC,CAAC8E,KAAK,CAAC,CAAC,CAAC,CAACyB,MAAM,CAAC,CAAC,CAAC,CAAC;KACzC,IAAIlE,CAAC,GAAGlE,CAAC;KAET,SAAS;OACP,IAAIyL,CAAC,GAAG5L,CAAC;OACT,IAAIqJ,CAAC,GAAG,CAAC;OAET,OAAO,CAACuC,CAAC,CAAC4E,EAAE,CAACmM,GAAG,CAAC,IAAItT,CAAC,GAAGhF,CAAC,EAAE;AAC1BuH,SAAAA,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,CAAC;SACfvC,CAAC,IAAI,CAAC;AACR;OAEA,IAAIA,CAAC,KAAK,CAAC,EACT;AAEF9Q,OAAAA,MAAM,CAAC8Q,CAAC,GAAGhF,CAAC,CAAC;AAEbuH,OAAAA,CAAC,GAAG,IAAI,CAACuS,IAAI,CAAC9d,CAAC,EAAEgE,CAAC,GAAGgF,CAAC,GAAG,CAAC,CAAC;AAC3BhJ,OAAAA,CAAC,GAAG,IAAI,CAACiL,GAAG,CAACM,CAAC,CAAC;OACfjO,CAAC,GAAG,IAAI,CAACqK,GAAG,CAACrK,CAAC,EAAEiO,CAAC,CAAC;OAClB5L,CAAC,GAAG,IAAI,CAACgI,GAAG,CAAChI,CAAC,EAAEK,CAAC,CAAC;OAClBgE,CAAC,GAAGgF,CAAC;AACP;AAEA,KAAA,OAAO1L,CAAC;AACV;AAEAkZ,GAAAA,QAAQA,CAAClL,CAAC,EAAEG,CAAC,EAAE;AACb,KAAA,OAAO,IAAI,CAACiL,OAAO,CAACpL,CAAC,EAAEG,CAAC,CAAC,CAAC7D,KAAK,CAAC0D,CAAC,CAAC;AACpC;AAEAoL,GAAAA,OAAOA,CAACpL,CAAC,EAAEG,CAAC,EAAE;AACZ,KAAA,IAAI,CAACgW,QAAQ,CAACnW,CAAC,EAAEG,CAAC,CAAC;;AAEnB;AACA,KAAA,IAAIH,CAAC,CAAChD,MAAM,EAAE,IAAImD,CAAC,CAACnD,MAAM,EAAE,EAC1B,MAAM,IAAI0U,eAAe,CAACvR,CAAC,CAAC;;AAE9B;AACA,KAAA,IAAI,IAAI,CAAC8P,KAAK,EACZ,OAAO,IAAI,CAACA,KAAK,CAAC7E,OAAO,CAACpL,CAAC,EAAEG,CAAC,CAAC;;AAEjC;KACA,IAAI,IAAI,CAACzC,CAAC,CAAC6G,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EACvB,OAAO,IAAI,CAAC0S,YAAY,CAACjX,CAAC,EAAEG,CAAC,CAAC;;AAEhC;KACA,IAAI,IAAI,CAAC6R,GAAG,IAAI,IAAI,IAAI,IAAI,CAACtU,CAAC,CAAC6G,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAC3C,OAAO,IAAI,CAAC2S,YAAY,CAAClX,CAAC,EAAEG,CAAC,CAAC;;AAEhC;KACA,IAAIA,CAAC,CAACnD,MAAM,EAAE,EACZ,MAAM,IAAI0U,eAAe,CAACvR,CAAC,CAAC;AAE9B,KAAA,OAAO,IAAI,CAACM,IAAI,CAAC,IAAI,CAAC3R,GAAG,CAACkR,CAAC,EAAEG,CAAC,CAAC,CAAC;AAClC;AAEA8W,GAAAA,YAAYA,CAACjX,CAAC,EAAEG,CAAC,EAAE;AACjB;AACA,KAAA,MAAM3L,CAAC,GAAG,IAAI,CAACkJ,CAAC,CAAC5B,IAAI,CAAC,CAAC,CAAC,CAACc,MAAM,CAAC,CAAC,CAAC;KAClC,MAAM+U,EAAE,GAAG,IAAI,CAAChS,GAAG,CAACK,CAAC,CAAC;KACtB,MAAM4R,EAAE,GAAG,IAAI,CAACvV,GAAG,CAACsV,EAAE,EAAE3R,CAAC,CAAC;KAC1B,MAAM6R,EAAE,GAAG,IAAI,CAACxV,GAAG,CAACuV,EAAE,EAAED,EAAE,CAAC;AAC3B,KAAA,MAAMG,EAAE,GAAG,IAAI,CAACzV,GAAG,CAAC,IAAI,CAACsD,GAAG,CAACQ,CAAC,CAAC,EAAEA,CAAC,CAAC;AACnC,KAAA,MAAMzB,CAAC,GAAG,IAAI,CAACc,GAAG,CAAC,IAAI,CAACnD,GAAG,CAACwV,EAAE,EAAEC,EAAE,CAAC,EAAEtd,CAAC,CAAC;AACvC,KAAA,MAAMzC,CAAC,GAAG,IAAI,CAACsK,GAAG,CAAC,IAAI,CAACA,GAAG,CAACuV,EAAE,EAAEzR,CAAC,CAAC,EAAEzB,CAAC,CAAC;AACtC,KAAA,MAAMpK,CAAC,GAAG,IAAI,CAAC+H,GAAG,CAAC8D,CAAC,EAAE,IAAI,CAACR,GAAG,CAAC5N,CAAC,CAAC,CAAC;KAElC,IAAIuC,CAAC,CAACuQ,EAAE,CAAC7E,CAAC,CAAC,EACT,OAAOjO,CAAC;AAEV,KAAA,MAAM,IAAI2f,eAAe,CAAC3f,CAAC,CAAC;AAC9B;AAEAmlB,GAAAA,YAAYA,CAAClX,CAAC,EAAEG,CAAC,EAAE;AACjB;AACA,KAAA,MAAM3L,CAAC,GAAG,IAAI,CAACkJ,CAAC,CAAC5B,IAAI,CAAC,CAAC,CAAC,CAACc,MAAM,CAAC,CAAC,CAAC;AAClC,KAAA,MAAMkV,EAAE,GAAG,IAAI,CAACzV,GAAG,CAAC,IAAI,CAACsD,GAAG,CAACQ,CAAC,CAAC,EAAEA,CAAC,CAAC;AACnC,KAAA,MAAMgS,EAAE,GAAG,IAAI,CAAC9V,GAAG,CAAC,IAAI,CAACsD,GAAG,CAACmS,EAAE,CAAC,EAAE3R,CAAC,CAAC;AACpC,KAAA,MAAMzB,CAAC,GAAG,IAAI,CAACc,GAAG,CAAC,IAAI,CAACnD,GAAG,CAAC2D,CAAC,EAAEmS,EAAE,CAAC,EAAE3d,CAAC,CAAC;AACtC,KAAA,MAAMzC,CAAC,GAAG,IAAI,CAACsK,GAAG,CAAC,IAAI,CAACA,GAAG,CAAC2D,CAAC,EAAE8R,EAAE,CAAC,EAAEpT,CAAC,CAAC;AACtC,KAAA,MAAMpK,CAAC,GAAG,IAAI,CAAC+H,GAAG,CAAC8D,CAAC,EAAE,IAAI,CAACR,GAAG,CAAC5N,CAAC,CAAC,CAAC;KAElC,IAAIuC,CAAC,CAACuQ,EAAE,CAAC7E,CAAC,CAAC,EACT,OAAOjO,CAAC;KAEV,MAAMqgB,EAAE,GAAG,IAAI,CAACnU,IAAI,CAAC3J,CAAC,CAAC;AAEvB,KAAA,IAAI8d,EAAE,CAACvN,EAAE,CAAC7E,CAAC,CAAC,EACV,OAAO,IAAI,CAAC3D,GAAG,CAACtK,CAAC,EAAE,IAAI,CAACigB,GAAG,CAAC;AAE9B,KAAA,IAAII,EAAE,CAACvN,EAAE,CAAC,IAAI,CAACxI,GAAG,CAAC2D,CAAC,EAAE,IAAI,CAACgS,GAAG,CAAC,CAAC,EAC9B,MAAM,IAAIN,eAAe,CAAC,IAAI,CAACrV,GAAG,CAACtK,CAAC,EAAE,IAAI,CAACigB,GAAG,CAAC,CAAC;AAElD,KAAA,MAAM,IAAIN,eAAe,CAAC3f,CAAC,CAAC;AAC9B;GAEA2O,QAAQA,CAACtM,CAAC,EAAE;AACV,KAAA,IAAI,IAAI,CAACsJ,CAAC,CAAC4B,KAAK,EAAE,EAChB,OAAO,IAAI,CAACwG,MAAM,CAAC1R,CAAC,CAAC,IAAI,CAAC;KAE5B,OAAO,IAAI,CAAC8R,SAAS,CAAC9R,CAAC,CAAC,IAAI,CAAC;AAC/B;AAEAyO,GAAAA,IAAIA,CAACzO,CAAC,EAAEpH,GAAG,EAAE;AACX,KAAA,IAAI,CAACkpB,QAAQ,CAAC9hB,CAAC,CAAC;KAChB,OAAO,IAAI,CAAC4K,IAAI,CAAC5K,CAAC,CAAC8O,KAAK,CAAClW,GAAG,CAAC,CAAC;AAChC;AAEAgW,GAAAA,GAAGA,CAAC5O,CAAC,EAAEpH,GAAG,EAAE;KACV,OAAO,IAAI,CAAC6V,IAAI,CAACzO,CAAC,CAACmH,KAAK,EAAE,EAAEvO,GAAG,CAAC;AAClC;AAEA8V,GAAAA,KAAKA,CAAC1O,CAAC,EAAEpH,GAAG,EAAE;AACZ,KAAA,IAAI,CAACkpB,QAAQ,CAAC9hB,CAAC,CAAC;AAEhBA,KAAAA,CAAC,CAACqJ,MAAM,CAACzQ,GAAG,CAAC;KAEb,IAAIA,GAAG,IAAI,CAAC,EAAE;AACZ;OACA,OAAOoH,CAAC,CAAC6G,IAAI,CAAC,IAAI,CAACyC,CAAC,CAAC,IAAI,CAAC,EACxBtJ,CAAC,CAAC8G,KAAK,CAAC9G,CAAC,EAAE,IAAI,CAACsJ,CAAC,CAAC;AACtB,MAAC,MAAM;AACL,OAAA,IAAI,CAACsB,IAAI,CAAC5K,CAAC,CAAC;AACd;AAEA,KAAA,OAAOA,CAAC;AACV;AAEA6O,GAAAA,IAAIA,CAAC7O,CAAC,EAAEpH,GAAG,EAAE;KACX,OAAO,IAAI,CAAC8V,KAAK,CAAC1O,CAAC,CAACmH,KAAK,EAAE,EAAEvO,GAAG,CAAC;AACnC;GAEAiR,IAAIA,CAAC7J,CAAC,EAAE;AACN,KAAA,IAAI,CAAC8hB,QAAQ,CAAC9hB,CAAC,CAAC;AAEhB,KAAA,IAAI,CAACA,CAAC,CAAC4I,MAAM,EAAE,EACb5I,CAAC,CAAC8G,KAAK,CAAC,IAAI,CAACwC,CAAC,EAAEtJ,CAAC,CAAC;AAEpB,KAAA,OAAOA,CAAC;AACV;GAEAoI,GAAGA,CAACpI,CAAC,EAAE;KACL,OAAO,IAAI,CAAC6J,IAAI,CAAC7J,CAAC,CAACmH,KAAK,EAAE,CAAC;AAC7B;AAEAsJ,GAAAA,EAAEA,CAACzQ,CAAC,EAAEC,CAAC,EAAE;AACP,KAAA,IAAI,CAAC8hB,QAAQ,CAAC/hB,CAAC,EAAEC,CAAC,CAAC;KACnB,OAAOD,CAAC,CAAC6G,IAAI,CAAC5G,CAAC,CAAC,KAAK,CAAC;AACxB;AAEAyQ,GAAAA,GAAGA,CAAC1Q,CAAC,EAAEpH,GAAG,EAAE;AACV,KAAA,IAAI,CAACkpB,QAAQ,CAAC9hB,CAAC,CAAC;KAEhB,IAAI,IAAI,CAACsJ,CAAC,CAAChQ,MAAM,KAAK,CAAC,EAAE;OACvBV,GAAG,IAAI,IAAI,CAAC0Q,CAAC,CAACrD,KAAK,CAAC,CAAC,CAAC;AAEtB,OAAA,IAAIrN,GAAG,GAAG,CAAC,EACTA,GAAG,IAAI,IAAI,CAAC0Q,CAAC,CAACrD,KAAK,CAAC,CAAC,CAAC;OAExB,OAAOjG,CAAC,CAAC2L,KAAK,CAAC/S,GAAG,CAAC,KAAK,CAAC;AAC3B;KAEA,IAAIA,GAAG,GAAG,CAAC,EAAE;OACX,IAAI,CAAC0Q,CAAC,CAACrC,MAAM,CAAC,CAACrO,GAAG,CAAC;OAEnB,MAAMiL,GAAG,GAAG7D,CAAC,CAAC6G,IAAI,CAAC,IAAI,CAACyC,CAAC,CAAC;OAE1B,IAAI,CAACA,CAAC,CAAC/C,MAAM,CAAC,CAAC3N,GAAG,CAAC;OAEnB,OAAOiL,GAAG,KAAK,CAAC;AAClB;KAEA,OAAO7D,CAAC,CAAC2L,KAAK,CAAC/S,GAAG,CAAC,KAAK,CAAC;AAC3B;GAEA+e,MAAMA,CAAC3X,CAAC,EAAE;AACR,KAAA,OAAO,CAAC,IAAI,CAAC6X,KAAK,CAAC7X,CAAC,CAAC;AACvB;GAEA6X,KAAKA,CAAC7X,CAAC,EAAE;AACP,KAAA,IAAI,CAAC8hB,QAAQ,CAAC9hB,CAAC,CAAC;AAChB,KAAA,OAAOA,CAAC,CAAC6G,IAAI,CAAC,IAAI,CAACyC,CAAC,CAACqG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACrC;GAEAzE,KAAKA,CAAClL,CAAC,EAAE;AACP,KAAA,IAAI,CAAC8hB,QAAQ,CAAC9hB,CAAC,CAAC;AAChB,KAAA,OAAOA,CAAC,CAACkL,KAAK,EAAE;AAClB;GAEAmG,MAAMA,CAACrR,CAAC,EAAE;AACR,KAAA,IAAI,CAAC8hB,QAAQ,CAAC9hB,CAAC,CAAC;AAChB,KAAA,OAAOA,CAAC,CAACqR,MAAM,EAAE;AACnB;GAEAC,QAAQA,CAAC1Y,GAAG,EAAE;AACZ,KAAA,IAAI,CAACkpB,QAAQ,CAAClpB,GAAG,CAAC;AAElB,KAAA,IAAI,IAAI,CAAC0Q,CAAC,CAAC+H,MAAM,EAAE,EACjB,MAAM,IAAI7W,KAAK,CAAC,8BAA8B,CAAC;;AAEjD;AACA,KAAA,MAAM4F,CAAC,GAAG,IAAI,CAACkJ,CAAC,CAAC5B,IAAI,CAAC,CAAC,CAAC,CAACc,MAAM,CAAC,CAAC,CAAC,CAAC;KACnC,MAAMua,MAAM,GAAG,IAAI,CAAC3X,GAAG,CAACxS,GAAG,EAAEwH,CAAC,CAAC;AAE/B,KAAA,IAAI2iB,MAAM,CAACna,MAAM,EAAE,EACjB,OAAO,CAAC;KAEV,MAAMgU,GAAG,GAAG,IAAI9W,EAAE,CAAC,CAAC,CAAC,CAAC0L,KAAK,CAAC,IAAI,CAAC;KAEjC,IAAIuR,MAAM,CAACtS,EAAE,CAACmM,GAAG,CAAC,EAChB,OAAO,CAAC;AAEV,KAAA,IAAImG,MAAM,CAACtS,EAAE,CAAC,IAAI,CAAC5G,IAAI,CAAC+S,GAAG,CAAC,CAAC,EAC3B,OAAO,EAAE;AAEX,KAAA,MAAM,IAAIpiB,KAAK,CAAC,gBAAgB,CAAC;AACnC;GAEAkX,MAAMA,CAAC1R,CAAC,EAAE;AACR,KAAA,IAAI,CAAC8hB,QAAQ,CAAC9hB,CAAC,CAAC;KAChB,OAAOA,CAAC,CAAC0R,MAAM,CAAC,IAAI,CAACpI,CAAC,CAAC;AACzB;GAEAwI,SAASA,CAAC9R,CAAC,EAAE;AACX,KAAA,IAAI,CAAC8hB,QAAQ,CAAC9hB,CAAC,CAAC;KAChB,OAAOA,CAAC,CAAC8R,SAAS,CAAC,IAAI,CAACxI,CAAC,CAAC;AAC5B;GAEAkJ,OAAOA,CAACxS,CAAC,EAAE;KACT,OAAO,IAAI,CAACyS,MAAM,CAACzS,CAAC,CAAC,CAACkI,KAAK,CAAClI,CAAC,CAAC;AAChC;GAEAyS,MAAMA,CAACzS,CAAC,EAAE;AACR,KAAA,IAAI,CAAC8hB,QAAQ,CAAC9hB,CAAC,CAAC;AAChB,KAAA,OAAOA,CAAC,CAACyS,MAAM,CAAC,IAAI,CAACnJ,CAAC,CAAC,CAACiM,SAAS,CAAC,IAAI,CAAC;AACzC;GAEA3C,OAAOA,CAAC5S,CAAC,EAAE;KACT,OAAO,IAAI,CAAC6S,MAAM,CAAC7S,CAAC,CAAC,CAACkI,KAAK,CAAClI,CAAC,CAAC;AAChC;GAEA6S,MAAMA,CAAC7S,CAAC,EAAE;AACR,KAAA,IAAI,CAAC8hB,QAAQ,CAAC9hB,CAAC,CAAC;KAEhB,IAAIA,CAAC,CAAC4I,MAAM,EAAE,IAAI,IAAI,CAACU,CAAC,CAACkH,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EACpC,MAAM,IAAI9E,UAAU,CAAC,iBAAiB,CAAC;;AAEzC;AACA,KAAA,IAAI,IAAI,CAACmQ,KAAK,EACZ,OAAO,IAAI,CAACA,KAAK,CAAChJ,MAAM,CAAC7S,CAAC,CAAC;;AAE7B;AACA,KAAA,OAAO,IAAI,CAACoL,GAAG,CAACpL,CAAC,EAAE,IAAI,CAACsJ,CAAC,CAAC5B,IAAI,CAAC,CAAC,CAAC,CAAC;AACpC;GAEAsb,SAASA,CAACC,KAAK,EAAE;AACf;KACAtc,OAAO,CAAC9I,KAAK,CAACC,OAAO,CAACmlB,KAAK,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;AAE/C,KAAA,KAAK,MAAMC,IAAI,IAAID,KAAK,EAAE;OACxBtc,OAAO,CAACb,EAAE,CAACc,IAAI,CAACsc,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC;AAExC,OAAA,IAAI,CAACpB,QAAQ,CAACoB,IAAI,CAAC;AACrB;KAEA,IAAI,IAAI,CAAC5Z,CAAC,CAACkH,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAClH,CAAC,CAAC+H,MAAM,EAAE,EACzC,MAAM,IAAI3F,UAAU,CAAC,iBAAiB,CAAC;AAEzC,KAAA,MAAMpM,GAAG,GAAG2jB,KAAK,CAAC3pB,MAAM;AACxB,KAAA,MAAM6pB,IAAI,GAAG,IAAItlB,KAAK,CAACyB,GAAG,CAAC;AAE3B,KAAA,IAAIA,GAAG,KAAK,CAAC,EACX,OAAO6jB,IAAI;KAEb,IAAI5Y,GAAG,GAAG,IAAIzE,EAAE,CAAC,CAAC,CAAC,CAAC0L,KAAK,CAAC,IAAI,CAAC;KAE/B,KAAK,IAAI9S,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,GAAG,EAAEZ,CAAC,EAAE,EAAE;OAC5B,IAAIukB,KAAK,CAACvkB,CAAC,CAAC,CAACkK,MAAM,EAAE,EAAE;SACrBua,IAAI,CAACzkB,CAAC,CAAC,GAAGukB,KAAK,CAACvkB,CAAC,CAAC,CAACyI,KAAK,EAAE;SAC1B;AACF;AAEAgc,OAAAA,IAAI,CAACzkB,CAAC,CAAC,GAAG6L,GAAG;OACbA,GAAG,GAAG,IAAI,CAACtC,GAAG,CAACsC,GAAG,EAAE0Y,KAAK,CAACvkB,CAAC,CAAC,CAAC;AAC/B;AAEA6L,KAAAA,GAAG,GAAG,IAAI,CAACkI,MAAM,CAAClI,GAAG,CAAC;AAEtB,KAAA,KAAK,IAAI7L,CAAC,GAAGY,GAAG,GAAG,CAAC,EAAEZ,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;OACjC,IAAIukB,KAAK,CAACvkB,CAAC,CAAC,CAACkK,MAAM,EAAE,EACnB;AAEFua,OAAAA,IAAI,CAACzkB,CAAC,CAAC,GAAG,IAAI,CAACuJ,GAAG,CAACsC,GAAG,EAAE4Y,IAAI,CAACzkB,CAAC,CAAC,CAAC;OAChC6L,GAAG,GAAG,IAAI,CAACtC,GAAG,CAACsC,GAAG,EAAE0Y,KAAK,CAACvkB,CAAC,CAAC,CAAC;AAC/B;AAEA,KAAA,OAAOykB,IAAI;AACb;GAEA,CAAClnB,MAAM,CAAI,GAAA;KACT,IAAI,IAAI,CAAC4f,KAAK,EACZ,OAAO,CAAS,MAAA,EAAA,IAAI,CAACA,KAAK,CAACD,IAAI,CAAG,CAAA,CAAA;KAEpC,OAAO,CAAA,MAAA,EAAS,IAAI,CAACtS,CAAC,CAACjQ,QAAQ,CAAC,EAAE,CAAC,CAAG,CAAA,CAAA;AACxC;AACF;;AAEA;AACA;AACA;;CAEA,MAAMoiB,OAAO,SAAStG,GAAG,CAAC;GACxBta,WAAWA,CAACyO,CAAC,EAAE;KACb,KAAK,CAACA,CAAC,CAAC;KAER,IAAI,CAACuS,KAAK,GAAG,IAAI;KACjB,IAAI,CAAC7O,CAAC,GAAG,IAAI,CAAC1D,CAAC,CAACwC,SAAS,EAAE;AAE3B,KAAA,IAAK,IAAI,CAACkB,CAAC,GAAG,EAAE,KAAM,CAAC,EACrB,IAAI,CAACA,CAAC,IAAI,EAAE,GAAI,IAAI,CAACA,CAAC,GAAG,EAAG;KAE9B,IAAI,CAAC1I,CAAC,GAAG,IAAI,CAAC0I,CAAC,GAAG,CAAC;KACnB,IAAI,CAAC/J,CAAC,GAAG,IAAI,CAACqB,CAAC,GAAG,EAAE;KACpB,IAAI,CAACrE,CAAC,GAAG6F,EAAE,CAACzB,KAAK,CAAC,CAAC,EAAE,IAAI,CAACC,CAAC,CAAC,CAAC5J,GAAG,CAAC,IAAI,CAAC4O,CAAC,CAAC;AAC1C;GAEA8L,SAASA,CAACxc,GAAG,EAAE;AACb,KAAA,IAAIA,GAAG,CAACU,MAAM,GAAG,IAAI,CAAC2J,CAAC,EACrB,OAAO,KAAK,CAACmS,SAAS,CAACxc,GAAG,CAAC;KAE7B,OAAO,IAAI,CAACgS,IAAI,CAAChS,GAAG,CAACuO,KAAK,EAAE,CAAC;AAC/B;GAEAic,MAAMA,CAACra,CAAC,EAAE;KACR,IAAIrK,CAAC,GAAG,CAAC;AACT,KAAA,IAAImE,CAAC,GAAG,IAAI,CAACI,CAAC;KAEd,OAAOJ,CAAC,GAAGkG,CAAC,CAACzP,MAAM,EACjByP,CAAC,CAAC9C,KAAK,CAACvH,CAAC,EAAE,CAAC,GAAGqK,CAAC,CAAC9C,KAAK,CAACpD,CAAC,EAAE,CAAC;AAE7B,KAAA,IAAInE,CAAC,KAAK,CAAC,EACTqK,CAAC,CAAC9C,KAAK,CAACvH,CAAC,EAAE,CAAC,GAAG,CAAC;KAElBqK,CAAC,CAACzP,MAAM,GAAGoF,CAAC;AACd;GAEAkM,IAAIA,CAAC5K,CAAC,EAAE;AACN,KAAA,MAAMoI,GAAG,GAAGpI,CAAC,CAACkG,QAAQ;KAEtB1N,MAAM,CAACwH,CAAC,CAAC1G,MAAM,IAAI,IAAI,CAAC2J,CAAC,CAAC;KAE1BjD,CAAC,CAACkG,QAAQ,GAAG,CAAC;KAEd,MAAM6C,CAAC,GAAG/I,CAAC,CAACiI,GAAG,CAAC,IAAI,CAAChI,CAAC,CAAC;;AAEvB;AACA,KAAA,IAAI,CAACmjB,MAAM,CAACra,CAAC,CAAC;AAEd/I,KAAAA,CAAC,CAAC8G,KAAK,CAAC9G,CAAC,EAAE+I,CAAC,CAACd,GAAG,CAAC,IAAI,CAACqB,CAAC,CAAC,CAAC;KAEzB,IAAItJ,CAAC,CAAC6G,IAAI,CAAC,IAAI,CAACyC,CAAC,CAAC,IAAI,CAAC,EACrBtJ,CAAC,CAAC8G,KAAK,CAAC9G,CAAC,EAAE,IAAI,CAACsJ,CAAC,CAAC;AAEpB,KAAA,IAAIlB,GAAG,IAAI,CAACpI,CAAC,CAAC4I,MAAM,EAAE,EACpB5I,CAAC,CAAC8G,KAAK,CAAC,IAAI,CAACwC,CAAC,EAAEtJ,CAAC,CAAC;KAEpBA,CAAC,CAACmG,GAAG,GAAG,IAAI;AAEZ,KAAA,OAAOnG,CAAC;AACV;AACF;;AAEA;AACA;AACA;;CAEA,MAAM0b,IAAI,SAASvG,GAAG,CAAC;GACrBta,WAAWA,CAACyO,CAAC,EAAE;KACb,KAAK,CAACA,CAAC,CAAC;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;KACA,IAAI,CAACuS,KAAK,GAAG,IAAI;KACjB,IAAI,CAAC7O,CAAC,GAAG,IAAI,CAAC1D,CAAC,CAAChQ,MAAM,GAAG,EAAE;AAC3B,KAAA,IAAI,CAACwI,CAAC,GAAGgE,EAAE,CAACzB,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC2I,CAAC,CAAC;KAC5B,IAAI,CAACmS,EAAE,GAAGrZ,EAAE,CAACzB,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC2I,CAAC,GAAG,CAAC,CAAC,CAACpC,IAAI,CAAC,IAAI,CAACtB,CAAC,CAAC;AAC9C,KAAA,IAAI,CAAC+Z,EAAE,GAAG,IAAI,CAACvhB,CAAC,CAAC2Q,MAAM,CAAC,IAAI,CAACnJ,CAAC,CAAC;KAC/B,IAAI,CAACga,EAAE,GAAG,IAAI,CAACxhB,CAAC,CAACmG,GAAG,CAAC,IAAI,CAACob,EAAE,CAAC,CAAC7b,KAAK,CAAC,CAAC,CAAC,CAAC9M,GAAG,CAAC,IAAI,CAAC4O,CAAC,CAAC;KAClD,IAAI,CAACia,GAAG,GAAG,IAAI;AACjB;GAEA,IAAIhS,IAAIA,GAAG;AACT,KAAA,OAAO,IAAI;AACb;GAEA6D,SAASA,CAACxc,GAAG,EAAE;AACb,KAAA,IAAIA,GAAG,CAACuY,KAAK,EAAE,IAAIvY,GAAG,CAACiO,IAAI,CAAC,IAAI,CAACyC,CAAC,CAAC,IAAI,CAAC,EACtC,OAAO,IAAI,CAACsB,IAAI,CAAChS,GAAG,CAACsW,KAAK,CAAC,IAAI,CAAClC,CAAC,CAAC,CAAC;;AAErC;KACA,OAAO,IAAI,CAAC/E,GAAG,CAACrP,GAAG,EAAE,IAAI,CAACumB,EAAE,CAAC;AAC/B;GAEA9J,WAAWA,CAACzc,GAAG,EAAE;AACf;AACA,KAAA,MAAMkJ,CAAC,GAAG,IAAI,CAACmG,GAAG,CAACrP,GAAG,EAAE,IAAIkN,EAAE,CAAC,CAAC,CAAC,CAAC;KAClChE,CAAC,CAACqE,GAAG,GAAG,IAAI;AACZ,KAAA,OAAOrE,CAAC;AACV;GAEAmgB,KAAKA,CAACjiB,CAAC,EAAE;AACP,KAAA,OAAO,CAACA,CAAC,IAAI6F,MAAM,CAAC,IAAI,CAACmH,CAAC,CAAC,IAAI,IAAI,CAAC6U,EAAE;AACxC;GAEAK,OAAOA,CAACliB,CAAC,EAAE;AACT,KAAA,IAAI,IAAI,CAACujB,GAAG,KAAK,IAAI,EACnB,IAAI,CAACA,GAAG,GAAG,IAAI,CAACF,EAAE,CAAClK,QAAQ,EAAE;KAE/B,OAAQnZ,CAAC,GAAG,IAAI,CAACujB,GAAG,GAAI,IAAI,CAAC1B,EAAE;AACjC;AAEA9a,GAAAA,KAAKA,CAAC/G,CAAC,EAAEpH,GAAG,EAAE;AACZ,KAAA,OAAO,IAAI,CAAC8N,IAAI,CAAC1G,CAAC,EAAE,IAAI,CAACoV,SAAS,CAAC,IAAItP,EAAE,CAAClN,GAAG,CAAC,CAAC,CAAC;AAClD;AAEA4O,GAAAA,KAAKA,CAACxH,CAAC,EAAEpH,GAAG,EAAE;AACZ,KAAA,OAAO,IAAI,CAAC2O,IAAI,CAACvH,CAAC,EAAE,IAAI,CAACoV,SAAS,CAAC,IAAItP,EAAE,CAAClN,GAAG,CAAC,CAAC,CAAC;AAClD;AAEAoP,GAAAA,IAAIA,CAAChI,CAAC,EAAEC,CAAC,EAAE;AACT,KAAA,OAAO,IAAI,CAACgI,GAAG,CAACjI,CAAC,EAAEC,CAAC,CAAC,CAACiI,KAAK,CAAClI,CAAC,CAAC;AAChC;AAEAiI,GAAAA,GAAGA,CAACjI,CAAC,EAAEC,CAAC,EAAE;KACR,IAAID,CAAC,CAAC4I,MAAM,EAAE,IAAI3I,CAAC,CAAC2I,MAAM,EAAE,EAC1B,OAAO,IAAI9C,EAAE,CAAC,CAAC,CAAC,CAACyP,SAAS,CAAC,IAAI,CAAC;KAElC,MAAM1J,CAAC,GAAG7L,CAAC,CAACiI,GAAG,CAAChI,CAAC,CAAC;KAClB,MAAMC,CAAC,GAAG2L,CAAC,CAACqE,MAAM,CAAC,IAAI,CAAClD,CAAC,CAAC,CAAC/E,GAAG,CAAC,IAAI,CAACqb,EAAE,CAAC,CAACtT,OAAO,CAAC,IAAI,CAAChD,CAAC,CAAC;KACvD,MAAMpB,CAAC,GAAGC,CAAC,CAACnF,IAAI,CAACxG,CAAC,CAAC+H,GAAG,CAAC,IAAI,CAACqB,CAAC,CAAC,CAAC,CAACd,MAAM,CAAC,IAAI,CAACwE,CAAC,CAAC;KAE9C,IAAIpB,CAAC,CAAC/E,IAAI,CAAC,IAAI,CAACyC,CAAC,CAAC,IAAI,CAAC,EACrBsC,CAAC,CAAC9E,KAAK,CAAC8E,CAAC,EAAE,IAAI,CAACtC,CAAC,CAAC;AAEpB,KAAA,OAAOsC,CAAC,CAAC2J,SAAS,CAAC,IAAI,CAAC;AAC1B;AAEApN,GAAAA,KAAKA,CAACnI,CAAC,EAAEpH,GAAG,EAAE;AACZ,KAAA,IAAI,CAACkpB,QAAQ,CAAC9hB,CAAC,CAAC;AAEhB,KAAA,IAAIA,CAAC,CAAC4I,MAAM,EAAE,EACZ,OAAO5I,CAAC;KAEV,IAAIpH,GAAG,KAAK,CAAC,EAAE;AACboH,OAAAA,CAAC,CAACiG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;OACdjG,CAAC,CAAC1G,MAAM,GAAG,CAAC;AACZ,OAAA,OAAO0G,CAAC;AACV;AAEA,KAAA,MAAMoI,GAAG,GAAGxP,GAAG,GAAG,CAAC;AAEnB,KAAA,IAAIwP,GAAG,EACLxP,GAAG,GAAG,CAACA,GAAG;AAEZ,KAAA,IAAI,IAAI,CAAC0Q,CAAC,CAAChQ,MAAM,KAAK,CAAC,EACrBV,GAAG,IAAI,IAAI,CAAC0Q,CAAC,CAACrD,KAAK,CAAC,CAAC,CAAC;AAExB,KAAA,MAAMtE,IAAI,GAAGyH,SAAS,CAACxQ,GAAG,CAAC;;AAE3B;AACA;KACA,IAAI+I,IAAI,GAAG,CAAC,EAAE;AACZ;AACA,OAAA,IAAI,CAACqG,IAAI,CAAChI,CAAC,EAAE,IAAI,CAACoV,SAAS,CAAC,IAAItP,EAAE,CAAClN,GAAG,CAAC,CAAC,CAAC;MAC1C,MAAM,IAAI,CAACA,GAAG,GAAIA,GAAG,GAAG,CAAE,MAAM,CAAC,EAAE;AAClC;OACA,KAAK,IAAI8F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiD,IAAI,GAAG,CAAC,EAAEjD,CAAC,EAAE,EAC/B,IAAI,CAACgI,IAAI,CAAC1G,CAAC,EAAEA,CAAC,CAAC;AACnB,MAAC,MAAM;AACL;AACA,OAAA,MAAME,CAAC,GAAGF,CAAC,CAACmH,KAAK,EAAE;AAEnB,OAAA,KAAK,IAAIzI,CAAC,GAAGiD,IAAI,GAAG,CAAC,EAAEjD,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;AAClC,SAAA,IAAI,CAACgI,IAAI,CAAC1G,CAAC,EAAEA,CAAC,CAAC;AAEf,SAAA,IAAKpH,GAAG,IAAI8F,CAAC,GAAI,CAAC,EAChB,IAAI,CAACgI,IAAI,CAAC1G,CAAC,EAAEE,CAAC,CAAC;AACnB;AACF;KAEA,IAAIkI,GAAG,EACL,IAAI,CAACyB,IAAI,CAAC7J,CAAC,CAAC;AAEd,KAAA,OAAOA,CAAC;AACV;AAEA0Q,GAAAA,GAAGA,CAAC1Q,CAAC,EAAEpH,GAAG,EAAE;AACV,KAAA,IAAI,CAACkpB,QAAQ,CAAC9hB,CAAC,CAAC;KAEhB,IAAIpH,GAAG,KAAK,CAAC,EACX,OAAOoH,CAAC,CAAC4I,MAAM,EAAE;AAEnB,KAAA,OAAO5I,CAAC,CAAC6G,IAAI,CAAC,IAAI,CAACuO,SAAS,CAAC,IAAItP,EAAE,CAAClN,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;AAClD;GAEAif,KAAKA,CAAC7X,CAAC,EAAE;AACP,KAAA,IAAI,CAAC8hB,QAAQ,CAAC9hB,CAAC,CAAC;KAChB,OAAO,IAAI,CAACqV,WAAW,CAACrV,CAAC,CAAC,CAAC6G,IAAI,CAAC,IAAI,CAACyC,CAAC,CAACqG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACvD;GAEAzE,KAAKA,CAAClL,CAAC,EAAE;AACP,KAAA,IAAI,CAAC8hB,QAAQ,CAAC9hB,CAAC,CAAC;KAChB,OAAO,IAAI,CAACqV,WAAW,CAACrV,CAAC,CAAC,CAACkL,KAAK,EAAE;AACpC;GAEAmG,MAAMA,CAACrR,CAAC,EAAE;AACR,KAAA,IAAI,CAAC8hB,QAAQ,CAAC9hB,CAAC,CAAC;KAChB,OAAO,IAAI,CAACqV,WAAW,CAACrV,CAAC,CAAC,CAACqR,MAAM,EAAE;AACrC;GAEAoB,MAAMA,CAACzS,CAAC,EAAE;AACR,KAAA,IAAI,CAAC8hB,QAAQ,CAAC9hB,CAAC,CAAC;;AAEhB;KACA,OAAO,IAAI,CAAC4K,IAAI,CAAC5K,CAAC,CAACyS,MAAM,CAAC,IAAI,CAACnJ,CAAC,CAAC,CAACrB,GAAG,CAAC,IAAI,CAACkX,EAAE,CAAC,CAAC;AACjD;AACF;;AAEA;AACA;AACA;;AAEA,CAAA,SAASqE,SAASA,CAAChpB,KAAK,EAAE6C,GAAG,EAAEsG,KAAK,EAAE;AACpC,GAAA,MAAMrG,GAAG,GAAG,IAAI9C,KAAK,CAAC6C,GAAG,CAAC;GAE1B,IAAI7C,KAAK,CAAC+C,iBAAiB,EACzB/C,KAAK,CAAC+C,iBAAiB,CAACD,GAAG,EAAEqG,KAAK,CAAC;AAErC,GAAA,OAAOrG,GAAG;AACZ;AAEA,CAAA,SAAS9E,MAAMA,CAACsC,KAAK,EAAE2oB,OAAO,EAAE;GAC9B,IAAI,CAAC3oB,KAAK,EAAE;AACV,KAAA,MAAMuC,GAAG,GAAGomB,OAAO,IAAI,mBAAmB;KAC1C,MAAMD,SAAS,CAAChpB,KAAK,EAAE6C,GAAG,EAAE7E,MAAM,CAAC;AACrC;AACF;AAEA,CAAA,SAASmO,OAAOA,CAAC7L,KAAK,EAAE8gB,IAAI,EAAE8H,IAAI,EAAE;GAClC,IAAI,CAAC5oB,KAAK,EAAE;AACV,KAAA,MAAMuC,GAAG,GAAG,CAAA,CAAA,EAAIue,IAAI,CAAA,eAAA,EAAkB8H,IAAI,CAAG,CAAA,CAAA;KAC7C,MAAMF,SAAS,CAAClI,SAAS,EAAEje,GAAG,EAAEsJ,OAAO,CAAC;AAC1C;AACF;AAEA,CAAA,SAAS+L,KAAKA,CAAC5X,KAAK,EAAE8gB,IAAI,EAAE;GAC1B,IAAI,CAAC9gB,KAAK,EAAE;KACV,MAAMuC,GAAG,GAAG,CAAIue,CAAAA,EAAAA,IAAI,CAAqC,mCAAA,CAAA;KACzD,MAAM4H,SAAS,CAAC9X,UAAU,EAAErO,GAAG,EAAEqV,KAAK,CAAC;AACzC;AACF;AAEA,CAAA,SAASvM,GAAGA,CAACrL,KAAK,EAAE8gB,IAAI,EAAE;GACxB,IAAI,CAAC9gB,KAAK,EAAE;KACV,MAAMuC,GAAG,GAAG,CAAIue,CAAAA,EAAAA,IAAI,CAAgC,8BAAA,CAAA;KACpD,MAAM4H,SAAS,CAAClI,SAAS,EAAEje,GAAG,EAAE8I,GAAG,CAAC;AACtC;AACF;AAEA,CAAA,SAASsQ,MAAMA,CAAC3b,KAAK,EAAE8gB,IAAI,EAAE;GAC3B,IAAI,CAAC9gB,KAAK,EAAE;KACV,MAAMuC,GAAG,GAAG,CAAIue,CAAAA,EAAAA,IAAI,CAAmC,iCAAA,CAAA;KACvD,MAAM4H,SAAS,CAAClI,SAAS,EAAEje,GAAG,EAAEoZ,MAAM,CAAC;AACzC;AACF;CAEA,SAAS9N,OAAOA,CAAC7N,KAAK,EAAE;GACtB,IAAI,CAACA,KAAK,EAAE;KACV,MAAMuC,GAAG,GAAG,wBAAwB;KACpC,MAAMmmB,SAAS,CAAC9X,UAAU,EAAErO,GAAG,EAAEsL,OAAO,CAAC;AAC3C;AACF;CAEA,MAAM2U,eAAe,SAAS9iB,KAAK,CAAC;GAClCK,WAAWA,CAAC8oB,MAAM,EAAE;AAClB,KAAA,KAAK,EAAE;KAEP,IAAI,CAAC/H,IAAI,GAAG,iBAAiB;KAC7B,IAAI,CAAC6H,OAAO,GAAG,0BAA0B;AACzC,KAAA,IAAI,CAACE,MAAM,GAAGA,MAAM,CAAC5Q,OAAO,EAAE;KAE9B,IAAIvY,KAAK,CAAC+C,iBAAiB,EACzB/C,KAAK,CAAC+C,iBAAiB,CAAC,IAAI,EAAE+f,eAAe,CAAC;AAClD;AACF;CAEA,SAASpD,SAASA,CAACthB,GAAG,EAAE;AACtB,GAAA,OAAOE,MAAM,CAACC,aAAa,CAACH,GAAG,CAAC;AAClC;CAEA,SAASoO,KAAKA,CAACpO,GAAG,EAAE;AAClB,GAAA,OAAOshB,SAAS,CAACthB,GAAG,CAAC,IACdA,GAAG,IAAI,SAAU,IACjBA,GAAG,IAAI,SAAS;AACzB;AAEA,CAAA,SAASohB,QAAQA,CAACF,SAAS,EAAEpc,IAAI,EAAE;GACjC,IAAIoc,SAAS,CAAC8J,eAAe,EAC3B,OAAO9J,SAAS,CAAC8J,eAAe,CAAClmB,IAAI,CAAC;AAExC,GAAA,OAAO,IAAIoc,SAAS,CAACpc,IAAI,CAAC;AAC5B;CAEA,SAAS8b,OAAOA,CAACzT,IAAI,EAAE;AACrB,GAAA,IAAIA,IAAI,IAAI,IAAI,EACd,OAAO,EAAE;AAEX,GAAA,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAC1B,OAAOA,IAAI;AAEb,GAAA,QAAQA,IAAI;AACV,KAAA,KAAK,KAAK;AACR,OAAA,OAAO,CAAC;AACV,KAAA,KAAK,KAAK;AACR,OAAA,OAAO,CAAC;AACV,KAAA,KAAK,KAAK;AACR,OAAA,OAAO,EAAE;AACX,KAAA,KAAK,KAAK;AACR,OAAA,OAAO,EAAE;AACb;AAEA,GAAA,OAAO,CAAC;AACV;;AAEA;AACA;AACA;;CAEA,SAASqD,SAASA,CAACnG,CAAC,EAAE;AACpB,GAAA,IAAIuD,IAAI,CAACqd,KAAK,EACZ,OAAO,EAAE,GAAGrd,IAAI,CAACqd,KAAK,CAAC5gB,CAAC,CAAC;GAE3B,IAAI4I,CAAC,GAAG5I,CAAC;GACT,IAAInB,CAAC,GAAG,CAAC;GAET,IAAI+J,CAAC,IAAI,MAAM,EAAE;KACf/J,CAAC,IAAI,EAAE;KACP+J,CAAC,MAAM,EAAE;AACX;GAEA,IAAIA,CAAC,IAAI,IAAI,EAAE;KACb/J,CAAC,IAAI,CAAC;KACN+J,CAAC,MAAM,CAAC;AACV;GAEA,IAAIA,CAAC,IAAI,GAAG,EAAE;KACZ/J,CAAC,IAAI,CAAC;KACN+J,CAAC,MAAM,CAAC;AACV;GAEA,IAAIA,CAAC,IAAI,IAAI,EAAE;KACb/J,CAAC,IAAI,CAAC;KACN+J,CAAC,MAAM,CAAC;AACV;GAEA,OAAO/J,CAAC,GAAG+J,CAAC;AACd;CAEA,SAAS6I,QAAQA,CAACzR,CAAC,EAAE;AACnB;AACA,GAAA,IAAIA,CAAC,KAAK,CAAC,EACT,OAAO,EAAE;GAEX,IAAI4I,CAAC,GAAG5I,CAAC;GACT,IAAInB,CAAC,GAAG,CAAC;AAET,GAAA,IAAI,CAAC+J,CAAC,GAAG,MAAM,MAAM,CAAC,EAAE;KACtB/J,CAAC,IAAI,EAAE;KACP+J,CAAC,MAAM,EAAE;AACX;AAEA,GAAA,IAAI,CAACA,CAAC,GAAG,IAAI,MAAM,CAAC,EAAE;KACpB/J,CAAC,IAAI,CAAC;KACN+J,CAAC,MAAM,CAAC;AACV;AAEA,GAAA,IAAI,CAACA,CAAC,GAAG,GAAG,MAAM,CAAC,EAAE;KACnB/J,CAAC,IAAI,CAAC;KACN+J,CAAC,MAAM,CAAC;AACV;AAEA,GAAA,IAAI,CAACA,CAAC,GAAG,GAAG,MAAM,CAAC,EAAE;KACnB/J,CAAC,IAAI,CAAC;KACN+J,CAAC,MAAM,CAAC;AACV;GAEA,IAAI,CAACA,CAAC,GAAG,GAAG,MAAM,CAAC,EACjB/J,CAAC,IAAI,CAAC;AAER,GAAA,OAAOA,CAAC;AACV;AAEA,CAAA,SAAS6Y,QAAQA,CAAClhB,GAAG,EAAEkK,KAAK,EAAEC,GAAG,EAAE;GACjC,MAAMtE,GAAG,GAAGkH,IAAI,CAACoD,GAAG,CAACnQ,GAAG,CAACH,MAAM,EAAEsK,GAAG,CAAC;GAErC,IAAI9B,CAAC,GAAG,CAAC;GACT,IAAIP,CAAC,GAAG,CAAC;GAET,KAAK,IAAI7C,CAAC,GAAGiF,KAAK,EAAEjF,CAAC,GAAGY,GAAG,EAAEZ,CAAC,EAAE,EAAE;KAChC,MAAMwB,CAAC,GAAGzG,GAAG,CAACghB,UAAU,CAAC/b,CAAC,CAAC,GAAG,EAAE;KAEhCoD,CAAC,KAAK,CAAC;AAEP,KAAA,IAAI7B,CAAC;KAEL,IAAIC,CAAC,IAAI,EAAE,IAAIA,CAAC,IAAI,EAAE,EAAE;AACtB;AACAD,OAAAA,CAAC,GAAGC,CAAC,GAAG,EAAE,GAAG,GAAG;MACjB,MAAM,IAAIA,CAAC,IAAI,EAAE,IAAIA,CAAC,IAAI,EAAE,EAAE;AAC7B;AACAD,OAAAA,CAAC,GAAGC,CAAC,GAAG,EAAE,GAAG,GAAG;AAClB,MAAC,MAAM;AACL;OACAD,CAAC,GAAGC,CAAC;AACP;KAEA4B,CAAC,IAAI7B,CAAC;KACNsB,CAAC,IAAItB,CAAC;AACR;GAEA,IAAIsB,CAAC,GAAG,GAAG,EACT,MAAM,IAAI/G,KAAK,CAAC,iBAAiB,CAAC;AAEpC,GAAA,OAAOsH,CAAC;AACV;CAEA,SAASiZ,SAASA,CAACthB,GAAG,EAAEkK,KAAK,EAAEC,GAAG,EAAEqE,GAAG,EAAE;GACvC,MAAM3I,GAAG,GAAGkH,IAAI,CAACoD,GAAG,CAACnQ,GAAG,CAACH,MAAM,EAAEsK,GAAG,CAAC;GAErC,IAAI9B,CAAC,GAAG,CAAC;GAET,KAAK,IAAIpD,CAAC,GAAGiF,KAAK,EAAEjF,CAAC,GAAGY,GAAG,EAAEZ,CAAC,EAAE,EAAE;KAChC,MAAMwB,CAAC,GAAGzG,GAAG,CAACghB,UAAU,CAAC/b,CAAC,CAAC,GAAG,EAAE;KAEhCoD,CAAC,IAAImG,GAAG;AAER,KAAA,IAAIhI,CAAC;KAEL,IAAIC,CAAC,IAAI,EAAE,EAAE;AACX;AACAD,OAAAA,CAAC,GAAGC,CAAC,GAAG,EAAE,GAAG,GAAG;AAClB,MAAC,MAAM,IAAIA,CAAC,IAAI,EAAE,EAAE;AAClB;AACAD,OAAAA,CAAC,GAAGC,CAAC,GAAG,EAAE,GAAG,GAAG;AAClB,MAAC,MAAM;AACL;OACAD,CAAC,GAAGC,CAAC;AACP;AAEA,KAAA,IAAIA,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,GAAG,IAAID,CAAC,IAAIgI,GAAG,EAC9B,MAAM,IAAIzN,KAAK,CAAC,iBAAiB,CAAC;KAEpCsH,CAAC,IAAI7B,CAAC;AACR;AAEA,GAAA,OAAO6B,CAAC;AACV;;AAEA;AACA;AACA;;AAEA,CAAA,SAASqgB,MAAMA,CAACxkB,CAAC,EAAEyC,CAAC,EAAEkJ,CAAC,EAAE;AACvB;AACA,GAAA,MAAMsT,GAAG,GAAG/W,MAAM,CAAC,CAAC,CAAC;AACrB,GAAA,MAAMwc,GAAG,GAAG,IAAIxkB,KAAK,CAAC8H,QAAQ,CAAC;AAC/B,GAAA,MAAM2Y,EAAE,GAAI3gB,CAAC,GAAGA,CAAC,GAAI2L,CAAC;AAEtB+Y,GAAAA,GAAG,CAAC,CAAC,CAAC,GAAG1kB,CAAC;GAEV,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiH,QAAQ,EAAEjH,CAAC,EAAE,EAC/B2jB,GAAG,CAAC3jB,CAAC,CAAC,GAAI2jB,GAAG,CAAC3jB,CAAC,GAAG,CAAC,CAAC,GAAG4f,EAAE,GAAIhV,CAAC;AAEhC,GAAA,IAAI5K,CAAC,GAAG0B,CAAC,CAAC0L,SAAS,EAAE;GACrB,IAAIhK,CAAC,GAAG8a,GAAG;GAEX,OAAOle,CAAC,IAAIgH,SAAS,EAAE;KACrB,IAAIgH,KAAK,GAAGhH,SAAS;KACrB,IAAI/D,IAAI,GAAGvB,CAAC,CAACuB,IAAI,CAACjD,CAAC,GAAGgO,KAAK,EAAEA,KAAK,CAAC;KAEnC,IAAI/K,IAAI,GAAGgE,QAAQ,EAAE;AACnB7D,OAAAA,CAAC,GAAIA,CAAC,GAAGA,CAAC,GAAIwH,CAAC;OACf5K,CAAC,IAAI,CAAC;OACN;AACF;AAEA,KAAA,OAAO,CAACiD,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE;OACvB+K,KAAK,IAAI,CAAC;OACV/K,IAAI,KAAK,CAAC;AACZ;KAEA,IAAIG,CAAC,KAAK8a,GAAG,EAAE;AACb9a,OAAAA,CAAC,GAAGugB,GAAG,CAAC1gB,IAAI,IAAI,CAAC,CAAC;AACpB,MAAC,MAAM;OACLG,CAAC,GAAGsc,IAAI,CAACtc,CAAC,EAAE4K,KAAK,EAAEpD,CAAC,CAAC;OACrBxH,CAAC,GAAIA,CAAC,GAAGugB,GAAG,CAAC1gB,IAAI,IAAI,CAAC,CAAC,GAAI2H,CAAC;AAC9B;KAEA5K,CAAC,IAAIgO,KAAK;AACZ;GAEA,IAAIhO,CAAC,GAAG,CAAC,EAAE;KACT,MAAMiD,IAAI,GAAGvB,CAAC,CAACuB,IAAI,CAAC,CAAC,EAAEjD,CAAC,CAAC;KAEzB,OAAOA,CAAC,EAAE,EAAE;AACVoD,OAAAA,CAAC,GAAIA,CAAC,GAAGA,CAAC,GAAIwH,CAAC;AAEf,OAAA,IAAK3H,IAAI,IAAIjD,CAAC,GAAI,CAAC,EACjBoD,CAAC,GAAIA,CAAC,GAAGnE,CAAC,GAAI2L,CAAC;AACnB;AACF;AAEA,GAAA,OAAOxH,CAAC;AACV;AAEA,CAAA,SAASsc,IAAIA,CAACzgB,CAAC,EAAEqP,CAAC,EAAE1D,CAAC,EAAE;AACrB,GAAA,KAAK,IAAI5K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsO,CAAC,EAAEtO,CAAC,EAAE,EACxBf,CAAC,GAAIA,CAAC,GAAGA,CAAC,GAAI2L,CAAC;AACjB,GAAA,OAAO3L,CAAC;AACV;;AAEA;AACA;AACA;;AAEA,CAAA,SAASkK,UAAUA,CAACic,IAAI,EAAElrB,GAAG,EAAEgH,GAAG,EAAE;GAClC,MAAMN,GAAG,GAAGwkB,IAAI,CAACxqB,MAAM,GAAGV,GAAG,CAACU,MAAM;GAEpCsG,GAAG,CAACsG,QAAQ,GAAG4d,IAAI,CAAC5d,QAAQ,GAAGtN,GAAG,CAACsN,QAAQ;AAC3CtG,GAAAA,GAAG,CAAC0G,MAAM,CAAChH,GAAG,CAAC;GACfM,GAAG,CAACtG,MAAM,GAAGgG,GAAG;;AAEhB;AACA;GACA,MAAMU,CAAC,GAAG8jB,IAAI,CAAC7d,KAAK,CAAC,CAAC,CAAC;GACvB,MAAMhG,CAAC,GAAGrH,GAAG,CAACqN,KAAK,CAAC,CAAC,CAAC;AACtB,GAAA,MAAMnE,CAAC,GAAG9B,CAAC,GAAGC,CAAC;AACf,GAAA,MAAM9G,EAAE,GAAG2I,CAAC,GAAG,SAAS;AAExB,GAAA,IAAIuE,KAAK,GAAIvE,CAAC,GAAG,SAAS,GAAI,CAAC;GAC/B,IAAIwC,CAAC,GAAG,CAAC;AAET1E,GAAAA,GAAG,CAACqG,KAAK,CAAC,CAAC,CAAC,GAAG9M,EAAE;GAEjB,OAAOmL,CAAC,GAAG1E,GAAG,CAACtG,MAAM,GAAG,CAAC,EAAEgL,CAAC,EAAE,EAAE;AAC9B;AACA;AACA;AACA;AACA,KAAA,IAAI0K,MAAM,GAAG3I,KAAK,KAAK,EAAE;AACzB,KAAA,IAAI0d,KAAK,GAAG1d,KAAK,GAAG,SAAS;AAE7B,KAAA,MAAMuD,GAAG,GAAGpD,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEnC,CAAC,GAAGwf,IAAI,CAACxqB,MAAM,GAAG,CAAC,CAAC;AAC5C,KAAA,MAAMmN,GAAG,GAAGD,IAAI,CAACoD,GAAG,CAACtF,CAAC,EAAE1L,GAAG,CAACU,MAAM,GAAG,CAAC,CAAC;KAEvC,KAAK,IAAIuJ,CAAC,GAAG+G,GAAG,EAAE/G,CAAC,IAAI4D,GAAG,EAAE5D,CAAC,EAAE,EAAE;AAC/B,OAAA,MAAMnE,CAAC,GAAG4F,CAAC,GAAGzB,CAAC;OACf,MAAM7C,CAAC,GAAG8jB,IAAI,CAAC7d,KAAK,CAACvH,CAAC,CAAC;OACvB,MAAMuB,CAAC,GAAGrH,GAAG,CAACqN,KAAK,CAACpD,CAAC,CAAC;AACtB,OAAA,MAAMf,CAAC,GAAG9B,CAAC,GAAGC,CAAC,GAAG8jB,KAAK;AAEvB/U,OAAAA,MAAM,IAAKlN,CAAC,GAAG,SAAS,GAAI,CAAC;OAC7BiiB,KAAK,GAAGjiB,CAAC,GAAG,SAAS;AACvB;KAEAlC,GAAG,CAACqG,KAAK,CAAC3B,CAAC,CAAC,GAAGyf,KAAK,GAAG,CAAC;KACxB1d,KAAK,GAAG2I,MAAM,GAAG,CAAC;AACpB;GAEA,IAAI3I,KAAK,KAAK,CAAC,EACbzG,GAAG,CAACqG,KAAK,CAAC3B,CAAC,CAAC,GAAG+B,KAAK,GAAG,CAAC,CAAC,KAEzBzG,GAAG,CAACtG,MAAM,IAAI,CAAC;AAEjB,GAAA,OAAOsG,GAAG,CAACyH,MAAM,EAAE;AACrB;AAEA,CAAA,SAASS,QAAQA,CAACgc,IAAI,EAAElrB,GAAG,EAAEgH,GAAG,EAAE;GAChC,MAAMN,GAAG,GAAGwkB,IAAI,CAACxqB,MAAM,GAAGV,GAAG,CAACU,MAAM;GAEpCsG,GAAG,CAACsG,QAAQ,GAAG4d,IAAI,CAAC5d,QAAQ,GAAGtN,GAAG,CAACsN,QAAQ;AAC3CtG,GAAAA,GAAG,CAAC0G,MAAM,CAAChH,GAAG,CAAC;GACfM,GAAG,CAACtG,MAAM,GAAGgG,GAAG;GAEhB,IAAI+G,KAAK,GAAG,CAAC;GACb,IAAI2d,OAAO,GAAG,CAAC;GACf,IAAI1f,CAAC,GAAG,CAAC;GAET,OAAOA,CAAC,GAAG1E,GAAG,CAACtG,MAAM,GAAG,CAAC,EAAEgL,CAAC,EAAE,EAAE;AAC9B;AACA;AACA;AACA;KACA,IAAI0K,MAAM,GAAGgV,OAAO;KAEpBA,OAAO,GAAG,CAAC;AAEX,KAAA,IAAID,KAAK,GAAG1d,KAAK,GAAG,SAAS;AAE7B,KAAA,MAAMuD,GAAG,GAAGpD,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEnC,CAAC,GAAGwf,IAAI,CAACxqB,MAAM,GAAG,CAAC,CAAC;AAC5C,KAAA,MAAMmN,GAAG,GAAGD,IAAI,CAACoD,GAAG,CAACtF,CAAC,EAAE1L,GAAG,CAACU,MAAM,GAAG,CAAC,CAAC;KAEvC,KAAK,IAAIuJ,CAAC,GAAG+G,GAAG,EAAE/G,CAAC,IAAI4D,GAAG,EAAE5D,CAAC,EAAE,EAAE;AAC/B,OAAA,MAAMnE,CAAC,GAAG4F,CAAC,GAAGzB,CAAC;OACf,MAAM7C,CAAC,GAAG8jB,IAAI,CAAC7d,KAAK,CAACvH,CAAC,CAAC;OACvB,MAAMuB,CAAC,GAAGrH,GAAG,CAACqN,KAAK,CAACpD,CAAC,CAAC;AACtB,OAAA,MAAMf,CAAC,GAAG9B,CAAC,GAAGC,CAAC;AAEf,OAAA,IAAI9G,EAAE,GAAG2I,CAAC,GAAG,SAAS;OAEtBkN,MAAM,GAAIA,MAAM,IAAKlN,CAAC,GAAG,SAAS,GAAI,CAAC,CAAC,GAAI,CAAC;AAC7C3I,OAAAA,EAAE,GAAIA,EAAE,GAAG4qB,KAAK,GAAI,CAAC;OACrBA,KAAK,GAAG5qB,EAAE,GAAG,SAAS;OACtB6V,MAAM,GAAIA,MAAM,IAAI7V,EAAE,KAAK,EAAE,CAAC,GAAI,CAAC;OAEnC6qB,OAAO,IAAIhV,MAAM,KAAK,EAAE;OACxBA,MAAM,IAAI,SAAS;AACrB;AAEApP,KAAAA,GAAG,CAACqG,KAAK,CAAC3B,CAAC,CAAC,GAAGyf,KAAK;KACpB1d,KAAK,GAAG2I,MAAM;KACdA,MAAM,GAAGgV,OAAO;AAClB;AAEA,GAAA,IAAI3d,KAAK,KAAK,CAAC,EACbzG,GAAG,CAACqG,KAAK,CAAC3B,CAAC,CAAC,GAAG+B,KAAK,CAAC,KAErBzG,GAAG,CAACtG,MAAM,IAAI,CAAC;AAEjB,GAAA,OAAOsG,GAAG,CAACyH,MAAM,EAAE;AACrB;AAEA,CAAA,SAASU,UAAUA,CAACpK,CAAC,EAAEC,CAAC,EAAEgC,GAAG,EAAE;AAC7B;GACA,IAAI,CAACgG,UAAU,IAAIjI,CAAC,CAACrE,MAAM,GAAGsE,CAAC,CAACtE,MAAM,GAAG,QAAQ,EAC/C,OAAOwO,QAAQ,CAACnK,CAAC,EAAEC,CAAC,EAAEgC,GAAG,CAAC;AAE5B,GAAA,MAAMiC,IAAI,GAAGgE,MAAM,CAAC,CAAC,CAAC;AACtB,GAAA,MAAMkJ,IAAI,GAAGlJ,MAAM,CAAC,SAAS,CAAC;AAC9B,GAAA,MAAMxB,KAAK,GAAGwB,MAAM,CAAC,EAAE,CAAC;GAExB,IAAItE,CAAC,GAAG5D,CAAC,CAACwb,QAAQ,EAAE,GAAGvb,CAAC,CAACub,QAAQ,EAAE;AAEnC,GAAA,MAAM/Q,GAAG,GAAI7G,CAAC,GAAGM,IAAI,GAAI,CAAC;AAE1B,GAAA,IAAIuG,GAAG,EACL7G,CAAC,GAAG,CAACA,CAAC;GAER,IAAI7C,CAAC,GAAG,CAAC;GAET,OAAO6C,CAAC,GAAGM,IAAI,EAAE;AACfjC,KAAAA,GAAG,CAACqG,KAAK,CAACvH,CAAC,EAAE,CAAC,GAAG5F,MAAM,CAACyI,CAAC,GAAGwN,IAAI,CAAC;KACjCxN,CAAC,KAAK8C,KAAK;AACb;AAEA,GAAA,IAAI3F,CAAC,KAAK,CAAC,EACTkB,GAAG,CAACqG,KAAK,CAACvH,CAAC,EAAE,CAAC,GAAG,CAAC;GAEpBkB,GAAG,CAACtG,MAAM,GAAGoF,CAAC;GACdkB,GAAG,CAACsG,QAAQ,GAAGkC,GAAG;AAElB,GAAA,OAAOxI,GAAG;AACZ;AAEA,CAAA,SAASgI,WAAWA,CAACkc,IAAI,EAAElrB,GAAG,EAAEgH,GAAG,EAAE;AACnC,GAAA,MAAMI,CAAC,GAAG8jB,IAAI,CAAC7d,KAAK;AACpB,GAAA,MAAMhG,CAAC,GAAGrH,GAAG,CAACqN,KAAK;AACnB,GAAA,MAAMge,CAAC,GAAGrkB,GAAG,CAACqG,KAAK;GACnB,MAAMie,EAAE,GAAGlkB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAMmkB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAGrkB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAMskB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAM/B,EAAE,GAAGtiB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAMwkB,GAAG,GAAGlC,EAAE,GAAG,MAAM;AACvB,GAAA,MAAMmC,GAAG,GAAGnC,EAAE,KAAK,EAAE;GACrB,MAAMoC,EAAE,GAAG1kB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAM2kB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAG7kB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAM8kB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAGhlB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAMilB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAGnlB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAMolB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAGtlB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAMulB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAGzlB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAM0lB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAG5lB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAM6lB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAG9lB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAM+lB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAGjmB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAMkmB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAGpmB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAMqmB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAGvmB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAMwmB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAG1mB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAM2mB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAG7mB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAM8mB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAGhnB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAMinB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAGnnB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAMonB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAGtnB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAMunB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GACrB,MAAMG,EAAE,GAAGznB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnB,GAAA,MAAM0nB,GAAG,GAAGD,EAAE,GAAG,MAAM;AACvB,GAAA,MAAME,GAAG,GAAGF,EAAE,KAAK,EAAE;GAErB,IAAIxnB,CAAC,GAAG,CAAC;AACT,GAAA,IAAI/G,EAAE,EAAE0uB,GAAG,EAAEzuB,EAAE;GAEfwG,GAAG,CAACsG,QAAQ,GAAG4d,IAAI,CAAC5d,QAAQ,GAAGtN,GAAG,CAACsN,QAAQ;AAC3CtG,GAAAA,GAAG,CAAC0G,MAAM,CAAC,EAAE,CAAC;GACd1G,GAAG,CAACtG,MAAM,GAAG,EAAE;;AAEf;GACAH,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAE6B,GAAG,CAAC;GACxB6B,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAE8B,GAAG,CAAC;AACzB4B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAE4B,GAAG,CAAC,GAAI,CAAC;GACrC5sB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAE6B,GAAG,CAAC;AAExB,GAAA,IAAI6B,EAAE,GAAI,CAAE5nB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACtD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKC,EAAE,KAAK,EAAE,CAAC,GAAI,CAAC;GACjDA,EAAE,IAAI,SAAS;;AAEf;GACA3uB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAE0B,GAAG,CAAC;GACxB6B,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAE2B,GAAG,CAAC;AACzB4B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAEyB,GAAG,CAAC,GAAI,CAAC;GACrC5sB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAE0B,GAAG,CAAC;AACxB9sB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEgC,GAAG,CAAC,GAAI,CAAC;AACnC0B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACrCyB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAE+B,GAAG,CAAC,GAAI,CAAC;AACrC/sB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAEgC,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAI2B,EAAE,GAAI,CAAE7nB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACtD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKE,EAAE,KAAK,EAAE,CAAC,GAAI,CAAC;GACjDA,EAAE,IAAI,SAAS;;AAEf;GACA5uB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAEwB,GAAG,CAAC;GACxB6B,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAEyB,GAAG,CAAC;AACzB4B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAEuB,GAAG,CAAC,GAAI,CAAC;GACrC5sB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAEwB,GAAG,CAAC;AACxB9sB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAE6B,GAAG,CAAC,GAAI,CAAC;AACnC0B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACrCyB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAE4B,GAAG,CAAC,GAAI,CAAC;AACrC/sB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAE6B,GAAG,CAAC,GAAI,CAAC;AACnCjtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEmC,GAAG,CAAC,GAAI,CAAC;AACnCuB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AACrCsB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAEkC,GAAG,CAAC,GAAI,CAAC;AACrCltB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAEmC,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIyB,EAAE,GAAI,CAAE9nB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACtD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKG,EAAE,KAAK,EAAE,CAAC,GAAI,CAAC;GACjDA,EAAE,IAAI,SAAS;;AAEf;GACA7uB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAEqB,GAAG,CAAC;GACxB6B,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAEsB,GAAG,CAAC;AACzB4B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAEoB,GAAG,CAAC,GAAI,CAAC;GACrC5sB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAEqB,GAAG,CAAC;AACxB9sB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnC0B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAE4B,GAAG,CAAC,GAAI,CAAC;AACrCyB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAE0B,GAAG,CAAC,GAAI,CAAC;AACrC/sB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnCjtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAEgC,GAAG,CAAC,GAAI,CAAC;AACnCuB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACrCsB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAE+B,GAAG,CAAC,GAAI,CAAC;AACrCltB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAEgC,GAAG,CAAC,GAAI,CAAC;AACnCptB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEsC,GAAG,CAAC,GAAI,CAAC;AACnCoB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEuC,GAAG,CAAC,GAAI,CAAC;AACrCmB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAEqC,GAAG,CAAC,GAAI,CAAC;AACrCrtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAEsC,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIuB,EAAE,GAAI,CAAE/nB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACtD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKI,EAAE,KAAK,EAAE,CAAC,GAAI,CAAC;GACjDA,EAAE,IAAI,SAAS;;AAEf;GACA9uB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAEkB,GAAG,CAAC;GACxB6B,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAEmB,GAAG,CAAC;AACzB4B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAEiB,GAAG,CAAC,GAAI,CAAC;GACrC5sB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAEkB,GAAG,CAAC;AACxB9sB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAEwB,GAAG,CAAC,GAAI,CAAC;AACnC0B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAEyB,GAAG,CAAC,GAAI,CAAC;AACrCyB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAEuB,GAAG,CAAC,GAAI,CAAC;AACrC/sB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAEwB,GAAG,CAAC,GAAI,CAAC;AACnCjtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnCuB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAE+B,GAAG,CAAC,GAAI,CAAC;AACrCsB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAE6B,GAAG,CAAC,GAAI,CAAC;AACrCltB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnCptB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAEmC,GAAG,CAAC,GAAI,CAAC;AACnCoB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AACrCmB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAEkC,GAAG,CAAC,GAAI,CAAC;AACrCrtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAEmC,GAAG,CAAC,GAAI,CAAC;AACnCvtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEyC,GAAG,CAAC,GAAI,CAAC;AACnCiB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAE0C,GAAG,CAAC,GAAI,CAAC;AACrCgB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAEwC,GAAG,CAAC,GAAI,CAAC;AACrCxtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAEyC,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIqB,EAAE,GAAI,CAAEhoB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACtD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKK,EAAE,KAAK,EAAE,CAAC,GAAI,CAAC;GACjDA,EAAE,IAAI,SAAS;;AAEf;GACA/uB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEe,GAAG,CAAC;GACxB6B,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEgB,GAAG,CAAC;AACzB4B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEc,GAAG,CAAC,GAAI,CAAC;GACrC5sB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEe,GAAG,CAAC;AACxB9sB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAEqB,GAAG,CAAC,GAAI,CAAC;AACnC0B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAEsB,GAAG,CAAC,GAAI,CAAC;AACrCyB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAEoB,GAAG,CAAC,GAAI,CAAC;AACrC/sB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAEqB,GAAG,CAAC,GAAI,CAAC;AACnCjtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnCuB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAE4B,GAAG,CAAC,GAAI,CAAC;AACrCsB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAE0B,GAAG,CAAC,GAAI,CAAC;AACrCltB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnCptB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACnCoB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAEkC,GAAG,CAAC,GAAI,CAAC;AACrCmB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAEgC,GAAG,CAAC,GAAI,CAAC;AACrCrtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACnCvtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAEsC,GAAG,CAAC,GAAI,CAAC;AACnCiB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAEuC,GAAG,CAAC,GAAI,CAAC;AACrCgB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAEqC,GAAG,CAAC,GAAI,CAAC;AACrCxtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAEsC,GAAG,CAAC,GAAI,CAAC;AACnC1tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAE4C,GAAG,CAAC,GAAI,CAAC;AACnCc,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAE6C,GAAG,CAAC,GAAI,CAAC;AACrCa,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAE2C,GAAG,CAAC,GAAI,CAAC;AACrC3tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAE4C,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAImB,EAAE,GAAI,CAAEjoB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACtD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKM,EAAE,KAAK,EAAE,CAAC,GAAI,CAAC;GACjDA,EAAE,IAAI,SAAS;;AAEf;GACAhvB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEY,GAAG,CAAC;GACxB6B,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEa,GAAG,CAAC;AACzB4B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEW,GAAG,CAAC,GAAI,CAAC;GACrC5sB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEY,GAAG,CAAC;AACxB9sB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEkB,GAAG,CAAC,GAAI,CAAC;AACnC0B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEmB,GAAG,CAAC,GAAI,CAAC;AACrCyB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEiB,GAAG,CAAC,GAAI,CAAC;AACrC/sB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEkB,GAAG,CAAC,GAAI,CAAC;AACnCjtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAEwB,GAAG,CAAC,GAAI,CAAC;AACnCuB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAEyB,GAAG,CAAC,GAAI,CAAC;AACrCsB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAEuB,GAAG,CAAC,GAAI,CAAC;AACrCltB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAEwB,GAAG,CAAC,GAAI,CAAC;AACnCptB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnCoB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAE+B,GAAG,CAAC,GAAI,CAAC;AACrCmB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAE6B,GAAG,CAAC,GAAI,CAAC;AACrCrtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnCvtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AACnCiB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAEqC,GAAG,CAAC,GAAI,CAAC;AACrCgB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAEmC,GAAG,CAAC,GAAI,CAAC;AACrCxtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AACnC1tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAEyC,GAAG,CAAC,GAAI,CAAC;AACnCc,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAE0C,GAAG,CAAC,GAAI,CAAC;AACrCa,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAEwC,GAAG,CAAC,GAAI,CAAC;AACrC3tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAEyC,GAAG,CAAC,GAAI,CAAC;AACnC7tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAE+C,GAAG,CAAC,GAAI,CAAC;AACnCW,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEgD,GAAG,CAAC,GAAI,CAAC;AACrCU,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAE8C,GAAG,CAAC,GAAI,CAAC;AACrC9tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAE+C,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIiB,EAAE,GAAI,CAAEloB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACtD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKO,EAAE,KAAK,EAAE,CAAC,GAAI,CAAC;GACjDA,EAAE,IAAI,SAAS;;AAEf;GACAjvB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAES,GAAG,CAAC;GACxB6B,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEU,GAAG,CAAC;AACzB4B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEQ,GAAG,CAAC,GAAI,CAAC;GACrC5sB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAES,GAAG,CAAC;AACxB9sB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEe,GAAG,CAAC,GAAI,CAAC;AACnC0B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEgB,GAAG,CAAC,GAAI,CAAC;AACrCyB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEc,GAAG,CAAC,GAAI,CAAC;AACrC/sB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEe,GAAG,CAAC,GAAI,CAAC;AACnCjtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEqB,GAAG,CAAC,GAAI,CAAC;AACnCuB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEsB,GAAG,CAAC,GAAI,CAAC;AACrCsB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEoB,GAAG,CAAC,GAAI,CAAC;AACrCltB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEqB,GAAG,CAAC,GAAI,CAAC;AACnCptB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnCoB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAE4B,GAAG,CAAC,GAAI,CAAC;AACrCmB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAE0B,GAAG,CAAC,GAAI,CAAC;AACrCrtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnCvtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACnCiB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAEkC,GAAG,CAAC,GAAI,CAAC;AACrCgB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAEgC,GAAG,CAAC,GAAI,CAAC;AACrCxtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACnC1tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAEuC,GAAG,CAAC,GAAI,CAAC;AACnCc,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAEwC,GAAG,CAAC,GAAI,CAAC;AACrCa,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAEsC,GAAG,CAAC,GAAI,CAAC;AACrC3tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAEuC,GAAG,CAAC,GAAI,CAAC;AACnC7tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAE4C,GAAG,CAAC,GAAI,CAAC;AACnCW,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAE6C,GAAG,CAAC,GAAI,CAAC;AACrCU,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAE2C,GAAG,CAAC,GAAI,CAAC;AACrC9tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAE4C,GAAG,CAAC,GAAI,CAAC;AACnChuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEkD,GAAG,CAAC,GAAI,CAAC;AACnCQ,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEmD,GAAG,CAAC,GAAI,CAAC;AACrCO,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAEiD,GAAG,CAAC,GAAI,CAAC;AACrCjuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAEkD,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIe,EAAE,GAAI,CAAEnoB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACtD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKQ,EAAE,KAAK,EAAE,CAAC,GAAI,CAAC;GACjDA,EAAE,IAAI,SAAS;;AAEf;GACAlvB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEM,GAAG,CAAC;GACxB6B,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEO,GAAG,CAAC;AACzB4B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEK,GAAG,CAAC,GAAI,CAAC;GACrC5sB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEM,GAAG,CAAC;AACxB9sB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEY,GAAG,CAAC,GAAI,CAAC;AACnC0B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEa,GAAG,CAAC,GAAI,CAAC;AACrCyB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEW,GAAG,CAAC,GAAI,CAAC;AACrC/sB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEY,GAAG,CAAC,GAAI,CAAC;AACnCjtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEkB,GAAG,CAAC,GAAI,CAAC;AACnCuB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEmB,GAAG,CAAC,GAAI,CAAC;AACrCsB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEiB,GAAG,CAAC,GAAI,CAAC;AACrCltB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEkB,GAAG,CAAC,GAAI,CAAC;AACnCptB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEwB,GAAG,CAAC,GAAI,CAAC;AACnCoB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEyB,GAAG,CAAC,GAAI,CAAC;AACrCmB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEuB,GAAG,CAAC,GAAI,CAAC;AACrCrtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEwB,GAAG,CAAC,GAAI,CAAC;AACnCvtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnCiB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAE+B,GAAG,CAAC,GAAI,CAAC;AACrCgB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAE6B,GAAG,CAAC,GAAI,CAAC;AACrCxtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnC1tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AACnCc,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAEqC,GAAG,CAAC,GAAI,CAAC;AACrCa,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAEmC,GAAG,CAAC,GAAI,CAAC;AACrC3tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AACnC7tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAE0C,GAAG,CAAC,GAAI,CAAC;AACnCW,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAE2C,GAAG,CAAC,GAAI,CAAC;AACrCU,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAEyC,GAAG,CAAC,GAAI,CAAC;AACrC9tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAE0C,GAAG,CAAC,GAAI,CAAC;AACnChuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAE+C,GAAG,CAAC,GAAI,CAAC;AACnCQ,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAEgD,GAAG,CAAC,GAAI,CAAC;AACrCO,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAE8C,GAAG,CAAC,GAAI,CAAC;AACrCjuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAE+C,GAAG,CAAC,GAAI,CAAC;AACnCnuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEqD,GAAG,CAAC,GAAI,CAAC;AACnCK,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEsD,GAAG,CAAC,GAAI,CAAC;AACrCI,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAEoD,GAAG,CAAC,GAAI,CAAC;AACrCpuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAEqD,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIa,EAAE,GAAI,CAAEpoB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACtD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKS,EAAE,KAAK,EAAE,CAAC,GAAI,CAAC;GACjDA,EAAE,IAAI,SAAS;;AAEf;GACAnvB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEG,GAAG,CAAC;GACxB6B,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEI,GAAG,CAAC;AACzB4B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEE,GAAG,CAAC,GAAI,CAAC;GACrC5sB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEG,GAAG,CAAC;AACxB9sB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAES,GAAG,CAAC,GAAI,CAAC;AACnC0B,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEU,GAAG,CAAC,GAAI,CAAC;AACrCyB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEQ,GAAG,CAAC,GAAI,CAAC;AACrC/sB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAES,GAAG,CAAC,GAAI,CAAC;AACnCjtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEe,GAAG,CAAC,GAAI,CAAC;AACnCuB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEgB,GAAG,CAAC,GAAI,CAAC;AACrCsB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEc,GAAG,CAAC,GAAI,CAAC;AACrCltB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEe,GAAG,CAAC,GAAI,CAAC;AACnCptB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEqB,GAAG,CAAC,GAAI,CAAC;AACnCoB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEsB,GAAG,CAAC,GAAI,CAAC;AACrCmB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEoB,GAAG,CAAC,GAAI,CAAC;AACrCrtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEqB,GAAG,CAAC,GAAI,CAAC;AACnCvtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnCiB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAE4B,GAAG,CAAC,GAAI,CAAC;AACrCgB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAE0B,GAAG,CAAC,GAAI,CAAC;AACrCxtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnC1tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACnCc,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAEkC,GAAG,CAAC,GAAI,CAAC;AACrCa,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAEgC,GAAG,CAAC,GAAI,CAAC;AACrC3tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACnC7tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAEuC,GAAG,CAAC,GAAI,CAAC;AACnCW,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAEwC,GAAG,CAAC,GAAI,CAAC;AACrCU,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAEsC,GAAG,CAAC,GAAI,CAAC;AACrC9tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAEuC,GAAG,CAAC,GAAI,CAAC;AACnChuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAE6C,GAAG,CAAC,GAAI,CAAC;AACnCQ,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAE8C,GAAG,CAAC,GAAI,CAAC;AACrCO,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAE4C,GAAG,CAAC,GAAI,CAAC;AACrCjuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAE6C,GAAG,CAAC,GAAI,CAAC;AACnCnuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAEkD,GAAG,CAAC,GAAI,CAAC;AACnCK,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAEmD,GAAG,CAAC,GAAI,CAAC;AACrCI,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAEiD,GAAG,CAAC,GAAI,CAAC;AACrCpuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAEkD,GAAG,CAAC,GAAI,CAAC;AACnCtuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEwD,GAAG,CAAC,GAAI,CAAC;AACnCE,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACmc,GAAG,EAAEyD,GAAG,CAAC,GAAI,CAAC;AACrCC,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAEuD,GAAG,CAAC,GAAI,CAAC;AACrCvuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACoc,GAAG,EAAEwD,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIW,EAAE,GAAI,CAAEroB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACtD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKU,EAAE,KAAK,EAAE,CAAC,GAAI,CAAC;GACjDA,EAAE,IAAI,SAAS;;AAEf;GACApvB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEM,GAAG,CAAC;GACxB0B,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEO,GAAG,CAAC;AACzByB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEK,GAAG,CAAC,GAAI,CAAC;GACrC/sB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEM,GAAG,CAAC;AACxBjtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEY,GAAG,CAAC,GAAI,CAAC;AACnCuB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEa,GAAG,CAAC,GAAI,CAAC;AACrCsB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEW,GAAG,CAAC,GAAI,CAAC;AACrCltB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEY,GAAG,CAAC,GAAI,CAAC;AACnCptB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEkB,GAAG,CAAC,GAAI,CAAC;AACnCoB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEmB,GAAG,CAAC,GAAI,CAAC;AACrCmB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEiB,GAAG,CAAC,GAAI,CAAC;AACrCrtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEkB,GAAG,CAAC,GAAI,CAAC;AACnCvtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEwB,GAAG,CAAC,GAAI,CAAC;AACnCiB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEyB,GAAG,CAAC,GAAI,CAAC;AACrCgB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEuB,GAAG,CAAC,GAAI,CAAC;AACrCxtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEwB,GAAG,CAAC,GAAI,CAAC;AACnC1tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnCc,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAE+B,GAAG,CAAC,GAAI,CAAC;AACrCa,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAE6B,GAAG,CAAC,GAAI,CAAC;AACrC3tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnC7tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AACnCW,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAEqC,GAAG,CAAC,GAAI,CAAC;AACrCU,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAEmC,GAAG,CAAC,GAAI,CAAC;AACrC9tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AACnChuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAE0C,GAAG,CAAC,GAAI,CAAC;AACnCQ,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAE2C,GAAG,CAAC,GAAI,CAAC;AACrCO,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAEyC,GAAG,CAAC,GAAI,CAAC;AACrCjuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAE0C,GAAG,CAAC,GAAI,CAAC;AACnCnuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAEgD,GAAG,CAAC,GAAI,CAAC;AACnCK,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAEiD,GAAG,CAAC,GAAI,CAAC;AACrCI,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAE+C,GAAG,CAAC,GAAI,CAAC;AACrCpuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAEgD,GAAG,CAAC,GAAI,CAAC;AACnCtuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAEqD,GAAG,CAAC,GAAI,CAAC;AACnCE,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACsc,GAAG,EAAEsD,GAAG,CAAC,GAAI,CAAC;AACrCC,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAEoD,GAAG,CAAC,GAAI,CAAC;AACrCvuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACuc,GAAG,EAAEqD,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIY,GAAG,GAAI,CAAEtoB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACvD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKW,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC;GAClDA,GAAG,IAAI,SAAS;;AAEhB;GACArvB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAES,GAAG,CAAC;GACxBuB,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEU,GAAG,CAAC;AACzBsB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEQ,GAAG,CAAC,GAAI,CAAC;GACrCltB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAES,GAAG,CAAC;AACxBptB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEe,GAAG,CAAC,GAAI,CAAC;AACnCoB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEgB,GAAG,CAAC,GAAI,CAAC;AACrCmB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEc,GAAG,CAAC,GAAI,CAAC;AACrCrtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEe,GAAG,CAAC,GAAI,CAAC;AACnCvtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEqB,GAAG,CAAC,GAAI,CAAC;AACnCiB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEsB,GAAG,CAAC,GAAI,CAAC;AACrCgB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEoB,GAAG,CAAC,GAAI,CAAC;AACrCxtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEqB,GAAG,CAAC,GAAI,CAAC;AACnC1tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnCc,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAE4B,GAAG,CAAC,GAAI,CAAC;AACrCa,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAE0B,GAAG,CAAC,GAAI,CAAC;AACrC3tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnC7tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACnCW,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEkC,GAAG,CAAC,GAAI,CAAC;AACrCU,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEgC,GAAG,CAAC,GAAI,CAAC;AACrC9tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACnChuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAEuC,GAAG,CAAC,GAAI,CAAC;AACnCQ,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAEwC,GAAG,CAAC,GAAI,CAAC;AACrCO,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAEsC,GAAG,CAAC,GAAI,CAAC;AACrCjuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAEuC,GAAG,CAAC,GAAI,CAAC;AACnCnuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAE6C,GAAG,CAAC,GAAI,CAAC;AACnCK,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAE8C,GAAG,CAAC,GAAI,CAAC;AACrCI,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAE4C,GAAG,CAAC,GAAI,CAAC;AACrCpuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAE6C,GAAG,CAAC,GAAI,CAAC;AACnCtuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAEmD,GAAG,CAAC,GAAI,CAAC;AACnCE,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwc,GAAG,EAAEoD,GAAG,CAAC,GAAI,CAAC;AACrCC,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAEkD,GAAG,CAAC,GAAI,CAAC;AACrCvuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACyc,GAAG,EAAEmD,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIa,GAAG,GAAI,CAAEvoB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACvD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKY,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC;GAClDA,GAAG,IAAI,SAAS;;AAEhB;GACAtvB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEY,GAAG,CAAC;GACxBoB,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEa,GAAG,CAAC;AACzBmB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEW,GAAG,CAAC,GAAI,CAAC;GACrCrtB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEY,GAAG,CAAC;AACxBvtB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEkB,GAAG,CAAC,GAAI,CAAC;AACnCiB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEmB,GAAG,CAAC,GAAI,CAAC;AACrCgB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEiB,GAAG,CAAC,GAAI,CAAC;AACrCxtB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEkB,GAAG,CAAC,GAAI,CAAC;AACnC1tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEwB,GAAG,CAAC,GAAI,CAAC;AACnCc,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEyB,GAAG,CAAC,GAAI,CAAC;AACrCa,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEuB,GAAG,CAAC,GAAI,CAAC;AACrC3tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEwB,GAAG,CAAC,GAAI,CAAC;AACnC7tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnCW,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAE+B,GAAG,CAAC,GAAI,CAAC;AACrCU,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAE6B,GAAG,CAAC,GAAI,CAAC;AACrC9tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnChuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AACnCQ,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEqC,GAAG,CAAC,GAAI,CAAC;AACrCO,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEmC,GAAG,CAAC,GAAI,CAAC;AACrCjuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AACnCnuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAE0C,GAAG,CAAC,GAAI,CAAC;AACnCK,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAE2C,GAAG,CAAC,GAAI,CAAC;AACrCI,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAEyC,GAAG,CAAC,GAAI,CAAC;AACrCpuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAE0C,GAAG,CAAC,GAAI,CAAC;AACnCtuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAEgD,GAAG,CAAC,GAAI,CAAC;AACnCE,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2c,GAAG,EAAEiD,GAAG,CAAC,GAAI,CAAC;AACrCC,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAE+C,GAAG,CAAC,GAAI,CAAC;AACrCvuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC4c,GAAG,EAAEgD,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIc,GAAG,GAAI,CAAExoB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACvD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKa,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC;GAClDA,GAAG,IAAI,SAAS;;AAEhB;GACAvvB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEe,GAAG,CAAC;GACxBiB,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEgB,GAAG,CAAC;AACzBgB,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEc,GAAG,CAAC,GAAI,CAAC;GACrCxtB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEe,GAAG,CAAC;AACxB1tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEqB,GAAG,CAAC,GAAI,CAAC;AACnCc,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEsB,GAAG,CAAC,GAAI,CAAC;AACrCa,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEoB,GAAG,CAAC,GAAI,CAAC;AACrC3tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEqB,GAAG,CAAC,GAAI,CAAC;AACnC7tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnCW,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAE4B,GAAG,CAAC,GAAI,CAAC;AACrCU,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAE0B,GAAG,CAAC,GAAI,CAAC;AACrC9tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnChuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACnCQ,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEkC,GAAG,CAAC,GAAI,CAAC;AACrCO,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEgC,GAAG,CAAC,GAAI,CAAC;AACrCjuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACnCnuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEuC,GAAG,CAAC,GAAI,CAAC;AACnCK,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAEwC,GAAG,CAAC,GAAI,CAAC;AACrCI,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEsC,GAAG,CAAC,GAAI,CAAC;AACrCpuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEuC,GAAG,CAAC,GAAI,CAAC;AACnCtuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAE6C,GAAG,CAAC,GAAI,CAAC;AACnCE,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8c,GAAG,EAAE8C,GAAG,CAAC,GAAI,CAAC;AACrCC,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAE4C,GAAG,CAAC,GAAI,CAAC;AACrCvuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC+c,GAAG,EAAE6C,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIe,GAAG,GAAI,CAAEzoB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACvD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKc,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC;GAClDA,GAAG,IAAI,SAAS;;AAEhB;GACAxvB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEkB,GAAG,CAAC;GACxBc,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEmB,GAAG,CAAC;AACzBa,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEiB,GAAG,CAAC,GAAI,CAAC;GACrC3tB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEkB,GAAG,CAAC;AACxB7tB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEwB,GAAG,CAAC,GAAI,CAAC;AACnCW,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEyB,GAAG,CAAC,GAAI,CAAC;AACrCU,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEuB,GAAG,CAAC,GAAI,CAAC;AACrC9tB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEwB,GAAG,CAAC,GAAI,CAAC;AACnChuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnCQ,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAE+B,GAAG,CAAC,GAAI,CAAC;AACrCO,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAE6B,GAAG,CAAC,GAAI,CAAC;AACrCjuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnCnuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AACnCK,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEqC,GAAG,CAAC,GAAI,CAAC;AACrCI,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEmC,GAAG,CAAC,GAAI,CAAC;AACrCpuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AACnCtuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAE0C,GAAG,CAAC,GAAI,CAAC;AACnCE,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACid,GAAG,EAAE2C,GAAG,CAAC,GAAI,CAAC;AACrCC,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAEyC,GAAG,CAAC,GAAI,CAAC;AACrCvuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACkd,GAAG,EAAE0C,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIgB,GAAG,GAAI,CAAE1oB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACvD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKe,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC;GAClDA,GAAG,IAAI,SAAS;;AAEhB;GACAzvB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEqB,GAAG,CAAC;GACxBW,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEsB,GAAG,CAAC;AACzBU,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEoB,GAAG,CAAC,GAAI,CAAC;GACrC9tB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEqB,GAAG,CAAC;AACxBhuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnCQ,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAE4B,GAAG,CAAC,GAAI,CAAC;AACrCO,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAE0B,GAAG,CAAC,GAAI,CAAC;AACrCjuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAE2B,GAAG,CAAC,GAAI,CAAC;AACnCnuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACnCK,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEkC,GAAG,CAAC,GAAI,CAAC;AACrCI,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEgC,GAAG,CAAC,GAAI,CAAC;AACrCpuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACnCtuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEuC,GAAG,CAAC,GAAI,CAAC;AACnCE,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACod,GAAG,EAAEwC,GAAG,CAAC,GAAI,CAAC;AACrCC,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEsC,GAAG,CAAC,GAAI,CAAC;AACrCvuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACqd,GAAG,EAAEuC,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIiB,GAAG,GAAI,CAAE3oB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACvD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKgB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC;GAClDA,GAAG,IAAI,SAAS;;AAEhB;GACA1vB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEwB,GAAG,CAAC;GACxBQ,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAEyB,GAAG,CAAC;AACzBO,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEuB,GAAG,CAAC,GAAI,CAAC;GACrCjuB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAEwB,GAAG,CAAC;AACxBnuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnCK,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAE+B,GAAG,CAAC,GAAI,CAAC;AACrCI,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAE6B,GAAG,CAAC,GAAI,CAAC;AACrCpuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAE8B,GAAG,CAAC,GAAI,CAAC;AACnCtuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AACnCE,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACud,GAAG,EAAEqC,GAAG,CAAC,GAAI,CAAC;AACrCC,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEmC,GAAG,CAAC,GAAI,CAAC;AACrCvuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAACwd,GAAG,EAAEoC,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAIkB,GAAG,GAAI,CAAE5oB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACvD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKiB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC;GAClDA,GAAG,IAAI,SAAS;;AAEhB;GACA3vB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAE2B,GAAG,CAAC;GACxBK,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAE4B,GAAG,CAAC;AACzBI,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAE0B,GAAG,CAAC,GAAI,CAAC;GACrCpuB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAE2B,GAAG,CAAC;AACxBtuB,GAAAA,EAAE,GAAIA,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AACnCE,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC0d,GAAG,EAAEkC,GAAG,CAAC,GAAI,CAAC;AACrCC,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEgC,GAAG,CAAC,GAAI,CAAC;AACrCvuB,GAAAA,EAAE,GAAIA,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC2d,GAAG,EAAEiC,GAAG,CAAC,GAAI,CAAC;AAEnC,GAAA,IAAImB,GAAG,GAAI,CAAE7oB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACvD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKkB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC;GAClDA,GAAG,IAAI,SAAS;;AAEhB;GACA5vB,EAAE,GAAGqN,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAE8B,GAAG,CAAC;GACxBE,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC6d,GAAG,EAAE+B,GAAG,CAAC;AACzBC,GAAAA,GAAG,GAAIA,GAAG,GAAGrhB,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAE6B,GAAG,CAAC,GAAI,CAAC;GACrCvuB,EAAE,GAAGoN,IAAI,CAACwB,IAAI,CAAC8d,GAAG,EAAE8B,GAAG,CAAC;AAExB,GAAA,IAAIoB,GAAG,GAAI,CAAE9oB,CAAC,GAAG/G,EAAE,GAAI,CAAC,KAAK,CAAC0uB,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,GAAI,CAAC;AACvD3nB,GAAAA,CAAC,GAAI,CAAE9G,EAAE,IAAIyuB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC,KAAKmB,GAAG,KAAK,EAAE,CAAC,GAAI,CAAC;GAClDA,GAAG,IAAI,SAAS;AAEhB/E,GAAAA,CAAC,CAAC,CAAC,CAAC,GAAG6D,EAAE;AACT7D,GAAAA,CAAC,CAAC,CAAC,CAAC,GAAG8D,EAAE;AACT9D,GAAAA,CAAC,CAAC,CAAC,CAAC,GAAG+D,EAAE;AACT/D,GAAAA,CAAC,CAAC,CAAC,CAAC,GAAGgE,EAAE;AACThE,GAAAA,CAAC,CAAC,CAAC,CAAC,GAAGiE,EAAE;AACTjE,GAAAA,CAAC,CAAC,CAAC,CAAC,GAAGkE,EAAE;AACTlE,GAAAA,CAAC,CAAC,CAAC,CAAC,GAAGmE,EAAE;AACTnE,GAAAA,CAAC,CAAC,CAAC,CAAC,GAAGoE,EAAE;AACTpE,GAAAA,CAAC,CAAC,CAAC,CAAC,GAAGqE,EAAE;AACTrE,GAAAA,CAAC,CAAC,CAAC,CAAC,GAAGsE,EAAE;AACTtE,GAAAA,CAAC,CAAC,EAAE,CAAC,GAAGuE,GAAG;AACXvE,GAAAA,CAAC,CAAC,EAAE,CAAC,GAAGwE,GAAG;AACXxE,GAAAA,CAAC,CAAC,EAAE,CAAC,GAAGyE,GAAG;AACXzE,GAAAA,CAAC,CAAC,EAAE,CAAC,GAAG0E,GAAG;AACX1E,GAAAA,CAAC,CAAC,EAAE,CAAC,GAAG2E,GAAG;AACX3E,GAAAA,CAAC,CAAC,EAAE,CAAC,GAAG4E,GAAG;AACX5E,GAAAA,CAAC,CAAC,EAAE,CAAC,GAAG6E,GAAG;AACX7E,GAAAA,CAAC,CAAC,EAAE,CAAC,GAAG8E,GAAG;AACX9E,GAAAA,CAAC,CAAC,EAAE,CAAC,GAAG+E,GAAG;GAEX,IAAI9oB,CAAC,KAAK,CAAC,EAAE;AACX+jB,KAAAA,CAAC,CAAC,EAAE,CAAC,GAAG/jB,CAAC;KACTN,GAAG,CAACtG,MAAM,IAAI,CAAC;AACjB;;AAEA;AACA,GAAA,OAAOsG,GAAG;AACZ;;AAEA;AACA,CAAA,IAAI,CAAC4G,IAAI,CAACwB,IAAI,EACZJ,WAAW,GAAGC,UAAU;;AAE1B;AACA;AACA;;CAEA/B,EAAE,CAACqP,GAAG,GAAGA,GAAG;AAEZpZ,CAAAA,EAAc,GAAG+J,EAAE;;;;;;;;;;;;;;;;;;;ACnwNnB;AACA;AACA;EAEA,MAAMA,EAAE,GAAGrN,SAA2B,EAAA;EAEtC,MAAMwwB,OAAO,GAAGvwB,OAAO;;AAEvB;AACA;AACA;;EAEA,SAASuH,CAACA,CAAClC,IAAI,EAAE;IACf,OAAO3B,MAAM,CAACnB,IAAI,CAAC8C,IAAI,EAAE,KAAK,CAAC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;EAEAkrB,OAAO,CAACC,KAAK,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;;AAExD;AACA;AACA;AACA;AACA;AACA;;EAEA,MAAMC,IAAI,GAAG,EAAE;;AAEf;AACA;AACA;AACA;AACA;;EAEAA,IAAI,CAACzF,IAAI,GAAG,MAAM;;AAElB;AACA;AACA;AACA;AACA;;AAEAyF,EAAAA,IAAI,CAACC,KAAK,GAAG,CACX,kBAAkB,EAClB,2BAA2B,EAC3B,sCAAsC,EACtC,gBAAgB,EAChB,qBAAqB,EACrB,yBAAyB,CAC1B;;AAED;AACA;AACA;AACA;AACA;;EAEAD,IAAI,CAACE,KAAK,GAAG,UAAU;;AAEvB;AACA;AACA;AACA;AACA;;EAEAF,IAAI,CAACG,IAAI,GAAG,IAAI;;AAEhB;AACA;AACA;AACA;;EAEAH,IAAI,CAACI,aAAa,GAAG;AACnB,IAAA,KAAK,EAAEtpB,CAAC,CAAC,kEAAkE,CAAC;AAC5E,IAAA,KAAK,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC5E,IAAA,KAAK,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC5E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E;AACA,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E,IAAA,MAAM,EAAEA,CAAC,CAAC,kEAAkE,CAAC;AAC7E;AACA,IAA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AU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAC/C,CAAC;AAEF,CAAA,MAAM48E,GAAG,GAAG,IAAI58E,WAAW,CAAC,CAC1B,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAC/C,CAAC;AAEF,CAAA,MAAM68E,GAAG,GAAG,IAAI78E,WAAW,CAAC,CAC1B,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAC/C,CAAC;AAEF,CAAA,MAAM88E,GAAG,GAAG,IAAI98E,WAAW,CAAC,CAC1B,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAC/C,CAAC;AAEF,CAAA,MAAM+8E,GAAG,GAAG,IAAI/8E,WAAW,CAAC,CAC1B,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAC/C,CAAC;AAEF,CAAA,MAAMg9E,GAAG,GAAG,IAAIh9E,WAAW,CAAC,CAC1B,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAC/C,CAAC;AAEF,CAAA,MAAMi9E,GAAG,GAAG,IAAIj9E,WAAW,CAAC,CAC1B,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAC/C,CAAC;AAEF,CAAA,MAAMk9E,GAAG,GAAG,IAAIl9E,WAAW,CAAC,CAC1B,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAC/C,CAAC;AAEF,CAAA,MAAMm9E,GAAG,GAAG,IAAIp6E,UAAU,CAAC,CACzq6E,IAAI,GAAG,IAAIp9E,WAAW,CAAC,CAC3B,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC9C,UAAU,EAAE,UAAU,CACvB,CAAC;;AAEF;AACA;AACA;;AAEA,CAAA,MAAMq9E,GAAG,CAAC;AACRxhF,GAAAA,WAAWA,CAAC8G,IAAI,GAAG,GAAG,EAAE;AACtBnJ,KAAAA,MAAM,CAAEmJ,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;KAE7B,IAAI,CAACA,IAAI,GAAGA,IAAI;AAChB,KAAA,IAAI,CAACs5B,MAAM,GAAGqhD,SAAS,CAAC36E,IAAI,CAAC;KAC7B,IAAI,CAACxD,GAAG,GAAG,IAAI;KACf,IAAI,CAACo+E,MAAM,GAAG,IAAI;KAClB,IAAI,CAACC,MAAM,GAAG,IAAI;AACpB;GAEA,IAAI56E,SAASA,GAAG;AACd,KAAA,OAAO,EAAE;AACX;GAEA1D,IAAIA,CAACC,GAAG,EAAE;KACR3F,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACD,GAAG,CAAC,CAAC;AAE5B,KAAA,IAAIA,GAAG,CAAC7E,MAAM,KAAM,IAAI,CAACqI,IAAI,KAAK,CAAE,EAClC,MAAM,IAAInH,KAAK,CAAC,mBAAmB,CAAC;KAEtC,IAAI,CAACk9B,OAAO,EAAE;KACd,IAAI,CAACv5B,GAAG,GAAG/B,MAAM,CAACnB,IAAI,CAACkD,GAAG,CAAC;KAC3B,IAAI,CAACo+E,MAAM,GAAG,IAAI;KAClB,IAAI,CAACC,MAAM,GAAG,IAAI;AAElB,KAAA,OAAO,IAAI;AACb;AAEAC,GAAAA,gBAAgBA,GAAG;KACjB,IAAI,CAAC,IAAI,CAACt+E,GAAG,EACX,MAAM,IAAI3D,KAAK,CAAC,4BAA4B,CAAC;AAE/C,KAAA,MAAMkiF,IAAI,GAAG,IAAI,CAACv+E,GAAG;AAErB,KAAA,IAAIu+E,IAAI,CAACpjF,MAAM,KAAM,IAAI,CAACqI,IAAI,KAAK,CAAE,EACnC,MAAM,IAAInH,KAAK,CAAC,mBAAmB,CAAC;AAEtC,KAAA,MAAM2D,GAAG,GAAG,IAAIa,WAAW,CAAC,EAAE,CAAC;KAE/Bb,GAAG,CAAC,CAAC,CAAC,GAAGoC,OAAO,CAACm8E,IAAI,EAAE,CAAC,CAAC;KACzBv+E,GAAG,CAAC,CAAC,CAAC,GAAGoC,OAAO,CAACm8E,IAAI,EAAE,CAAC,CAAC;KACzBv+E,GAAG,CAAC,CAAC,CAAC,GAAGoC,OAAO,CAACm8E,IAAI,EAAE,CAAC,CAAC;KACzBv+E,GAAG,CAAC,CAAC,CAAC,GAAGoC,OAAO,CAACm8E,IAAI,EAAE,EAAE,CAAC;KAE1B,IAAIpyE,CAAC,GAAG,CAAC;KACT,IAAI5L,CAAC,GAAG,CAAC;AAET,KAAA,IAAI,IAAI,CAACiD,IAAI,KAAK,GAAG,EAAE;OACrB,SAAS;SACP,MAAMg7E,GAAG,GAAGx+E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;SAEtBnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,CAAC,GACduxE,GAAG,CAAEc,GAAG,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAW,GACtCb,GAAG,CAAEa,GAAG,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACtChB,GAAG,CAAEgB,GAAG,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACtCf,GAAG,CAAEe,GAAG,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAW,GACvCP,IAAI,CAAC19E,CAAC,CAAC;AAEXP,SAAAA,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AACpCnM,SAAAA,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AACpCnM,SAAAA,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;SAEpC5L,CAAC,IAAI,CAAC;SAEN,IAAIA,CAAC,KAAK,EAAE,EACV;SAEF4L,CAAC,IAAI,CAAC;AACR;AAEA,OAAA,OAAOnM,GAAG;AACZ;KAEAA,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAG/J,OAAO,CAACm8E,IAAI,EAAE,EAAE,CAAC;KAC9Bv+E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAG/J,OAAO,CAACm8E,IAAI,EAAE,EAAE,CAAC;AAE9B,KAAA,IAAI,IAAI,CAAC/6E,IAAI,KAAK,GAAG,EAAE;OACrB,SAAS;SACP,MAAMg7E,GAAG,GAAGx+E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;SAEtBnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,CAAC,GACduxE,GAAG,CAAEc,GAAG,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAW,GACtCb,GAAG,CAAEa,GAAG,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACtChB,GAAG,CAAEgB,GAAG,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACtCf,GAAG,CAAEe,GAAG,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAW,GACvCP,IAAI,CAAC19E,CAAC,CAAC;AAEXP,SAAAA,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AACpCnM,SAAAA,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AACpCnM,SAAAA,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;SAEpC5L,CAAC,IAAI,CAAC;SAEN,IAAIA,CAAC,KAAK,CAAC,EACT;AAEFP,SAAAA,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AACrCnM,SAAAA,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC;SACtCA,CAAC,IAAI,CAAC;AACR;AAEA,OAAA,OAAOnM,GAAG;AACZ;KAEAA,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAG/J,OAAO,CAACm8E,IAAI,EAAE,EAAE,CAAC;KAC9Bv+E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAG/J,OAAO,CAACm8E,IAAI,EAAE,EAAE,CAAC;AAE9B,KAAA,IAAI,IAAI,CAAC/6E,IAAI,KAAK,GAAG,EAAE;OACrB,SAAS;SACP,IAAIg7E,GAAG,GAAGx+E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;SAEpBnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,CAAC,GACduxE,GAAG,CAAEc,GAAG,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAW,GACtCb,GAAG,CAAEa,GAAG,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACtChB,GAAG,CAAEgB,GAAG,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACtCf,GAAG,CAAEe,GAAG,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAW,GACvCP,IAAI,CAAC19E,CAAC,CAAC;AAEXP,SAAAA,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AACpCnM,SAAAA,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AACrCnM,SAAAA,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC;SAEtC5L,CAAC,IAAI,CAAC;SAEN,IAAIA,CAAC,KAAK,CAAC,EACT;AAEFi+E,SAAAA,GAAG,GAAGx+E,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC;SAEjBnM,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GACnBuxE,GAAG,CAAEc,GAAG,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAW,GACtCb,GAAG,CAAEa,GAAG,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAW,GACtChB,GAAG,CAAEgB,GAAG,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACtCf,GAAG,CAAEe,GAAG,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW;AAE3Cx+E,SAAAA,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAI,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC;AACvCnM,SAAAA,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAI,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC;AACvCnM,SAAAA,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAI,CAAC,CAAC,GAAGnM,GAAG,CAACmM,CAAC,GAAG,EAAE,CAAC;SAEvCA,CAAC,IAAI,CAAC;AACR;AAEA,OAAA,OAAOnM,GAAG;AACZ;AAEA,KAAA,MAAM,IAAI3D,KAAK,CAAC,eAAe,CAAC;AAClC;AAEAoiF,GAAAA,gBAAgBA,GAAG;AACjB;AACA,KAAA,MAAMz+E,GAAG,GAAG,IAAI,CAACs+E,gBAAgB,EAAE;KAEnC,IAAInyE,CAAC,GAAG,CAAC;;AAET;KACA,KAAK,IAAI5L,CAAC,GAAG,CAAC,EAAEmE,CAAC,GAAG,CAAC,GAAG,IAAI,CAACo4B,MAAM,EAAEv8B,CAAC,GAAGmE,CAAC,EAAEnE,CAAC,IAAI,CAAC,EAAEmE,CAAC,IAAI,CAAC,EAAE;OAC1D,IAAI85E,GAAG,GAAGx+E,GAAG,CAACmM,CAAC,GAAG5L,CAAC,GAAG,CAAC,CAAC;AAExBP,OAAAA,GAAG,CAACmM,CAAC,GAAG5L,CAAC,GAAG,CAAC,CAAC,GAAGP,GAAG,CAACmM,CAAC,GAAGzH,CAAC,GAAG,CAAC,CAAC;OAC/B1E,GAAG,CAACmM,CAAC,GAAGzH,CAAC,GAAG,CAAC,CAAC,GAAG85E,GAAG;OAEpBA,GAAG,GAAGx+E,GAAG,CAACmM,CAAC,GAAG5L,CAAC,GAAG,CAAC,CAAC;AACpBP,OAAAA,GAAG,CAACmM,CAAC,GAAG5L,CAAC,GAAG,CAAC,CAAC,GAAGP,GAAG,CAACmM,CAAC,GAAGzH,CAAC,GAAG,CAAC,CAAC;OAC/B1E,GAAG,CAACmM,CAAC,GAAGzH,CAAC,GAAG,CAAC,CAAC,GAAG85E,GAAG;OAEpBA,GAAG,GAAGx+E,GAAG,CAACmM,CAAC,GAAG5L,CAAC,GAAG,CAAC,CAAC;AACpBP,OAAAA,GAAG,CAACmM,CAAC,GAAG5L,CAAC,GAAG,CAAC,CAAC,GAAGP,GAAG,CAACmM,CAAC,GAAGzH,CAAC,GAAG,CAAC,CAAC;OAC/B1E,GAAG,CAACmM,CAAC,GAAGzH,CAAC,GAAG,CAAC,CAAC,GAAG85E,GAAG;OAEpBA,GAAG,GAAGx+E,GAAG,CAACmM,CAAC,GAAG5L,CAAC,GAAG,CAAC,CAAC;AACpBP,OAAAA,GAAG,CAACmM,CAAC,GAAG5L,CAAC,GAAG,CAAC,CAAC,GAAGP,GAAG,CAACmM,CAAC,GAAGzH,CAAC,GAAG,CAAC,CAAC;OAC/B1E,GAAG,CAACmM,CAAC,GAAGzH,CAAC,GAAG,CAAC,CAAC,GAAG85E,GAAG;AACtB;;AAEA;AACA;AACA,KAAA,KAAK,IAAIj+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACu8B,MAAM,EAAEv8B,CAAC,EAAE,EAAE;OACpC4L,CAAC,IAAI,CAAC;AAENnM,OAAAA,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGyxE,GAAG,CAACH,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAC3C0xE,GAAG,CAACJ,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAC3C2xE,GAAG,CAACL,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAC3C4xE,GAAG,CAACN,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC;AAExDnM,OAAAA,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGyxE,GAAG,CAACH,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAC3C0xE,GAAG,CAACJ,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAC3C2xE,GAAG,CAACL,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAC3C4xE,GAAG,CAACN,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC;AAExDnM,OAAAA,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGyxE,GAAG,CAACH,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAC3C0xE,GAAG,CAACJ,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAC3C2xE,GAAG,CAACL,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAC3C4xE,GAAG,CAACN,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC;AAExDnM,OAAAA,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,GAAGyxE,GAAG,CAACH,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAC3C0xE,GAAG,CAACJ,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAC3C2xE,GAAG,CAACL,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAC3C4xE,GAAG,CAACN,GAAG,CAAEz9E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC;AAC1D;AAEA,KAAA,OAAOnM,GAAG;AACZ;AAEA0+E,GAAAA,aAAaA,GAAG;AACd,KAAA,IAAI,CAAC,IAAI,CAACN,MAAM,EACd,IAAI,CAACA,MAAM,GAAG,IAAI,CAACE,gBAAgB,EAAE;KACvC,OAAO,IAAI,CAACF,MAAM;AACpB;AAEAO,GAAAA,aAAaA,GAAG;AACd,KAAA,IAAI,CAAC,IAAI,CAACN,MAAM,EACd,IAAI,CAACA,MAAM,GAAG,IAAI,CAACI,gBAAgB,EAAE;KACvC,OAAO,IAAI,CAACJ,MAAM;AACpB;GAEAjlD,OAAOA,CAACnoB,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,EAAE;AACjC,KAAA,MAAM7+E,GAAG,GAAG,IAAI,CAAC0+E,aAAa,EAAE;;AAEhC;AACA;AACA,KAAA,IAAII,EAAE,GAAG18E,OAAO,CAACyc,KAAK,EAAEggE,IAAI,GAAI,CAAC,CAAC,GAAG7+E,GAAG,CAAC,CAAC,CAAC;AAC3C,KAAA,IAAIm6B,EAAE,GAAG/3B,OAAO,CAACyc,KAAK,EAAEggE,IAAI,GAAI,CAAC,CAAC,GAAG7+E,GAAG,CAAC,CAAC,CAAC;AAC3C,KAAA,IAAIo6B,EAAE,GAAGh4B,OAAO,CAACyc,KAAK,EAAEggE,IAAI,GAAI,CAAC,CAAC,GAAG7+E,GAAG,CAAC,CAAC,CAAC;AAC3C,KAAA,IAAI++E,EAAE,GAAG38E,OAAO,CAACyc,KAAK,EAAEggE,IAAI,GAAG,EAAE,CAAC,GAAG7+E,GAAG,CAAC,CAAC,CAAC;;AAE3C;AACA,KAAA,IAAI2D,CAAC,GAAG,IAAI,CAACm5B,MAAM,KAAK,CAAC;KACzB,IAAI3wB,CAAC,GAAG,CAAC;AACT,KAAA,IAAI+/B,EAAE,EAAE3pC,EAAE,EAAEG,EAAE,EAAEsqC,EAAE;KAElB,SAAS;AACPd,OAAAA,EAAE,GAAGsxC,GAAG,CAAEsB,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBrB,GAAG,CAAEtjD,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBujD,GAAG,CAAEtjD,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBujD,GAAG,CAAEoB,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvB/+E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AAEf5J,OAAAA,EAAE,GAAGi7E,GAAG,CAAErjD,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBsjD,GAAG,CAAErjD,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBsjD,GAAG,CAAEqB,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBpB,GAAG,CAAEmB,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvB9+E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AAEfzJ,OAAAA,EAAE,GAAG86E,GAAG,CAAEpjD,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBqjD,GAAG,CAAEsB,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBrB,GAAG,CAAEoB,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBnB,GAAG,CAAExjD,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBn6B,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AAEf6gC,OAAAA,EAAE,GAAGwwC,GAAG,CAAEuB,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBtB,GAAG,CAAEqB,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBpB,GAAG,CAAEvjD,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBwjD,GAAG,CAAEvjD,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBp6B,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;OAEfA,CAAC,IAAI,CAAC;OACNxI,CAAC,IAAI,CAAC;OAEN,IAAIA,CAAC,KAAK,CAAC,EACT;AAEFm7E,OAAAA,EAAE,GAAGtB,GAAG,CAAEtxC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBuxC,GAAG,CAAEl7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBm7E,GAAG,CAAEh7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBi7E,GAAG,CAAE3wC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBhtC,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AAEfguB,OAAAA,EAAE,GAAGqjD,GAAG,CAAEj7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBk7E,GAAG,CAAE/6E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBg7E,GAAG,CAAE1wC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvB2wC,GAAG,CAAEzxC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBlsC,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AAEfiuB,OAAAA,EAAE,GAAGojD,GAAG,CAAE96E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvB+6E,GAAG,CAAEzwC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvB0wC,GAAG,CAAExxC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvByxC,GAAG,CAAEp7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBvC,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AAEf4yE,OAAAA,EAAE,GAAGvB,GAAG,CAAExwC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBywC,GAAG,CAAEvxC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBwxC,GAAG,CAAEn7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBo7E,GAAG,CAAEj7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvB1C,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AACjB;;AAEA;AACA;KACA2yE,EAAE,GAAIpB,GAAG,CAAExxC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAU,GACpCyxC,GAAG,CAAEp7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAW,GACrCi7E,GAAG,CAAE96E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACrC+6E,GAAG,CAAEzwC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACtChtC,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;KAEfguB,EAAE,GAAIujD,GAAG,CAAEn7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAU,GACpCo7E,GAAG,CAAEj7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAW,GACrC86E,GAAG,CAAExwC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACrCywC,GAAG,CAAEvxC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACtClsC,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;KAEfiuB,EAAE,GAAIsjD,GAAG,CAAEh7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAU,GACpCi7E,GAAG,CAAE3wC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAW,GACrCwwC,GAAG,CAAEtxC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACrCuxC,GAAG,CAAEl7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACtCvC,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;KAEf4yE,EAAE,GAAIrB,GAAG,CAAE1wC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAU,GACpC2wC,GAAG,CAAEzxC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GAAG,UAAW,GACrCsxC,GAAG,CAAEj7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACrCk7E,GAAG,CAAE/6E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GAAG,UAAW,GACtC1C,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;KAEfzK,QAAQ,CAACuP,MAAM,EAAE6tE,EAAE,EAAEF,IAAI,GAAG,CAAC,CAAC;KAC9Bl9E,QAAQ,CAACuP,MAAM,EAAEkpB,EAAE,EAAEykD,IAAI,GAAG,CAAC,CAAC;KAC9Bl9E,QAAQ,CAACuP,MAAM,EAAEmpB,EAAE,EAAEwkD,IAAI,GAAG,CAAC,CAAC;KAC9Bl9E,QAAQ,CAACuP,MAAM,EAAE8tE,EAAE,EAAEH,IAAI,GAAG,EAAE,CAAC;AAE/B,KAAA,OAAO,IAAI;AACb;GAEAI,OAAOA,CAAC/tE,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,EAAE;AACjC,KAAA,MAAM7+E,GAAG,GAAG,IAAI,CAAC2+E,aAAa,EAAE;;AAEhC;AACA;AACA,KAAA,IAAIG,EAAE,GAAG18E,OAAO,CAACyc,KAAK,EAAEggE,IAAI,GAAI,CAAC,CAAC,GAAG7+E,GAAG,CAAC,CAAC,CAAC;AAC3C,KAAA,IAAIm6B,EAAE,GAAG/3B,OAAO,CAACyc,KAAK,EAAEggE,IAAI,GAAI,CAAC,CAAC,GAAG7+E,GAAG,CAAC,CAAC,CAAC;AAC3C,KAAA,IAAIo6B,EAAE,GAAGh4B,OAAO,CAACyc,KAAK,EAAEggE,IAAI,GAAI,CAAC,CAAC,GAAG7+E,GAAG,CAAC,CAAC,CAAC;AAC3C,KAAA,IAAI++E,EAAE,GAAG38E,OAAO,CAACyc,KAAK,EAAEggE,IAAI,GAAG,EAAE,CAAC,GAAG7+E,GAAG,CAAC,CAAC,CAAC;;AAE3C;AACA,KAAA,IAAI2D,CAAC,GAAG,IAAI,CAACm5B,MAAM,KAAK,CAAC;KACzB,IAAI3wB,CAAC,GAAG,CAAC;AACT,KAAA,IAAI+/B,EAAE,EAAE3pC,EAAE,EAAEG,EAAE,EAAEsqC,EAAE;KAElB,SAAS;AACPd,OAAAA,EAAE,GAAG0xC,GAAG,CAAEkB,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBjB,GAAG,CAAEkB,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBjB,GAAG,CAAE1jD,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvB2jD,GAAG,CAAE5jD,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBn6B,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AAEf5J,OAAAA,EAAE,GAAGq7E,GAAG,CAAEzjD,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvB0jD,GAAG,CAAEiB,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBhB,GAAG,CAAEiB,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBhB,GAAG,CAAE3jD,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBp6B,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AAEfzJ,OAAAA,EAAE,GAAGk7E,GAAG,CAAExjD,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvByjD,GAAG,CAAE1jD,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvB2jD,GAAG,CAAEgB,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBf,GAAG,CAAEgB,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvB/+E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AAEf6gC,OAAAA,EAAE,GAAG4wC,GAAG,CAAEmB,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBlB,GAAG,CAAEzjD,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvB0jD,GAAG,CAAE3jD,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvB4jD,GAAG,CAAEe,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvB9+E,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;OAEfA,CAAC,IAAI,CAAC;OACNxI,CAAC,IAAI,CAAC;OAEN,IAAIA,CAAC,KAAK,CAAC,EACT;AAEFm7E,OAAAA,EAAE,GAAGlB,GAAG,CAAE1xC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvB2xC,GAAG,CAAE7wC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvB8wC,GAAG,CAAEp7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBq7E,GAAG,CAAEx7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBvC,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AAEfguB,OAAAA,EAAE,GAAGyjD,GAAG,CAAEr7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBs7E,GAAG,CAAE3xC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvB4xC,GAAG,CAAE9wC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvB+wC,GAAG,CAAEr7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvB1C,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AAEfiuB,OAAAA,EAAE,GAAGwjD,GAAG,CAAEl7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBm7E,GAAG,CAAEt7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBu7E,GAAG,CAAE5xC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvB6xC,GAAG,CAAE/wC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBhtC,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AAEf4yE,OAAAA,EAAE,GAAGnB,GAAG,CAAE5wC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvB6wC,GAAG,CAAEn7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,GACvBo7E,GAAG,CAAEv7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBw7E,GAAG,CAAE7xC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,GACvBlsC,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;AACjB;;AAEA;AACA;KACA2yE,EAAE,GAAId,GAAG,CAAE9xC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,IAAI,EAAE,GAC7B8xC,GAAG,CAAEhxC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,IAAI,EAAG,GAC9BgxC,GAAG,CAAEt7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,IAAK,CAAE,GAC9Bs7E,GAAG,CAAEz7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,IAAK,CAAE,GAC/BvC,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;KAEfguB,EAAE,GAAI6jD,GAAG,CAAEz7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,IAAI,EAAE,GAC7By7E,GAAG,CAAE9xC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,IAAI,EAAG,GAC9B8xC,GAAG,CAAEhxC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,IAAK,CAAE,GAC9BgxC,GAAG,CAAEt7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,IAAK,CAAE,GAC/B1C,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;KAEfiuB,EAAE,GAAI4jD,GAAG,CAAEt7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,IAAI,EAAE,GAC7Bs7E,GAAG,CAAEz7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,IAAI,EAAG,GAC9By7E,GAAG,CAAE9xC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,IAAK,CAAE,GAC9B8xC,GAAG,CAAEhxC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,IAAK,CAAE,GAC/BhtC,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;KAEf4yE,EAAE,GAAIf,GAAG,CAAEhxC,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,IAAI,EAAE,GAC7BgxC,GAAG,CAAEt7E,EAAE,KAAK,EAAE,GAAI,IAAI,CAAC,IAAI,EAAG,GAC9Bs7E,GAAG,CAAEz7E,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,IAAK,CAAE,GAC9By7E,GAAG,CAAE9xC,EAAE,KAAM,CAAC,GAAI,IAAI,CAAC,IAAK,CAAE,GAC/BlsC,GAAG,CAACmM,CAAC,GAAG,CAAC,CAAC;KAEfzK,QAAQ,CAACuP,MAAM,EAAE6tE,EAAE,EAAEF,IAAI,GAAG,CAAC,CAAC;KAC9Bl9E,QAAQ,CAACuP,MAAM,EAAEkpB,EAAE,EAAEykD,IAAI,GAAG,CAAC,CAAC;KAC9Bl9E,QAAQ,CAACuP,MAAM,EAAEmpB,EAAE,EAAEwkD,IAAI,GAAG,CAAC,CAAC;KAC9Bl9E,QAAQ,CAACuP,MAAM,EAAE8tE,EAAE,EAAEH,IAAI,GAAG,EAAE,CAAC;AAE/B,KAAA,OAAO,IAAI;AACb;AAEArlD,GAAAA,OAAOA,GAAG;KACR,IAAI,IAAI,CAACv5B,GAAG,EAAE;OACZ,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACP,GAAG,CAAC7E,MAAM,EAAEoF,CAAC,EAAE,EACtC,IAAI,CAACP,GAAG,CAACO,CAAC,CAAC,GAAG,CAAC;AACnB;KAEA,IAAI,IAAI,CAAC69E,MAAM,EAAE;OACf,KAAK,IAAI79E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB,IAAI,CAAC69E,MAAM,CAAC79E,CAAC,CAAC,GAAG,CAAC;AACtB;KAEA,IAAI,IAAI,CAAC89E,MAAM,EAAE;OACf,KAAK,IAAI99E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB,IAAI,CAAC89E,MAAM,CAAC99E,CAAC,CAAC,GAAG,CAAC;AACtB;KAEA,IAAI,CAACP,GAAG,GAAG,IAAI;KACf,IAAI,CAACo+E,MAAM,GAAG,IAAI;KAClB,IAAI,CAACC,MAAM,GAAG,IAAI;AAElB,KAAA,OAAO,IAAI;AACb;AACF;;AAEA;AACA;AACA;;CAEA,SAASF,SAASA,CAAC36E,IAAI,EAAE;AACvB,GAAA,QAAQA,IAAI;AACV,KAAA,KAAK,GAAG;AACN,OAAA,OAAO,EAAE;AACX,KAAA,KAAK,GAAG;AACN,OAAA,OAAO,EAAE;AACX,KAAA,KAAK,GAAG;AACN,OAAA,OAAO,EAAE;KACX;AACE,OAAA,MAAM,IAAInH,KAAK,CAAC,eAAe,CAAC;AACpC;AACF;AAEA,CAAA,SAAS+F,OAAOA,CAAC5B,IAAI,EAAEa,GAAG,EAAE;GAC1B,OAAQb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,SAAS,GACvBb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,OAAO,GACrBb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,KAAK,GACnBb,IAAI,CAACa,GAAG,CAAC;AACnB;AAEA,CAAA,SAASK,QAAQA,CAACqD,GAAG,EAAEtK,GAAG,EAAE4G,GAAG,EAAE;GAC/B0D,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG,KAAK,EAAE;GACvBsK,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG,KAAK,EAAE;GACvBsK,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG,KAAK,CAAC;AACtBsK,GAAAA,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG;AAChB,GAAA,OAAO4G,GAAG;AACZ;;AAEA;AACA;AACA;;AAEAzD,CAAAA,GAAc,GAAGsgF,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CC/iCpB,MAAM7jF,MAAM,GAAGC,aAA6B,EAAA;;AAE5C;AACA;AACA;;CAEA,MAAMqG,OAAO,GAAG1C,MAAM,CAACqC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;CACtC,MAAMG,SAAS,GAAG,EAAE;AAEpB,CAAA,MAAMw+E,SAAS,GAAG,IAAIC,WAAW,CAAC,CAChC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAC9B,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAC9B,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAC9B,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAC/B,CAAC;;AAEF;AACA;AACA;;AAEA,CAAA,MAAMC,KAAK,CAAC;AACVziF,GAAAA,WAAWA,GAAG;KACZ,IAAI,CAACqE,KAAK,GAAG,IAAIF,WAAW,CAAC,CAAC,CAAC;KAC/B,IAAI,CAACG,KAAK,GAAG/C,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;KAC7B,IAAI,CAACf,IAAI,GAAGkB,SAAS;KACrB,IAAI,CAAC2+E,KAAK,GAAG,CAAC;KACd,IAAI,CAACC,KAAK,GAAG,CAAC;KACd,IAAI,CAACzrE,KAAK,GAAG,IAAIlU,KAAK,CAAC,EAAE,CAAC;KAE1B,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB,IAAI,CAACqT,KAAK,CAACrT,CAAC,CAAC,GAAG,IAAIM,WAAW,CAAC,CAAC,CAAC;AACtC;GAEAd,IAAIA,CAACC,GAAG,EAAE;KACR3F,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACD,GAAG,CAAC,CAAC;AAC5B3F,KAAAA,MAAM,CAAC2F,GAAG,CAAC7E,MAAM,KAAK,EAAE,CAAC;KAEzB,KAAK,IAAIoF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EACxB,IAAI,CAACQ,KAAK,CAACR,CAAC,CAAC,GAAG,CAAC;KAEnB,IAAI,CAAChB,IAAI,GAAG,CAAC;KACb,IAAI,CAAC6/E,KAAK,GAAG,CAAC;KACd,IAAI,CAACC,KAAK,GAAG,CAAC;KAEd,KAAK,IAAI9+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;OAC3B,KAAK,IAAImE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EACxB,IAAI,CAACkP,KAAK,CAACrT,CAAC,CAAC,CAACmE,CAAC,CAAC,GAAG,CAAC;AACxB;AAEA,KAAA,MAAMlF,CAAC,GAAG,IAAIqB,WAAW,CAAC,CAAC,CAAC;KAE5BrB,CAAC,CAAC,CAAC,CAAC,GAAG4C,OAAO,CAACpC,GAAG,EAAE,CAAC,CAAC;KACtBR,CAAC,CAAC,CAAC,CAAC,GAAG4C,OAAO,CAACpC,GAAG,EAAE,CAAC,CAAC;KACtBR,CAAC,CAAC,CAAC,CAAC,GAAG4C,OAAO,CAACpC,GAAG,EAAE,CAAC,CAAC;KACtBR,CAAC,CAAC,CAAC,CAAC,GAAG4C,OAAO,CAACpC,GAAG,EAAE,EAAE,CAAC;KAEvB,IAAI,CAAC4T,KAAK,CAAC4G,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGhb,CAAC;AAE1B,KAAA,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAE;OAC9B,IAAI,CAACqT,KAAK,CAAC4G,OAAO,CAACja,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC++E,MAAM,CAAC,IAAI,CAAC1rE,KAAK,CAAC4G,OAAO,CAACja,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OAClE,IAAI,CAACqT,KAAK,CAAC4G,OAAO,CAACja,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAACwI,GAAG,CAAC,IAAI,CAAC6K,KAAK,CAAC4G,OAAO,CAACja,CAAC,CAAC,CAAC,EAAEf,CAAC,CAAC;AAClE;AAEA,KAAA,OAAO,IAAI;AACb;GAEA+/E,MAAMA,CAAC/+E,IAAI,EAAE;KACX,IAAI,CAACg/E,OAAO,CAACh/E,IAAI,EAAEA,IAAI,CAACrF,MAAM,CAAC;AAC/B,KAAA,OAAO,IAAI;AACb;AAEAqkF,GAAAA,OAAOA,CAACh/E,IAAI,EAAEW,GAAG,EAAE;KACjB9G,MAAM,CAAC,IAAI,CAACkF,IAAI,KAAKkB,SAAS,EAAE,6BAA6B,CAAC;AAE9D,KAAA,IAAIW,GAAG,GAAG,IAAI,CAAC7B,IAAI,GAAG,EAAE;KACxB,IAAI8B,GAAG,GAAG,CAAC;KAEX,IAAI,CAAC9B,IAAI,IAAI4B,GAAG;KAEhB,IAAIC,GAAG,GAAG,CAAC,EAAE;AACX,OAAA,IAAIE,IAAI,GAAG,EAAE,GAAGF,GAAG;AAEnB,OAAA,IAAIE,IAAI,GAAGH,GAAG,EACZG,IAAI,GAAGH,GAAG;AAEZX,OAAAA,IAAI,CAACe,IAAI,CAAC,IAAI,CAACP,KAAK,EAAEI,GAAG,EAAEC,GAAG,EAAEA,GAAG,GAAGC,IAAI,CAAC;OAE3CF,GAAG,IAAIE,IAAI;OACXH,GAAG,IAAIG,IAAI;OACXD,GAAG,IAAIC,IAAI;OAEX,IAAIF,GAAG,GAAG,EAAE,EACV;OAEF,IAAI,CAACq+E,SAAS,CAAC,IAAI,CAACz+E,KAAK,EAAE,CAAC,CAAC;AAC/B;KAEA,OAAOG,GAAG,IAAI,EAAE,EAAE;AAChB,OAAA,IAAI,CAACs+E,SAAS,CAACj/E,IAAI,EAAEa,GAAG,CAAC;OACzBA,GAAG,IAAI,EAAE;OACTF,GAAG,IAAI,EAAE;AACX;KAEA,IAAIA,GAAG,GAAG,CAAC,EACTX,IAAI,CAACe,IAAI,CAAC,IAAI,CAACP,KAAK,EAAE,CAAC,EAAEK,GAAG,EAAEA,GAAG,GAAGF,GAAG,CAAC;AAC5C;AAEAs+E,GAAAA,SAASA,CAACz+E,KAAK,EAAEK,GAAG,EAAE;AACpB,KAAA,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,IAAIqB,OAAO,CAACpB,KAAK,EAAEK,GAAG,GAAG,CAAC,CAAC;AACxC,KAAA,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,IAAIqB,OAAO,CAACpB,KAAK,EAAEK,GAAG,GAAG,CAAC,CAAC;AACxC,KAAA,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,IAAIqB,OAAO,CAACpB,KAAK,EAAEK,GAAG,GAAG,CAAC,CAAC;AACxC,KAAA,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,IAAIqB,OAAO,CAACpB,KAAK,EAAEK,GAAG,GAAG,EAAE,CAAC;AACzC,KAAA,IAAI,CAACyI,GAAG,CAAC,IAAI,CAAC/I,KAAK,CAAC;AACtB;AAEAV,GAAAA,GAAGA,GAAG;AACJ,KAAA,MAAMe,GAAG,GAAG,IAAI,CAAC7B,IAAI,GAAG,EAAE;AAE1B,KAAA,IAAI6B,GAAG,KAAK,CAAC,EACX,IAAI,CAACo+E,OAAO,CAAC7+E,OAAO,EAAE,EAAE,GAAGS,GAAG,CAAC;AACnC;GAEAs+E,GAAGA,CAACl/E,IAAI,EAAE;KACRnG,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC7BnG,KAAAA,MAAM,CAAC,IAAI,CAACglF,KAAK,KAAK,CAAC,CAAC;AAExB,KAAA,IAAI,CAACD,KAAK,IAAI5+E,IAAI,CAACrF,MAAM;AAEzB,KAAA,OAAO,IAAI,CAACokF,MAAM,CAAC/+E,IAAI,CAAC;AAC1B;GAEAL,MAAMA,CAACK,IAAI,EAAE;KACXnG,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACO,IAAI,CAAC,CAAC;KAE7B,IAAIA,IAAI,CAACrF,MAAM,KAAK,CAAC,EACnB,OAAO,IAAI;KAEb,IAAI,IAAI,CAACkkF,KAAK,KAAK,CAAC,EAClB,IAAI,CAACh/E,GAAG,EAAE;AAEZ,KAAA,IAAI,CAACg/E,KAAK,IAAI7+E,IAAI,CAACrF,MAAM;AAEzB,KAAA,OAAO,IAAI,CAACokF,MAAM,CAAC/+E,IAAI,CAAC;AAC1B;AAEAJ,GAAAA,KAAKA,GAAG;KACN,MAAMqB,GAAG,GAAGxD,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;KAE5B,IAAI,CAACD,GAAG,EAAE;AAEV,KAAA,MAAM++E,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,CAAC;AAC5B,KAAA,MAAMC,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,CAAC;KAE5B,IAAI,CAACt+E,KAAK,CAAC,CAAC,CAAC,IAAI4+E,IAAI,CAACP,KAAK,CAAC;KAC5B,IAAI,CAACr+E,KAAK,CAAC,CAAC,CAAC,IAAI6+E,IAAI,CAACR,KAAK,CAAC;KAC5B,IAAI,CAACr+E,KAAK,CAAC,CAAC,CAAC,IAAI4+E,IAAI,CAACN,KAAK,CAAC;KAC5B,IAAI,CAACt+E,KAAK,CAAC,CAAC,CAAC,IAAI6+E,IAAI,CAACP,KAAK,CAAC;AAE5B,KAAA,IAAI,CAACv1E,GAAG,CAAC,IAAI,CAAC/I,KAAK,CAAC;KAEpBW,QAAQ,CAACD,GAAG,EAAE,IAAI,CAACV,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;KAC/BW,QAAQ,CAACD,GAAG,EAAE,IAAI,CAACV,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;KAC/BW,QAAQ,CAACD,GAAG,EAAE,IAAI,CAACV,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;KAC/BW,QAAQ,CAACD,GAAG,EAAE,IAAI,CAACV,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;KAEhC,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EACxB,IAAI,CAACQ,KAAK,CAACR,CAAC,CAAC,GAAG,CAAC;KAEnB,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB,IAAI,CAACS,KAAK,CAACT,CAAC,CAAC,GAAG,CAAC;KAEnB,IAAI,CAAChB,IAAI,GAAGkB,SAAS;KACrB,IAAI,CAAC2+E,KAAK,GAAG,CAAC;KACd,IAAI,CAACC,KAAK,GAAG,CAAC;KAEd,KAAK,IAAI9+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;OAC3B,KAAK,IAAImE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EACxB,IAAI,CAACkP,KAAK,CAACrT,CAAC,CAAC,CAACmE,CAAC,CAAC,GAAG,CAAC;AACxB;AAEA,KAAA,OAAOjD,GAAG;AACZ;AAEA83B,GAAAA,OAAOA,GAAG;KACR,KAAK,IAAIh5B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EACxB,IAAI,CAACQ,KAAK,CAACR,CAAC,CAAC,GAAG,CAAC;KAEnB,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB,IAAI,CAACS,KAAK,CAACT,CAAC,CAAC,GAAG,CAAC;KAEnB,IAAI,CAAChB,IAAI,GAAGkB,SAAS;KACrB,IAAI,CAAC2+E,KAAK,GAAG,CAAC;KACd,IAAI,CAACC,KAAK,GAAG,CAAC;KAEd,KAAK,IAAI9+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;OAC3B,KAAK,IAAImE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EACxB,IAAI,CAACkP,KAAK,CAACrT,CAAC,CAAC,CAACmE,CAAC,CAAC,GAAG,CAAC;AACxB;AACF;AAEAqE,GAAAA,GAAGA,CAACvJ,CAAC,EAAEC,CAAC,EAAE;AACRpF,KAAAA,MAAM,CAACmF,CAAC,YAAYqB,WAAW,CAAC;AAChCxG,KAAAA,MAAM,CAACmF,CAAC,CAACrE,MAAM,KAAK,CAAC,CAAC;AACtBd,KAAAA,MAAM,CAACoF,CAAC,YAAYoB,WAAW,CAAC;AAChCxG,KAAAA,MAAM,CAACoF,CAAC,CAACtE,MAAM,KAAK,CAAC,CAAC;AAEtB,KAAA,MAAMiI,CAAC,GAAG,IAAIvC,WAAW,CAAC,CAAC,CAAC;AAE5BuC,KAAAA,CAAC,CAAC,CAAC,CAAC,GAAG5D,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC;AAClB2D,KAAAA,CAAC,CAAC,CAAC,CAAC,GAAG5D,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC;AAClB2D,KAAAA,CAAC,CAAC,CAAC,CAAC,GAAG5D,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC;AAClB2D,KAAAA,CAAC,CAAC,CAAC,CAAC,GAAG5D,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC;AAElB,KAAA,OAAO2D,CAAC;AACV;GAEAk8E,MAAMA,CAAC9/E,CAAC,EAAE;AACRnF,KAAAA,MAAM,CAACmF,CAAC,YAAYqB,WAAW,CAAC;AAChCxG,KAAAA,MAAM,CAACmF,CAAC,CAACrE,MAAM,KAAK,CAAC,CAAC;AAEtB,KAAA,MAAM6G,CAAC,GAAG,IAAInB,WAAW,CAAC,CAAC,CAAC;KAC5B,MAAMqjC,GAAG,GAAG,CAAC1kC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;AAE5B,KAAA,IAAIoO,CAAC;KAEL5L,CAAC,CAAC,CAAC,CAAC,GAAGxC,CAAC,CAAC,CAAC,CAAC;KACXwC,CAAC,CAAC,CAAC,CAAC,GAAGxC,CAAC,CAAC,CAAC,CAAC;AACXoO,KAAAA,CAAC,GAAG5L,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACZA,KAAAA,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACXA,KAAAA,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACXA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI4L,CAAC,IAAI,EAAE;AAEf5L,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAACxC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE;KAExBwC,CAAC,CAAC,CAAC,CAAC,GAAGxC,CAAC,CAAC,CAAC,CAAC;KACXwC,CAAC,CAAC,CAAC,CAAC,GAAGxC,CAAC,CAAC,CAAC,CAAC;AACXoO,KAAAA,CAAC,GAAG5L,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACZA,KAAAA,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACXA,KAAAA,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACXA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI4L,CAAC,IAAI,EAAE;KAEf,IAAIs2B,GAAG,EAAE;AACPliC,OAAAA,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU;AAClBA,OAAAA,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU;AACpB;AAEA,KAAA,OAAOA,CAAC;AACV;GAEA8H,GAAGA,CAACrK,CAAC,EAAE;AACLpF,KAAAA,MAAM,CAACoF,CAAC,YAAYoB,WAAW,CAAC;AAChCxG,KAAAA,MAAM,CAACoF,CAAC,CAACtE,MAAM,KAAK,CAAC,CAAC;AAEtB,KAAA,MAAMiI,CAAC,GAAG,IAAIvC,WAAW,CAAC,CAAC,CAAC;AAC5B,KAAA,MAAMiE,CAAC,GAAG,IAAIjE,WAAW,CAAC,CAAC,CAAC;KAE5B,IAAI+M,CAAC,EAAEF,CAAC;KAER,KAAK,IAAInN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;OAC1BuE,CAAC,CAAC,CAAC,CAAC,GAAGrF,CAAC,CAAC,CAAC,CAAC;OACXqF,CAAC,CAAC,CAAC,CAAC,GAAGrF,CAAC,CAAC,CAAC,CAAC;OAEX,IAAIc,CAAC,KAAK,CAAC,EAAE;SACXuE,CAAC,CAAC,CAAC,CAAC,GAAGrF,CAAC,CAAC,CAAC,CAAC;SACXqF,CAAC,CAAC,CAAC,CAAC,GAAGrF,CAAC,CAAC,CAAC,CAAC;AACb;AAEA,OAAA,KAAK,IAAIiF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAE;SAC9B,MAAMm7E,GAAG,GAAGz8E,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AAEvBwK,SAAAA,CAAC,GAAGxK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AACfA,SAAAA,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACXA,SAAAA,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACXA,SAAAA,CAAC,CAAC,CAAC,CAAC,IAAIwK,CAAC,IAAI,EAAE;SAEfxK,CAAC,CAAC,CAAC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AAElBwK,SAAAA,CAAC,GAAGxK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AACfA,SAAAA,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACXA,SAAAA,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACXA,SAAAA,CAAC,CAAC,CAAC,CAAC,IAAIwK,CAAC,IAAI,EAAE;SAEfxK,CAAC,CAAC,CAAC,CAAC,IAAI67E,SAAS,CAACY,GAAG,CAAC,IAAI,EAAE;SAE5BnyE,CAAC,GAAG,IAAI,CAACkG,KAAK,CAAC9O,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SAE3B1B,CAAC,CAAC,CAAC,CAAC,IAAIsK,CAAC,CAAC,CAAC,CAAC;SACZtK,CAAC,CAAC,CAAC,CAAC,IAAIsK,CAAC,CAAC,CAAC,CAAC;SAEZtK,CAAC,CAAC,CAAC,CAAC,IAAIsK,CAAC,CAAC,CAAC,CAAC;SACZtK,CAAC,CAAC,CAAC,CAAC,IAAIsK,CAAC,CAAC,CAAC,CAAC;AAEZE,SAAAA,CAAC,GAAG9I,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AACfA,SAAAA,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACXA,SAAAA,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACXA,SAAAA,CAAC,CAAC,CAAC,CAAC,IAAI8I,CAAC,IAAI,EAAE;AACjB;AACF;KAEAnO,CAAC,CAAC,CAAC,CAAC,GAAG2D,CAAC,CAAC,CAAC,CAAC;KACX3D,CAAC,CAAC,CAAC,CAAC,GAAG2D,CAAC,CAAC,CAAC,CAAC;KACX3D,CAAC,CAAC,CAAC,CAAC,GAAG2D,CAAC,CAAC,CAAC,CAAC;KACX3D,CAAC,CAAC,CAAC,CAAC,GAAG2D,CAAC,CAAC,CAAC,CAAC;AACb;AACF;;AAEA;AACA;AACA;;CAEA,SAASu8E,IAAIA,CAACllF,GAAG,EAAE;GACjB,OAAQA,GAAG,IAAI,CAAC,GAAG,WAAW,CAAC,KAAM,CAAC;AACxC;CAEA,SAASmlF,IAAIA,CAACnlF,GAAG,EAAE;GACjB,OAAOA,GAAG,KAAK,CAAC;AAClB;CAEA,SAAS+f,OAAOA,CAACja,CAAC,EAAE;GAClBA,CAAC,GAAKA,CAAC,IAAI,CAAC,GAAI,IAAI,GAAMA,CAAC,KAAK,CAAC,GAAI,IAAK;GAC1CA,CAAC,GAAKA,CAAC,IAAI,CAAC,GAAI,IAAI,GAAMA,CAAC,KAAK,CAAC,GAAI,IAAK;AAC1C,GAAA,OAAOA,CAAC;AACV;AAEA,CAAA,SAAS6B,OAAOA,CAAC5B,IAAI,EAAEa,GAAG,EAAE;AAC1B,GAAA,OAAQb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,SAAS,GACvBb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,OAAO,GACrBb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,KAAK,GACnBb,IAAI,CAACa,GAAG,EAAE,CAAC;AACrB;AAEA,CAAA,SAASK,QAAQA,CAACqD,GAAG,EAAEtK,GAAG,EAAE4G,GAAG,EAAE;GAC/B0D,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG,KAAK,EAAE;GACvBsK,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG,KAAK,EAAE;GACvBsK,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG,KAAK,CAAC;AACtBsK,GAAAA,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG;AAChB,GAAA,OAAO4G,GAAG;AACZ;;AAEA;AACA;AACA;;AAEAzD,CAAAA,KAAc,GAAGuhF,KAAK;;;;;;;;;;;;;;;;;;;CC/VtB,MAAM9kF,MAAM,GAAGC,aAA6B,EAAA;CAC5C,MAAM6kF,KAAK,GAAG7kF,YAAkB,EAAA;;AAEhC;AACA;AACA;;AAEA,CAAA,MAAMwlF,KAAK,GAAG7hF,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;;AAE7B;AACA,CAAA,MAAMy/E,SAAS,GAAG,IAAIl/E,WAAW,CAAC,CAChC,QAAQ;AAAE;CACV,QAAQ;AAAE;CACV,QAAQ;AAAE;AACV,CAAA,QAAQ,EACR,QAAQ;AAAE;AACV,CAAA,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ;AAAE,EACX,CAAC;;AAEF;AACA;AACA;;AAEA,CAAA,MAAMm/E,IAAI,CAAC;GACTtjF,WAAWA,CAACqG,GAAG,EAAE;KACf1I,MAAM,CAAC0I,GAAG,IAAI,OAAOA,GAAG,CAACq2B,OAAO,KAAK,UAAU,CAAC;KAChD/+B,MAAM,CAAC,OAAO0I,GAAG,CAACU,SAAS,KAAK,QAAQ,CAAC;KAEzC,IAAI,CAACV,GAAG,GAAGA,GAAG;AAChB;GAEA,IAAIU,SAASA,GAAG;AACd,KAAA,OAAO,IAAI,CAACV,GAAG,CAACU,SAAS;AAC3B;AAEA1D,GAAAA,IAAIA,CAACC,GAAG,EAAE25B,EAAE,EAAE;AACZ,KAAA,MAAM,IAAIt9B,KAAK,CAAC,kBAAkB,CAAC;AACrC;GAEA8D,MAAMA,CAACK,IAAI,EAAE;AACX,KAAA,MAAM,IAAInE,KAAK,CAAC,kBAAkB,CAAC;AACrC;AAEA4jF,GAAAA,KAAKA,CAAChvE,MAAM,EAAE4N,KAAK,EAAE;AACnB,KAAA,MAAM,IAAIxiB,KAAK,CAAC,kBAAkB,CAAC;AACrC;AAEA+D,GAAAA,KAAKA,GAAG;AACN,KAAA,MAAM,IAAI/D,KAAK,CAAC,kBAAkB,CAAC;AACrC;AAEAk9B,GAAAA,OAAOA,GAAG;AACR,KAAA,MAAM,IAAIl9B,KAAK,CAAC,kBAAkB,CAAC;AACrC;GAEA6jF,cAAcA,CAAC9kE,OAAO,EAAE;AACtB/gB,KAAAA,MAAM,CAAC,OAAO+gB,OAAO,KAAK,SAAS,CAAC;AAEpC,KAAA,IAAI,CAAC+kE,eAAe,CAAC/kE,OAAO,CAAC;AAE7B,KAAA,OAAO,IAAI;AACb;GAEAglE,MAAMA,CAAC5/E,IAAI,EAAE;KACXnG,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC7B,KAAA,IAAI,CAAC6/E,OAAO,CAAC7/E,IAAI,CAAC;AAClB,KAAA,OAAO,IAAI;AACb;AAEA8/E,GAAAA,MAAMA,CAACC,MAAM,EAAEC,MAAM,EAAEd,GAAG,EAAE;AAC1BrlF,KAAAA,MAAM,CAAEkmF,MAAM,KAAK,CAAC,KAAMA,MAAM,CAAC;AACjClmF,KAAAA,MAAM,CAAEmmF,MAAM,KAAK,CAAC,KAAMA,MAAM,CAAC;KACjCnmF,MAAM,CAACqlF,GAAG,IAAI,IAAI,IAAIzhF,MAAM,CAACgC,QAAQ,CAACy/E,GAAG,CAAC,CAAC;KAE3C,IAAI,CAACe,OAAO,CAACF,MAAM,EAAEC,MAAM,EAAEd,GAAG,CAAC;AAEjC,KAAA,OAAO,IAAI;AACb;AAEAgB,GAAAA,UAAUA,GAAG;AACX,KAAA,OAAO,IAAI,CAACC,WAAW,EAAE;AAC3B;GAEAC,UAAUA,CAACC,GAAG,EAAE;KACdxmF,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAAC4gF,GAAG,CAAC,CAAC;AAC5B,KAAA,IAAI,CAACC,WAAW,CAACD,GAAG,CAAC;AACrB,KAAA,OAAO,IAAI;AACb;GAEAV,eAAeA,CAAC/kE,OAAO,EAAE;AACvB,KAAA,MAAM,IAAI/e,KAAK,CAAC,gBAAgB,CAAC;AACnC;GAEAgkF,OAAOA,CAAC7/E,IAAI,EAAE;AACZ,KAAA,MAAM,IAAInE,KAAK,CAAC,8BAA8B,CAAC;AACjD;AAEAokF,GAAAA,OAAOA,CAACF,MAAM,EAAEC,MAAM,EAAEd,GAAG,EAAE;AAC3B,KAAA,MAAM,IAAIrjF,KAAK,CAAC,gBAAgB,CAAC;AACnC;AAEAskF,GAAAA,WAAWA,GAAG;AACZ,KAAA,MAAM,IAAItkF,KAAK,CAAC,8BAA8B,CAAC;AACjD;GAEAykF,WAAWA,CAACD,GAAG,EAAE;AACf,KAAA,MAAM,IAAIxkF,KAAK,CAAC,8BAA8B,CAAC;AACjD;AACF;;AAEA;AACA;AACA;;CAEA,MAAMs6E,KAAK,SAASqJ,IAAI,CAAC;AACvBtjF,GAAAA,WAAWA,CAACqG,GAAG,EAAEg+E,KAAK,EAAE;KACtB,KAAK,CAACh+E,GAAG,CAAC;KAEV,IAAI,CAACqY,OAAO,GAAG,IAAI;KACnB,IAAI,CAAC2lE,KAAK,GAAGA,KAAK;KAClB,IAAI,CAAC//E,KAAK,GAAG/C,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;AACzC,KAAA,IAAI,CAACu9E,QAAQ,GAAG,EAAE;KAClB,IAAI,CAAC/9B,IAAI,GAAG,IAAI;KAChB,IAAI,CAACg+B,QAAQ,GAAG,CAAC;AAEjB,KAAA,IAAIF,KAAK,EACP,IAAI,CAAC99B,IAAI,GAAGhlD,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;AAC5C;AAEA1D,GAAAA,IAAIA,CAACC,GAAG,EAAE25B,EAAE,EAAE;AACZ,KAAA,IAAIA,EAAE,IAAI,IAAI,EACZA,EAAE,GAAGmmD,KAAK;KAEZzlF,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACD,GAAG,CAAC,CAAC;KAC5B3F,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAAC05B,EAAE,CAAC,CAAC;AAE3B,KAAA,IAAI,CAAC52B,GAAG,CAAChD,IAAI,CAACC,GAAG,CAAC;KAElB,IAAI,CAACghF,QAAQ,GAAG,CAAC;KACjB,IAAI,CAACC,QAAQ,GAAG,CAAC;AAEjB,KAAA,IAAI,CAACtiD,KAAK,CAAC3+B,GAAG,EAAE25B,EAAE,CAAC;AAEnB,KAAA,OAAO,IAAI;AACb;GAEAunD,WAAWA,CAACC,IAAI,EAAE;KAChB,IAAI,IAAI,CAACH,QAAQ,GAAGG,IAAI,GAAG,IAAI,CAAC19E,SAAS,EACvC,OAAO,CAAC;KAEV,IAAI29E,IAAI,GAAG,CAAC;KAEZ,IAAI,IAAI,CAACL,KAAK,EACZK,IAAI,IAAI,IAAI,CAACH,QAAQ;AAEvB,KAAA,IAAI,IAAI,CAACD,QAAQ,GAAG,CAAC,EAAE;OACrBG,IAAI,IAAI,IAAI,CAAC19E,SAAS,GAAG,IAAI,CAACu9E,QAAQ;OACtCI,IAAI,IAAI,IAAI,CAAC39E,SAAS;AACxB;AAEA,KAAA,IAAI09E,IAAI,IAAI,IAAI,CAAC19E,SAAS,EACxB29E,IAAI,IAAID,IAAI,GAAIA,IAAI,GAAG,IAAI,CAAC19E,SAAU;AAExCpJ,KAAAA,MAAM,CAAC+mF,IAAI,IAAI,IAAI,CAAC39E,SAAS,CAAC;AAE9B,KAAA,OAAO29E,IAAI;AACb;GAEAjhF,MAAMA,CAAC0e,KAAK,EAAE;KACZxkB,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAAC4e,KAAK,CAAC,CAAC;AAE9B,KAAA,IAAI,IAAI,CAACmiE,QAAQ,KAAK,EAAE,EACtB,MAAM,IAAI3kF,KAAK,CAAC,4BAA4B,CAAC;KAE/C,MAAM+kF,IAAI,GAAG,IAAI,CAACF,WAAW,CAACriE,KAAK,CAAC1jB,MAAM,CAAC;KAC3C,MAAM8V,MAAM,GAAGhT,MAAM,CAACqC,KAAK,CAAC8gF,IAAI,CAAC;KAEjC,IAAI,IAAI,CAACJ,QAAQ,GAAGniE,KAAK,CAAC1jB,MAAM,GAAG,IAAI,CAACsI,SAAS,EAAE;OACjD,IAAI,CAACu9E,QAAQ,IAAIniE,KAAK,CAACtd,IAAI,CAAC,IAAI,CAACP,KAAK,EAAE,IAAI,CAACggF,QAAQ,EAAE,CAAC,EAAEniE,KAAK,CAAC1jB,MAAM,CAAC;AACvE,OAAA,OAAO8V,MAAM;AACf;AAEA,KAAA,IAAIkwE,IAAI,GAAGtiE,KAAK,CAAC1jB,MAAM;KACvB,IAAI0jF,IAAI,GAAG,CAAC;KACZ,IAAID,IAAI,GAAG,CAAC;KAEZ,IAAI,IAAI,CAACmC,KAAK,EACZnC,IAAI,IAAI,IAAI,CAAC37B,IAAI,CAAC1hD,IAAI,CAAC0P,MAAM,EAAE2tE,IAAI,EAAE,CAAC,EAAE,IAAI,CAACqC,QAAQ,CAAC;AAExD,KAAA,IAAI,IAAI,CAACD,QAAQ,GAAG,CAAC,EAAE;OACrB,MAAM1/E,IAAI,GAAG,IAAI,CAACmC,SAAS,GAAG,IAAI,CAACu9E,QAAQ;AAE3CnC,OAAAA,IAAI,IAAIhgE,KAAK,CAACtd,IAAI,CAAC,IAAI,CAACP,KAAK,EAAE,IAAI,CAACggF,QAAQ,EAAEnC,IAAI,EAAEA,IAAI,GAAGv9E,IAAI,CAAC;OAChE6/E,IAAI,IAAI7/E,IAAI;AAEZ,OAAA,IAAI,CAACL,OAAO,CAACgQ,MAAM,EAAE2tE,IAAI,EAAE,IAAI,CAAC59E,KAAK,EAAE,CAAC,CAAC;OAEzC49E,IAAI,IAAI,IAAI,CAACn7E,SAAS;OAEtB,IAAI,CAACu9E,QAAQ,GAAG,CAAC;AACnB;AAEA,KAAA,OAAOG,IAAI,IAAI,IAAI,CAAC19E,SAAS,EAAE;OAC7B,IAAI,CAACxC,OAAO,CAACgQ,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,CAAC;OAEvCA,IAAI,IAAI,IAAI,CAACp7E,SAAS;OACtB09E,IAAI,IAAI,IAAI,CAAC19E,SAAS;OACtBm7E,IAAI,IAAI,IAAI,CAACn7E,SAAS;AACxB;KAEA,IAAI09E,IAAI,GAAG,CAAC,EACV,IAAI,CAACH,QAAQ,GAAGniE,KAAK,CAACtd,IAAI,CAAC,IAAI,CAACP,KAAK,EAAE,CAAC,EAAE69E,IAAI,EAAEA,IAAI,GAAGsC,IAAI,CAAC;AAE9D9mF,KAAAA,MAAM,CAACukF,IAAI,KAAKwC,IAAI,CAAC;KAErB,IAAI,IAAI,CAACL,KAAK,EAAE;OACd,IAAI,CAACE,QAAQ,GAAGhwE,MAAM,CAAC1P,IAAI,CAAC,IAAI,CAAC0hD,IAAI,EAAE,CAAC,EAAEm+B,IAAI,GAAG,IAAI,CAAC39E,SAAS,EAAE29E,IAAI,CAAC;OACtE,OAAOnwE,MAAM,CAAC/L,KAAK,CAAC,CAAC,EAAEk8E,IAAI,GAAG,IAAI,CAAC39E,SAAS,CAAC;AAC/C;AAEA,KAAA,OAAOwN,MAAM;AACf;AAEAgvE,GAAAA,KAAKA,CAAChvE,MAAM,EAAE4N,KAAK,EAAE;KACnBxkB,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACgR,MAAM,CAAC,CAAC;KAC/B5W,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAAC4e,KAAK,CAAC,CAAC;KAC9BxkB,MAAM,CAAC4W,MAAM,CAAC9V,MAAM,KAAK0jB,KAAK,CAAC1jB,MAAM,CAAC;AAEtC,KAAA,IAAI,IAAI,CAAC6lF,QAAQ,KAAK,EAAE,EACtB,MAAM,IAAI3kF,KAAK,CAAC,4BAA4B,CAAC;AAE/C,KAAA,IAAI,IAAI,CAAC0kF,KAAK,IAAI,IAAI,CAACC,QAAQ,KAAK,CAAC,EACnC,MAAM,IAAI3kF,KAAK,CAAC,+BAA+B,CAAC;AAElD,KAAA,IAAKwiB,KAAK,CAAC1jB,MAAM,GAAG,IAAI,CAACsI,SAAS,KAAM,CAAC,EACvC,MAAM,IAAIpH,KAAK,CAAC,6CAA6C,CAAC;AAEhE,KAAA,MAAMkD,IAAI,GAAG,IAAI,CAACkE,SAAS;AAE3B,KAAA,IAAItC,GAAG,GAAG0d,KAAK,CAAC1jB,MAAM;KACtB,IAAIiG,GAAG,GAAG,CAAC;KAEX,OAAOD,GAAG,GAAG,CAAC,EAAE;OACd,IAAI,CAACF,OAAO,CAACgQ,MAAM,EAAE7P,GAAG,EAAEyd,KAAK,EAAEzd,GAAG,CAAC;OACrCA,GAAG,IAAI7B,IAAI;OACX4B,GAAG,IAAI5B,IAAI;AACb;AAEA,KAAA,OAAO0R,MAAM;AACf;AAEA7Q,GAAAA,KAAKA,GAAG;AACN,KAAA,IAAI,IAAI,CAAC4gF,QAAQ,KAAK,EAAE,EACtB,MAAM,IAAI3kF,KAAK,CAAC,4BAA4B,CAAC;KAE/C,IAAI;AACF,OAAA,OAAO,IAAI,CAAC6E,MAAM,EAAE;AACtB,MAAC,SAAS;OACR,IAAI,CAACq4B,OAAO,EAAE;AAChB;AACF;AAEAA,GAAAA,OAAOA,GAAG;AACR,KAAA,IAAI,CAACx2B,GAAG,CAACw2B,OAAO,EAAE;AAElB,KAAA,IAAI,CAACynD,QAAQ,GAAG,EAAE;KAClB,IAAI,CAACC,QAAQ,GAAG,CAAC;KAEjB,KAAK,IAAI1gF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAACS,KAAK,CAACT,CAAC,CAAC,GAAG,CAAC;KAEnB,IAAI,IAAI,CAACwgF,KAAK,EAAE;OACd,KAAK,IAAIxgF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,GAAG,CAAC;AACpB;KAEA,IAAI,CAAC8gF,QAAQ,EAAE;AAEf,KAAA,OAAO,IAAI;AACb;AAEA1iD,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;AACb,KAAA,MAAM,IAAIt9B,KAAK,CAAC,kBAAkB,CAAC;AACrC;GAEA4E,OAAOA,CAACgQ,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,EAAE;AACjC,KAAA,MAAM,IAAIxiF,KAAK,CAAC,kBAAkB,CAAC;AACrC;AAEA6E,GAAAA,MAAMA,GAAG;AACP,KAAA,MAAM,IAAI7E,KAAK,CAAC,kBAAkB,CAAC;AACrC;AAEAglF,GAAAA,QAAQA,GAAG;AACT,KAAA,MAAM,IAAIhlF,KAAK,CAAC,kBAAkB,CAAC;AACrC;AACF;;AAEA;AACA;AACA;;CAEA,MAAMilF,MAAM,SAAStB,IAAI,CAAC;GACxBtjF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;AACV,KAAA,IAAI,CAAC3B,GAAG,GAAG,EAAE;AACf;AAEArB,GAAAA,IAAIA,CAACC,GAAG,EAAE25B,EAAE,EAAE;AACZ,KAAA,IAAIA,EAAE,IAAI,IAAI,EACZA,EAAE,GAAGmmD,KAAK;KAEZzlF,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACD,GAAG,CAAC,CAAC;KAC5B3F,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAAC05B,EAAE,CAAC,CAAC;AAE3B,KAAA,IAAI,CAAC52B,GAAG,CAAChD,IAAI,CAACC,GAAG,CAAC;KAElB,IAAI,CAACoB,GAAG,GAAG,CAAC;AAEZ,KAAA,IAAI,CAACu9B,KAAK,CAAC3+B,GAAG,EAAE25B,EAAE,CAAC;AAEnB,KAAA,OAAO,IAAI;AACb;GAEAx5B,MAAMA,CAAC0e,KAAK,EAAE;KACZxkB,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAAC4e,KAAK,CAAC,CAAC;AAE9B,KAAA,IAAI,IAAI,CAACzd,GAAG,KAAK,EAAE,EACjB,MAAM,IAAI/E,KAAK,CAAC,4BAA4B,CAAC;KAE/C,MAAM4U,MAAM,GAAGhT,MAAM,CAACqC,KAAK,CAACue,KAAK,CAAC1jB,MAAM,CAAC;AAEzC,KAAA,IAAI,CAAComF,MAAM,CAACtwE,MAAM,EAAE4N,KAAK,CAAC;AAE1B,KAAA,OAAO5N,MAAM;AACf;AAEAgvE,GAAAA,KAAKA,CAAChvE,MAAM,EAAE4N,KAAK,EAAE;KACnBxkB,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACgR,MAAM,CAAC,CAAC;KAC/B5W,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAAC4e,KAAK,CAAC,CAAC;KAC9BxkB,MAAM,CAAC4W,MAAM,CAAC9V,MAAM,KAAK0jB,KAAK,CAAC1jB,MAAM,CAAC;AAEtC,KAAA,IAAI,IAAI,CAACiG,GAAG,KAAK,EAAE,EACjB,MAAM,IAAI/E,KAAK,CAAC,4BAA4B,CAAC;AAE/C,KAAA,IAAI,CAACklF,MAAM,CAACtwE,MAAM,EAAE4N,KAAK,CAAC;AAE1B,KAAA,OAAO5N,MAAM;AACf;AAEA7Q,GAAAA,KAAKA,GAAG;AACN,KAAA,IAAI,IAAI,CAACgB,GAAG,KAAK,EAAE,EACjB,MAAM,IAAI/E,KAAK,CAAC,4BAA4B,CAAC;KAE/C,IAAI;AACF,OAAA,OAAO,IAAI,CAAC6E,MAAM,EAAE;AACtB,MAAC,SAAS;OACR,IAAI,CAACq4B,OAAO,EAAE;AAChB;AACF;AAEAA,GAAAA,OAAOA,GAAG;AACR,KAAA,IAAI,CAACx2B,GAAG,CAACw2B,OAAO,EAAE;AAElB,KAAA,IAAI,CAACn4B,GAAG,GAAG,EAAE;KAEb,IAAI,CAACigF,QAAQ,EAAE;AAEf,KAAA,OAAO,IAAI;AACb;AAEA1iD,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;AACb,KAAA,MAAM,IAAIt9B,KAAK,CAAC,kBAAkB,CAAC;AACrC;AAEAklF,GAAAA,MAAMA,CAACtwE,MAAM,EAAE4N,KAAK,EAAE;AACpB,KAAA,MAAM,IAAIxiB,KAAK,CAAC,kBAAkB,CAAC;AACrC;AAEA6E,GAAAA,MAAMA,GAAG;AACP,KAAA,MAAM,IAAI7E,KAAK,CAAC,kBAAkB,CAAC;AACrC;AAEAglF,GAAAA,QAAQA,GAAG;AACT,KAAA,MAAM,IAAIhlF,KAAK,CAAC,kBAAkB,CAAC;AACrC;AACF;;AAEA;AACA;AACA;;CAEA,MAAMmlF,SAAS,SAAS7K,KAAK,CAAC;GAC5Bj6E,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,KAAK,CAAC;AACnB;AAEA47B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;AACbt/B,KAAAA,MAAM,CAACs/B,EAAE,CAACx+B,MAAM,KAAK,CAAC,CAAC;AACzB;GAEA8F,OAAOA,CAACgQ,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,EAAE;AACjC,KAAA,IAAI,CAAC97E,GAAG,CAACq2B,OAAO,CAACnoB,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,CAAC;AAC7C;AAEA39E,GAAAA,MAAMA,GAAG;KACP,IAAI,IAAI,CAAC8/E,QAAQ,KAAK,CAAC,EACrB,MAAM,IAAI3kF,KAAK,CAAC,+BAA+B,CAAC;AAElD,KAAA,OAAO4B,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;AAEA+gF,GAAAA,QAAQA,GAAG;KACT;AACF;AACF;;AAEA;AACA;AACA;;CAEA,MAAMI,WAAW,SAAS9K,KAAK,CAAC;GAC9Bj6E,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,KAAK,CAAC;AACnB;AAEA47B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;AACbt/B,KAAAA,MAAM,CAACs/B,EAAE,CAACx+B,MAAM,KAAK,CAAC,CAAC;AACzB;GAEA8F,OAAOA,CAACgQ,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,EAAE;AACjC,KAAA,IAAI,CAAC97E,GAAG,CAACi8E,OAAO,CAAC/tE,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,CAAC;AAC7C;AAEA39E,GAAAA,MAAMA,GAAG;KACP,IAAI,IAAI,CAAC8/E,QAAQ,KAAK,CAAC,EACrB,MAAM,IAAI3kF,KAAK,CAAC,+BAA+B,CAAC;AAElD,KAAA,OAAO4B,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;AAEA+gF,GAAAA,QAAQA,GAAG;KACT;AACF;AACF;;AAEA;AACA;AACA;;CAEA,MAAMK,WAAW,SAAS/K,KAAK,CAAC;GAC9Bj6E,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,KAAK,CAAC;AACnB;AAEA7B,GAAAA,MAAMA,GAAG;AACP,KAAA,IAAI,CAAC,IAAI,CAACka,OAAO,EAAE;OACjB,IAAI,IAAI,CAAC4lE,QAAQ,KAAK,CAAC,EACrB,MAAM,IAAI3kF,KAAK,CAAC,+BAA+B,CAAC;AAElD,OAAA,OAAO4B,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;KAEA,MAAM2C,IAAI,GAAG,IAAI,CAACQ,SAAS,GAAG,IAAI,CAACu9E,QAAQ;KAC3C,MAAMhgF,KAAK,GAAG/C,MAAM,CAACnB,IAAI,CAAC,IAAI,CAACkE,KAAK,CAAC;KAErC,KAAK,IAAIT,CAAC,GAAG,IAAI,CAACygF,QAAQ,EAAEzgF,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACjDS,KAAK,CAACT,CAAC,CAAC,GAAG0C,IAAI;KAEjB,IAAI,CAAChC,OAAO,CAACD,KAAK,EAAE,CAAC,EAAEA,KAAK,EAAE,CAAC,CAAC;AAEhC,KAAA,OAAOA,KAAK;AACd;GAEAm/E,eAAeA,CAAC/kE,OAAO,EAAE;KACvB,IAAI,CAACA,OAAO,GAAGA,OAAO;AACxB;AACF;;AAEA;AACA;AACA;;CAEA,MAAMumE,aAAa,SAAShL,KAAK,CAAC;GAChCj6E,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,IAAI,CAAC;AAClB;AAEA7B,GAAAA,MAAMA,GAAG;KACP,IAAI,IAAI,CAAC8/E,QAAQ,KAAK,CAAC,EACrB,MAAM,IAAI3kF,KAAK,CAAC,+BAA+B,CAAC;KAElD,IAAI,CAAC,IAAI,CAAC+e,OAAO,EACf,OAAOnd,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;KAExB,IAAI,IAAI,CAAC2gF,QAAQ,KAAK,CAAC,EACrB,MAAM,IAAI5kF,KAAK,CAAC,wBAAwB,CAAC;KAE3ChC,MAAM,CAAC,IAAI,CAAC4mF,QAAQ,KAAK,IAAI,CAACh+B,IAAI,CAAC9nD,MAAM,CAAC;KAC1Cd,MAAM,CAAC,IAAI,CAAC4mF,QAAQ,KAAK,IAAI,CAACx9E,SAAS,CAAC;KAExC,MAAMzC,KAAK,GAAG/C,MAAM,CAACnB,IAAI,CAAC,IAAI,CAACmmD,IAAI,CAAC;KAEpC,IAAIhgD,IAAI,GAAGjC,KAAK,CAACA,KAAK,CAAC7F,MAAM,GAAG,CAAC,CAAC;KAClC,IAAIiX,GAAG,GAAG,CAAC;;AAEX;KACAA,GAAG,IAAMnP,IAAI,GAAG,CAAC,KAAM,EAAE,GAAI,CAAC;;AAE9B;KACAmP,GAAG,IAAKnP,IAAI,GAAG,IAAI,CAACQ,SAAS,GAAG,CAAC,KAAM,EAAE;;AAEzC;KACAR,IAAI,IAAI,CAACmP,GAAG;;AAEZ;AACA,KAAA,MAAM3M,GAAG,GAAG,IAAI,CAAChC,SAAS,GAAGR,IAAI;AAEjC,KAAA,KAAK,IAAI1C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EAAE;AACvC,OAAA,MAAM03B,EAAE,GAAGj3B,KAAK,CAACT,CAAC,CAAC;;AAEnB;AACA6R,OAAAA,GAAG,IAAM7R,CAAC,GAAGkF,GAAG,KAAM,EAAE,GAAM,CAACwyB,EAAE,GAAGh1B,IAAI,IAAI,CAAC,KAAM,EAAG;AACxD;KAEA,IAAI,CAACmP,GAAG,EACN,MAAM,IAAI/V,KAAK,CAAC,wBAAwB,CAAC;KAE3C,OAAO2E,KAAK,CAACkE,KAAK,CAAC,CAAC,EAAEO,GAAG,CAAC;AAC5B;GAEA06E,eAAeA,CAAC/kE,OAAO,EAAE;AACvB,KAAA,IAAI,IAAI,CAAC6lE,QAAQ,KAAK,CAAC,IAAI,IAAI,CAACD,QAAQ,KAAK,CAAC,EAC5C,MAAM,IAAI3kF,KAAK,CAAC,0BAA0B,CAAC;KAE7C,IAAI,CAAC+e,OAAO,GAAGA,OAAO;KACtB,IAAI,CAAC2lE,KAAK,GAAG3lE,OAAO;AACtB;AACF;;AAEA;AACA;AACA;;CAEA,MAAMwmE,SAAS,SAASF,WAAW,CAAC;GAClChlF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;AACZ;AAEA47B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;AACbt/B,KAAAA,MAAM,CAACs/B,EAAE,CAACx+B,MAAM,KAAK,CAAC,CAAC;AACzB;GAEA8F,OAAOA,CAACgQ,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,EAAE;AACjC,KAAA,IAAI,CAAC97E,GAAG,CAACq2B,OAAO,CAACnoB,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,CAAC;AAC7C;AAEAwC,GAAAA,QAAQA,GAAG;KACT;AACF;AACF;;AAEA;AACA;AACA;;CAEA,MAAMQ,WAAW,SAASF,aAAa,CAAC;GACtCjlF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;AACZ;AAEA47B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;AACbt/B,KAAAA,MAAM,CAACs/B,EAAE,CAACx+B,MAAM,KAAK,CAAC,CAAC;AACzB;GAEA8F,OAAOA,CAACgQ,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,EAAE;AACjC,KAAA,IAAI,CAAC97E,GAAG,CAACi8E,OAAO,CAAC/tE,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,CAAC;AAC7C;AAEAwC,GAAAA,QAAQA,GAAG;KACT;AACF;AACF;;AAEA;AACA;AACA;;CAEA,MAAMS,SAAS,SAASJ,WAAW,CAAC;GAClChlF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;KAEV,IAAI,CAACgf,IAAI,GAAG9jB,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;AAC1C;AAEAk7B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;KACbt/B,MAAM,CAACs/B,EAAE,CAACx+B,MAAM,KAAK,IAAI,CAACsI,SAAS,CAAC;KACpCk2B,EAAE,CAACp4B,IAAI,CAAC,IAAI,CAACwgB,IAAI,EAAE,CAAC,CAAC;AACvB;GAEA9gB,OAAOA,CAACgQ,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,EAAE;KACjC,KAAK,IAAIt+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC,IAAIse,KAAK,CAACggE,IAAI,GAAGt+E,CAAC,CAAC;AAEjC,KAAA,IAAI,CAACwC,GAAG,CAACq2B,OAAO,CAACnoB,MAAM,EAAE2tE,IAAI,EAAE,IAAI,CAAC78D,IAAI,EAAE,CAAC,CAAC;AAE5C9Q,KAAAA,MAAM,CAAC1P,IAAI,CAAC,IAAI,CAACwgB,IAAI,EAAE,CAAC,EAAE68D,IAAI,EAAEA,IAAI,GAAG,IAAI,CAACn7E,SAAS,CAAC;AACxD;AAEA49E,GAAAA,QAAQA,GAAG;KACT,KAAK,IAAI9gF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC,GAAG,CAAC;AACpB;AACF;;AAEA;AACA;AACA;;CAEA,MAAMwhF,WAAW,SAASJ,aAAa,CAAC;GACtCjlF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;KAEV,IAAI,CAACgf,IAAI,GAAG9jB,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;KACxC,IAAI,CAAC+6E,GAAG,GAAGvgF,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;AACzC;AAEAk7B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;KACbt/B,MAAM,CAACs/B,EAAE,CAACx+B,MAAM,KAAK,IAAI,CAACsI,SAAS,CAAC;KACpCk2B,EAAE,CAACp4B,IAAI,CAAC,IAAI,CAACwgB,IAAI,EAAE,CAAC,CAAC;AACvB;GAEA9gB,OAAOA,CAACgQ,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,EAAE;KACjC,IAAImD,OAAO,CAAC/wE,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,CAAC,EAAE;OACtC,IAAI,CAAC98D,IAAI,CAACxgB,IAAI,CAAC,IAAI,CAACi9E,GAAG,EAAE,CAAC,CAAC;AAE3B3/D,OAAAA,KAAK,CAACtd,IAAI,CAAC,IAAI,CAACwgB,IAAI,EAAE,CAAC,EAAE88D,IAAI,EAAEA,IAAI,GAAG,IAAI,CAACp7E,SAAS,CAAC;AAErD,OAAA,IAAI,CAACV,GAAG,CAACi8E,OAAO,CAAC/tE,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,CAAC;OAE3C,KAAK,IAAIt+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC0Q,MAAM,CAAC2tE,IAAI,GAAGr+E,CAAC,CAAC,IAAI,IAAI,CAACi+E,GAAG,CAACj+E,CAAC,CAAC;AACnC,MAAC,MAAM;AACL,OAAA,IAAI,CAACwC,GAAG,CAACi8E,OAAO,CAAC/tE,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,CAAC;OAE3C,KAAK,IAAIt+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC0Q,MAAM,CAAC2tE,IAAI,GAAGr+E,CAAC,CAAC,IAAI,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC;AAElCse,OAAAA,KAAK,CAACtd,IAAI,CAAC,IAAI,CAACwgB,IAAI,EAAE,CAAC,EAAE88D,IAAI,EAAEA,IAAI,GAAG,IAAI,CAACp7E,SAAS,CAAC;AACvD;AACF;AAEA49E,GAAAA,QAAQA,GAAG;AACT,KAAA,KAAK,IAAI9gF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EAAE;AACvC,OAAA,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC,GAAG,CAAC;AAChB,OAAA,IAAI,CAACi+E,GAAG,CAACj+E,CAAC,CAAC,GAAG,CAAC;AACjB;AACF;AACF;;AAEA;AACA;AACA;;CAEA,MAAM0hF,SAAS,SAAStL,KAAK,CAAC;GAC5Bj6E,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,IAAI,CAAC;KAEhB,IAAI,CAACgf,IAAI,GAAG9jB,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;AAC1C;AAEAk7B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;KACbt/B,MAAM,CAACs/B,EAAE,CAACx+B,MAAM,KAAK,IAAI,CAACsI,SAAS,CAAC;KACpCk2B,EAAE,CAACp4B,IAAI,CAAC,IAAI,CAACwgB,IAAI,EAAE,CAAC,CAAC;AACvB;GAEA9gB,OAAOA,CAACgQ,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,EAAE;KACjC,KAAK,IAAIt+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC,IAAIse,KAAK,CAACggE,IAAI,GAAGt+E,CAAC,CAAC;AAEjC,KAAA,IAAI,CAACwC,GAAG,CAACq2B,OAAO,CAACnoB,MAAM,EAAE2tE,IAAI,EAAE,IAAI,CAAC78D,IAAI,EAAE,CAAC,CAAC;AAE5C9Q,KAAAA,MAAM,CAAC1P,IAAI,CAAC,IAAI,CAACwgB,IAAI,EAAE,CAAC,EAAE68D,IAAI,EAAEA,IAAI,GAAG,IAAI,CAACn7E,SAAS,CAAC;AACxD;AAEAvC,GAAAA,MAAMA,GAAG;AACP,KAAA,IAAI,CAAC,IAAI,CAACka,OAAO,EAAE;OACjB,IAAI,IAAI,CAAC4lE,QAAQ,KAAK,CAAC,EACrB,MAAM,IAAI3kF,KAAK,CAAC,+BAA+B,CAAC;AAElD,OAAA,OAAO4B,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;KAEA,IAAI,IAAI,CAAC2gF,QAAQ,KAAK,CAAC,EACrB,MAAM,IAAI5kF,KAAK,CAAC,wBAAwB,CAAC;KAE3C,KAAK,IAAIkE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACygF,QAAQ,EAAEzgF,CAAC,EAAE,EACpC,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC,IAAI,IAAI,CAACS,KAAK,CAACT,CAAC,CAAC;AAE/B,KAAA,IAAI,CAACwC,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAACrX,IAAI,EAAE,CAAC,EAAE,IAAI,CAACA,IAAI,EAAE,CAAC,CAAC;AAE5C,KAAA,MAAMkhC,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC/9C,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC87E,QAAQ,CAAC;KAE9C,OAAO/iF,MAAM,CAACm9B,MAAM,CAAC,CAAC,IAAI,CAACrZ,IAAI,EAAEkhC,IAAI,CAAC,CAAC;AACzC;AAEAo+B,GAAAA,QAAQA,GAAG;KACT,KAAK,IAAI9gF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC,GAAG,CAAC;AACpB;GAEA4/E,eAAeA,CAAC/kE,OAAO,EAAE;AACvB,KAAA,IAAI,IAAI,CAAC6lE,QAAQ,KAAK,CAAC,IAAI,IAAI,CAACD,QAAQ,KAAK,CAAC,EAC5C,MAAM,IAAI3kF,KAAK,CAAC,0BAA0B,CAAC;KAE7C,IAAI,CAAC+e,OAAO,GAAGA,OAAO;KACtB,IAAI,CAAC2lE,KAAK,GAAG3lE,OAAO;AACtB;AACF;;AAEA;AACA;AACA;;CAEA,MAAM8mE,WAAW,SAASvL,KAAK,CAAC;GAC9Bj6E,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,IAAI,CAAC;KAEhB,IAAI,CAACgf,IAAI,GAAG9jB,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;KACxC,IAAI,CAAC+6E,GAAG,GAAGvgF,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;AACzC;AAEAk7B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;KACbt/B,MAAM,CAACs/B,EAAE,CAACx+B,MAAM,KAAK,IAAI,CAACsI,SAAS,CAAC;KACpCk2B,EAAE,CAACp4B,IAAI,CAAC,IAAI,CAACwgB,IAAI,EAAE,CAAC,CAAC;AACvB;GAEA9gB,OAAOA,CAACgQ,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,EAAE;KACjC,IAAImD,OAAO,CAAC/wE,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,CAAC,EAAE;OACtC,IAAI,CAAC98D,IAAI,CAACxgB,IAAI,CAAC,IAAI,CAACi9E,GAAG,EAAE,CAAC,CAAC;AAE3B3/D,OAAAA,KAAK,CAACtd,IAAI,CAAC,IAAI,CAACwgB,IAAI,EAAE,CAAC,EAAE88D,IAAI,EAAEA,IAAI,GAAG,IAAI,CAACp7E,SAAS,CAAC;AAErD,OAAA,IAAI,CAACV,GAAG,CAACi8E,OAAO,CAAC/tE,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,CAAC;OAE3C,KAAK,IAAIt+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC0Q,MAAM,CAAC2tE,IAAI,GAAGr+E,CAAC,CAAC,IAAI,IAAI,CAACi+E,GAAG,CAACj+E,CAAC,CAAC;AACnC,MAAC,MAAM;AACL,OAAA,IAAI,CAACwC,GAAG,CAACi8E,OAAO,CAAC/tE,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,CAAC;OAE3C,KAAK,IAAIt+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC0Q,MAAM,CAAC2tE,IAAI,GAAGr+E,CAAC,CAAC,IAAI,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC;AAElCse,OAAAA,KAAK,CAACtd,IAAI,CAAC,IAAI,CAACwgB,IAAI,EAAE,CAAC,EAAE88D,IAAI,EAAEA,IAAI,GAAG,IAAI,CAACp7E,SAAS,CAAC;AACvD;AACF;AAEAvC,GAAAA,MAAMA,GAAG;AACP,KAAA,IAAI,CAAC,IAAI,CAACka,OAAO,EAAE;OACjB,IAAI,IAAI,CAAC4lE,QAAQ,KAAK,CAAC,EACrB,MAAM,IAAI3kF,KAAK,CAAC,+BAA+B,CAAC;AAElD,OAAA,OAAO4B,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;KAEA,IAAI,IAAI,CAAC2gF,QAAQ,KAAK,CAAC,EACrB,MAAM,IAAI5kF,KAAK,CAAC,wBAAwB,CAAC;KAE3C,MAAMmiF,GAAG,GAAGvgF,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;AAExC,KAAA,IAAI,CAACV,GAAG,CAACi8E,OAAO,CAAC,IAAI,CAACj9D,IAAI,EAAE,CAAC,EAAE,IAAI,CAACA,IAAI,EAAE,CAAC,CAAC;;AAE5C;AACA;AACA,KAAA,KAAK,IAAIxhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrCi+E,GAAG,CAACj+E,CAAC,CAAC,GAAG,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,GAAG,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC;AAEtC,KAAA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACygF,QAAQ,EAAEzgF,CAAC,EAAE,EAAE;OACtC,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,GAAG,IAAI,CAACS,KAAK,CAACT,CAAC,CAAC;OAC5B,IAAI,CAACS,KAAK,CAACT,CAAC,CAAC,IAAI,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC;AAC/B;AAEA,KAAA,KAAK,IAAIA,CAAC,GAAG,IAAI,CAACygF,QAAQ,EAAEzgF,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACjD,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,GAAG,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC;AAE7B,KAAA,IAAI,CAACwC,GAAG,CAACi8E,OAAO,CAAC,IAAI,CAAC/7B,IAAI,EAAE,CAAC,EAAE,IAAI,CAACA,IAAI,EAAE,CAAC,CAAC;KAE5C,KAAK,IAAI1iD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,IAAIi+E,GAAG,CAACj+E,CAAC,CAAC;AAExB,KAAA,MAAMS,KAAK,GAAG,IAAI,CAACA,KAAK,CAACkE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC87E,QAAQ,CAAC;KAEhD,OAAO/iF,MAAM,CAACm9B,MAAM,CAAC,CAAC,IAAI,CAAC6nB,IAAI,EAAEjiD,KAAK,CAAC,CAAC;AAC1C;AAEAqgF,GAAAA,QAAQA,GAAG;AACT,KAAA,KAAK,IAAI9gF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EAAE;AACvC,OAAA,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC,GAAG,CAAC;AAChB,OAAA,IAAI,CAACi+E,GAAG,CAACj+E,CAAC,CAAC,GAAG,CAAC;AACjB;AACF;GAEA4/E,eAAeA,CAAC/kE,OAAO,EAAE;AACvB,KAAA,IAAI,IAAI,CAAC6lE,QAAQ,KAAK,CAAC,IAAI,IAAI,CAACD,QAAQ,KAAK,CAAC,EAC5C,MAAM,IAAI3kF,KAAK,CAAC,0BAA0B,CAAC;KAE7C,IAAI,CAAC+e,OAAO,GAAGA,OAAO;KACtB,IAAI,CAAC2lE,KAAK,GAAG3lE,OAAO;AACtB;AACF;;AAEA;AACA;AACA;;CAEA,MAAM+mE,GAAG,SAASxL,KAAK,CAAC;AACtBj6E,GAAAA,WAAWA,CAACqG,GAAG,EAAEq2B,OAAO,EAAE;AACxB,KAAA,KAAK,CAACr2B,GAAG,EAAE,IAAI,CAAC;KAEhB,IAAI,CAACq2B,OAAO,GAAGA,OAAO;KACtB,IAAI,CAACgpD,IAAI,GAAGrC,SAAS,CAAC,IAAI,CAACt8E,SAAS,KAAK,CAAC,CAAC;KAC3C,IAAI,CAAC40C,KAAK,GAAGp6C,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;KACzC,IAAI,CAACse,IAAI,GAAG9jB,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;AAC1C;AAEA1D,GAAAA,IAAIA,CAACC,GAAG,EAAE25B,EAAE,EAAE;KACZt/B,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACD,GAAG,CAAC,CAAC;KAC5B3F,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAAC05B,EAAE,CAAC,CAAC;AAC3Bt/B,KAAAA,MAAM,CAAC2F,GAAG,CAAC7E,MAAM,GAAG,CAAC,IAAI,CAAC6E,GAAG,CAAC7E,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC;KAChDd,MAAM,CAACs/B,EAAE,CAACx+B,MAAM,KAAK,IAAI,CAACsI,SAAS,CAAC;AAEpC,KAAA,MAAMlE,IAAI,GAAGS,GAAG,CAAC7E,MAAM,KAAK,CAAC;KAC7B,MAAM+rC,EAAE,GAAGlnC,GAAG,CAACkF,KAAK,CAAC,CAAC,EAAE3F,IAAI,CAAC;KAC7B,MAAM4nC,EAAE,GAAGnnC,GAAG,CAACkF,KAAK,CAAC3F,IAAI,CAAC;AAE1B,KAAA,IAAI8iF,SAAS,CAACn7C,EAAE,EAAEC,EAAE,EAAE5nC,IAAI,CAAC,EACzB,MAAM,IAAIlD,KAAK,CAAC,qBAAqB,CAAC;AAExC,KAAA,IAAI,CAAC0G,GAAG,CAAChD,IAAI,CAAConC,EAAE,CAAC;AACjB,KAAA,IAAI,CAACpkC,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAACif,KAAK,EAAE,CAAC,EAAE1e,EAAE,EAAE,CAAC,CAAC;AAEtC,KAAA,IAAI,CAAC52B,GAAG,CAAChD,IAAI,CAACmnC,EAAE,CAAC;KAEjB,IAAI,CAAC85C,QAAQ,GAAG,CAAC;KACjB,IAAI,CAACC,QAAQ,GAAG,CAAC;AAEjB,KAAA,OAAO,IAAI;AACb;AAEAh8D,GAAAA,MAAMA,GAAG;KACP,IAAIq9D,EAAE,GAAG,CAAC;AAEV,KAAA,IAAI,CAAC,IAAI,CAAClpD,OAAO,EACf,IAAI,CAACif,KAAK,CAAC92C,IAAI,CAAC,IAAI,CAACwgB,IAAI,EAAE,CAAC,CAAC;AAE/B,KAAA,KAAK,IAAIxhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EAAE;OACvC,MAAMwB,CAAC,GAAG,IAAI,CAACs2C,KAAK,CAAC93C,CAAC,CAAC,IAAI,CAAC;AAE5B,OAAA,IAAI,CAAC83C,KAAK,CAAC93C,CAAC,CAAC,KAAK,CAAC;AACnB,OAAA,IAAI,CAAC83C,KAAK,CAAC93C,CAAC,CAAC,IAAI+hF,EAAE;OAEnBA,EAAE,GAAGvgF,CAAC;AACR;AAEAugF,KAAAA,EAAE,GAAG,CAACA,EAAE,GAAG,IAAI;AAEf,KAAA,IAAI,CAACjqC,KAAK,CAAC,CAAC,CAAC,IAAK,IAAI,CAAC+pC,IAAI,IAAI,EAAE,GAAIE,EAAE;AACvC,KAAA,IAAI,CAACjqC,KAAK,CAAC,CAAC,CAAC,IAAK,IAAI,CAAC+pC,IAAI,IAAK,CAAC,GAAIE,EAAE;AACvC,KAAA,IAAI,CAACjqC,KAAK,CAAC,CAAC,CAAC,IAAK,IAAI,CAAC+pC,IAAI,IAAK,CAAC,GAAIE,EAAE;AACzC;GAEArhF,OAAOA,CAACgQ,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,EAAE;AACjC,KAAA,KAAK,IAAIt+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC0Q,MAAM,CAAC2tE,IAAI,GAAGr+E,CAAC,CAAC,GAAGse,KAAK,CAACggE,IAAI,GAAGt+E,CAAC,CAAC,GAAG,IAAI,CAAC83C,KAAK,CAAC93C,CAAC,CAAC;AAEpD,KAAA,IAAI,IAAI,CAAC64B,OAAO,EACd,IAAI,CAACr2B,GAAG,CAACq2B,OAAO,CAACnoB,MAAM,EAAE2tE,IAAI,EAAE3tE,MAAM,EAAE2tE,IAAI,CAAC,CAAC,KAE7C,IAAI,CAAC77E,GAAG,CAACi8E,OAAO,CAAC/tE,MAAM,EAAE2tE,IAAI,EAAE3tE,MAAM,EAAE2tE,IAAI,CAAC;KAE9C,KAAK,IAAIr+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC0Q,MAAM,CAAC2tE,IAAI,GAAGr+E,CAAC,CAAC,IAAI,IAAI,CAAC83C,KAAK,CAAC93C,CAAC,CAAC;KAEnC,IAAI,CAAC0kB,MAAM,EAAE;AACf;AAEAo8D,GAAAA,QAAQA,GAAG;AACT,KAAA,KAAK,IAAI9gF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EAAE;AACvC,OAAA,IAAI,CAAC83C,KAAK,CAAC93C,CAAC,CAAC,GAAG,CAAC;AACjB,OAAA,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC,GAAG,CAAC;AAClB;AACF;GAEA4/E,eAAeA,CAAC/kE,OAAO,EAAE;AACvB,KAAA,IAAI,IAAI,CAAC6lE,QAAQ,KAAK,CAAC,IAAI,IAAI,CAACD,QAAQ,KAAK,CAAC,EAC5C,MAAM,IAAI3kF,KAAK,CAAC,0BAA0B,CAAC;KAE7C,IAAI,CAAC+e,OAAO,GAAGA,OAAO;KACtB,IAAI,CAAC2lE,KAAK,GAAG3lE,OAAO;AACtB;AACF;;AAEA;AACA;AACA;;CAEA,MAAMmnE,SAAS,SAASJ,GAAG,CAAC;GAC1BzlF,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,IAAI,CAAC;AAClB;AAEA7B,GAAAA,MAAMA,GAAG;AACP,KAAA,IAAI,CAAC,IAAI,CAACka,OAAO,EAAE;OACjB,IAAI,IAAI,CAAC4lE,QAAQ,KAAK,CAAC,EACrB,MAAM,IAAI3kF,KAAK,CAAC,+BAA+B,CAAC;AAElD,OAAA,OAAO4B,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;KAEA,IAAI,IAAI,CAAC2gF,QAAQ,KAAK,CAAC,EACrB,MAAM,IAAI5kF,KAAK,CAAC,wBAAwB,CAAC;AAE3C,KAAA,IAAI,IAAI,CAAC2kF,QAAQ,KAAK,CAAC,EACrB,OAAO/iF,MAAM,CAACnB,IAAI,CAAC,IAAI,CAACmmD,IAAI,CAAC;;AAE/B;KACA,MAAMxhD,GAAG,GAAGxD,MAAM,CAACqC,KAAK,CAAC,IAAI,CAAC0gF,QAAQ,CAAC;AAEvC,KAAA,KAAK,IAAIzgF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACygF,QAAQ,EAAEzgF,CAAC,EAAE,EAAE;OACtCkB,GAAG,CAAClB,CAAC,CAAC,GAAG,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC;OAErB,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,GAAG,IAAI,CAACS,KAAK,CAACT,CAAC,CAAC;AAC9B;KAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,IAAI,IAAI,CAAC83C,KAAK,CAAC93C,CAAC,CAAC;AAE/B,KAAA,IAAI,CAACwC,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAAC6pB,IAAI,EAAE,CAAC,EAAE,IAAI,CAACA,IAAI,EAAE,CAAC,CAAC;KAE5C,KAAK,IAAI1iD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,IAAI,IAAI,CAAC83C,KAAK,CAAC93C,CAAC,CAAC;KAE/B,OAAOtC,MAAM,CAACm9B,MAAM,CAAC,CAAC,IAAI,CAAC6nB,IAAI,EAAExhD,GAAG,CAAC,CAAC;AACxC;AACF;;AAEA;AACA;AACA;;CAEA,MAAM+gF,WAAW,SAASL,GAAG,CAAC;GAC5BzlF,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,KAAK,CAAC;AACnB;AAEA7B,GAAAA,MAAMA,GAAG;AACP,KAAA,IAAI,CAAC,IAAI,CAACka,OAAO,EAAE;OACjB,IAAI,IAAI,CAAC4lE,QAAQ,KAAK,CAAC,EACrB,MAAM,IAAI3kF,KAAK,CAAC,+BAA+B,CAAC;AAElD,OAAA,OAAO4B,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;KAEA,IAAI,IAAI,CAAC2gF,QAAQ,KAAK,CAAC,EACrB,MAAM,IAAI5kF,KAAK,CAAC,wBAAwB,CAAC;AAE3C,KAAA,IAAI,IAAI,CAAC2kF,QAAQ,KAAK,CAAC,EACrB,OAAO/iF,MAAM,CAACnB,IAAI,CAAC,IAAI,CAACmmD,IAAI,CAAC;;AAE/B;AACA;AACA;KACA,KAAK,IAAI1iD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,IAAI,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC;AAE9B,KAAA,IAAI,CAACwC,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAAC6pB,IAAI,EAAE,CAAC,EAAE,IAAI,CAACA,IAAI,EAAE,CAAC,CAAC;KAE5C,KAAK,IAAI1iD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,IAAI,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC;;AAE9B;AACA;AACA;KACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,IAAI,IAAI,CAAC83C,KAAK,CAAC93C,CAAC,CAAC;AAE/B,KAAA,IAAI,CAACwC,GAAG,CAACi8E,OAAO,CAAC,IAAI,CAAC/7B,IAAI,EAAE,CAAC,EAAE,IAAI,CAACA,IAAI,EAAE,CAAC,CAAC;KAE5C,KAAK,IAAI1iD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,IAAI,IAAI,CAAC83C,KAAK,CAAC93C,CAAC,CAAC;KAE/B,MAAMkB,GAAG,GAAGxD,MAAM,CAACqC,KAAK,CAAC,IAAI,CAAC0gF,QAAQ,CAAC;AAEvC,KAAA,KAAK,IAAIzgF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACygF,QAAQ,EAAEzgF,CAAC,EAAE,EAAE;OACtCkB,GAAG,CAAClB,CAAC,CAAC,GAAG,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC;OAErB,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,GAAG,IAAI,CAACS,KAAK,CAACT,CAAC,CAAC;AAC9B;;AAEA;KACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,IAAI,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC;AAE9B,KAAA,IAAI,CAACwC,GAAG,CAACi8E,OAAO,CAAC,IAAI,CAAC/7B,IAAI,EAAE,CAAC,EAAE,IAAI,CAACA,IAAI,EAAE,CAAC,CAAC;KAE5C,KAAK,IAAI1iD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAAC0iD,IAAI,CAAC1iD,CAAC,CAAC,IAAI,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC;KAE9B,OAAOtC,MAAM,CAACm9B,MAAM,CAAC,CAAC,IAAI,CAAC6nB,IAAI,EAAExhD,GAAG,CAAC,CAAC;AACxC;AACF;;AAEA;AACA;AACA;;CAEA,MAAMghF,GAAG,SAASnB,MAAM,CAAC;GACvB5kF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;KAEV,IAAI,CAAChC,KAAK,GAAG9C,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;KACzC,IAAI,CAACi/E,GAAG,GAAGzkF,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;AACzC;AAEAk7B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;KACbt/B,MAAM,CAACs/B,EAAE,CAACx+B,MAAM,KAAK,IAAI,CAACsI,SAAS,CAAC;KAEpCk2B,EAAE,CAACp4B,IAAI,CAAC,IAAI,CAACmhF,GAAG,EAAE,CAAC,CAAC;AACtB;AAEAC,GAAAA,UAAUA,GAAG;AACX,KAAA,KAAK,IAAIpiF,CAAC,GAAG,IAAI,CAACmiF,GAAG,CAACvnF,MAAM,GAAG,CAAC,EAAEoF,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;AAC7C,OAAA,IAAI,CAACmiF,GAAG,CAACniF,CAAC,CAAC,IAAI,CAAC;OAEhB,IAAI,IAAI,CAACmiF,GAAG,CAACniF,CAAC,CAAC,KAAK,IAAI,EACtB;AACJ;AACF;AAEAghF,GAAAA,MAAMA,CAACtwE,MAAM,EAAE4N,KAAK,EAAE;AACpB,KAAA,MAAMjO,IAAI,GAAG,IAAI,CAACnN,SAAS,GAAG,CAAC;AAE/B,KAAA,KAAK,IAAIlD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGse,KAAK,CAAC1jB,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACrC,IAAI,CAAC,IAAI,CAACa,GAAG,GAAGwP,IAAI,MAAM,CAAC,EAAE;AAC3B,SAAA,IAAI,CAAC7N,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAACr4B,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC2hF,GAAG,EAAE,CAAC,CAAC;SAC5C,IAAI,CAACC,UAAU,EAAE;SACjB,IAAI,CAACvhF,GAAG,GAAG,CAAC;AACd;AAEA6P,OAAAA,MAAM,CAAC1Q,CAAC,CAAC,GAAGse,KAAK,CAACte,CAAC,CAAC,GAAG,IAAI,CAACQ,KAAK,CAAC,IAAI,CAACK,GAAG,EAAE,CAAC;AAC/C;AACF;AAEAF,GAAAA,MAAMA,GAAG;AACP,KAAA,OAAOjD,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;AAEA+gF,GAAAA,QAAQA,GAAG;AACT,KAAA,KAAK,IAAI9gF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EAAE;AACvC,OAAA,IAAI,CAACQ,KAAK,CAACR,CAAC,CAAC,GAAG,CAAC;AACjB,OAAA,IAAI,CAACmiF,GAAG,CAACniF,CAAC,CAAC,GAAG,CAAC;AACjB;AACF;AACF;;AAEA;AACA;AACA;;CAEA,MAAMqiF,SAAS,SAASH,GAAG,CAAC;GAC1B/lF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;AACZ;AACF;;AAEA;AACA;AACA;;CAEA,MAAM8/E,WAAW,SAASJ,GAAG,CAAC;GAC5B/lF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;AACZ;AACF;;AAEA;AACA;AACA;;CAEA,MAAM+/E,GAAG,SAASxB,MAAM,CAAC;GACvB5kF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;KAEV,IAAI,CAAChC,KAAK,GAAG9C,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;KACzC,IAAI,CAACse,IAAI,GAAG9jB,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;AAC1C;AAEAk7B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;KACbt/B,MAAM,CAACs/B,EAAE,CAACx+B,MAAM,KAAK,IAAI,CAACsI,SAAS,CAAC;KAEpCk2B,EAAE,CAACp4B,IAAI,CAAC,IAAI,CAACwgB,IAAI,EAAE,CAAC,CAAC;AACvB;AAEA7gB,GAAAA,MAAMA,GAAG;AACP,KAAA,OAAOjD,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;AAEA+gF,GAAAA,QAAQA,GAAG;AACT,KAAA,KAAK,IAAI9gF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EAAE;AACvC,OAAA,IAAI,CAACQ,KAAK,CAACR,CAAC,CAAC,GAAG,CAAC;AACjB,OAAA,IAAI,CAACwhB,IAAI,CAACxhB,CAAC,CAAC,GAAG,CAAC;AAClB;AACF;AACF;;AAEA;AACA;AACA;;CAEA,MAAMwiF,SAAS,SAASD,GAAG,CAAC;GAC1BpmF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;AACZ;AAEAw+E,GAAAA,MAAMA,CAACtwE,MAAM,EAAE4N,KAAK,EAAE;AACpB,KAAA,MAAMjO,IAAI,GAAG,IAAI,CAACnN,SAAS,GAAG,CAAC;AAE/B,KAAA,KAAK,IAAIlD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGse,KAAK,CAAC1jB,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACrC,IAAI,CAAC,IAAI,CAACa,GAAG,GAAGwP,IAAI,MAAM,CAAC,EAAE;AAC3B,SAAA,IAAI,CAAC7N,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAACr4B,KAAK,EAAE,CAAC,EAAE,IAAI,CAACghB,IAAI,EAAE,CAAC,CAAC;SAC7C,IAAI,CAAC3gB,GAAG,GAAG,CAAC;AACd;AAEA6P,OAAAA,MAAM,CAAC1Q,CAAC,CAAC,GAAGse,KAAK,CAACte,CAAC,CAAC,GAAG,IAAI,CAACQ,KAAK,CAAC,IAAI,CAACK,GAAG,CAAC;OAE3C,IAAI,CAAC2gB,IAAI,CAAC,IAAI,CAAC3gB,GAAG,CAAC,GAAG6P,MAAM,CAAC1Q,CAAC,CAAC;OAE/B,IAAI,CAACa,GAAG,IAAI,CAAC;AACf;AACF;AACF;;AAEA;AACA;AACA;;CAEA,MAAM4hF,WAAW,SAASF,GAAG,CAAC;GAC5BpmF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;AACZ;AAEAw+E,GAAAA,MAAMA,CAACtwE,MAAM,EAAE4N,KAAK,EAAE;AACpB,KAAA,MAAMjO,IAAI,GAAG,IAAI,CAACnN,SAAS,GAAG,CAAC;AAE/B,KAAA,KAAK,IAAIlD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGse,KAAK,CAAC1jB,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACrC,IAAI,CAAC,IAAI,CAACa,GAAG,GAAGwP,IAAI,MAAM,CAAC,EAAE;AAC3B,SAAA,IAAI,CAAC7N,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAACr4B,KAAK,EAAE,CAAC,EAAE,IAAI,CAACghB,IAAI,EAAE,CAAC,CAAC;SAC7C,IAAI,CAAC3gB,GAAG,GAAG,CAAC;AACd;OAEA,IAAI,CAAC2gB,IAAI,CAAC,IAAI,CAAC3gB,GAAG,CAAC,GAAGyd,KAAK,CAACte,CAAC,CAAC;AAE9B0Q,OAAAA,MAAM,CAAC1Q,CAAC,CAAC,GAAGse,KAAK,CAACte,CAAC,CAAC,GAAG,IAAI,CAACQ,KAAK,CAAC,IAAI,CAACK,GAAG,CAAC;OAE3C,IAAI,CAACA,GAAG,IAAI,CAAC;AACf;AACF;AACF;;AAEA;AACA;AACA;;CAEA,MAAM6hF,GAAG,SAAS3B,MAAM,CAAC;GACvB5kF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;KAEV,IAAI,CAAChC,KAAK,GAAG9C,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;AAC3C;AAEAk7B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;KACbt/B,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAAC05B,EAAE,CAAC,CAAC;KAC3Bt/B,MAAM,CAACs/B,EAAE,CAACx+B,MAAM,KAAK,IAAI,CAACsI,SAAS,CAAC;KAEpCk2B,EAAE,CAACp4B,IAAI,CAAC,IAAI,CAACR,KAAK,EAAE,CAAC,CAAC;AACxB;AAEAwgF,GAAAA,MAAMA,CAACtwE,MAAM,EAAE4N,KAAK,EAAE;AACpB,KAAA,MAAMjO,IAAI,GAAG,IAAI,CAACnN,SAAS,GAAG,CAAC;AAE/B,KAAA,KAAK,IAAIlD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGse,KAAK,CAAC1jB,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACrC,IAAI,CAAC,IAAI,CAACa,GAAG,GAAGwP,IAAI,MAAM,CAAC,EAAE;AAC3B,SAAA,IAAI,CAAC7N,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAACr4B,KAAK,EAAE,CAAC,EAAE,IAAI,CAACA,KAAK,EAAE,CAAC,CAAC;SAC9C,IAAI,CAACK,GAAG,GAAG,CAAC;AACd;AAEA6P,OAAAA,MAAM,CAAC1Q,CAAC,CAAC,GAAGse,KAAK,CAACte,CAAC,CAAC,GAAG,IAAI,CAACQ,KAAK,CAAC,IAAI,CAACK,GAAG,EAAE,CAAC;AAC/C;AACF;AAEAF,GAAAA,MAAMA,GAAG;AACP,KAAA,OAAOjD,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;AAEA+gF,GAAAA,QAAQA,GAAG;KACT,KAAK,IAAI9gF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC,IAAI,CAACQ,KAAK,CAACR,CAAC,CAAC,GAAG,CAAC;AACrB;AACF;;AAEA;AACA;AACA;;CAEA,MAAM2iF,SAAS,SAASD,GAAG,CAAC;GAC1BvmF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;AACZ;AACF;;AAEA;AACA;AACA;;CAEA,MAAMogF,WAAW,SAASF,GAAG,CAAC;GAC5BvmF,WAAWA,CAACqG,GAAG,EAAE;KACf,KAAK,CAACA,GAAG,CAAC;AACZ;AACF;;AAEA;AACA;AACA;;CAEA,MAAMqgF,GAAG,SAAS9B,MAAM,CAAC;AACvB5kF,GAAAA,WAAWA,CAACqG,GAAG,EAAEq2B,OAAO,EAAE;AACxB/+B,KAAAA,MAAM,CAAC0I,GAAG,CAACU,SAAS,KAAK,EAAE,CAAC;KAE5B,KAAK,CAACV,GAAG,CAAC;KAEV,IAAI,CAACq2B,OAAO,GAAGA,OAAO;AACtB,KAAA,IAAI,CAACx5B,IAAI,GAAG,IAAIu/E,KAAK,EAAE;KACvB,IAAI,CAACuD,GAAG,GAAGzkF,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;KAC3B,IAAI,CAACS,KAAK,GAAG9C,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;KAC7B,IAAI,CAACN,GAAG,GAAG/B,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;KAC3B,IAAI,CAACsQ,IAAI,GAAG3S,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;KAC5B,IAAI,CAACugF,GAAG,GAAG,IAAI;KACf,IAAI,CAACx9E,GAAG,GAAG,IAAI;AACjB;AAEAs7B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;KACb,KAAK,IAAIp5B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;AAC3B,OAAA,IAAI,CAACmiF,GAAG,CAACniF,CAAC,CAAC,GAAG,CAAC;AACf,OAAA,IAAI,CAACP,GAAG,CAACO,CAAC,CAAC,GAAG,CAAC;AACf,OAAA,IAAI,CAACqQ,IAAI,CAACrQ,CAAC,CAAC,GAAG,CAAC;AAClB;KAEA,IAAI,CAAC8iF,SAAS,CAAC,IAAI,CAACrjF,GAAG,EAAE,IAAI,CAACA,GAAG,CAAC;KAElC,IAAI,CAACJ,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,GAAG,CAAC;;AAExB;AACA,KAAA,IAAI25B,EAAE,CAACx+B,MAAM,KAAK,EAAE,EAAE;AACpB,OAAA,IAAI,CAACyE,IAAI,CAACO,MAAM,CAACw5B,EAAE,CAAC;AACpBA,OAAAA,EAAE,GAAG,IAAI,CAAC/5B,IAAI,CAACQ,KAAK,EAAE;OACtB,IAAI,CAACR,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,GAAG,CAAC;AAC1B;KAEA25B,EAAE,CAACp4B,IAAI,CAAC,IAAI,CAACmhF,GAAG,EAAE,CAAC,CAAC;AAEpB,KAAA,IAAI/oD,EAAE,CAACx+B,MAAM,KAAK,EAAE,EAAE;AACpB,OAAA,IAAI,CAACunF,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI;AACnB,OAAA,IAAI,CAACA,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI;AACnB,OAAA,IAAI,CAACA,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI;AACnB,OAAA,IAAI,CAACA,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI;AACrB;KAEA,IAAI,CAACW,SAAS,CAAC,IAAI,CAACzyE,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC;KAEpC,IAAI,CAACiwE,GAAG,GAAG,IAAI;KACf,IAAI,CAACx9E,GAAG,GAAG,IAAI;AAEf,KAAA,OAAO,IAAI;AACb;AAEAs/E,GAAAA,UAAUA,GAAG;KACX,IAAIL,EAAE,GAAG,CAAC;KACV,IAAI/hF,CAAC,GAAG,CAAC;KAET,OAAOA,CAAC,EAAE,EAAE;OACV+hF,EAAE,IAAI,IAAI,CAACI,GAAG,CAAC,EAAE,GAAGniF,CAAC,CAAC;OACtB,IAAI,CAACmiF,GAAG,CAAC,EAAE,GAAGniF,CAAC,CAAC,GAAG+hF,EAAE;OACrBA,EAAE,KAAK,CAAC;AACV;AACF;AAEAe,GAAAA,SAASA,CAACpyE,MAAM,EAAE4N,KAAK,EAAE;AACvB,KAAA,KAAK,IAAIte,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGse,KAAK,CAAC1jB,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACrC,IAAI,CAAC,IAAI,CAACa,GAAG,GAAG,EAAE,MAAM,CAAC,EAAE;AACzB,SAAA,IAAI,CAAC2B,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAACr4B,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC2hF,GAAG,EAAE,CAAC,CAAC;SAC5C,IAAI,CAACC,UAAU,EAAE;SACjB,IAAI,CAACvhF,GAAG,GAAG,CAAC;AACd;AAEA6P,OAAAA,MAAM,CAAC1Q,CAAC,CAAC,GAAGse,KAAK,CAACte,CAAC,CAAC,GAAG,IAAI,CAACQ,KAAK,CAAC,IAAI,CAACK,GAAG,EAAE,CAAC;AAC/C;AACF;AAEAmgF,GAAAA,MAAMA,CAACtwE,MAAM,EAAE4N,KAAK,EAAE;KACpB,IAAI,IAAI,CAACua,OAAO,EAAE;AAChB,OAAA,IAAI,CAACiqD,SAAS,CAACpyE,MAAM,EAAE4N,KAAK,CAAC;AAC7B,OAAA,IAAI,CAACjf,IAAI,CAACO,MAAM,CAAC8Q,MAAM,CAAC;AAC1B,MAAC,MAAM;AACL,OAAA,IAAI,CAACrR,IAAI,CAACO,MAAM,CAAC0e,KAAK,CAAC;AACvB,OAAA,IAAI,CAACwkE,SAAS,CAACpyE,MAAM,EAAE4N,KAAK,CAAC;AAC/B;AACF;AAEA3d,GAAAA,MAAMA,GAAG;KACP,MAAMmC,GAAG,GAAG,IAAI,CAACzD,IAAI,CAACQ,KAAK,EAAE;KAE7B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB8C,GAAG,CAAC9C,CAAC,CAAC,IAAI,IAAI,CAACqQ,IAAI,CAACrQ,CAAC,CAAC;KAExB,IAAI,IAAI,CAAC64B,OAAO,EAAE;OAChB,IAAI,CAAC/1B,GAAG,GAAGA,GAAG;AACd,OAAA,OAAOpF,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;KAEA,IAAI,CAAC,IAAI,CAACugF,GAAG,EACX,MAAM,IAAIxkF,KAAK,CAAC,kBAAkB,CAAC;KAErC,IAAI,CAACgmF,SAAS,CAACh/E,GAAG,EAAE,IAAI,CAACw9E,GAAG,EAAE,IAAI,CAACA,GAAG,CAAC1lF,MAAM,CAAC,EAC5C,MAAM,IAAIkB,KAAK,CAAC,cAAc,CAAC;AAEjC,KAAA,OAAO4B,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;AAEA+gF,GAAAA,QAAQA,GAAG;AACT,KAAA,IAAI,CAACzhF,IAAI,CAAC25B,OAAO,EAAE;KAEnB,KAAK,IAAIh5B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;AAC3B,OAAA,IAAI,CAACmiF,GAAG,CAACniF,CAAC,CAAC,GAAG,CAAC;AACf,OAAA,IAAI,CAACQ,KAAK,CAACR,CAAC,CAAC,GAAG,CAAC;AACjB,OAAA,IAAI,CAACP,GAAG,CAACO,CAAC,CAAC,GAAG,CAAC;AACf,OAAA,IAAI,CAACqQ,IAAI,CAACrQ,CAAC,CAAC,GAAG,CAAC;AAClB;KAEA,IAAI,IAAI,CAACsgF,GAAG,EAAE;OACZ,KAAK,IAAItgF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACsgF,GAAG,CAAC1lF,MAAM,EAAEoF,CAAC,EAAE,EACtC,IAAI,CAACsgF,GAAG,CAACtgF,CAAC,CAAC,GAAG,CAAC;OAEjB,IAAI,CAACsgF,GAAG,GAAG,IAAI;AACjB;AACF;GAEAR,OAAOA,CAAC7/E,IAAI,EAAE;AACZ,KAAA,IAAI,IAAI,CAACY,GAAG,KAAK,EAAE,EACjB,MAAM,IAAI/E,KAAK,CAAC,4BAA4B,CAAC;AAE/C,KAAA,IAAI,CAACuD,IAAI,CAAC8/E,GAAG,CAACl/E,IAAI,CAAC;AAEnB,KAAA,OAAO,IAAI;AACb;AAEAmgF,GAAAA,WAAWA,GAAG;KACZ,IAAI,CAAC,IAAI,CAACvnD,OAAO,EACf,MAAM,IAAI/8B,KAAK,CAAC,2BAA2B,CAAC;KAE9C,IAAI,CAAC,IAAI,CAACgH,GAAG,EACX,MAAM,IAAIhH,KAAK,CAAC,0BAA0B,CAAC;KAE7C,OAAO4B,MAAM,CAACnB,IAAI,CAAC,IAAI,CAACuG,GAAG,CAAC;AAC9B;GAEAy9E,WAAWA,CAACD,GAAG,EAAE;KACf,IAAI,IAAI,CAACznD,OAAO,EACd,MAAM,IAAI/8B,KAAK,CAAC,6BAA6B,CAAC;AAEhD,KAAA,IAAI,IAAI,CAAC+E,GAAG,KAAK,EAAE,EACjB,MAAM,IAAI/E,KAAK,CAAC,4BAA4B,CAAC;KAE/C,IAAIwkF,GAAG,CAAC1lF,MAAM,KAAK,CAAC,IAAI0lF,GAAG,CAAC1lF,MAAM,KAAK,CAAC,KAChC0lF,GAAG,CAAC1lF,MAAM,GAAG,EAAE,IAAI0lF,GAAG,CAAC1lF,MAAM,GAAG,EAAE,CAAC,EAAE;AAC3C,OAAA,MAAM,IAAIoS,UAAU,CAAC,mBAAmB,CAAC;AAC3C;KAEA,IAAI,CAACszE,GAAG,GAAG5iF,MAAM,CAACnB,IAAI,CAAC+jF,GAAG,CAAC;AAE3B,KAAA,OAAO,IAAI;AACb;AACF;;AAEA;AACA;AACA;;CAEA,MAAMyC,SAAS,SAASF,GAAG,CAAC;GAC1B1mF,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,IAAI,CAAC;AAClB;AACF;;AAEA;AACA;AACA;;CAEA,MAAMwgF,WAAW,SAASH,GAAG,CAAC;GAC5B1mF,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,KAAK,CAAC;AACnB;AACF;;AAEA;AACA;AACA;;AAEA,CAAA,MAAMygF,MAAM,CAAC;GACX9mF,WAAWA,CAACqG,GAAG,EAAE;KACf,IAAI,CAACA,GAAG,GAAGA,GAAG;AACd,KAAA,IAAI,CAACxD,IAAI,GAAGwD,GAAG,CAACU,SAAS;KACzB,IAAI,CAACJ,GAAG,GAAGpF,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACf,IAAI,CAAC;AAClC,KAAA,IAAI,CAAC6B,GAAG,GAAG,EAAE;AACf;AAEArB,GAAAA,IAAIA,GAAG;AACL,KAAA,IAAI,CAACsD,GAAG,CAACsnE,IAAI,CAAC,CAAC,CAAC;KAChB,IAAI,CAACvpE,GAAG,GAAG,CAAC;AACZ,KAAA,OAAO,IAAI;AACb;GAEAjB,MAAMA,CAACK,IAAI,EAAE;KACXnG,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACO,IAAI,CAAC,CAAC;AAE7B,KAAA,IAAI,IAAI,CAACY,GAAG,KAAK,EAAE,EACjB,MAAM,IAAI/E,KAAK,CAAC,6BAA6B,CAAC;AAEhD,KAAA,KAAK,IAAIkE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,IAAI,CAACrF,MAAM,EAAEoF,CAAC,EAAE,EAAE;AACpC,OAAA,IAAI,CAAC8C,GAAG,CAAC,IAAI,CAACjC,GAAG,EAAE,CAAC,IAAIZ,IAAI,CAACD,CAAC,CAAC;OAE/B,IAAI,IAAI,CAACa,GAAG,KAAK,IAAI,CAAC7B,IAAI,EAAE;AAC1B,SAAA,IAAI,CAACwD,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAAC/1B,GAAG,EAAE,CAAC,EAAE,IAAI,CAACA,GAAG,EAAE,CAAC,CAAC;SAC1C,IAAI,CAACjC,GAAG,GAAG,CAAC;AACd;AACF;AACF;AAEAf,GAAAA,GAAGA,GAAG;AACJ,KAAA,IAAI,IAAI,CAACe,GAAG,GAAG,CAAC,EAAE;AAChB,OAAA,IAAI,CAAC2B,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAAC/1B,GAAG,EAAE,CAAC,EAAE,IAAI,CAACA,GAAG,EAAE,CAAC,CAAC;OAC1C,IAAI,CAACjC,GAAG,GAAG,CAAC;AACd;AACF;AAEAhB,GAAAA,KAAKA,GAAG;AACN,KAAA,IAAI,IAAI,CAACgB,GAAG,KAAK,EAAE,EACjB,MAAM,IAAI/E,KAAK,CAAC,6BAA6B,CAAC;KAEhD,IAAI,CAACgE,GAAG,EAAE;AACV,KAAA,IAAI,CAACe,GAAG,GAAG,EAAE;KAEb,OAAOnD,MAAM,CAACnB,IAAI,CAAC,IAAI,CAACuG,GAAG,CAAC;AAC9B;AACF;;AAEA;AACA;AACA;AACA;;CAEA,MAAMogF,GAAG,SAASnC,MAAM,CAAC;AACvB5kF,GAAAA,WAAWA,CAACqG,GAAG,EAAEq2B,OAAO,EAAE;AACxB/+B,KAAAA,MAAM,CAAC0I,GAAG,CAACU,SAAS,KAAK,EAAE,CAAC;KAE5B,KAAK,CAACV,GAAG,CAAC;KAEV,IAAI,CAACq2B,OAAO,GAAGA,OAAO;KACtB,IAAI,CAACx5B,IAAI,GAAG,IAAI4jF,MAAM,CAACzgF,GAAG,CAAC;KAC3B,IAAI,CAAChC,KAAK,GAAG9C,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;KAC7B,IAAI,CAACoiF,GAAG,GAAGzkF,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;KAC3B,IAAI,CAACkgF,MAAM,GAAG,CAAC;KACf,IAAI,CAAC7mD,EAAE,GAAG,IAAI;KACd,IAAI,CAACt2B,GAAG,GAAG,IAAI;KACf,IAAI,CAACw9E,GAAG,GAAG,IAAI;AACjB;AAEA8B,GAAAA,UAAUA,GAAG;KACX,KAAK,IAAIpiF,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;AAC5B,OAAA,IAAI,CAACmiF,GAAG,CAACniF,CAAC,CAAC,IAAI,CAAC;OAEhB,IAAI,IAAI,CAACmiF,GAAG,CAACniF,CAAC,CAAC,KAAK,IAAI,EACtB;AACJ;AACF;AAEA8iF,GAAAA,SAASA,CAACpyE,MAAM,EAAE4N,KAAK,EAAE;AACvB,KAAA,KAAK,IAAIte,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGse,KAAK,CAAC1jB,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACrC,IAAI,CAAC,IAAI,CAACa,GAAG,GAAG,EAAE,MAAM,CAAC,EAAE;AACzB,SAAA,IAAI,CAAC2B,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAACr4B,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC2hF,GAAG,EAAE,CAAC,CAAC;SAC5C,IAAI,CAACC,UAAU,EAAE;SACjB,IAAI,CAACvhF,GAAG,GAAG,CAAC;AACd;AAEA6P,OAAAA,MAAM,CAAC1Q,CAAC,CAAC,GAAGse,KAAK,CAACte,CAAC,CAAC,GAAG,IAAI,CAACQ,KAAK,CAAC,IAAI,CAACK,GAAG,EAAE,CAAC;AAC/C;AACF;AAEAu9B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;AACb;KACA,IAAIA,EAAE,CAACx+B,MAAM,GAAG,CAAC,EACf,MAAM,IAAIoS,UAAU,CAAC,uBAAuB,CAAC;AAE/C,KAAA,IAAIosB,EAAE,CAACx+B,MAAM,GAAG,EAAE,EAChBw+B,EAAE,GAAGA,EAAE,CAACz0B,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;KAEtB,IAAI,CAACy0B,EAAE,GAAG17B,MAAM,CAACnB,IAAI,CAAC68B,EAAE,CAAC;AACzB,KAAA,IAAI,CAACv4B,GAAG,GAAG,EAAE;KACb,IAAI,CAACo/E,MAAM,GAAG,CAAC;KACf,IAAI,CAACn9E,GAAG,GAAG,IAAI;KACf,IAAI,CAACw9E,GAAG,GAAG,IAAI;AACjB;AAEAJ,GAAAA,OAAOA,CAACF,MAAM,EAAEC,MAAM,EAAEd,GAAG,EAAE;KAC3B,IAAI,CAAC,IAAI,CAAC/lD,EAAE,EACV,MAAM,IAAIt9B,KAAK,CAAC,4BAA4B,CAAC;;AAE/C;KACA,IAAIqnF,EAAE,GAAGnD,MAAM;AACf,KAAA,IAAIoD,CAAC,GAAGt7E,IAAI,CAAC+H,IAAI,CAAC,CAAC,EAAE,GAAG/H,IAAI,CAACqd,KAAK,CAACg+D,EAAE,CAAC,IAAI,CAAC,CAAC;AAE5C,KAAA,IAAIC,CAAC,GAAG,CAAC,EACPA,CAAC,GAAG,CAAC;KAEP,MAAMC,CAAC,GAAGpD,MAAM;AAChB,KAAA,MAAMqD,CAAC,GAAG,EAAE,GAAGF,CAAC;KAChB,MAAMG,KAAK,GAAG,CAACpE,GAAG,IAAIA,GAAG,CAACvkF,MAAM,GAAG,CAAC,IAAI,CAAC;KACzC,MAAM6F,KAAK,GAAG/C,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;KAE9B,IAAIsjF,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,EAAE,IAAI,CAACA,CAAC,GAAG,CAAC,MAAM,CAAC,EAClC,MAAM,IAAIr2E,UAAU,CAAC,qBAAqB,CAAC;;AAE7C;KACAvM,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG8iF,KAAK,GAAG,CAAC,IAAI,CAACF,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAID,CAAC,GAAG,CAAC,CAAC;;AAEnD;KACA,IAAI,CAAChqD,EAAE,CAACp4B,IAAI,CAACP,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEqH,IAAI,CAACoD,GAAG,CAACo4E,CAAC,EAAE,IAAI,CAAClqD,EAAE,CAACx+B,MAAM,CAAC,CAAC;;AAEtD;AACA,KAAA,KAAK,IAAIoF,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,GAAGsjF,CAAC,EAAEtjF,CAAC,EAAE,EAAE;AAChCS,OAAAA,KAAK,CAACT,CAAC,CAAC,GAAGmjF,EAAE,GAAG,IAAI;OACpBA,EAAE,MAAM,CAAC;AACX;AAEArpF,KAAAA,MAAM,CAACqpF,EAAE,KAAK,CAAC,CAAC;AAEhB,KAAA,IAAI,CAAC9jF,IAAI,CAACG,IAAI,EAAE;AAChB,KAAA,IAAI,CAACH,IAAI,CAACO,MAAM,CAACa,KAAK,CAAC;KAEvB,IAAI8iF,KAAK,EAAE;AACT,OAAA,IAAIpE,GAAG,CAACvkF,MAAM,GAAG,MAAM,EAAE;SACvB,MAAMg4B,GAAG,GAAGl1B,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;SAE3B6yB,GAAG,CAAC,CAAC,CAAC,GAAGusD,GAAG,CAACvkF,MAAM,KAAK,CAAC;SACzBg4B,GAAG,CAAC,CAAC,CAAC,GAAGusD,GAAG,CAACvkF,MAAM,KAAK,CAAC;AAEzB,SAAA,IAAI,CAACyE,IAAI,CAACO,MAAM,CAACgzB,GAAG,CAAC;AACvB,QAAC,MAAM,IAAIusD,GAAG,CAACvkF,MAAM,GAAG,UAAU,EAAE;SAClC,MAAMg4B,GAAG,GAAGl1B,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AAE3B6yB,SAAAA,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;AACbA,SAAAA,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;SACbA,GAAG,CAAC,CAAC,CAAC,GAAGusD,GAAG,CAACvkF,MAAM,KAAK,EAAE;SAC1Bg4B,GAAG,CAAC,CAAC,CAAC,GAAGusD,GAAG,CAACvkF,MAAM,KAAK,EAAE;SAC1Bg4B,GAAG,CAAC,CAAC,CAAC,GAAGusD,GAAG,CAACvkF,MAAM,KAAK,CAAC;SACzBg4B,GAAG,CAAC,CAAC,CAAC,GAAGusD,GAAG,CAACvkF,MAAM,KAAK,CAAC;AAEzB,SAAA,IAAI,CAACyE,IAAI,CAACO,MAAM,CAACgzB,GAAG,CAAC;AACvB,QAAC,MAAM;AACL,SAAA,MAAM,IAAI5lB,UAAU,CAAC,qBAAqB,CAAC;AAC7C;AAEA,OAAA,IAAI,CAAC3N,IAAI,CAACO,MAAM,CAACu/E,GAAG,CAAC;AACrB,OAAA,IAAI,CAAC9/E,IAAI,CAACS,GAAG,EAAE;AACjB;AAEAW,KAAAA,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;AACbA,KAAAA,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC;KAEb,KAAK,IAAIT,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,GAAGsjF,CAAC,EAAEtjF,CAAC,EAAE,EAC9BS,KAAK,CAACT,CAAC,CAAC,GAAG,CAAC;KAEdS,KAAK,CAACO,IAAI,CAAC,IAAI,CAACmhF,GAAG,EAAE,CAAC,CAAC;KAEvB,IAAI,CAACthF,GAAG,GAAG,CAAC;KACZ,IAAI,CAACo/E,MAAM,GAAGoD,CAAC;KACf,IAAI,CAACjqD,EAAE,GAAG,IAAI;AAChB;AAEA4nD,GAAAA,MAAMA,CAACtwE,MAAM,EAAE4N,KAAK,EAAE;KACpB,IAAI,IAAI,CAACua,OAAO,EAAE;AAChB,OAAA,IAAI,CAACx5B,IAAI,CAACO,MAAM,CAAC0e,KAAK,CAAC;AACvB,OAAA,IAAI,CAACwkE,SAAS,CAACpyE,MAAM,EAAE4N,KAAK,CAAC;AAC/B,MAAC,MAAM;AACL,OAAA,IAAI,CAACwkE,SAAS,CAACpyE,MAAM,EAAE4N,KAAK,CAAC;AAC7B,OAAA,IAAI,CAACjf,IAAI,CAACO,MAAM,CAAC8Q,MAAM,CAAC;AAC1B;AACF;AAEA/P,GAAAA,MAAMA,GAAG;KACP,MAAMmC,GAAG,GAAG,IAAI,CAACzD,IAAI,CAACQ,KAAK,EAAE;;AAE7B;AACA,KAAA,IAAIG,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAACmiF,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAEpC,KAAA,OAAOniF,CAAC,GAAG,EAAE,EACX,IAAI,CAACmiF,GAAG,CAACniF,CAAC,EAAE,CAAC,GAAG,CAAC;KAEnB,IAAI,CAACa,GAAG,GAAG,CAAC;AACZ,KAAA,IAAI,CAACiiF,SAAS,CAAChgF,GAAG,EAAEA,GAAG,CAAC;KAExB,IAAI,IAAI,CAAC+1B,OAAO,EAAE;AAChB,OAAA,IAAI,CAAC/1B,GAAG,GAAGA,GAAG,CAAC6B,KAAK,CAAC,CAAC,EAAE,IAAI,CAACs7E,MAAM,CAAC;AACpC,OAAA,OAAOviF,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;KAEA,IAAI,CAAC,IAAI,CAACugF,GAAG,EACX,MAAM,IAAIxkF,KAAK,CAAC,kBAAkB,CAAC;KAErC,IAAI,CAACgmF,SAAS,CAACh/E,GAAG,EAAE,IAAI,CAACw9E,GAAG,EAAE,IAAI,CAACL,MAAM,CAAC,EACxC,MAAM,IAAInkF,KAAK,CAAC,cAAc,CAAC;AAEjC,KAAA,OAAO4B,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;AAEA+gF,GAAAA,QAAQA,GAAG;KACT,KAAK,IAAI9gF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;AAC3B,OAAA,IAAI,CAACQ,KAAK,CAACR,CAAC,CAAC,GAAG,CAAC;AACjB,OAAA,IAAI,CAACmiF,GAAG,CAACniF,CAAC,CAAC,GAAG,CAAC;AACjB;KAEA,IAAI,CAACigF,MAAM,GAAG,CAAC;KACf,IAAI,CAAC7mD,EAAE,GAAG,IAAI;KACd,IAAI,CAACknD,GAAG,GAAG,IAAI;AACjB;AAEAF,GAAAA,WAAWA,GAAG;KACZ,IAAI,CAAC,IAAI,CAACvnD,OAAO,EACf,MAAM,IAAI/8B,KAAK,CAAC,2BAA2B,CAAC;KAE9C,IAAI,CAAC,IAAI,CAACgH,GAAG,EACX,MAAM,IAAIhH,KAAK,CAAC,0BAA0B,CAAC;KAE7C,OAAO4B,MAAM,CAACnB,IAAI,CAAC,IAAI,CAACuG,GAAG,CAAC;AAC9B;GAEAy9E,WAAWA,CAACD,GAAG,EAAE;KACf,IAAI,IAAI,CAACznD,OAAO,EACd,MAAM,IAAI/8B,KAAK,CAAC,6BAA6B,CAAC;AAEhD,KAAA,IAAI,IAAI,CAAC+E,GAAG,KAAK,EAAE,EACjB,MAAM,IAAI/E,KAAK,CAAC,4BAA4B,CAAC;KAE/C,IAAI,IAAI,CAACmkF,MAAM,KAAK,CAAC,IAAIK,GAAG,CAAC1lF,MAAM,KAAK,IAAI,CAACqlF,MAAM,EACjD,MAAM,IAAIjzE,UAAU,CAAC,mBAAmB,CAAC;KAE3C,IAAI,CAACszE,GAAG,GAAG5iF,MAAM,CAACnB,IAAI,CAAC+jF,GAAG,CAAC;AAE3B,KAAA,OAAO,IAAI;AACb;AACF;;AAEA;AACA;AACA;;CAEA,MAAMkD,SAAS,SAASN,GAAG,CAAC;GAC1B/mF,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,IAAI,CAAC;AAClB;AACF;;AAEA;AACA;AACA;;CAEA,MAAMihF,WAAW,SAASP,GAAG,CAAC;GAC5B/mF,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,KAAK,CAAC;AACnB;AACF;;AAEA;AACA;AACA;AACA;;AAEA,CAAA,MAAMkhF,IAAI,CAAC;GACTvnF,WAAWA,CAACqG,GAAG,EAAE;KACf,IAAI,CAACA,GAAG,GAAGA,GAAG;KACd,IAAI,CAACq/E,IAAI,GAAGrC,SAAS,CAACh9E,GAAG,CAACU,SAAS,KAAK,CAAC,CAAC;AAC1C,KAAA,IAAI,CAAClE,IAAI,GAAGwD,GAAG,CAACU,SAAS;KACzB,IAAI,CAACJ,GAAG,GAAGpF,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACf,IAAI,CAAC;AAClC,KAAA,IAAI,CAAC6B,GAAG,GAAG,EAAE;AACf;GAEArB,IAAIA,CAACmkF,IAAI,EAAE;AACT,KAAA,IAAI,CAAC7gF,GAAG,CAACsnE,IAAI,CAAC,CAAC,CAAC;KAChB,IAAI,CAACvpE,GAAG,GAAG,CAAC;KAEZ,IAAI8iF,IAAI,IAAI,IAAI,EAAE;OAChB,IAAI,CAAC7gF,GAAG,CAAC,IAAI,CAAC9D,IAAI,GAAG,CAAC,CAAC,IAAI2kF,IAAI;AAC/B,OAAA,IAAI,CAAC9iF,GAAG,GAAG,IAAI,CAAC7B,IAAI;AACtB;AAEA,KAAA,OAAO,IAAI;AACb;AAEA2G,GAAAA,KAAKA,CAACnB,GAAG,EAAEo/E,GAAG,EAAE;KACd,IAAI7B,EAAE,GAAG,CAAC;AAEV,KAAA,KAAK,IAAI/hF,CAAC,GAAG,IAAI,CAAChB,IAAI,GAAG,CAAC,EAAEgB,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;OACvC,MAAMwB,CAAC,GAAGoiF,GAAG,CAAC5jF,CAAC,CAAC,IAAI,CAAC;OAErBwE,GAAG,CAACxE,CAAC,CAAC,GAAI4jF,GAAG,CAAC5jF,CAAC,CAAC,IAAI,CAAC,GAAI+hF,EAAE;OAE3BA,EAAE,GAAGvgF,CAAC;AACR;AAEAugF,KAAAA,EAAE,GAAG,CAACA,EAAE,GAAG,IAAI;AAEfv9E,KAAAA,GAAG,CAAC,IAAI,CAACxF,IAAI,GAAG,CAAC,CAAC,IAAK,IAAI,CAAC6iF,IAAI,IAAI,EAAE,GAAIE,EAAE;AAC5Cv9E,KAAAA,GAAG,CAAC,IAAI,CAACxF,IAAI,GAAG,CAAC,CAAC,IAAK,IAAI,CAAC6iF,IAAI,IAAK,CAAC,GAAIE,EAAE;AAC5Cv9E,KAAAA,GAAG,CAAC,IAAI,CAACxF,IAAI,GAAG,CAAC,CAAC,IAAK,IAAI,CAAC6iF,IAAI,IAAK,CAAC,GAAIE,EAAE;AAC9C;GAEAniF,MAAMA,CAACK,IAAI,EAAE;KACXnG,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACO,IAAI,CAAC,CAAC;AAE7B,KAAA,IAAI,IAAI,CAACY,GAAG,KAAK,EAAE,EACjB,MAAM,IAAI/E,KAAK,CAAC,6BAA6B,CAAC;AAEhD,KAAA,KAAK,IAAIkE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,IAAI,CAACrF,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACpC,IAAI,IAAI,CAACa,GAAG,KAAK,IAAI,CAAC7B,IAAI,EAAE;AAC1B,SAAA,IAAI,CAACwD,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAAC/1B,GAAG,EAAE,CAAC,EAAE,IAAI,CAACA,GAAG,EAAE,CAAC,CAAC;SAC1C,IAAI,CAACjC,GAAG,GAAG,CAAC;AACd;AAEA,OAAA,IAAI,CAACiC,GAAG,CAAC,IAAI,CAACjC,GAAG,EAAE,CAAC,IAAIZ,IAAI,CAACD,CAAC,CAAC;AACjC;AACF;AAEAH,GAAAA,KAAKA,GAAG;AACN,KAAA,IAAI,IAAI,CAACgB,GAAG,KAAK,EAAE,EACjB,MAAM,IAAI/E,KAAK,CAAC,6BAA6B,CAAC;KAEhD,MAAM8J,CAAC,GAAGlI,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACf,IAAI,CAAC;AAEjC,KAAA,IAAI,CAACwD,GAAG,CAACq2B,OAAO,CAACjzB,CAAC,EAAE,CAAC,EAAEA,CAAC,EAAE,CAAC,CAAC;AAE5B,KAAA,IAAI,CAACD,KAAK,CAACC,CAAC,EAAEA,CAAC,CAAC;KAEhB,IAAI,IAAI,CAAC/E,GAAG,GAAG,IAAI,CAAC7B,IAAI,EAAE;OACxB,IAAI,CAAC8D,GAAG,CAAC,IAAI,CAACjC,GAAG,CAAC,IAAI,IAAI;AAC1B,OAAA,IAAI,CAAC8E,KAAK,CAACC,CAAC,EAAEA,CAAC,CAAC;AAClB;KAEA,KAAK,IAAI5F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAChB,IAAI,EAAEgB,CAAC,EAAE,EAChC,IAAI,CAAC8C,GAAG,CAAC9C,CAAC,CAAC,IAAI4F,CAAC,CAAC5F,CAAC,CAAC;AAErB,KAAA,IAAI,CAACwC,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAAC/1B,GAAG,EAAE,CAAC,EAAE,IAAI,CAACA,GAAG,EAAE,CAAC,CAAC;AAE1C,KAAA,IAAI,CAACjC,GAAG,GAAG,EAAE;KAEb,OAAOnD,MAAM,CAACnB,IAAI,CAAC,IAAI,CAACuG,GAAG,CAAC;AAC9B;AACF;;AAEA;AACA;AACA;;CAEA,MAAM+gF,GAAG,SAAS9C,MAAM,CAAC;AACvB5kF,GAAAA,WAAWA,CAACqG,GAAG,EAAEq2B,OAAO,EAAE;KACxB,KAAK,CAACr2B,GAAG,CAAC;KAEV,IAAI,CAACq2B,OAAO,GAAGA,OAAO;KACtB,IAAI,CAACirD,KAAK,GAAG,IAAIJ,IAAI,CAAClhF,GAAG,CAAC;KAC1B,IAAI,CAACuhF,KAAK,GAAG,IAAIL,IAAI,CAAClhF,GAAG,CAAC;KAC1B,IAAI,CAAChC,KAAK,GAAG9C,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;KACzC,IAAI,CAACi/E,GAAG,GAAGzkF,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;KACvC,IAAI,CAACmN,IAAI,GAAG3S,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;KACxC,IAAI,CAACJ,GAAG,GAAG,IAAI;KACf,IAAI,CAACw9E,GAAG,GAAG,IAAI;AACjB;AAEA8B,GAAAA,UAAUA,GAAG;AACX,KAAA,IAAIpiF,CAAC,GAAG,IAAI,CAACkD,SAAS;KACtB,IAAI6+E,EAAE,GAAG,CAAC;KAEV,OAAO/hF,CAAC,EAAE,EAAE;AACV+hF,OAAAA,EAAE,IAAI,IAAI,CAACI,GAAG,CAACniF,CAAC,CAAC;AACjB,OAAA,IAAI,CAACmiF,GAAG,CAACniF,CAAC,CAAC,GAAG+hF,EAAE;OAChBA,EAAE,KAAK,CAAC;AACV;AACF;AAEAe,GAAAA,SAASA,CAACpyE,MAAM,EAAE4N,KAAK,EAAE;AACvB,KAAA,MAAMjO,IAAI,GAAG,IAAI,CAACnN,SAAS,GAAG,CAAC;AAE/B,KAAA,KAAK,IAAIlD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGse,KAAK,CAAC1jB,MAAM,EAAEoF,CAAC,EAAE,EAAE;OACrC,IAAI,CAAC,IAAI,CAACa,GAAG,GAAGwP,IAAI,MAAM,CAAC,EAAE;AAC3B,SAAA,IAAI,CAAC7N,GAAG,CAACq2B,OAAO,CAAC,IAAI,CAACr4B,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC2hF,GAAG,EAAE,CAAC,CAAC;SAC5C,IAAI,CAACC,UAAU,EAAE;SACjB,IAAI,CAACvhF,GAAG,GAAG,CAAC;AACd;AAEA6P,OAAAA,MAAM,CAAC1Q,CAAC,CAAC,GAAGse,KAAK,CAACte,CAAC,CAAC,GAAG,IAAI,CAACQ,KAAK,CAAC,IAAI,CAACK,GAAG,EAAE,CAAC;AAC/C;AACF;AAEAu9B,GAAAA,KAAKA,CAAC3+B,GAAG,EAAE25B,EAAE,EAAE;AACbt/B,KAAAA,MAAM,CAACs/B,EAAE,CAACx+B,MAAM,GAAG,CAAC,CAAC;AAErB,KAAA,IAAI,CAACkpF,KAAK,CAACtkF,IAAI,CAAC,CAAC,CAAC;AAClB,KAAA,IAAI,CAACskF,KAAK,CAAClkF,MAAM,CAACw5B,EAAE,CAAC;KAErB,IAAI,CAAC/oB,IAAI,GAAG,IAAI,CAACyzE,KAAK,CAACjkF,KAAK,EAAE;KAC9B,IAAI,CAACwQ,IAAI,CAACrP,IAAI,CAAC,IAAI,CAACmhF,GAAG,EAAE,CAAC,CAAC;AAE3B,KAAA,IAAI,CAAC2B,KAAK,CAACtkF,IAAI,CAAC,CAAC,CAAC;AAClB,KAAA,IAAI,CAACukF,KAAK,CAACvkF,IAAI,CAAC,CAAC,CAAC;KAElB,IAAI,CAACsD,GAAG,GAAG,IAAI;KACf,IAAI,CAACw9E,GAAG,GAAG,IAAI;AACjB;AAEAU,GAAAA,MAAMA,CAACtwE,MAAM,EAAE4N,KAAK,EAAE;KACpB,IAAI,IAAI,CAACua,OAAO,EAAE;AAChB,OAAA,IAAI,CAACiqD,SAAS,CAACpyE,MAAM,EAAE4N,KAAK,CAAC;AAC7B,OAAA,IAAI,CAACylE,KAAK,CAACnkF,MAAM,CAAC8Q,MAAM,CAAC;AAC3B,MAAC,MAAM;AACL,OAAA,IAAI,CAACqzE,KAAK,CAACnkF,MAAM,CAAC0e,KAAK,CAAC;AACxB,OAAA,IAAI,CAACwkE,SAAS,CAACpyE,MAAM,EAAE4N,KAAK,CAAC;AAC/B;AACF;AAEA3d,GAAAA,MAAMA,GAAG;KACP,MAAMmC,GAAG,GAAGpF,MAAM,CAACqC,KAAK,CAAC,IAAI,CAACmD,SAAS,CAAC;KACxC,MAAM8gF,IAAI,GAAG,IAAI,CAACF,KAAK,CAACjkF,KAAK,EAAE;KAC/B,MAAMokF,IAAI,GAAG,IAAI,CAACF,KAAK,CAAClkF,KAAK,EAAE;AAE/B,KAAA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EACrC8C,GAAG,CAAC9C,CAAC,CAAC,GAAGgkF,IAAI,CAAChkF,CAAC,CAAC,GAAGikF,IAAI,CAACjkF,CAAC,CAAC,GAAG,IAAI,CAACqQ,IAAI,CAACrQ,CAAC,CAAC;KAE3C,IAAI,IAAI,CAAC64B,OAAO,EAAE;OAChB,IAAI,CAAC/1B,GAAG,GAAGA,GAAG;AACd,OAAA,OAAOpF,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;KAEA,IAAI,CAAC,IAAI,CAACugF,GAAG,EACX,MAAM,IAAIxkF,KAAK,CAAC,kBAAkB,CAAC;KAErC,IAAI,CAACgmF,SAAS,CAACh/E,GAAG,EAAE,IAAI,CAACw9E,GAAG,EAAE,IAAI,CAACA,GAAG,CAAC1lF,MAAM,CAAC,EAC5C,MAAM,IAAIkB,KAAK,CAAC,cAAc,CAAC;AAEjC,KAAA,OAAO4B,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;AACxB;AAEA+gF,GAAAA,QAAQA,GAAG;AACT,KAAA,KAAK,IAAI9gF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkD,SAAS,EAAElD,CAAC,EAAE,EAAE;AACvC,OAAA,IAAI,CAACQ,KAAK,CAACR,CAAC,CAAC,GAAG,CAAC;AACjB,OAAA,IAAI,CAACmiF,GAAG,CAACniF,CAAC,CAAC,GAAG,CAAC;AACf,OAAA,IAAI,CAACqQ,IAAI,CAACrQ,CAAC,CAAC,GAAG,CAAC;AAClB;KAEA,IAAI,CAACsgF,GAAG,GAAG,IAAI;AACjB;GAEAR,OAAOA,CAAC7/E,IAAI,EAAE;AACZ,KAAA,IAAI,IAAI,CAACY,GAAG,KAAK,EAAE,EACjB,MAAM,IAAI/E,KAAK,CAAC,4BAA4B,CAAC;AAE/C,KAAA,IAAI,CAACgoF,KAAK,CAAClkF,MAAM,CAACK,IAAI,CAAC;AAEvB,KAAA,OAAO,IAAI;AACb;AAEAmgF,GAAAA,WAAWA,GAAG;KACZ,IAAI,CAAC,IAAI,CAACvnD,OAAO,EACf,MAAM,IAAI/8B,KAAK,CAAC,2BAA2B,CAAC;KAE9C,IAAI,CAAC,IAAI,CAACgH,GAAG,EACX,MAAM,IAAIhH,KAAK,CAAC,0BAA0B,CAAC;KAE7C,OAAO4B,MAAM,CAACnB,IAAI,CAAC,IAAI,CAACuG,GAAG,CAAC;AAC9B;GAEAy9E,WAAWA,CAACD,GAAG,EAAE;KACf,IAAI,IAAI,CAACznD,OAAO,EACd,MAAM,IAAI/8B,KAAK,CAAC,6BAA6B,CAAC;AAEhD,KAAA,IAAI,IAAI,CAAC+E,GAAG,KAAK,EAAE,EACjB,MAAM,IAAI/E,KAAK,CAAC,4BAA4B,CAAC;KAE/C,IAAIwkF,GAAG,CAAC1lF,MAAM,KAAK,CAAC,IAAI0lF,GAAG,CAAC1lF,MAAM,GAAG,IAAI,CAACsI,SAAS,EACjD,MAAM,IAAI8J,UAAU,CAAC,mBAAmB,CAAC;KAE3C,IAAI,CAACszE,GAAG,GAAG5iF,MAAM,CAACnB,IAAI,CAAC+jF,GAAG,CAAC;AAE3B,KAAA,OAAO,IAAI;AACb;AACF;;AAEA;AACA;AACA;;CAEA,MAAM4D,SAAS,SAASL,GAAG,CAAC;GAC1B1nF,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,IAAI,CAAC;AAClB;AACF;;AAEA;AACA;AACA;;CAEA,MAAM2hF,WAAW,SAASN,GAAG,CAAC;GAC5B1nF,WAAWA,CAACqG,GAAG,EAAE;AACf,KAAA,KAAK,CAACA,GAAG,EAAE,KAAK,CAAC;AACnB;AACF;;AAEA;AACA;AACA;;AAEA,CAAA,SAASoyB,GAAGA,CAAC1X,IAAI,EAAE2b,OAAO,GAAG,IAAI,EAAE;AACjC/+B,GAAAA,MAAM,CAAC,OAAOojB,IAAI,KAAK,QAAQ,CAAC;AAChCpjB,GAAAA,MAAM,CAAC,OAAO++B,OAAO,KAAK,SAAS,CAAC;AAEpC,GAAA,QAAQ3b,IAAI;AACV,KAAA,KAAK,KAAK;AACR,OAAA,OAAO2b,OAAO,GAAGooD,SAAS,GAAGC,WAAW;AAC1C,KAAA,KAAK,KAAK;AACR,OAAA,OAAOroD,OAAO,GAAGwoD,SAAS,GAAGC,WAAW;AAC1C,KAAA,KAAK,KAAK;AACR,OAAA,OAAOzoD,OAAO,GAAG0oD,SAAS,GAAGC,WAAW;AAC1C,KAAA,KAAK,KAAK;AACR,OAAA,OAAO3oD,OAAO,GAAG6oD,SAAS,GAAGC,WAAW;AAC1C,KAAA,KAAK,KAAK;AACR,OAAA,OAAO9oD,OAAO,GAAGmpD,SAAS,GAAGC,WAAW;AAC1C,KAAA,KAAK,KAAK;AACR,OAAA,OAAOppD,OAAO,GAAGwpD,SAAS,GAAGC,WAAW;AAC1C,KAAA,KAAK,KAAK;AACR,OAAA,OAAOzpD,OAAO,GAAG2pD,SAAS,GAAGC,WAAW;AAC1C,KAAA,KAAK,KAAK;AACR,OAAA,OAAO5pD,OAAO,GAAG8pD,SAAS,GAAGC,WAAW;AAC1C,KAAA,KAAK,KAAK;AACR,OAAA,OAAO/pD,OAAO,GAAGkqD,SAAS,GAAGC,WAAW;AAC1C,KAAA,KAAK,KAAK;AACR,OAAA,OAAOnqD,OAAO,GAAG2qD,SAAS,GAAGC,WAAW;AAC1C,KAAA,KAAK,KAAK;AACR,OAAA,OAAO5qD,OAAO,GAAGqrD,SAAS,GAAGC,WAAW;KAC1C;OACE,MAAM,IAAIroF,KAAK,CAAC,CAAiBohB,cAAAA,EAAAA,IAAI,GAAG,CAAC;AAC7C;AACF;CAEA,SAASukE,OAAOA,CAAC/wE,MAAM,EAAE2tE,IAAI,EAAE//D,KAAK,EAAEggE,IAAI,EAAE;AAC1C,GAAA,OAAO5tE,MAAM,CAACymB,MAAM,KAAK7Y,KAAK,CAAC6Y,MAAM,IAC9BzmB,MAAM,CAAC2mB,UAAU,KAAK/Y,KAAK,CAAC+Y,UAAU,IACtCgnD,IAAI,KAAKC,IAAI;AACtB;AAEA,CAAA,SAASwD,SAASA,CAAC7iF,CAAC,EAAEC,CAAC,EAAE0B,GAAG,EAAE;GAC5B,IAAIiC,CAAC,GAAG,CAAC;GAET,KAAK,IAAI7C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,GAAG,EAAEZ,CAAC,EAAE,EAC1B6C,CAAC,IAAI5D,CAAC,CAACe,CAAC,CAAC,GAAGd,CAAC,CAACc,CAAC,CAAC;AAElB,GAAA,OAAQ6C,CAAC,GAAG,CAAC,KAAM,EAAE;AACvB;;AAEA;AACA;AACA;;AAEA7I,CAAAA,KAAAA,CAAAA,IAAY,GAAGylF,IAAI;AACnBzlF,CAAAA,KAAAA,CAAAA,KAAa,GAAGo8E,KAAK;AACrBp8E,CAAAA,KAAAA,CAAAA,MAAc,GAAG+mF,MAAM;AACvB/mF,CAAAA,KAAAA,CAAAA,SAAiB,GAAGinF,SAAS;AAC7BjnF,CAAAA,KAAAA,CAAAA,WAAmB,GAAGknF,WAAW;AACjClnF,CAAAA,KAAAA,CAAAA,WAAmB,GAAGmnF,WAAW;AACjCnnF,CAAAA,KAAAA,CAAAA,aAAqB,GAAGonF,aAAa;AACrCpnF,CAAAA,KAAAA,CAAAA,SAAiB,GAAGqnF,SAAS;AAC7BrnF,CAAAA,KAAAA,CAAAA,WAAmB,GAAGsnF,WAAW;AACjCtnF,CAAAA,KAAAA,CAAAA,SAAiB,GAAGunF,SAAS;AAC7BvnF,CAAAA,KAAAA,CAAAA,WAAmB,GAAGwnF,WAAW;AACjCxnF,CAAAA,KAAAA,CAAAA,SAAiB,GAAG0nF,SAAS;AAC7B1nF,CAAAA,KAAAA,CAAAA,WAAmB,GAAG2nF,WAAW;AACjC3nF,CAAAA,KAAAA,CAAAA,GAAW,GAAG4nF,GAAG;AACjB5nF,CAAAA,KAAAA,CAAAA,SAAiB,GAAGgoF,SAAS;AAC7BhoF,CAAAA,KAAAA,CAAAA,WAAmB,GAAGioF,WAAW;AACjCjoF,CAAAA,KAAAA,CAAAA,GAAW,GAAGkoF,GAAG;AACjBloF,CAAAA,KAAAA,CAAAA,SAAiB,GAAGqoF,SAAS;AAC7BroF,CAAAA,KAAAA,CAAAA,WAAmB,GAAGsoF,WAAW;AACjCtoF,CAAAA,KAAAA,CAAAA,GAAW,GAAGuoF,GAAG;AACjBvoF,CAAAA,KAAAA,CAAAA,SAAiB,GAAGwoF,SAAS;AAC7BxoF,CAAAA,KAAAA,CAAAA,WAAmB,GAAGyoF,WAAW;AACjCzoF,CAAAA,KAAAA,CAAAA,GAAW,GAAG0oF,GAAG;AACjB1oF,CAAAA,KAAAA,CAAAA,SAAiB,GAAG2oF,SAAS;AAC7B3oF,CAAAA,KAAAA,CAAAA,WAAmB,GAAG4oF,WAAW;AACjC5oF,CAAAA,KAAAA,CAAAA,GAAW,GAAG6oF,GAAG;AACjB7oF,CAAAA,KAAAA,CAAAA,SAAiB,GAAG+oF,SAAS;AAC7B/oF,CAAAA,KAAAA,CAAAA,WAAmB,GAAGgpF,WAAW;AACjChpF,CAAAA,KAAAA,CAAAA,MAAc,GAAGipF,MAAM;AACvBjpF,CAAAA,KAAAA,CAAAA,GAAW,GAAGkpF,GAAG;AACjBlpF,CAAAA,KAAAA,CAAAA,SAAiB,GAAGwpF,SAAS;AAC7BxpF,CAAAA,KAAAA,CAAAA,WAAmB,GAAGypF,WAAW;AACjCzpF,CAAAA,KAAAA,CAAAA,IAAY,GAAG0pF,IAAI;AACnB1pF,CAAAA,KAAAA,CAAAA,GAAW,GAAG6pF,GAAG;AACjB7pF,CAAAA,KAAAA,CAAAA,SAAiB,GAAGkqF,SAAS;AAC7BlqF,CAAAA,KAAAA,CAAAA,WAAmB,GAAGmqF,WAAW;AACjCnqF,CAAAA,KAAAA,CAAAA,GAAW,GAAG46B,GAAG;;;;;;;;;;;;;;;;CC9+DjB,MAAM+oD,GAAG,GAAG5jF,YAAwB,EAAA;CACpC,MAAM;GAACwnF,SAAS;GAAEC;AAAW,EAAC,GAAGznF,YAA0B,EAAA;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAASqqF,QAAQA,CAACnkF,IAAI,EAAER,GAAG,EAAE25B,EAAE,EAAE;GAC/B,MAAM52B,GAAG,GAAG,IAAI++E,SAAS,CAAC,IAAI5D,GAAG,CAAC,GAAG,CAAC,CAAC;AACvCn7E,GAAAA,GAAG,CAAChD,IAAI,CAACC,GAAG,EAAE25B,EAAE,CAAC;AACjB,GAAA,OAAO17B,MAAM,CAACm9B,MAAM,CAAC,CAACr4B,GAAG,CAAC5C,MAAM,CAACK,IAAI,CAAC,EAAEuC,GAAG,CAAC3C,KAAK,EAAE,CAAC,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAASwkF,QAAQA,CAACpkF,IAAI,EAAER,GAAG,EAAE25B,EAAE,EAAE;GAC/B,MAAM52B,GAAG,GAAG,IAAIg/E,WAAW,CAAC,IAAI7D,GAAG,CAAC,GAAG,CAAC,CAAC;AACzCn7E,GAAAA,GAAG,CAAChD,IAAI,CAACC,GAAG,EAAE25B,EAAE,CAAC;AACjB,GAAA,OAAO17B,MAAM,CAACm9B,MAAM,CAAC,CAACr4B,GAAG,CAAC5C,MAAM,CAACK,IAAI,CAAC,EAAEuC,GAAG,CAAC3C,KAAK,EAAE,CAAC,CAAC;AACvD;;AAEA;AACA;AACA;;AAEA7F,CAAAA,KAAAA,CAAAA,MAAc,GAAG,CAAC;AAClBA,CAAAA,KAAAA,CAAAA,QAAgB,GAAGoqF,QAAQ;AAC3BpqF,CAAAA,KAAAA,CAAAA,QAAgB,GAAGqqF,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CCrB3B,MAAMvqF,MAAM,GAAGC,aAA4B,EAAA;CAC3C,MAAM+E,IAAI,GAAG/E,WAA0B,EAAA;;AAEvC;AACA;AACA;;CAEA,MAAMmG,SAAS,GAAG,UAAU;CAE5B,MAAMokF,WAAW,GAAG,IAAIhkF,WAAW,CAAC,CAClikF,MAAM,CAAC;AACXpoF,GAAAA,WAAWA,GAAG;KACZ,IAAI,CAACqE,KAAK,GAAG,IAAIF,WAAW,CAAC,EAAE,CAAC;KAChC,IAAI,CAACG,KAAK,GAAG/C,MAAM,CAACqC,KAAK,CAAC,GAAG,CAAC;KAC9B,IAAI,CAACqK,EAAE,GAAG,GAAG;KACb,IAAI,CAACvJ,GAAG,GAAGX,SAAS;AACtB;GAEAV,IAAIA,CAACyD,IAAI,EAAE;AACT,KAAA,IAAIA,IAAI,IAAI,IAAI,EACdA,IAAI,GAAG,GAAG;AAEZnJ,KAAAA,MAAM,CAAEmJ,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;AAC7BnJ,KAAAA,MAAM,CAACmJ,IAAI,IAAI,GAAG,CAAC;AACnBnJ,KAAAA,MAAM,CAACmJ,IAAI,IAAI,GAAG,CAAC;AAEnB,KAAA,MAAMi+C,IAAI,GAAG,IAAI,GAAGj+C,IAAI,GAAG,CAAC;KAE5BnJ,MAAM,CAAConD,IAAI,IAAI,CAAC,IAAI,CAACA,IAAI,GAAG,EAAE,MAAM,CAAC,CAAC;AAEtC,KAAA,IAAI,CAAC92C,EAAE,GAAG82C,IAAI,KAAK,CAAC;KACpB,IAAI,CAACrgD,GAAG,GAAG,CAAC;AAEZ,KAAA,OAAO,IAAI;AACb;GAEAjB,MAAMA,CAACK,IAAI,EAAE;KACXnG,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACO,IAAI,CAAC,CAAC;KAC7BnG,MAAM,CAAC,EAAE,IAAI,CAAC+G,GAAG,GAAGX,SAAS,CAAC,EAAE,6BAA6B,CAAC;AAE9D,KAAA,IAAIU,GAAG,GAAGX,IAAI,CAACrF,MAAM;AACrB,KAAA,IAAIiG,GAAG,GAAG,IAAI,CAACA,GAAG;KAClB,IAAIC,GAAG,GAAG,CAAC;AAEX,KAAA,IAAI,CAACD,GAAG,GAAG,CAAC,IAAI,CAACA,GAAG,GAAGD,GAAG,IAAI,IAAI,CAACwJ,EAAE;KAErC,IAAIvJ,GAAG,GAAG,CAAC,EAAE;AACX,OAAA,IAAIE,IAAI,GAAG,IAAI,CAACqJ,EAAE,GAAGvJ,GAAG;AAExB,OAAA,IAAIE,IAAI,GAAGH,GAAG,EACZG,IAAI,GAAGH,GAAG;AAEZX,OAAAA,IAAI,CAACe,IAAI,CAAC,IAAI,CAACP,KAAK,EAAEI,GAAG,EAAEC,GAAG,EAAEA,GAAG,GAAGC,IAAI,CAAC;OAE3CF,GAAG,IAAIE,IAAI;OACXH,GAAG,IAAIG,IAAI;OACXD,GAAG,IAAIC,IAAI;OAEX,IAAIF,GAAG,GAAG,IAAI,CAACuJ,EAAE,EACf,OAAO,IAAI;OAEb,IAAI,CAACnJ,UAAU,CAAC,IAAI,CAACR,KAAK,EAAE,CAAC,CAAC;AAChC;AAEA,KAAA,OAAOG,GAAG,IAAI,IAAI,CAACwJ,EAAE,EAAE;AACrB,OAAA,IAAI,CAACnJ,UAAU,CAAChB,IAAI,EAAEa,GAAG,CAAC;OAC1BA,GAAG,IAAI,IAAI,CAACsJ,EAAE;OACdxJ,GAAG,IAAI,IAAI,CAACwJ,EAAE;AAChB;KAEA,IAAIxJ,GAAG,GAAG,CAAC,EACTX,IAAI,CAACe,IAAI,CAAC,IAAI,CAACP,KAAK,EAAE,CAAC,EAAEK,GAAG,EAAEA,GAAG,GAAGF,GAAG,CAAC;AAE1C,KAAA,OAAO,IAAI;AACb;AAEAf,GAAAA,KAAKA,CAACC,GAAG,EAAEc,GAAG,EAAE;AACd,KAAA,IAAId,GAAG,IAAI,IAAI,EACbA,GAAG,GAAG,IAAI;AAEZ,KAAA,IAAIc,GAAG,IAAI,IAAI,IAAIA,GAAG,KAAK,CAAC,EAC1BA,GAAG,GAAG,GAAG,IAAI,IAAI,CAACwJ,EAAE,KAAK,CAAC,CAAC;KAE7BtQ,MAAM,CAAC,CAACgG,GAAG,GAAG,IAAI,MAAMA,GAAG,CAAC;AAC5BhG,KAAAA,MAAM,CAAE8G,GAAG,KAAK,CAAC,KAAMA,GAAG,CAAC;KAC3B9G,MAAM,CAAC,EAAE,IAAI,CAAC+G,GAAG,GAAGX,SAAS,CAAC,EAAE,6BAA6B,CAAC;AAE9D,KAAA,IAAI,CAACO,KAAK,CAAC2pE,IAAI,CAAC,CAAC,EAAE,IAAI,CAACvpE,GAAG,EAAE,IAAI,CAACuJ,EAAE,CAAC;KACrC,IAAI,CAAC3J,KAAK,CAAC,IAAI,CAACI,GAAG,CAAC,IAAIf,GAAG;KAC3B,IAAI,CAACW,KAAK,CAAC,IAAI,CAAC2J,EAAE,GAAG,CAAC,CAAC,IAAI,IAAI;KAC/B,IAAI,CAACnJ,UAAU,CAAC,IAAI,CAACR,KAAK,EAAE,CAAC,CAAC;KAC9B,IAAI,CAACI,GAAG,GAAGX,SAAS;AAEpBpG,KAAAA,MAAM,CAAC8G,GAAG,IAAI,IAAI,CAACwJ,EAAE,CAAC;KAEtB,MAAMlJ,GAAG,GAAGxD,MAAM,CAACqC,KAAK,CAACa,GAAG,CAAC;AAE7B,KAAA,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,GAAG,EAAEZ,CAAC,EAAE,EAC1BkB,GAAG,CAAClB,CAAC,CAAC,GAAG,IAAI,CAACQ,KAAK,CAACR,CAAC,KAAK,CAAC,CAAC,KAAM,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAE;KAEhD,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB,IAAI,CAACQ,KAAK,CAACR,CAAC,CAAC,GAAG,CAAC;KAEnB,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACoK,EAAE,EAAEpK,CAAC,EAAE,EAC9B,IAAI,CAACS,KAAK,CAACT,CAAC,CAAC,GAAG,CAAC;AAEnB,KAAA,OAAOkB,GAAG;AACZ;AAEAD,GAAAA,UAAUA,CAACR,KAAK,EAAEK,GAAG,EAAE;AACrB,KAAA,MAAM2gE,KAAK,GAAG,IAAI,CAACr3D,EAAE,KAAK,CAAC;AAC3B,KAAA,MAAM7G,CAAC,GAAG,IAAI,CAAC/C,KAAK;KAEpB,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyhE,KAAK,EAAEzhE,CAAC,EAAE,EAC5BuD,CAAC,CAACvD,CAAC,CAAC,IAAI6B,OAAO,CAACpB,KAAK,EAAEK,GAAG,GAAGd,CAAC,GAAG,CAAC,CAAC;AAErC,KAAA,KAAK,IAAIsO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAE;OAC9B,MAAM4+B,EAAE,GAAG3pC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC;OAC/C,MAAMynC,EAAE,GAAGznC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC;OAC/C,MAAM0nC,EAAE,GAAG1nC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC;OAC/C,MAAMihF,EAAE,GAAGjhF,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC;OAC/C,MAAMkhF,EAAE,GAAGlhF,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC;OAC/C,MAAMmhF,EAAE,GAAGnhF,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC;OAC/C,MAAMohF,EAAE,GAAGphF,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC;OAC/C,MAAMqhF,EAAE,GAAGrhF,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC;OAC/C,MAAMshF,EAAE,GAAGthF,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC;OAC/C,MAAMuhF,EAAE,GAAGvhF,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC;OAE/C,MAAMwhF,EAAE,GAAGF,EAAE,IAAK55C,EAAE,IAAI,CAAC,GAAKu5C,EAAE,KAAK,EAAG,CAAC;OACzC,MAAMQ,EAAE,GAAGF,EAAE,IAAKN,EAAE,IAAI,CAAC,GAAKv5C,EAAE,KAAK,EAAG,CAAC;OACzC,MAAMg6C,EAAE,GAAG/3C,EAAE,IAAKu3C,EAAE,IAAI,CAAC,GAAKC,EAAE,KAAK,EAAG,CAAC;OACzC,MAAMj7C,EAAE,GAAGuB,EAAE,IAAK05C,EAAE,IAAI,CAAC,GAAKD,EAAE,KAAK,EAAG,CAAC;OACzC,MAAMS,EAAE,GAAGj6C,EAAE,IAAK05C,EAAE,IAAI,CAAC,GAAKC,EAAE,KAAK,EAAG,CAAC;OACzC,MAAMl7C,EAAE,GAAG86C,EAAE,IAAKI,EAAE,IAAI,CAAC,GAAKD,EAAE,KAAK,EAAG,CAAC;OACzC,MAAMQ,EAAE,GAAGV,EAAE,IAAKI,EAAE,IAAI,CAAC,GAAKC,EAAE,KAAK,EAAG,CAAC;OACzC,MAAMM,EAAE,GAAGV,EAAE,IAAKI,EAAE,IAAI,CAAC,GAAKD,EAAE,KAAK,EAAG,CAAC;OACzC,MAAMQ,EAAE,GAAGV,EAAE,IAAKz3C,EAAE,IAAI,CAAC,GAAKlC,EAAE,KAAK,EAAG,CAAC;OACzC,MAAMs6C,EAAE,GAAGV,EAAE,IAAK55C,EAAE,IAAI,CAAC,GAAKkC,EAAE,KAAK,EAAG,CAAC;AAEzC3pC,OAAAA,CAAC,CAAC,CAAC,CAAC,IAAIwhF,EAAE;AACVxhF,OAAAA,CAAC,CAAC,CAAC,CAAC,IAAIyhF,EAAE;AACVzhF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAIwhF,EAAE;AACXxhF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAIyhF,EAAE;AACXzhF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAIwhF,EAAE;AACXxhF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAIyhF,EAAE;AACXzhF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAIwhF,EAAE;AACXxhF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAIyhF,EAAE;AACXzhF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAIwhF,EAAE;AACXxhF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAIyhF,EAAE;AAEXzhF,OAAAA,CAAC,CAAC,CAAC,CAAC,IAAI0hF,EAAE;AACV1hF,OAAAA,CAAC,CAAC,CAAC,CAAC,IAAIkmC,EAAE;AACVlmC,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI0hF,EAAE;AACX1hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAIkmC,EAAE;AACXlmC,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI0hF,EAAE;AACX1hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAIkmC,EAAE;AACXlmC,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI0hF,EAAE;AACX1hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAIkmC,EAAE;AACXlmC,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI0hF,EAAE;AACX1hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAIkmC,EAAE;AAEXlmC,OAAAA,CAAC,CAAC,CAAC,CAAC,IAAI2hF,EAAE;AACV3hF,OAAAA,CAAC,CAAC,CAAC,CAAC,IAAImmC,EAAE;AACVnmC,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI2hF,EAAE;AACX3hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAImmC,EAAE;AACXnmC,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI2hF,EAAE;AACX3hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAImmC,EAAE;AACXnmC,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI2hF,EAAE;AACX3hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAImmC,EAAE;AACXnmC,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI2hF,EAAE;AACX3hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAImmC,EAAE;AAEXnmC,OAAAA,CAAC,CAAC,CAAC,CAAC,IAAI4hF,EAAE;AACV5hF,OAAAA,CAAC,CAAC,CAAC,CAAC,IAAI6hF,EAAE;AACV7hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI4hF,EAAE;AACX5hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI6hF,EAAE;AACX7hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI4hF,EAAE;AACX5hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI6hF,EAAE;AACX7hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI4hF,EAAE;AACX5hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI6hF,EAAE;AACX7hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI4hF,EAAE;AACX5hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI6hF,EAAE;AAEX7hF,OAAAA,CAAC,CAAC,CAAC,CAAC,IAAI8hF,EAAE;AACV9hF,OAAAA,CAAC,CAAC,CAAC,CAAC,IAAI+hF,EAAE;AACV/hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI8hF,EAAE;AACX9hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI+hF,EAAE;AACX/hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI8hF,EAAE;AACX9hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI+hF,EAAE;AACX/hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI8hF,EAAE;AACX9hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI+hF,EAAE;AACX/hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI8hF,EAAE;AACX9hF,OAAAA,CAAC,CAAC,EAAE,CAAC,IAAI+hF,EAAE;AAEX,OAAA,MAAMj+D,EAAE,GAAG9jB,CAAC,CAAC,CAAC,CAAC;AACf,OAAA,MAAMikB,EAAE,GAAGjkB,CAAC,CAAC,CAAC,CAAC;AACf,OAAA,MAAMgiF,GAAG,GAAIhiF,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMiiF,GAAG,GAAIjiF,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMkiF,GAAG,GAAIliF,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMmiF,GAAG,GAAIniF,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMoiF,GAAG,GAAIpiF,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMqiF,GAAG,GAAIriF,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMsiF,GAAG,GAAItiF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AAC1C,OAAA,MAAMuiF,GAAG,GAAIviF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AAC1C,OAAA,MAAMwiF,GAAG,GAAIxiF,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,CAAC,CAAC,KAAK,EAAG;AACvC,OAAA,MAAMyiF,GAAG,GAAIziF,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,CAAC,CAAC,KAAK,EAAG;AACvC,OAAA,MAAMokB,EAAE,GAAIpkB,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMukB,EAAE,GAAIvkB,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAM0iF,GAAG,GAAI1iF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AAC1C,OAAA,MAAM2iF,GAAG,GAAI3iF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AAC1C,OAAA,MAAM4iF,GAAG,GAAI5iF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AAC1C,OAAA,MAAM6iF,GAAG,GAAI7iF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AAC1C,OAAA,MAAM8iF,GAAG,GAAI9iF,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAM+iF,GAAG,GAAI/iF,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMgjF,GAAG,GAAIhjF,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE;AACvC,OAAA,MAAMijF,GAAG,GAAIjjF,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE;AACvC,OAAA,MAAMkjF,GAAG,GAAIljF,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMwoC,GAAG,GAAIxoC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAM0kB,EAAE,GAAI1kB,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAM6kB,EAAE,GAAI7kB,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMmjF,GAAG,GAAInjF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AAC1C,OAAA,MAAMojF,GAAG,GAAIpjF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AAC1C,OAAA,MAAMqjF,GAAG,GAAIrjF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAE;AACzC,OAAA,MAAMsjF,GAAG,GAAItjF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAE;AACzC,OAAA,MAAMujF,GAAG,GAAIvjF,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE;AACvC,OAAA,MAAMwjF,GAAG,GAAIxjF,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE;AACvC,OAAA,MAAMyjF,GAAG,GAAIzjF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAE;AACzC,OAAA,MAAM0jF,GAAG,GAAI1jF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAE;AACzC,OAAA,MAAM2jF,GAAG,GAAI3jF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAE;AACzC,OAAA,MAAM4jF,GAAG,GAAI5jF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAE;AACzC,OAAA,MAAMglB,EAAE,GAAIhlB,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMmlB,EAAE,GAAInlB,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAM6jF,GAAG,GAAI7jF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAE;AACzC,OAAA,MAAM8jF,GAAG,GAAI9jF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAE;AACzC,OAAA,MAAM+jF,GAAG,GAAI/jF,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE;AACvC,OAAA,MAAMgkF,GAAG,GAAIhkF,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE;AACvC,OAAA,MAAMikF,GAAG,GAAIjkF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AAC1C,OAAA,MAAMkkF,GAAG,GAAIlkF,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AAC1C,OAAA,MAAMmkF,GAAG,GAAInkF,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMokF,GAAG,GAAIpkF,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMqkF,GAAG,GAAIrkF,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMskF,GAAG,GAAItkF,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMslB,EAAE,GAAItlB,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;AACzC,OAAA,MAAMylB,EAAE,GAAIzlB,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAKA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG;OAEzCA,CAAC,CAAC,CAAC,CAAC,GAAG8jB,EAAE,GAAI,CAACM,EAAE,GAAGM,EAAG;OACtB1kB,CAAC,CAAC,CAAC,CAAC,GAAGikB,EAAE,GAAI,CAACM,EAAE,GAAGM,EAAG;OACtB7kB,CAAC,CAAC,EAAE,CAAC,GAAGujF,GAAG,GAAI,CAACU,GAAG,GAAG/B,GAAI;OAC1BliF,CAAC,CAAC,EAAE,CAAC,GAAGwjF,GAAG,GAAI,CAACU,GAAG,GAAG/B,GAAI;OAC1BniF,CAAC,CAAC,EAAE,CAAC,GAAGwiF,GAAG,GAAI,CAACU,GAAG,GAAGS,GAAI;OAC1B3jF,CAAC,CAAC,EAAE,CAAC,GAAGyiF,GAAG,GAAI,CAACj6C,GAAG,GAAGo7C,GAAI;OAC1B5jF,CAAC,CAAC,EAAE,CAAC,GAAG+jF,GAAG,GAAI,CAAC/B,GAAG,GAAGU,GAAI;OAC1B1iF,CAAC,CAAC,EAAE,CAAC,GAAGgkF,GAAG,GAAI,CAAC/B,GAAG,GAAGU,GAAI;OAC1B3iF,CAAC,CAAC,EAAE,CAAC,GAAGgjF,GAAG,GAAI,CAACS,GAAG,GAAGU,GAAI;OAC1BnkF,CAAC,CAAC,EAAE,CAAC,GAAGijF,GAAG,GAAI,CAACS,GAAG,GAAGU,GAAI;OAC1BpkF,CAAC,CAAC,CAAC,CAAC,GAAGokB,EAAE,GAAI,CAACM,EAAE,GAAGM,EAAG;OACtBhlB,CAAC,CAAC,CAAC,CAAC,GAAGukB,EAAE,GAAI,CAACM,EAAE,GAAGM,EAAG;OACtBnlB,CAAC,CAAC,EAAE,CAAC,GAAGikF,GAAG,GAAI,CAAC/B,GAAG,GAAGU,GAAI;OAC1B5iF,CAAC,CAAC,EAAE,CAAC,GAAGkkF,GAAG,GAAI,CAAC/B,GAAG,GAAGU,GAAI;OAC1B7iF,CAAC,CAAC,EAAE,CAAC,GAAGkjF,GAAG,GAAI,CAACS,GAAG,GAAGU,GAAI;OAC1BrkF,CAAC,CAAC,EAAE,CAAC,GAAGwoC,GAAG,GAAI,CAACo7C,GAAG,GAAGU,GAAI;OAC1BtkF,CAAC,CAAC,EAAE,CAAC,GAAGgiF,GAAG,GAAI,CAACU,GAAG,GAAGS,GAAI;OAC1BnjF,CAAC,CAAC,EAAE,CAAC,GAAGiiF,GAAG,GAAI,CAACU,GAAG,GAAGS,GAAI;OAC1BpjF,CAAC,CAAC,EAAE,CAAC,GAAGyjF,GAAG,GAAI,CAACU,GAAG,GAAG/B,GAAI;OAC1BpiF,CAAC,CAAC,EAAE,CAAC,GAAG0jF,GAAG,GAAI,CAACU,GAAG,GAAG/B,GAAI;OAC1BriF,CAAC,CAAC,CAAC,CAAC,GAAG0kB,EAAE,GAAI,CAACM,EAAE,GAAGM,EAAG;OACtBtlB,CAAC,CAAC,CAAC,CAAC,GAAG6kB,EAAE,GAAI,CAACM,EAAE,GAAGM,EAAG;OACtBzlB,CAAC,CAAC,EAAE,CAAC,GAAGkiF,GAAG,GAAI,CAACU,GAAG,GAAGS,GAAI;OAC1BrjF,CAAC,CAAC,EAAE,CAAC,GAAGmiF,GAAG,GAAI,CAACU,GAAG,GAAGS,GAAI;OAC1BtjF,CAAC,CAAC,EAAE,CAAC,GAAG2jF,GAAG,GAAI,CAACU,GAAG,GAAG/B,GAAI;OAC1BtiF,CAAC,CAAC,EAAE,CAAC,GAAG4jF,GAAG,GAAI,CAACU,GAAG,GAAG/B,GAAI;OAC1BviF,CAAC,CAAC,EAAE,CAAC,GAAG0iF,GAAG,GAAI,CAACS,GAAG,GAAGU,GAAI;OAC1B7jF,CAAC,CAAC,EAAE,CAAC,GAAG2iF,GAAG,GAAI,CAACS,GAAG,GAAGU,GAAI;OAC1B9jF,CAAC,CAAC,EAAE,CAAC,GAAGmkF,GAAG,GAAI,CAAC/B,GAAG,GAAGU,GAAI;OAC1B9iF,CAAC,CAAC,EAAE,CAAC,GAAGokF,GAAG,GAAI,CAAC/B,GAAG,GAAGU,GAAI;OAC1B/iF,CAAC,CAAC,CAAC,CAAC,GAAGglB,EAAE,GAAI,CAACM,EAAE,GAAGxB,EAAG;OACtB9jB,CAAC,CAAC,CAAC,CAAC,GAAGmlB,EAAE,GAAI,CAACM,EAAE,GAAGxB,EAAG;OACtBjkB,CAAC,CAAC,EAAE,CAAC,GAAG4iF,GAAG,GAAI,CAACS,GAAG,GAAGE,GAAI;OAC1BvjF,CAAC,CAAC,EAAE,CAAC,GAAG6iF,GAAG,GAAI,CAACS,GAAG,GAAGE,GAAI;OAC1BxjF,CAAC,CAAC,EAAE,CAAC,GAAGqkF,GAAG,GAAI,CAAC/B,GAAG,GAAGE,GAAI;OAC1BxiF,CAAC,CAAC,EAAE,CAAC,GAAGskF,GAAG,GAAI,CAAC/B,GAAG,GAAGE,GAAI;OAC1BziF,CAAC,CAAC,EAAE,CAAC,GAAGmjF,GAAG,GAAI,CAACU,GAAG,GAAGE,GAAI;OAC1B/jF,CAAC,CAAC,EAAE,CAAC,GAAGojF,GAAG,GAAI,CAACU,GAAG,GAAGE,GAAI;OAC1BhkF,CAAC,CAAC,EAAE,CAAC,GAAGoiF,GAAG,GAAI,CAACU,GAAG,GAAGE,GAAI;OAC1BhjF,CAAC,CAAC,EAAE,CAAC,GAAGqiF,GAAG,GAAI,CAACU,GAAG,GAAGE,GAAI;OAC1BjjF,CAAC,CAAC,CAAC,CAAC,GAAGslB,EAAE,GAAI,CAACxB,EAAE,GAAGM,EAAG;OACtBpkB,CAAC,CAAC,CAAC,CAAC,GAAGylB,EAAE,GAAI,CAACxB,EAAE,GAAGM,EAAG;OACtBvkB,CAAC,CAAC,EAAE,CAAC,GAAGqjF,GAAG,GAAI,CAACE,GAAG,GAAGU,GAAI;OAC1BjkF,CAAC,CAAC,EAAE,CAAC,GAAGsjF,GAAG,GAAI,CAACE,GAAG,GAAGU,GAAI;OAC1BlkF,CAAC,CAAC,EAAE,CAAC,GAAGsiF,GAAG,GAAI,CAACE,GAAG,GAAGU,GAAI;OAC1BljF,CAAC,CAAC,EAAE,CAAC,GAAGuiF,GAAG,GAAI,CAACE,GAAG,GAAGj6C,GAAI;OAC1BxoC,CAAC,CAAC,EAAE,CAAC,GAAG6jF,GAAG,GAAI,CAACE,GAAG,GAAG/B,GAAI;OAC1BhiF,CAAC,CAAC,EAAE,CAAC,GAAG8jF,GAAG,GAAI,CAACE,GAAG,GAAG/B,GAAI;OAC1BjiF,CAAC,CAAC,EAAE,CAAC,GAAG8iF,GAAG,GAAI,CAACE,GAAG,GAAGS,GAAI;OAC1BzjF,CAAC,CAAC,EAAE,CAAC,GAAG+iF,GAAG,GAAI,CAACE,GAAG,GAAGS,GAAI;OAE1B1jF,CAAC,CAAC,CAAC,CAAC,IAAI+gF,WAAW,CAACh2E,CAAC,GAAG,CAAC,CAAC;OAC1B/K,CAAC,CAAC,CAAC,CAAC,IAAI+gF,WAAW,CAACh2E,CAAC,GAAG,CAAC,CAAC;AAC5B;AACF;GAEA,OAAOjP,IAAIA,GAAG;KACZ,OAAO,IAAIklF,MAAM,EAAE;AACrB;GAEA,OAAOjiF,IAAIA,CAACW,IAAI,EAAEnD,GAAG,EAAEc,GAAG,EAAE;AAC1B,KAAA,IAAIqC,IAAI,IAAI,IAAI,EACdA,IAAI,GAAG,GAAG;AAEZnJ,KAAAA,MAAM,CAAEmJ,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;AAE7B,KAAA,MAAMi+C,IAAI,GAAG,IAAI,GAAGj+C,IAAI,GAAG,CAAC;KAE5BnJ,MAAM,CAAConD,IAAI,IAAI,CAAC,IAAI,CAACA,IAAI,GAAG,EAAE,MAAM,CAAC,CAAC;AAEtC,KAAA,OAAO,IAAIpiD,IAAI,CAACylF,MAAM,EAAErjC,IAAI,KAAK,CAAC,EAAE,CAACj+C,IAAI,CAAC,EAAE,CAACnD,GAAG,EAAEc,GAAG,CAAC,CAAC;AACzD;GAEA,OAAO2B,MAAMA,CAACtC,IAAI,EAAEgD,IAAI,EAAEnD,GAAG,EAAEc,GAAG,EAAE;KAClC,OAAO2jF,MAAM,CAAC/hF,GAAG,CAAChD,IAAI,CAACyD,IAAI,CAAC,CAACrD,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,CAACC,GAAG,EAAEc,GAAG,CAAC;AAC3D;GAEA,OAAO6B,IAAIA,CAACC,IAAI,EAAEC,KAAK,EAAEM,IAAI,EAAEnD,GAAG,EAAEc,GAAG,EAAE;AACvC,KAAA,IAAIqC,IAAI,IAAI,IAAI,EACdA,IAAI,GAAG,GAAG;AAEZ,KAAA,IAAIrC,GAAG,IAAI,IAAI,EACbA,GAAG,GAAG,CAAC;KAET,IAAIA,GAAG,KAAK,CAAC,EACXA,GAAG,GAAGqC,IAAI,KAAK,CAAC;AAElBnJ,KAAAA,MAAM,CAAEmJ,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;KAC7BnJ,MAAM,CAAC,CAACmJ,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC;AACxBnJ,KAAAA,MAAM,CAAE8G,GAAG,KAAK,CAAC,KAAMA,GAAG,CAAC;AAC3B9G,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACgD,IAAI,CAAC,IAAIA,IAAI,CAAC9H,MAAM,KAAKgG,GAAG,CAAC;AACpD9G,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACiD,KAAK,CAAC,IAAIA,KAAK,CAAC/H,MAAM,KAAKgG,GAAG,CAAC;KAEtD,OAAO2jF,MAAM,CAAC/hF,GAAG,CAAChD,IAAI,CAACyD,IAAI,CAAC,CAACrD,MAAM,CAAC8C,IAAI,CAAC,CAAC9C,MAAM,CAAC+C,KAAK,CAAC,CAAC9C,KAAK,CAACC,GAAG,EAAEc,GAAG,CAAC;AACzE;AAEA,GAAA,OAAOgC,KAAKA,CAAC3D,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAEI,IAAI,EAAEnD,GAAG,EAAEc,GAAG,EAAE;KACpC,MAAM;OAAC4B;AAAG,MAAC,GAAG+hF,MAAM;AAEpB/hF,KAAAA,GAAG,CAAChD,IAAI,CAACyD,IAAI,CAAC;AACdT,KAAAA,GAAG,CAAC5C,MAAM,CAACX,CAAC,CAAC;AACbuD,KAAAA,GAAG,CAAC5C,MAAM,CAACV,CAAC,CAAC;KAEb,IAAI2D,CAAC,EACHL,GAAG,CAAC5C,MAAM,CAACiD,CAAC,CAAC;KAEf,OAAOL,GAAG,CAAC3C,KAAK,CAACC,GAAG,EAAEc,GAAG,CAAC;AAC5B;GAEA,OAAOkC,GAAGA,CAAC7C,IAAI,EAAER,GAAG,EAAEwD,IAAI,EAAEnD,GAAG,EAAEc,GAAG,EAAE;KACpC,OAAO2jF,MAAM,CAACjiF,IAAI,CAACW,IAAI,EAAEnD,GAAG,EAAEc,GAAG,CAAC,CAACpB,IAAI,CAACC,GAAG,CAAC,CAACG,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,EAAE;AACnE;AACF;;AAEA;AACA;AACA;;CAEA0kF,MAAM,CAACxhF,MAAM,GAAG,CAAC;CACjBwhF,MAAM,CAACvhF,EAAE,GAAG,WAAW;CACvBuhF,MAAM,CAACvlF,IAAI,GAAG,EAAE;CAChBulF,MAAM,CAACthF,IAAI,GAAG,GAAG;CACjBshF,MAAM,CAACrhF,SAAS,GAAG,GAAG;CACtBqhF,MAAM,CAACphF,IAAI,GAAGzF,MAAM,CAACqC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AACpCwkF,CAAAA,MAAM,CAAC/hF,GAAG,GAAG,IAAI+hF,MAAM,EAAE;;AAEzB;AACA;AACA;;AAEA,CAAA,SAAS1iF,OAAOA,CAAC5B,IAAI,EAAEa,GAAG,EAAE;GAC1B,OAAQb,IAAI,CAACa,GAAG,EAAE,CAAC,GACXb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,KAAK,GACnBb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,OAAO,GACrBb,IAAI,CAACa,GAAG,CAAC,GAAG,SAAS;AAC/B;;AAEA;AACA;AACA;;AAEAzD,CAAAA,MAAc,GAAGknF,MAAM;;;;;;;;;;;;;;;;;;;;;;;CC/ZvB,MAAMzqF,MAAM,GAAGC,aAA4B,EAAA;;AAE3C;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAAS2hC,GAAGA,CAACz7B,IAAI,EAAEu8B,IAAI,EAAE;GACvB1iC,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC7BnG,GAAAA,MAAM,CAAC,OAAO0iC,IAAI,KAAK,QAAQ,CAAC;GAEhC,MAAMsrD,IAAI,GAAG7nF,IAAI,CAACrF,MAAM,IAAIqF,IAAI,CAACrF,MAAM,GAAG,CAAC,CAAC;GAC5C,MAAMowC,EAAE,GAAG,UAAU;GACrB,MAAMC,EAAE,GAAG,UAAU;AAErB,GAAA,IAAIg6C,EAAE,GAAGzoD,IAAI,GAAG,CAAC;AAEjB,GAAA,KAAK,IAAIx8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8nF,IAAI,EAAE9nF,CAAC,IAAI,CAAC,EAAE;KAChC,IAAI2mC,EAAE,GAAG9kC,OAAO,CAAC5B,IAAI,EAAED,CAAC,CAAC;AAEzB2mC,KAAAA,EAAE,GAAGohD,KAAK,CAACphD,EAAE,EAAEqE,EAAE,CAAC;AAClBrE,KAAAA,EAAE,GAAGviC,MAAM,CAACuiC,EAAE,EAAE,EAAE,CAAC;AACnBA,KAAAA,EAAE,GAAGohD,KAAK,CAACphD,EAAE,EAAEsE,EAAE,CAAC;KAClBg6C,EAAE,IAAIt+C,EAAE;AACRs+C,KAAAA,EAAE,GAAG7gF,MAAM,CAAC6gF,EAAE,EAAE,EAAE,CAAC;KACnBA,EAAE,GAAI8C,KAAK,CAAC9C,EAAE,EAAE,CAAC,CAAC,GAAG,UAAU,GAAI,CAAC;AACtC;GAEA,IAAIt+C,EAAE,GAAG,CAAC;AAEV,GAAA,QAAQ1mC,IAAI,CAACrF,MAAM,GAAG,CAAC;AACrB,KAAA,KAAK,CAAC;OACJ+rC,EAAE,IAAI1mC,IAAI,CAAC6nF,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;AAC5B,KAAA,KAAK,CAAC;OACJnhD,EAAE,IAAI1mC,IAAI,CAAC6nF,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;AAC3B,KAAA,KAAK,CAAC;AACJnhD,OAAAA,EAAE,IAAI1mC,IAAI,CAAC6nF,IAAI,GAAG,CAAC,CAAC;AACpBnhD,OAAAA,EAAE,GAAGohD,KAAK,CAACphD,EAAE,EAAEqE,EAAE,CAAC;AAClBrE,OAAAA,EAAE,GAAGviC,MAAM,CAACuiC,EAAE,EAAE,EAAE,CAAC;AACnBA,OAAAA,EAAE,GAAGohD,KAAK,CAACphD,EAAE,EAAEsE,EAAE,CAAC;OAClBg6C,EAAE,IAAIt+C,EAAE;AACZ;GAEAs+C,EAAE,IAAIhlF,IAAI,CAACrF,MAAM;GACjBqqF,EAAE,IAAIA,EAAE,KAAK,EAAE;AACfA,GAAAA,EAAE,GAAG8C,KAAK,CAAC9C,EAAE,EAAE,UAAU,CAAC;GAC1BA,EAAE,IAAIA,EAAE,KAAK,EAAE;AACfA,GAAAA,EAAE,GAAG8C,KAAK,CAAC9C,EAAE,EAAE,UAAU,CAAC;GAC1BA,EAAE,IAAIA,EAAE,KAAK,EAAE;GAEf,OAAOA,EAAE,KAAK,CAAC;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAASntC,KAAKA,CAAC73C,IAAI,EAAEqO,CAAC,EAAEwpC,KAAK,EAAE;AAC7Bh+C,GAAAA,MAAM,CAAC,OAAOwU,CAAC,KAAK,QAAQ,CAAC;AAC7BxU,GAAAA,MAAM,CAAC,OAAOg+C,KAAK,KAAK,QAAQ,CAAC;AAEjC,GAAA,MAAMtb,IAAI,GAAGurD,KAAK,CAACz5E,CAAC,EAAE,UAAU,CAAC,IAAIwpC,KAAK,GAAG,CAAC,CAAC;AAE/C,GAAA,OAAOpc,GAAG,CAACz7B,IAAI,EAAEu8B,IAAI,CAAC;AACxB;;AAEA;AACA;AACA;;AAEA,CAAA,SAASurD,KAAKA,CAACzmF,CAAC,EAAEC,CAAC,EAAE;AACnB,GAAA,MAAMwJ,GAAG,GAAGzJ,CAAC,GAAG,MAAM;AACtB,GAAA,MAAM0mF,GAAG,GAAGzmF,CAAC,GAAG,MAAM;AACtB,GAAA,MAAMuJ,GAAG,GAAGxJ,CAAC,KAAK,EAAE;AACpB,GAAA,MAAM2mF,GAAG,GAAG1mF,CAAC,KAAK,EAAE;AACpB,GAAA,MAAM9G,EAAE,GAAGsQ,GAAG,GAAGi9E,GAAG;AACpB,GAAA,MAAMttF,EAAE,GAAGoQ,GAAG,GAAGk9E,GAAG,GAAGC,GAAG,GAAGl9E,GAAG,IAAItQ,EAAE,KAAK,EAAE,CAAC;AAE9C,GAAA,OAAQC,EAAE,IAAI,EAAE,GAAKD,EAAE,GAAG,MAAO;AACnC;AAEA,CAAA,SAAS2J,MAAMA,CAACG,CAAC,EAAEhD,CAAC,EAAE;GACpB,OAAQgD,CAAC,IAAIhD,CAAC,GAAKgD,CAAC,KAAM,EAAE,GAAGhD,CAAG;AACpC;AAEA,CAAA,SAASM,OAAOA,CAAC5B,IAAI,EAAEa,GAAG,EAAE;GAC1B,OAAQb,IAAI,CAACa,GAAG,EAAE,CAAC,GACXb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,KAAK,GACnBb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,OAAO,GACrBb,IAAI,CAACa,GAAG,CAAC,GAAG,SAAS;AAC/B;;AAEA;AACA;AACA;;AAEA9G,CAAAA,OAAAA,CAAAA,MAAc,GAAG,CAAC;AAClBA,CAAAA,OAAAA,CAAAA,GAAW,GAAG0hC,GAAG;AACjB1hC,CAAAA,OAAAA,CAAAA,KAAa,GAAG89C,KAAK;;;;;;;;;;;;;;;;;CC7GrB,MAAMd,KAAK,GAAGj9C,YAAkB,EAAA;CAChC,MAAMwG,MAAM,GAAGxG,aAAmB,EAAA;;AAElC;AACA;AACA;;AAEAsD,CAAc,IAAA,GAAG,IAAI25C,KAAK,CAAC,MAAM,EAAEz2C,MAAM,EAAEA,MAAM,CAAC;;;;;;;;;;;;;;;;;CCPlD,MAAMy2C,KAAK,GAAGj9C,YAAkB,EAAA;CAChC,MAAMwG,MAAM,GAAGxG,aAAmB,EAAA;;AAElC;AACA;AACA;;AAEAsD,CAAc,IAAA,GAAG,IAAI25C,KAAK,CAAC,MAAM,EAAEz2C,MAAM,EAAEA,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;CCElD,MAAMzG,MAAM,GAAGC,aAA4B,EAAA;CAC3C,MAAMqrE,MAAM,GAAGrrE,aAAmB,EAAA;CAClC,MAAM+E,IAAI,GAAG/E,WAA0B,EAAA;;AAEvC;AACA;AACA;;CAEA,MAAMmuF,MAAM,SAAS9iB,MAAM,CAAC;AAC1BjpE,GAAAA,WAAWA,GAAG;AACZ,KAAA,KAAK,EAAE;AACT;AAEAqD,GAAAA,IAAIA,GAAG;AACL,KAAA,IAAI,CAACgB,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,EAAE,CAAC,GAAG,UAAU;AAC3B,KAAA,IAAI,CAACA,KAAK,CAAC,EAAE,CAAC,GAAG,UAAU;AAC3B,KAAA,IAAI,CAACA,KAAK,CAAC,EAAE,CAAC,GAAG,UAAU;AAC3B,KAAA,IAAI,CAACA,KAAK,CAAC,EAAE,CAAC,GAAG,UAAU;AAC3B,KAAA,IAAI,CAACA,KAAK,CAAC,EAAE,CAAC,GAAG,UAAU;AAC3B,KAAA,IAAI,CAACA,KAAK,CAAC,EAAE,CAAC,GAAG,UAAU;KAC3B,IAAI,CAACxB,IAAI,GAAG,CAAC;AACb,KAAA,OAAO,IAAI;AACb;AAEAa,GAAAA,KAAKA,GAAG;KACN,OAAO,KAAK,CAACA,KAAK,EAAE,CAAC8E,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AACnC;GAEA,OAAOtF,IAAIA,GAAG;KACZ,OAAO,IAAI6oF,MAAM,EAAE;AACrB;GAEA,OAAO5lF,IAAIA,GAAG;AACZ,KAAA,OAAO,IAAIxD,IAAI,CAACopF,MAAM,EAAE,GAAG,CAAC;AAC9B;GAEA,OAAO3lF,MAAMA,CAACtC,IAAI,EAAE;AAClB,KAAA,OAAOioF,MAAM,CAAC1lF,GAAG,CAAChD,IAAI,EAAE,CAACI,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,EAAE;AAC/C;AAEA,GAAA,OAAO4C,IAAIA,CAACC,IAAI,EAAEC,KAAK,EAAE;AACvB7I,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACgD,IAAI,CAAC,IAAIA,IAAI,CAAC9H,MAAM,KAAK,EAAE,CAAC;AACnDd,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACiD,KAAK,CAAC,IAAIA,KAAK,CAAC/H,MAAM,KAAK,EAAE,CAAC;KACrD,OAAOstF,MAAM,CAAC1lF,GAAG,CAAChD,IAAI,EAAE,CAACI,MAAM,CAAC8C,IAAI,CAAC,CAAC9C,MAAM,CAAC+C,KAAK,CAAC,CAAC9C,KAAK,EAAE;AAC7D;GAEA,OAAO+C,KAAKA,CAAC3D,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAE;KACpB,MAAM;OAACL;AAAG,MAAC,GAAG0lF,MAAM;KAEpB1lF,GAAG,CAAChD,IAAI,EAAE;AACVgD,KAAAA,GAAG,CAAC5C,MAAM,CAACX,CAAC,CAAC;AACbuD,KAAAA,GAAG,CAAC5C,MAAM,CAACV,CAAC,CAAC;KAEb,IAAI2D,CAAC,EACHL,GAAG,CAAC5C,MAAM,CAACiD,CAAC,CAAC;AAEf,KAAA,OAAOL,GAAG,CAAC3C,KAAK,EAAE;AACpB;AAEA,GAAA,OAAOiD,GAAGA,CAAC7C,IAAI,EAAER,GAAG,EAAE;AACpB,KAAA,OAAOyoF,MAAM,CAAC5lF,IAAI,EAAE,CAAC9C,IAAI,CAACC,GAAG,CAAC,CAACG,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,EAAE;AACrD;AACF;;AAEA;AACA;AACA;;CAEAqoF,MAAM,CAACnlF,MAAM,GAAG,CAAC;CACjBmlF,MAAM,CAACllF,EAAE,GAAG,QAAQ;CACpBklF,MAAM,CAAClpF,IAAI,GAAG,EAAE;CAChBkpF,MAAM,CAACjlF,IAAI,GAAG,GAAG;CACjBilF,MAAM,CAAChlF,SAAS,GAAG,GAAG;CACtBglF,MAAM,CAAC/kF,IAAI,GAAGzF,MAAM,CAACqC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AACpCmoF,CAAAA,MAAM,CAAC1lF,GAAG,GAAG,IAAI0lF,MAAM,EAAE;;AAEzB;AACA;AACA;;AAEA7qF,CAAAA,MAAc,GAAG6qF,MAAM;;;;;;;;;;;;;;;;;CCnGvB,MAAMlxC,KAAK,GAAGj9C,YAAkB,EAAA;CAChC,MAAMmuF,MAAM,GAAGnuF,aAAmB,EAAA;;AAElC;AACA;AACA;;AAEAsD,CAAc,IAAA,GAAG,IAAI25C,KAAK,CAAC,MAAM,EAAEkxC,MAAM,EAAEA,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;CCDlD,MAAM3D,MAAM,GAAGxqF,aAAmB,EAAA;;AAElC;AACA;AACA;;CAEA,MAAMouF,KAAK,SAAS5D,MAAM,CAAC;AACzB;AACF;AACA;AACA;;AAEEpoF,GAAAA,WAAWA,GAAG;AACZ,KAAA,KAAK,EAAE;AACT;GAEA0D,KAAKA,CAACe,GAAG,EAAE;KACT,OAAO,KAAK,CAACf,KAAK,CAAC,IAAI,EAAEe,GAAG,CAAC;AAC/B;GAEA,OAAOvB,IAAIA,GAAG;KACZ,OAAO,IAAI8oF,KAAK,EAAE;AACpB;AAEA,GAAA,OAAO7lF,IAAIA,CAACW,IAAI,EAAErC,GAAG,EAAE;KACrB,OAAO,KAAK,CAAC0B,IAAI,CAACW,IAAI,EAAE,IAAI,EAAErC,GAAG,CAAC;AACpC;GAEA,OAAO2B,MAAMA,CAACtC,IAAI,EAAEgD,IAAI,EAAErC,GAAG,EAAE;KAC7B,OAAO,KAAK,CAAC2B,MAAM,CAACtC,IAAI,EAAEgD,IAAI,EAAE,IAAI,EAAErC,GAAG,CAAC;AAC5C;GAEA,OAAO6B,IAAIA,CAACC,IAAI,EAAEC,KAAK,EAAEM,IAAI,EAAErC,GAAG,EAAE;AAClC,KAAA,OAAO,KAAK,CAAC6B,IAAI,CAACC,IAAI,EAAEC,KAAK,EAAEM,IAAI,EAAE,IAAI,EAAErC,GAAG,CAAC;AACjD;GAEA,OAAOgC,KAAKA,CAAC3D,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAEI,IAAI,EAAErC,GAAG,EAAE;AAC/B,KAAA,OAAO,KAAK,CAACgC,KAAK,CAAC3D,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAEI,IAAI,EAAE,IAAI,EAAErC,GAAG,CAAC;AAC9C;GAEA,OAAOkC,GAAGA,CAAC7C,IAAI,EAAER,GAAG,EAAEwD,IAAI,EAAErC,GAAG,EAAE;AAC/B,KAAA,OAAO,KAAK,CAACkC,GAAG,CAAC7C,IAAI,EAAER,GAAG,EAAEwD,IAAI,EAAE,IAAI,EAAErC,GAAG,CAAC;AAC9C;AACF;;AAEA;AACA;AACA;;AAEAunF,CAAAA,KAAK,CAACplF,MAAM,GAAGwhF,MAAM,CAACxhF,MAAM;CAC5BolF,KAAK,CAACnlF,EAAE,GAAG,UAAU;CACrBmlF,KAAK,CAACnpF,IAAI,GAAG,EAAE;CACfmpF,KAAK,CAACllF,IAAI,GAAG,GAAG;CAChBklF,KAAK,CAACjlF,SAAS,GAAG,GAAG;CACrBilF,KAAK,CAAChlF,IAAI,GAAGzF,MAAM,CAACqC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AACnCooF,CAAAA,KAAK,CAAC3lF,GAAG,GAAG,IAAI2lF,KAAK,EAAE;;AAEvB;AACA;AACA;;AAEA9qF,CAAAA,KAAc,GAAG8qF,KAAK;;;;;;;;;;;;;;;;;CCnEtB,MAAMA,KAAK,GAAGpuF,YAAkB,EAAA;;AAEhC;AACA;AACA;;CAEA,MAAMquF,QAAQ,SAASD,KAAK,CAAC;AAC3BhsF,GAAAA,WAAWA,GAAG;AACZ,KAAA,KAAK,EAAE;AACT;AAEAqD,GAAAA,IAAIA,GAAG;AACL,KAAA,OAAO,KAAK,CAACA,IAAI,CAAC,GAAG,CAAC;AACxB;GAEA,OAAOH,IAAIA,GAAG;KACZ,OAAO,IAAI+oF,QAAQ,EAAE;AACvB;GAEA,OAAO9lF,IAAIA,CAAC1B,GAAG,EAAE;KACf,OAAO,KAAK,CAAC0B,IAAI,CAAC,GAAG,EAAE1B,GAAG,CAAC;AAC7B;AAEA,GAAA,OAAO2B,MAAMA,CAACtC,IAAI,EAAEW,GAAG,EAAE;KACvB,OAAO,KAAK,CAAC2B,MAAM,CAACtC,IAAI,EAAE,GAAG,EAAEW,GAAG,CAAC;AACrC;GAEA,OAAO6B,IAAIA,CAACC,IAAI,EAAEC,KAAK,EAAE/B,GAAG,EAAE;KAC5B,OAAO,KAAK,CAAC6B,IAAI,CAACC,IAAI,EAAEC,KAAK,EAAE,GAAG,EAAE/B,GAAG,CAAC;AAC1C;GAEA,OAAOgC,KAAKA,CAAC3D,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAEjC,GAAG,EAAE;AACzB,KAAA,OAAO,KAAK,CAACgC,KAAK,CAAC3D,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAE,GAAG,EAAEjC,GAAG,CAAC;AACvC;GAEA,OAAOkC,GAAGA,CAAC7C,IAAI,EAAER,GAAG,EAAEmB,GAAG,EAAE;KACzB,OAAO,KAAK,CAACkC,GAAG,CAAC7C,IAAI,EAAER,GAAG,EAAE,GAAG,EAAEmB,GAAG,CAAC;AACvC;AACF;;AAEA;AACA;AACA;;AAEAwnF,CAAAA,QAAQ,CAACrlF,MAAM,GAAGolF,KAAK,CAACplF,MAAM;CAC9BqlF,QAAQ,CAACplF,EAAE,GAAG,UAAU;CACxBolF,QAAQ,CAACppF,IAAI,GAAG,EAAE;CAClBopF,QAAQ,CAACnlF,IAAI,GAAG,GAAG;CACnBmlF,QAAQ,CAACllF,SAAS,GAAG,GAAG;CACxBklF,QAAQ,CAACjlF,IAAI,GAAGzF,MAAM,CAACqC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AACtCqoF,CAAAA,QAAQ,CAAC5lF,GAAG,GAAG,IAAI4lF,QAAQ,EAAE;;AAE7B;AACA;AACA;;AAEA/qF,CAAAA,QAAc,GAAG+qF,QAAQ;;;;;;;;;;;;;;;;;CCxDzB,MAAMpxC,KAAK,GAAGj9C,YAAkB,EAAA;CAChC,MAAMqrE,MAAM,GAAGrrE,aAAmB,EAAA;CAClC,MAAMquF,QAAQ,GAAGruF,eAAqB,EAAA;;AAEtC;AACA;AACA;;AAEAsD,CAAc,IAAA,GAAG,IAAI25C,KAAK,CAAC,MAAM,EAAEouB,MAAM,EAAEgjB,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CCQpD,MAAMtuF,MAAM,GAAGC,aAA6B,EAAA;CAC5C,MAAMqN,EAAE,GAAGrN,SAAgB,EAAA;CAC3B,MAAMoc,MAAM,GAAGpc,aAAoB,EAAA;;AAEnC;AACA;AACA;;AAEA,CAAA,MAAMsuF,WAAW,GAAG,IAAIhlF,UAAU,CAAC,CAChC,CAAC,EAAG,CAAC,EAAG,CAAC,EACV,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,EAAE,EAAE,EAAE,EAAE,EAAE,CACX,CAAC;CAEF,MAAMilF,kBAAkB,GAAG,IAAIlhF,EAAE,CAAC,sBAAsB,EAAE,EAAE,CAAC;CAE7D,MAAMmhF,cAAc,GAAG,CAAC,GACnB,CAAC,IAAI,CAAE,GACP,CAAC,IAAI,CAAE,GACP,CAAC,IAAI,CAAE,GACP,CAAC,IAAI,CAAE,GACP,CAAC,IAAI,EAAG,GACR,CAAC,IAAI,EAAG,GACR,CAAC,IAAI,EAAG,GACR,CAAC,IAAI,EAAG,GACR,CAAC,IAAI,EAAG,GACR,CAAC,IAAI,EAAG,GACR,CAAC,IAAI,EAAG;CAEb,MAAMC,cAAc,GAAG,CAAC,GACnB,CAAC,IAAK,EAAE,GAAG,EAAI,GACf,CAAC,IAAK,EAAE,GAAG,EAAI,GACf,CAAC,IAAK,EAAE,GAAG,EAAI,GACf,CAAC,IAAK,EAAE,GAAG,EAAI,GACf,CAAC,IAAK,EAAE,GAAG,EAAI,GACf,CAAC,IAAK,EAAE,GAAG,EAAI,GACf,CAAC,IAAK,EAAE,GAAG,EAAI;CAEpB,MAAMC,OAAO,GAAG,IAAIrhF,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AAC/D,CAAA,MAAMshF,OAAO,GAAG,IAAIthF,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;;AAEnD;AACA;AACA;;CAEA,SAASuhF,WAAWA,CAAC1lF,IAAI,EAAEwS,IAAI,GAAG,EAAE,EAAED,GAAG,GAAGW,MAAM,EAAE;AAClDrc,GAAAA,MAAM,CAAEmJ,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;AAC7BnJ,GAAAA,MAAM,CAAE2b,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;AAC7B3b,GAAAA,MAAM,CAAC0b,GAAG,IAAI,IAAI,CAAC;GAEnB,IAAIvS,IAAI,GAAG,CAAC,EACV,MAAM,IAAInH,KAAK,CAAC,gCAAgC,CAAC;GAEnD,SAAS;KACP,MAAM8P,CAAC,GAAGxE,EAAE,CAACuW,UAAU,CAACnI,GAAG,EAAEvS,IAAI,CAAC;KAElC2I,CAAC,CAACsF,IAAI,CAACjO,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;KACnB2I,CAAC,CAACsF,IAAI,CAACjO,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;AACnB2I,KAAAA,CAAC,CAACsF,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;KAEZ,MAAMnV,GAAG,GAAG6P,CAAC,CAAC7P,GAAG,CAACusF,kBAAkB,CAAC;AAEzC32E,KAAAA,IAAI,EACA,KAAK,IAAI49B,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAI,CAAC,IAAI,EAAG,EAAEA,KAAK,IAAI,CAAC,EAAE;OACjD,MAAM3kC,CAAC,GAAG7O,GAAG,CAAC2M,IAAI,CAAC6mC,KAAK,CAAC;AAEzB,OAAA,KAAK,IAAIvvC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqoF,WAAW,CAACztF,MAAM,EAAEoF,CAAC,EAAE,EAAE;AAC3C,SAAA,MAAMmd,KAAK,GAAGkrE,WAAW,CAACroF,CAAC,CAAC;SAE5B,IAAI4K,CAAC,CAACwB,KAAK,CAAC+Q,KAAK,CAAC,KAAK,CAAC,KAAKla,IAAI,GAAG,CAAC,IAAI2H,CAAC,CAACkH,IAAI,CAACqL,KAAK,CAAC,KAAK,CAAC,CAAC,EAC3D,SAASxL,IAAI;AACjB;AAEA/F,OAAAA,CAAC,CAACvD,KAAK,CAACknC,KAAK,CAAC;OAEd;AACF;AAEA,KAAA,IAAI3jC,CAAC,CAACwB,SAAS,EAAE,KAAKnK,IAAI,EACxB;KAEF,IAAI,CAAC2lF,eAAe,CAACh9E,CAAC,EAAE6J,IAAI,EAAED,GAAG,CAAC,EAChC;AAEF,KAAA,OAAO5J,CAAC;AACV;AACF;CAEA,SAASg9E,eAAeA,CAAC3pF,CAAC,EAAEwW,IAAI,EAAED,GAAG,GAAGW,MAAM,EAAE;AAC9Crc,GAAAA,MAAM,CAACmF,CAAC,YAAYmI,EAAE,CAAC;GAEvB,IAAInI,CAAC,CAAC3E,IAAI,EAAE,IAAI,CAAC,EACf,OAAO,KAAK;GAEd,IAAI2E,CAAC,CAAC6S,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;KAClB,MAAMvN,CAAC,GAAGtF,CAAC,CAACwL,IAAI,CAAC,CAAC,CAAC;AAEnB,KAAA,IAAIlG,CAAC,GAAG,EAAE,EACR,OAAO,CAACikF,cAAc,GAAI,CAAC,IAAKjkF,CAAC,GAAG,EAAI,MAAM,CAAC;KAEjD,OAAO,CAACgkF,cAAc,GAAI,CAAC,IAAIhkF,CAAE,MAAM,CAAC;AAC1C;AAEA,GAAA,IAAItF,CAAC,CAAC0T,MAAM,EAAE,EACZ,OAAO,KAAK;GAEd,MAAMk2E,EAAE,GAAG5pF,CAAC,CAAClD,GAAG,CAAC0sF,OAAO,CAAC,CAACx4E,QAAQ,EAAE;GACpC,MAAM64E,EAAE,GAAG7pF,CAAC,CAAClD,GAAG,CAAC2sF,OAAO,CAAC,CAACz4E,QAAQ,EAAE;AAEpC,GAAA,IAAI44E,EAAE,GAAG,CAAC,KAAK,CAAC,IACTA,EAAE,GAAG,CAAC,KAAK,CAAC,IACZA,EAAE,GAAG,CAAC,KAAK,CAAC,IACZA,EAAE,GAAG,EAAE,KAAK,CAAC,IACbA,EAAE,GAAG,EAAE,KAAK,CAAC,IACbA,EAAE,GAAG,EAAE,KAAK,CAAC,IACbA,EAAE,GAAG,EAAE,KAAK,CAAC,IACbA,EAAE,GAAG,EAAE,KAAK,CAAC,IACbA,EAAE,GAAG,EAAE,KAAK,CAAC,IACbC,EAAE,GAAG,EAAE,KAAK,CAAC,IACbA,EAAE,GAAG,EAAE,KAAK,CAAC,IACbA,EAAE,GAAG,EAAE,KAAK,CAAC,IACbA,EAAE,GAAG,EAAE,KAAK,CAAC,IACbA,EAAE,GAAG,EAAE,KAAK,CAAC,IACbA,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE;AACpB,KAAA,OAAO,KAAK;AACd;GAEA,OAAO7pF,CAAC,CAACsW,OAAO,CAACC,GAAG,EAAEC,IAAI,CAAC;AAC7B;AAEA,CAAA,SAASszE,WAAWA,CAAC9pF,CAAC,EAAEwW,IAAI,EAAED,GAAG,EAAE;AACjC;GACA,IAAI,CAACozE,eAAe,CAAC3pF,CAAC,EAAEwW,IAAI,EAAED,GAAG,CAAC,EAChC,OAAO,KAAK;;AAEd;AACA,GAAA,MAAM5J,CAAC,GAAG3M,CAAC,CAAC+J,IAAI,CAAC,CAAC,CAAC,CAACc,MAAM,CAAC,CAAC,CAAC;GAE7B,IAAI,CAAC8+E,eAAe,CAACh9E,CAAC,EAAE6J,IAAI,EAAED,GAAG,CAAC,EAChC,OAAO,KAAK;AAEd,GAAA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;;AAEAxb,CAAAA,MAAAA,CAAAA,WAAmB,GAAG2uF,WAAW;AACjC3uF,CAAAA,MAAAA,CAAAA,eAAuB,GAAG4uF,eAAe;AACzC5uF,CAAAA,MAAAA,CAAAA,WAAmB,GAAG+uF,WAAW;;;;;;;;;;;;;;;;;;;;;CCrKjC,MAAMjvF,MAAM,GAAGC,aAA4B,EAAA;;AAE3C;AACA;AACA;;CAEA,MAAMivF,OAAO,GACX,kEAAkE;CAEpE,MAAMC,WAAW,GACf,kEAAkE;AAEpE,CAAA,MAAMC,KAAK,GAAG,CACZ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAC7B,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAC/B;AAED,CAAA,MAAMC,SAAS,GAAG,CAChnpF,IAAI,EAAEopF,OAAO,EAAEvpF,GAAG,EAAE;GACnChG,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACO,IAAI,CAAC,CAAC;AAE7B,GAAA,IAAIyC,IAAI,GAAGzC,IAAI,CAACrF,MAAM;GACtB,IAAIG,GAAG,GAAG,EAAE;GACZ,IAAIiF,CAAC,GAAG,CAAC;GAET,OAAO0C,IAAI,IAAI,CAAC,EAAE;AAChB,KAAA,MAAMsoC,EAAE,GAAG/qC,IAAI,CAACD,CAAC,EAAE,CAAC;AACpB,KAAA,MAAMirC,EAAE,GAAGhrC,IAAI,CAACD,CAAC,EAAE,CAAC;AACpB,KAAA,MAAMwkF,EAAE,GAAGvkF,IAAI,CAACD,CAAC,EAAE,CAAC;AAEpBjF,KAAAA,GAAG,IAAIsuF,OAAO,CAACr+C,EAAE,IAAI,CAAC,CAAC;AACvBjwC,KAAAA,GAAG,IAAIsuF,OAAO,CAAE,CAACr+C,EAAE,GAAG,CAAC,KAAK,CAAC,GAAKC,EAAE,IAAI,CAAE,CAAC;AAC3ClwC,KAAAA,GAAG,IAAIsuF,OAAO,CAAE,CAACp+C,EAAE,GAAG,IAAI,KAAK,CAAC,GAAKu5C,EAAE,IAAI,CAAE,CAAC;AAC9CzpF,KAAAA,GAAG,IAAIsuF,OAAO,CAAC7E,EAAE,GAAG,IAAI,CAAC;KAEzB9hF,IAAI,IAAI,CAAC;AACX;AAEA,GAAA,QAAQA,IAAI;AACV,KAAA,KAAK,CAAC;OAAE;AACN,SAAA,MAAMsoC,EAAE,GAAG/qC,IAAI,CAACD,CAAC,EAAE,CAAC;AAEpBjF,SAAAA,GAAG,IAAIsuF,OAAO,CAACr+C,EAAE,IAAI,CAAC,CAAC;SACvBjwC,GAAG,IAAIsuF,OAAO,CAAC,CAACr+C,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;AAE7B,SAAA,IAAIlrC,GAAG,EACL/E,GAAG,IAAI,IAAI;SAEb;AACF;AAEA,KAAA,KAAK,CAAC;OAAE;AACN,SAAA,MAAMiwC,EAAE,GAAG/qC,IAAI,CAACD,CAAC,EAAE,CAAC;AACpB,SAAA,MAAMirC,EAAE,GAAGhrC,IAAI,CAACD,CAAC,EAAE,CAAC;AAEpBjF,SAAAA,GAAG,IAAIsuF,OAAO,CAACr+C,EAAE,IAAI,CAAC,CAAC;AACvBjwC,SAAAA,GAAG,IAAIsuF,OAAO,CAAE,CAACr+C,EAAE,GAAG,CAAC,KAAK,CAAC,GAAKC,EAAE,IAAI,CAAE,CAAC;SAC3ClwC,GAAG,IAAIsuF,OAAO,CAAC,CAACp+C,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC;AAEhC,SAAA,IAAInrC,GAAG,EACL/E,GAAG,IAAI,GAAG;SAEZ;AACF;AACF;AAEA,GAAA,OAAOA,GAAG;AACZ;;AAEA;AACA;AACA;;AAEA,CAAA,SAASuuF,OAAOA,CAACvuF,GAAG,EAAEsY,KAAK,EAAErU,IAAI,EAAE;AACjClF,GAAAA,MAAM,CAAC,OAAOiB,GAAG,KAAK,QAAQ,CAAC;GAE/B,MAAMkF,IAAI,GAAGvC,MAAM,CAACqC,KAAK,CAACf,IAAI,CAAC;AAE/B,GAAA,IAAI0D,IAAI,GAAG3H,GAAG,CAACH,MAAM;GACrB,IAAIoF,CAAC,GAAG,CAAC;GACT,IAAImE,CAAC,GAAG,CAAC;AAET,GAAA,IAAIzB,IAAI,GAAG,CAAC,IAAI3H,GAAG,CAAC2H,IAAI,GAAG,CAAC,CAAC,KAAK,GAAG,EACnCA,IAAI,IAAI,CAAC;AAEX,GAAA,IAAIA,IAAI,GAAG,CAAC,IAAI3H,GAAG,CAAC2H,IAAI,GAAG,CAAC,CAAC,KAAK,GAAG,EACnCA,IAAI,IAAI,CAAC;AAEX,GAAA,IAAI,CAACA,IAAI,GAAG,CAAC,MAAM,CAAC;AAAE;AACpB,KAAA,MAAM,IAAI5G,KAAK,CAAC,wBAAwB,CAAC;GAE3C,OAAO4G,IAAI,IAAI,CAAC,EAAE;KAChB,MAAMsoC,EAAE,GAAGjwC,GAAG,CAACghB,UAAU,CAAC/b,CAAC,EAAE,CAAC;KAC9B,MAAMirC,EAAE,GAAGlwC,GAAG,CAACghB,UAAU,CAAC/b,CAAC,EAAE,CAAC;KAC9B,MAAMwkF,EAAE,GAAGzpF,GAAG,CAACghB,UAAU,CAAC/b,CAAC,EAAE,CAAC;KAC9B,MAAMykF,EAAE,GAAG1pF,GAAG,CAACghB,UAAU,CAAC/b,CAAC,EAAE,CAAC;AAE9B,KAAA,IAAI,CAACgrC,EAAE,GAAGC,EAAE,GAAGu5C,EAAE,GAAGC,EAAE,IAAI,MAAM,EAC9B,MAAM,IAAI3oF,KAAK,CAAC,wBAAwB,CAAC;AAE3C,KAAA,MAAMkG,EAAE,GAAGqR,KAAK,CAAC23B,EAAE,CAAC;AACpB,KAAA,MAAM7oC,EAAE,GAAGkR,KAAK,CAAC43B,EAAE,CAAC;AACpB,KAAA,MAAMwB,EAAE,GAAGp5B,KAAK,CAACmxE,EAAE,CAAC;AACpB,KAAA,MAAM93C,EAAE,GAAGr5B,KAAK,CAACoxE,EAAE,CAAC;AAEpB,KAAA,IAAI,CAACziF,EAAE,GAAGG,EAAE,GAAGsqC,EAAE,GAAGC,EAAE,IAAI,CAAC,EACzB,MAAM,IAAI5wC,KAAK,CAAC,wBAAwB,CAAC;KAE3CmE,IAAI,CAACkE,CAAC,EAAE,CAAC,GAAInC,EAAE,IAAI,CAAC,GAAKG,EAAE,IAAI,CAAE;KACjClC,IAAI,CAACkE,CAAC,EAAE,CAAC,GAAIhC,EAAE,IAAI,CAAC,GAAKsqC,EAAE,IAAI,CAAE;KACjCxsC,IAAI,CAACkE,CAAC,EAAE,CAAC,GAAIsoC,EAAE,IAAI,CAAC,GAAKC,EAAE,IAAI,CAAE;KAEjChqC,IAAI,IAAI,CAAC;AACX;AAEA,GAAA,QAAQA,IAAI;AACV,KAAA,KAAK,CAAC;OAAE;AACN,SAAA,MAAM,IAAI5G,KAAK,CAAC,wBAAwB,CAAC;AAC3C;AAEA,KAAA,KAAK,CAAC;OAAE;SACN,MAAMkvC,EAAE,GAAGjwC,GAAG,CAACghB,UAAU,CAAC/b,CAAC,EAAE,CAAC;SAC9B,MAAMirC,EAAE,GAAGlwC,GAAG,CAACghB,UAAU,CAAC/b,CAAC,EAAE,CAAC;AAE9B,SAAA,IAAI,CAACgrC,EAAE,GAAGC,EAAE,IAAI,MAAM,EACpB,MAAM,IAAInvC,KAAK,CAAC,wBAAwB,CAAC;AAE3C,SAAA,MAAMkG,EAAE,GAAGqR,KAAK,CAAC23B,EAAE,CAAC;AACpB,SAAA,MAAM7oC,EAAE,GAAGkR,KAAK,CAAC43B,EAAE,CAAC;AAEpB,SAAA,IAAI,CAACjpC,EAAE,GAAGG,EAAE,IAAI,CAAC,EACf,MAAM,IAAIrG,KAAK,CAAC,wBAAwB,CAAC;SAE3CmE,IAAI,CAACkE,CAAC,EAAE,CAAC,GAAInC,EAAE,IAAI,CAAC,GAAKG,EAAE,IAAI,CAAE;SAEjC,IAAIA,EAAE,GAAG,EAAE,EACT,MAAM,IAAIrG,KAAK,CAAC,wBAAwB,CAAC;SAE3C;AACF;AAEA,KAAA,KAAK,CAAC;OAAE;SACN,MAAMkvC,EAAE,GAAGjwC,GAAG,CAACghB,UAAU,CAAC/b,CAAC,EAAE,CAAC;SAC9B,MAAMirC,EAAE,GAAGlwC,GAAG,CAACghB,UAAU,CAAC/b,CAAC,EAAE,CAAC;SAC9B,MAAMwkF,EAAE,GAAGzpF,GAAG,CAACghB,UAAU,CAAC/b,CAAC,EAAE,CAAC;AAE9B,SAAA,IAAI,CAACgrC,EAAE,GAAGC,EAAE,GAAGu5C,EAAE,IAAI,MAAM,EACzB,MAAM,IAAI1oF,KAAK,CAAC,wBAAwB,CAAC;AAE3C,SAAA,MAAMkG,EAAE,GAAGqR,KAAK,CAAC23B,EAAE,CAAC;AACpB,SAAA,MAAM7oC,EAAE,GAAGkR,KAAK,CAAC43B,EAAE,CAAC;AACpB,SAAA,MAAMwB,EAAE,GAAGp5B,KAAK,CAACmxE,EAAE,CAAC;AAEpB,SAAA,IAAI,CAACxiF,EAAE,GAAGG,EAAE,GAAGsqC,EAAE,IAAI,CAAC,EACpB,MAAM,IAAI3wC,KAAK,CAAC,wBAAwB,CAAC;SAE3CmE,IAAI,CAACkE,CAAC,EAAE,CAAC,GAAInC,EAAE,IAAI,CAAC,GAAKG,EAAE,IAAI,CAAE;SACjClC,IAAI,CAACkE,CAAC,EAAE,CAAC,GAAIhC,EAAE,IAAI,CAAC,GAAKsqC,EAAE,IAAI,CAAE;SAEjC,IAAIA,EAAE,GAAG,CAAC,EACR,MAAM,IAAI3wC,KAAK,CAAC,wBAAwB,CAAC;SAE3C;AACF;AACF;AAEAhC,GAAAA,MAAM,CAACqK,CAAC,KAAKnF,IAAI,CAAC;AAElB,GAAA,OAAOiB,IAAI;AACb;;AAEA;AACA;AACA;;AAEA,CAAA,SAASspF,KAAKA,CAACxuF,GAAG,EAAEsY,KAAK,EAAE;AACzBvZ,GAAAA,MAAM,CAAC,OAAOiB,GAAG,KAAK,QAAQ,CAAC;AAE/B,GAAA,IAAI6F,GAAG,GAAG7F,GAAG,CAACH,MAAM;AAEpB,GAAA,IAAIgG,GAAG,GAAG,CAAC,IAAI7F,GAAG,CAAC6F,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG,EACjCA,GAAG,IAAI,CAAC;AAEV,GAAA,IAAIA,GAAG,GAAG,CAAC,IAAI7F,GAAG,CAAC6F,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG,EACjCA,GAAG,IAAI,CAAC;GAEV,IAAI,CAACA,GAAG,GAAG,CAAC,MAAM,CAAC,EACjB,OAAO,KAAK;GAEd,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,GAAG,EAAEZ,CAAC,EAAE,EAAE;KAC5B,MAAM03B,EAAE,GAAG38B,GAAG,CAACghB,UAAU,CAAC/b,CAAC,CAAC;AAE5B,KAAA,IAAI03B,EAAE,GAAG,MAAM,EACb,OAAO,KAAK;KAEd,IAAIrkB,KAAK,CAACqkB,EAAE,CAAC,KAAK,EAAE,EAClB,OAAO,KAAK;AAChB;GAEA,QAAQ92B,GAAG,GAAG,CAAC;AACb,KAAA,KAAK,CAAC;AACJ,OAAA,OAAO,KAAK;AACd,KAAA,KAAK,CAAC;AACJ,OAAA,OAAO,CAACyS,KAAK,CAACtY,GAAG,CAACghB,UAAU,CAACnb,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC;AACpD,KAAA,KAAK,CAAC;AACJ,OAAA,OAAO,CAACyS,KAAK,CAACtY,GAAG,CAACghB,UAAU,CAACnb,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;AACrD;AAEA,GAAA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;;CAEA,SAAS3G,MAAMA,CAACgG,IAAI,EAAE;GACpB,OAAOmpF,OAAO,CAACnpF,IAAI,EAAE+oF,OAAO,EAAE,IAAI,CAAC;AACrC;CAEA,SAASluF,MAAMA,CAACC,GAAG,EAAE;AACnB,GAAA,MAAMiE,IAAI,GAAGwqF,UAAU,CAACzuF,GAAG,CAAC;AAE5B,GAAA,IAAI,CAAC0uF,YAAY,CAAC1uF,GAAG,EAAEiE,IAAI,CAAC,EAC1B,MAAM,IAAIlD,KAAK,CAAC,yBAAyB,CAAC;GAE5C,OAAOwtF,OAAO,CAACvuF,GAAG,EAAEmuF,KAAK,EAAElqF,IAAI,CAAC;AAClC;CAEA,SAAS7D,IAAIA,CAACJ,GAAG,EAAE;AACjB,GAAA,MAAMiE,IAAI,GAAGwqF,UAAU,CAACzuF,GAAG,CAAC;GAE5B,IAAI,CAAC0uF,YAAY,CAAC1uF,GAAG,EAAEiE,IAAI,CAAC,EAC1B,OAAO,KAAK;AAEd,GAAA,OAAOuqF,KAAK,CAACxuF,GAAG,EAAEmuF,KAAK,CAAC;AAC1B;;AAEA;AACA;AACA;;CAEA,SAASQ,SAASA,CAACzpF,IAAI,EAAE;GACvB,OAAOmpF,OAAO,CAACnpF,IAAI,EAAEgpF,WAAW,EAAE,KAAK,CAAC;AAC1C;CAEA,SAASU,SAASA,CAAC5uF,GAAG,EAAE;AACtB,GAAA,MAAMiE,IAAI,GAAGwqF,UAAU,CAACzuF,GAAG,CAAC;AAE5B,GAAA,IAAI,CAAC0uF,YAAY,CAAC1uF,GAAG,EAAE,CAAC,CAAC,EACvB,MAAM,IAAIe,KAAK,CAAC,yBAAyB,CAAC;GAE5C,OAAOwtF,OAAO,CAACvuF,GAAG,EAAEouF,SAAS,EAAEnqF,IAAI,CAAC;AACtC;CAEA,SAAS4qF,OAAOA,CAAC7uF,GAAG,EAAE;GACpB,IAAI,CAAC0uF,YAAY,CAAC1uF,GAAG,EAAE,CAAC,CAAC,EACvB,OAAO,KAAK;AAEd,GAAA,OAAOwuF,KAAK,CAACxuF,GAAG,EAAEouF,SAAS,CAAC;AAC9B;;AAEA;AACA;AACA;;CAEA,SAASK,UAAUA,CAACzuF,GAAG,EAAE;AACvBjB,GAAAA,MAAM,CAAC,OAAOiB,GAAG,KAAK,QAAQ,CAAC;AAE/B,GAAA,IAAI6F,GAAG,GAAG7F,GAAG,CAACH,MAAM;AAEpB,GAAA,IAAIgG,GAAG,GAAG,CAAC,IAAI7F,GAAG,CAAC6F,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG,EACjCA,GAAG,IAAI,CAAC;AAEV,GAAA,IAAIA,GAAG,GAAG,CAAC,IAAI7F,GAAG,CAAC6F,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG,EACjCA,GAAG,IAAI,CAAC;GAEV,IAAI5B,IAAI,GAAG,CAAC4B,GAAG,KAAK,CAAC,IAAI,CAAC;AAE1B,GAAA,MAAM6K,GAAG,GAAG7K,GAAG,GAAG,CAAC;AAEnB,GAAA,IAAI6K,GAAG,EACLzM,IAAI,IAAIyM,GAAG,GAAG,CAAC;AAEjB,GAAA,OAAOzM,IAAI;AACb;AAEA,CAAA,SAASyqF,YAAYA,CAAC1uF,GAAG,EAAEiE,IAAI,EAAE;AAC/BlF,GAAAA,MAAM,CAAC,OAAOiB,GAAG,KAAK,QAAQ,CAAC;GAE/B,QAAQiE,IAAI,GAAG,CAAC;AACd,KAAA,KAAK,CAAC;OAAE;SACN,IAAIjE,GAAG,CAACH,MAAM,KAAK,CAAC,EAClB,OAAO,IAAI;AAEb,SAAA,IAAIG,GAAG,CAACH,MAAM,KAAK,CAAC,EAClB,OAAOG,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG;SAEvB,OAAOA,GAAG,CAACA,GAAG,CAACH,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,IAC3BG,GAAG,CAACA,GAAG,CAACH,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG;AACpC;AAEA,KAAA,KAAK,CAAC;OAAE;SACN,OAAOG,GAAG,CAACH,MAAM,IAAI,CAAC,IACfG,GAAG,CAACA,GAAG,CAACH,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,IAC3BG,GAAG,CAACA,GAAG,CAACH,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG;AACpC;AAEA,KAAA,KAAK,CAAC;OAAE;SACN,OAAOG,GAAG,CAACH,MAAM,IAAI,CAAC,IACfG,GAAG,CAACA,GAAG,CAACH,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,IAC3BG,GAAG,CAACA,GAAG,CAACH,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG;AACpC;KAEA;OAAS;AACP,SAAA,MAAM,IAAIkB,KAAK,CAAC,aAAa,CAAC;AAChC;AACF;AACF;;AAEA;AACA;AACA;;AAEA9B,CAAAA,MAAAA,CAAAA,MAAc,GAAG,CAAC;AAClBA,CAAAA,MAAAA,CAAAA,MAAc,GAAGC,MAAM;AACvBD,CAAAA,MAAAA,CAAAA,MAAc,GAAGc,MAAM;AACvBd,CAAAA,MAAAA,CAAAA,IAAY,GAAGmB,IAAI;AACnBnB,CAAAA,MAAAA,CAAAA,SAAiB,GAAG0vF,SAAS;AAC7B1vF,CAAAA,MAAAA,CAAAA,SAAiB,GAAG2vF,SAAS;AAC7B3vF,CAAAA,MAAAA,CAAAA,OAAe,GAAG4vF,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;CCzWzB,MAAM9vF,MAAM,GAAGC,aAA4B,EAAA;;AAE3C;AACA;AACA;;AAEA,CAAA,SAAS8vF,WAAWA,CAAC5qF,CAAC,EAAEC,CAAC,EAAE;GACzBpF,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACT,CAAC,CAAC,CAAC;GAC1BnF,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACR,CAAC,CAAC,CAAC;AAE1B,GAAA,IAAI4qF,YAAY,CAAC7qF,CAAC,CAACrE,MAAM,EAAE,CAAC,CAAC,EAC3B,OAAOkvF,YAAY,CAAC5qF,CAAC,CAACtE,MAAM,EAAE,CAAC,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;GACA,IAAIyS,CAAC,GAAGpO,CAAC,CAACrE,MAAM,GAAGsE,CAAC,CAACtE,MAAM;AAE3B,GAAA,KAAK,IAAIoF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,CAAC,CAACtE,MAAM,EAAEoF,CAAC,EAAE,EAC/BqN,CAAC,IAAIpO,CAAC,CAACe,CAAC,GAAGf,CAAC,CAACrE,MAAM,CAAC,GAAGsE,CAAC,CAACc,CAAC,CAAC;AAE7B,GAAA,OAAQqN,CAAC,GAAG,CAAC,KAAM,EAAE;AACvB;AAEA,CAAA,SAASy0E,SAASA,CAAC7iF,CAAC,EAAEC,CAAC,EAAE;GACvBpF,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACT,CAAC,CAAC,CAAC;GAC1BnF,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACR,CAAC,CAAC,CAAC;;AAE1B;AACA;AACA,GAAA,IAAI,CAAC4qF,YAAY,CAAC7qF,CAAC,CAACrE,MAAM,EAAEsE,CAAC,CAACtE,MAAM,CAAC,EACnC,OAAO,CAAC;GAEV,IAAIyS,CAAC,GAAG,CAAC;GAET,KAAK,IAAIrN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,CAAC,CAACrE,MAAM,EAAEoF,CAAC,EAAE,EAC/BqN,CAAC,IAAIpO,CAAC,CAACe,CAAC,CAAC,GAAGd,CAAC,CAACc,CAAC,CAAC;AAElB,GAAA,OAAQqN,CAAC,GAAG,CAAC,KAAM,EAAE;AACvB;AAEA,CAAA,SAAS08E,aAAaA,CAAC9qF,CAAC,EAAEC,CAAC,EAAE;GAC3B,OAAO4qF,YAAY,CAAC7qF,CAAC,GAAG,IAAI,EAAEC,CAAC,GAAG,IAAI,CAAC;AACzC;AAEA,CAAA,SAAS4qF,YAAYA,CAAC7qF,CAAC,EAAEC,CAAC,EAAE;GAC1B,OAAQ,CAACD,CAAC,GAAGC,CAAC,IAAI,CAAC,KAAM,EAAE;AAC7B;AAEA,CAAA,SAAS8qF,UAAUA,CAAC/qF,CAAC,EAAEC,CAAC,EAAEmO,CAAC,EAAE;AAC3B,GAAA,OAAQpO,CAAC,GAAIoO,CAAC,GAAG,CAAE,GAAKnO,CAAC,GAAG,EAAEmO,CAAC,GAAG,CAAC,CAAE;AACvC;AAEA,CAAA,SAAS48E,MAAMA,CAAChrF,CAAC,EAAEC,CAAC,EAAE;AACpB,GAAA,OAAQD,CAAC,GAAGC,CAAC,KAAM,EAAE;AACvB;AAEA,CAAA,SAASgrF,OAAOA,CAACjrF,CAAC,EAAEC,CAAC,EAAE;AACrB,GAAA,OAAQD,CAAC,GAAGC,CAAC,GAAG,CAAC,KAAM,EAAE;AAC3B;AAEA,CAAA,SAASirF,MAAMA,CAAClrF,CAAC,EAAEC,CAAC,EAAE;AACpB,GAAA,OAAQA,CAAC,GAAGD,CAAC,KAAM,EAAE;AACvB;AAEA,CAAA,SAASmrF,OAAOA,CAACnrF,CAAC,EAAEC,CAAC,EAAE;AACrB,GAAA,OAAQA,CAAC,GAAGD,CAAC,GAAG,CAAC,KAAM,EAAE;AAC3B;AAEA,CAAA,SAASorF,OAAOA,CAACprF,CAAC,EAAEC,CAAC,EAAE;AACrB,GAAA,OAAO8qF,UAAU,CAAC/qF,CAAC,EAAEC,CAAC,EAAE+qF,MAAM,CAAC/qF,CAAC,EAAED,CAAC,CAAC,CAAC;AACvC;AAEA,CAAA,SAASqrF,OAAOA,CAACrrF,CAAC,EAAEC,CAAC,EAAE;AACrB,GAAA,OAAO8qF,UAAU,CAAC/qF,CAAC,EAAEC,CAAC,EAAEirF,MAAM,CAACjrF,CAAC,EAAED,CAAC,CAAC,CAAC;AACvC;CAEA,SAASsrF,OAAOA,CAACtrF,CAAC,EAAE;GAClB,OAAO,CAACA,CAAC,GAAG,CAAC,KAAMA,CAAC,IAAI,EAAE,GAAI,CAAC,CAAC;AAClC;CAEA,SAASurF,QAAQA,CAACvrF,CAAC,EAAE;GACnB,OAAO,CAAEA,CAAC,IAAI,EAAE,GAAK,CAACA,CAAC,IAAI,EAAG,IAAI,CAAC;AACrC;AAEA,CAAA,SAASwrF,QAAQA,CAACxrF,CAAC,EAAEC,CAAC,EAAEmO,CAAC,EAAE;GACzBvT,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACT,CAAC,CAAC,CAAC;GAC1BnF,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACR,CAAC,CAAC,CAAC;GAC1BpF,MAAM,CAACgwF,YAAY,CAAC7qF,CAAC,CAACrE,MAAM,EAAEsE,CAAC,CAACtE,MAAM,CAAC,CAAC;AAExC,GAAA,MAAM8vF,KAAK,GAAIr9E,CAAC,GAAG,CAAC,GAAI,IAAI;GAC5B,MAAMs9E,KAAK,GAAG,EAAEt9E,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;AAE7B,GAAA,KAAK,IAAIrN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,CAAC,CAACrE,MAAM,EAAEoF,CAAC,EAAE,EAC/Bf,CAAC,CAACe,CAAC,CAAC,GAAIf,CAAC,CAACe,CAAC,CAAC,GAAG0qF,KAAK,GAAKxrF,CAAC,CAACc,CAAC,CAAC,GAAG2qF,KAAM;AAC1C;;AAEA;AACA;AACA;;AAEA3wF,CAAAA,IAAAA,CAAAA,WAAmB,GAAG6vF,WAAW;AACjC7vF,CAAAA,IAAAA,CAAAA,SAAiB,GAAG8nF,SAAS;AAC7B9nF,CAAAA,IAAAA,CAAAA,aAAqB,GAAG+vF,aAAa;AACrC/vF,CAAAA,IAAAA,CAAAA,YAAoB,GAAG8vF,YAAY;AACnC9vF,CAAAA,IAAAA,CAAAA,UAAkB,GAAGgwF,UAAU;AAC/BhwF,CAAAA,IAAAA,CAAAA,MAAc,GAAGiwF,MAAM;AACvBjwF,CAAAA,IAAAA,CAAAA,OAAe,GAAGkwF,OAAO;AACzBlwF,CAAAA,IAAAA,CAAAA,MAAc,GAAGmwF,MAAM;AACvBnwF,CAAAA,IAAAA,CAAAA,OAAe,GAAGowF,OAAO;AACzBpwF,CAAAA,IAAAA,CAAAA,OAAe,GAAGqwF,OAAO;AACzBrwF,CAAAA,IAAAA,CAAAA,OAAe,GAAGswF,OAAO;AACzBtwF,CAAAA,IAAAA,CAAAA,OAAe,GAAGuwF,OAAO;AACzBvwF,CAAAA,IAAAA,CAAAA,QAAgB,GAAGwwF,QAAQ;AAC3BxwF,CAAAA,IAAAA,CAAAA,QAAgB,GAAGywF,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CC9F3B,MAAM3wF,MAAM,GAAGC,aAA4B,EAAA;CAC3C,MAAMqN,EAAE,GAAGrN,SAAe,EAAA;CAC1B,MAAMyb,GAAG,GAAGzb,aAAmB,EAAA;CAC/B,MAAM;GAAC4uF;AAAW,EAAC,GAAG5uF,aAA4B,EAAA;CAClD,MAAM6wF,MAAM,GAAG7wF,aAAmB,EAAA;CAClC,MAAM+8C,IAAI,GAAG/8C,aAA0B,EAAA;CACvC,MAAM8wF,IAAI,GAAG9wF,WAAiB,EAAA;CAE9B,MAAM;GACJ+nF,SAAS;GACTiI,aAAa;GACbC,UAAU;GACVE;AACF,EAAC,GAAGW,IAAI;;AAER;AACA;AACA;;CAEA,MAAMC,YAAY,GAAG,IAAI;CACzB,MAAMC,WAAW,GAAG,KAAK;CACzB,MAAMC,QAAQ,GAAG,GAAG;CACpB,MAAMC,QAAQ,GAAG,KAAK;CACtB,MAAMC,OAAO,GAAG,CAAC;AACjB,CAAA,MAAMC,OAAO,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC;CAC7B,MAAMC,YAAY,GAAG,EAAE;CACvB,MAAMC,gBAAgB,GAAG,CAAC;CAC1B,MAAMC,gBAAgB,GAAG,EAAE;CAC3B,MAAMC,MAAM,GAAG7tF,MAAM,CAACqC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC;AACpC,CAAA,MAAMw/E,KAAK,GAAG7hF,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;;AAE7B;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,MAAMyrF,UAAU,GAAG;GACjB71C,SAAS,EAAE,IAAI;GACf81C,UAAU,EAAE/tF,MAAM,CAACnB,IAAI,CAAC,4CAA4C,EAAE,KAAK,CAAC;GAC5EmvF,UAAU,EAAEhuF,MAAM,CAACnB,IAAI,CAAC,4CAA4C,EAAE,KAAK,CAAC;GAC5EovF,UAAU,EAAEjuF,MAAM,CAACnB,IAAI,CAAC,4CAA4C,EAAE,KAAK,CAAC;GAC5EqvF,UAAU,EAAEluF,MAAM,CAACnB,IAAI,CAAC,4CAA4C,EAAE,KAAK,CAAC;GAC5EsvF,UAAU,EAAEnuF,MAAM,CAACnB,IAAI,CAAC,4CAA4C,EAAE,KAAK,CAAC;GAC5EuvF,UAAU,EAAEpuF,MAAM,CAACnB,IAAI,CAAC,4CAA4C,EAAE,KAAK,CAAC;GAC5EwvF,UAAU,EAAEruF,MAAM,CAACnB,IAAI,CAAC,4CAA4C,EAAE,KAAK,CAAC;GAC5EyvF,UAAU,EAAEtuF,MAAM,CAACnB,IAAI,CAAC,4CAA4C,EAAE,KAAK,CAAC;GAC5E0vF,MAAM,EAAEvuF,MAAM,CAACnB,IAAI,CAAC,kCAAkC,EAAE,KAAK,CAAC;GAC9D2vF,OAAO,EAAExuF,MAAM,CAACnB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;GAC1B4vF,OAAO,EAAEzuF,MAAM,CAACnB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;GAC1B6vF,SAAS,EAAE1uF,MAAM,CAACnB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;GAC5B8vF,SAAS,EAAE3uF,MAAM,CAACnB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;GAC5B+vF,SAAS,EAAE5uF,MAAM,CAACnB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;GAC5BgwF,SAAS,EAAE7uF,MAAM,CAACnB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;GAC5BiwF,GAAG,EAAE9uF,MAAM,CAACnB,IAAI,CAAC,sCAAsC,EAAE,KAAK,CAAC;GAC/DkwF,GAAG,EAAE/uF,MAAM,CAACnB,IAAI,CAAC,sCAAsC,EAAE,KAAK,CAAC;GAC/DmwF,GAAG,EAAEhvF,MAAM,CAACnB,IAAI,CAAC,sCAAsC,EAAE,KAAK,CAAC;GAC/DowF,OAAO,EAAEjvF,MAAM,CAACnB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;GAC1BkH,SAAS,EAAE/F,MAAM,CAACnB,IAAI,CAAC,gCAAgC,EAAE,KAAK,CAAC;GAC/DgkD,IAAI,EAAE7iD,MAAM,CAACnB,IAAI,CAAC,gCAAgC,EAAE,KAAK,CAAC;GAC1DqwF,MAAM,EAAElvF,MAAM,CAACnB,IAAI,CAAC,wCAAwC,EAAE,KAAK,CAAC;GACpEgE,MAAM,EAAE7C,MAAM,CAACnB,IAAI,CAAC,wCAAwC,EAAE,KAAK,CAAC;GACpE2rF,MAAM,EAAExqF,MAAM,CAACnB,IAAI,CAAC,wCAAwC,EAAE,KAAK,CAAC;GACpE6oE,MAAM,EAAE1nE,MAAM,CAACnB,IAAI,CAAC,wCAAwC,EAAE,KAAK,CAAC;GACpEswF,QAAQ,EAAEnvF,MAAM,CAACnB,IAAI,CAAC,wCAAwC,EAAE,KAAK,CAAC;GACtEuwF,QAAQ,EAAEpvF,MAAM,CAACnB,IAAI,CAAC,wCAAwC,EAAE,KAAK,CAAC;GACtEwwF,QAAQ,EAAErvF,MAAM,CAACnB,IAAI,CAAC,wCAAwC,EAAE,KAAK,CAAC;GACtEywF,QAAQ,EAAEtvF,MAAM,CAACnB,IAAI,CAAC,wCAAwC,EAAE,KAAK,CAAC;GACtE0wF,QAAQ,EAAEvvF,MAAM,CAACnB,IAAI,CAAC,wCAAwC,EAAE,KAAK,CAAC;GACtE6rF,QAAQ,EAAE1qF,MAAM,CAACnB,IAAI,CAAC,wCAAwC,EAAE,KAAK,CAAC;GACtE2wF,SAAS,EAAExvF,MAAM,CAACnB,IAAI,CAAC,kCAAkC,EAAE,KAAK;EACjE;;AAED;AACA;AACA;;AAEA,CAAA,MAAM4wF,YAAY,CAAC;AACjBhxF,GAAAA,WAAWA,GAAG;KACZ,IAAI,CAACmS,CAAC,GAAG,IAAIlH,EAAE,CAAC,CAAC,CAAC;KAClB,IAAI,CAAC1F,CAAC,GAAG,IAAI0F,EAAE,CAAC,CAAC,CAAC;AACpB;AAEAnE,GAAAA,IAAIA,GAAG;AACL,KAAA,OAAO,IAAI,CAACqL,CAAC,CAAClB,SAAS,EAAE;AAC3B;AAEApO,GAAAA,IAAIA,GAAG;AACL,KAAA,OAAO,IAAI,CAACsP,CAAC,CAAC8L,UAAU,EAAE;AAC5B;AAEA04D,GAAAA,MAAMA,GAAG;AACP,KAAA,OAAO,IAAI,CAACxkE,CAAC,CAAChU,IAAI,EAAE,GAAG,CAAC,IACjB,IAAI,CAACoH,CAAC,CAACpH,IAAI,EAAE,GAAG,CAAC,IACjB,IAAI,CAACgU,CAAC,CAAClB,SAAS,EAAE,IAAI69E,QAAQ,IAC9B,IAAI,CAACvpF,CAAC,CAAC0L,SAAS,EAAE,IAAIg+E,YAAY;AAC3C;AAEArwD,GAAAA,MAAMA,GAAG;AACP;KACA,IAAI,CAAC,IAAI,CAAC+3C,MAAM,EAAE,EAChB,OAAO,KAAK;;AAEd;KACA,IAAI,IAAI,CAACxkE,CAAC,CAAClB,SAAS,EAAE,GAAG49E,QAAQ,IAAI,CAAC,IAAI,CAAC18E,CAAC,CAAC9B,KAAK,EAAE,EAClD,OAAO,KAAK;;AAEd;KACA,IAAI,IAAI,CAAC9K,CAAC,CAACoQ,IAAI,CAACo5E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAACxpF,CAAC,CAAC8K,KAAK,EAAE,EAC7C,OAAO,KAAK;AAEd,KAAA,OAAO,IAAI;AACb;GAEAqsB,OAAOA,CAACl6B,GAAG,EAAE;AACX;AACA;KACA7E,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;KAE5B,MAAM;OAAC2P,CAAC;OAAE5M;AAAC,MAAC,GAAG,IAAI;KACnB,MAAMkJ,CAAC,GAAGxD,EAAE,CAACtM,MAAM,CAAC6D,GAAG,CAAC;AAExB,KAAA,IAAIiM,CAAC,CAACzF,GAAG,CAACmJ,CAAC,CAAC,IAAI,CAAC,EACf,MAAM,IAAIxS,KAAK,CAAC,2BAA2B,CAAC;;AAE9C;KACA,MAAM0F,CAAC,GAAGoJ,CAAC,CAAC2J,IAAI,CAAC7S,CAAC,EAAE4M,CAAC,CAAC;KAEtB,OAAO9M,CAAC,CAACvH,MAAM,CAAC,IAAI,EAAEqU,CAAC,CAAC8L,UAAU,EAAE,CAAC;AACvC;AAEAngB,GAAAA,MAAMA,GAAG;AACP,KAAA,MAAM+E,IAAI,GAAG83C,IAAI,CAAC9e,OAAO,CAAC,IAAI,CAAC1pB,CAAC,CAAC,GAAGwoC,IAAI,CAAC9e,OAAO,CAAC,IAAI,CAACt2B,CAAC,CAAC;AACxD,KAAA,MAAMR,GAAG,GAAGxD,MAAM,CAACqC,KAAK,CAAC+2C,IAAI,CAAC/e,OAAO,CAAC/4B,IAAI,CAAC,CAAC;KAE5C,IAAI6B,GAAG,GAAG,CAAC;KAEXA,GAAG,GAAGi2C,IAAI,CAAC3e,QAAQ,CAACj3B,GAAG,EAAEL,GAAG,EAAE7B,IAAI,CAAC;AACnC6B,KAAAA,GAAG,GAAGi2C,IAAI,CAAC1e,QAAQ,CAACl3B,GAAG,EAAEL,GAAG,EAAE,IAAI,CAACyN,CAAC,CAAC;AACrCzN,KAAAA,GAAG,GAAGi2C,IAAI,CAAC1e,QAAQ,CAACl3B,GAAG,EAAEL,GAAG,EAAE,IAAI,CAACa,CAAC,CAAC;AAErC5H,KAAAA,MAAM,CAAC+G,GAAG,KAAKK,GAAG,CAACtG,MAAM,CAAC;AAE1B,KAAA,OAAOsG,GAAG;AACZ;GAEApG,MAAMA,CAACmF,IAAI,EAAE;KACX,IAAIY,GAAG,GAAG,CAAC;KAEXA,GAAG,GAAGi2C,IAAI,CAACnf,OAAO,CAAC13B,IAAI,EAAEY,GAAG,CAAC;AAE7B,KAAA,CAAC,IAAI,CAACyN,CAAC,EAAEzN,GAAG,CAAC,GAAGi2C,IAAI,CAAClf,OAAO,CAAC33B,IAAI,EAAEY,GAAG,CAAC;AACvC,KAAA,CAAC,IAAI,CAACa,CAAC,EAAEb,GAAG,CAAC,GAAGi2C,IAAI,CAAClf,OAAO,CAAC33B,IAAI,EAAEY,GAAG,CAAC;KAEvC,IAAIA,GAAG,KAAKZ,IAAI,CAACrF,MAAM,EACrB,MAAM,IAAIkB,KAAK,CAAC,iBAAiB,CAAC;AAEpC,KAAA,OAAO,IAAI;AACb;GAEA,OAAOhB,MAAMA,CAACmF,IAAI,EAAE;KAClB,OAAO,IAAIktF,YAAY,EAAE,CAACryF,MAAM,CAACmF,IAAI,CAAC;AACxC;AACF;;AAEA;AACA;AACA;;CAEA,MAAMmtF,aAAa,SAASD,YAAY,CAAC;AACvChxF,GAAAA,WAAWA,GAAG;AACZ,KAAA,KAAK,EAAE;KACP,IAAI,CAACsF,CAAC,GAAG,IAAI2F,EAAE,CAAC,CAAC,CAAC;KAClB,IAAI,CAACwE,CAAC,GAAG,IAAIxE,EAAE,CAAC,CAAC,CAAC;KAClB,IAAI,CAACiD,CAAC,GAAG,IAAIjD,EAAE,CAAC,CAAC,CAAC;KAClB,IAAI,CAACimF,EAAE,GAAG,IAAIjmF,EAAE,CAAC,CAAC,CAAC;KACnB,IAAI,CAACkmF,EAAE,GAAG,IAAIlmF,EAAE,CAAC,CAAC,CAAC;KACnB,IAAI,CAACmmF,EAAE,GAAG,IAAInmF,EAAE,CAAC,CAAC,CAAC;AACrB;AAEA0rE,GAAAA,MAAMA,GAAG;AACP,KAAA,OAAO,IAAI,CAACxkE,CAAC,CAAChU,IAAI,EAAE,GAAG,CAAC,IACjB,IAAI,CAACoH,CAAC,CAACpH,IAAI,EAAE,GAAG,CAAC,IACjB,IAAI,CAACmH,CAAC,CAACnH,IAAI,EAAE,GAAG,CAAC,IACjB,IAAI,CAACsR,CAAC,CAACtR,IAAI,EAAE,GAAG,CAAC,IACjB,IAAI,CAAC+P,CAAC,CAAC/P,IAAI,EAAE,GAAG,CAAC,IACjB,IAAI,CAAC+yF,EAAE,CAAC/yF,IAAI,EAAE,GAAG,CAAC,IAClB,IAAI,CAACgzF,EAAE,CAAChzF,IAAI,EAAE,GAAG,CAAC,IAClB,IAAI,CAACizF,EAAE,CAACjzF,IAAI,EAAE,GAAG,CAAC,IAClB,IAAI,CAACgU,CAAC,CAAClB,SAAS,EAAE,IAAI69E,QAAQ,IAC9B,IAAI,CAACvpF,CAAC,CAAC0L,SAAS,EAAE,IAAIg+E,YAAY,IAClC,IAAI,CAAC3pF,CAAC,CAAC2L,SAAS,EAAE,IAAI69E,QAAQ,IAC9B,IAAI,CAACr/E,CAAC,CAACwB,SAAS,EAAE,IAAI69E,QAAQ,IAC9B,IAAI,CAAC5gF,CAAC,CAAC+C,SAAS,EAAE,IAAI69E,QAAQ,IAC9B,IAAI,CAACoC,EAAE,CAACjgF,SAAS,EAAE,IAAI69E,QAAQ,IAC/B,IAAI,CAACqC,EAAE,CAAClgF,SAAS,EAAE,IAAI69E,QAAQ,IAC/B,IAAI,CAACsC,EAAE,CAACngF,SAAS,EAAE,IAAI69E,QAAQ;AACxC;AAEAlwD,GAAAA,MAAMA,GAAG;AACP;KACA,IAAI,CAAC,IAAI,CAAC+3C,MAAM,EAAE,EAChB,OAAO,KAAK;;AAEd;KACA,IAAI,IAAI,CAACxkE,CAAC,CAAClB,SAAS,EAAE,GAAG49E,QAAQ,IAAI,CAAC,IAAI,CAAC18E,CAAC,CAAC9B,KAAK,EAAE,EAClD,OAAO,KAAK;;AAEd;KACA,IAAI,IAAI,CAAC9K,CAAC,CAACoQ,IAAI,CAACo5E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAACxpF,CAAC,CAAC8K,KAAK,EAAE,EAC7C,OAAO,KAAK;;AAEd;KACA,IAAI,IAAI,CAACZ,CAAC,CAACkG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAClG,CAAC,CAACY,KAAK,EAAE,EACvC,OAAO,KAAK;;AAEd;KACA,IAAI,IAAI,CAACnC,CAAC,CAACyH,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAACzH,CAAC,CAACmC,KAAK,EAAE,EACvC,OAAO,KAAK;;AAEd;KACA,MAAMghF,GAAG,GAAG,IAAI,CAAC5hF,CAAC,CAAC5C,IAAI,CAAC,CAAC,CAAC;KAC1B,MAAMykF,GAAG,GAAG,IAAI,CAACpjF,CAAC,CAACrB,IAAI,CAAC,CAAC,CAAC;KAC1B,MAAM0kF,GAAG,GAAGF,GAAG,CAACjkF,GAAG,CAACkkF,GAAG,CAAC;;AAExB;KACA,IAAI,IAAI,CAAChsF,CAAC,CAACqQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAACrQ,CAAC,CAAC0D,GAAG,CAACuoF,GAAG,CAAC,IAAI,CAAC,EAC5C,OAAO,KAAK;;AAEd;KACA,IAAI,IAAI,CAACL,EAAE,CAAC/yF,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC+yF,EAAE,CAACloF,GAAG,CAACqoF,GAAG,CAAC,IAAI,CAAC,EAC/C,OAAO,KAAK;;AAEd;KACA,IAAI,IAAI,CAACF,EAAE,CAAChzF,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,CAACgzF,EAAE,CAACnoF,GAAG,CAACsoF,GAAG,CAAC,IAAI,CAAC,EAC/C,OAAO,KAAK;;AAEd;KACA,IAAI,IAAI,CAACF,EAAE,CAACz7E,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAACy7E,EAAE,CAACpoF,GAAG,CAAC,IAAI,CAACyG,CAAC,CAAC,IAAI,CAAC,EACjD,OAAO,KAAK;;AAEd;AACA,KAAA,IAAI,IAAI,CAACA,CAAC,CAACzG,GAAG,CAAC,IAAI,CAACkF,CAAC,CAAC,KAAK,CAAC,EAC1B,OAAO,KAAK;;AAEd;KACA,IAAI,IAAI,CAACuB,CAAC,CAACrC,GAAG,CAAC,IAAI,CAACc,CAAC,CAAC,CAAClF,GAAG,CAAC,IAAI,CAACmJ,CAAC,CAAC,KAAK,CAAC,EACtC,OAAO,KAAK;;AAEd;AACA,KAAA,MAAMq/E,GAAG,GAAGD,GAAG,CAAC1xF,GAAG,CAACwxF,GAAG,CAACj6E,GAAG,CAACk6E,GAAG,CAAC,CAAC;;AAEjC;KACA,IAAI,IAAI,CAAC/rF,CAAC,CAAC6H,GAAG,CAAC,IAAI,CAAC9H,CAAC,CAAC,CAACyK,IAAI,CAACyhF,GAAG,CAAC,CAAC77E,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAC5C,OAAO,KAAK;;AAEd;KACA,IAAI,IAAI,CAACrQ,CAAC,CAAC1F,GAAG,CAACyxF,GAAG,CAAC,CAACroF,GAAG,CAAC,IAAI,CAACkoF,EAAE,CAAC,KAAK,CAAC,EACpC,OAAO,KAAK;;AAEd;KACA,IAAI,IAAI,CAAC5rF,CAAC,CAAC1F,GAAG,CAAC0xF,GAAG,CAAC,CAACtoF,GAAG,CAAC,IAAI,CAACmoF,EAAE,CAAC,KAAK,CAAC,EACpC,OAAO,KAAK;;AAEd;KACA,IAAI,IAAI,CAACjjF,CAAC,CAACd,GAAG,CAAC,IAAI,CAACgkF,EAAE,CAAC,CAACrhF,IAAI,CAAC,IAAI,CAACN,CAAC,CAAC,CAACkG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAChD,OAAO,KAAK;AAEd,KAAA,OAAO,IAAI;AACb;GAEA2sE,OAAOA,CAAC9/E,GAAG,EAAE;AACX;AACA;KACA7E,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;KAE5B,MAAM;OAAC2P,CAAC;OAAE5M,CAAC;OAAEkK,CAAC;OAAEvB,CAAC;OAAEgjF,EAAE;OAAEC,EAAE;OAAEC;AAAE,MAAC,GAAG,IAAI;;AAErC;KACA,MAAM/rF,CAAC,GAAG4F,EAAE,CAACtM,MAAM,CAAC6D,GAAG,CAAC;;AAExB;AACA,KAAA,IAAI6C,CAAC,CAAC2D,GAAG,CAACmJ,CAAC,CAAC,IAAI,CAAC,EACf,MAAM,IAAIxS,KAAK,CAAC,2BAA2B,CAAC;;AAE9C;KACA,IAAIyF,CAAC,EAAEynC,EAAE;KACT,SAAS;AACP;OACA,MAAMzlC,CAAC,GAAG6D,EAAE,CAAC+O,MAAM,CAACX,GAAG,EAAE,CAAC,EAAElH,CAAC,CAAC;;AAE9B;OACA,IAAI;AACF06B,SAAAA,EAAE,GAAGzlC,CAAC,CAACwQ,MAAM,CAACzF,CAAC,CAAC;QACjB,CAAC,OAAO5M,CAAC,EAAE;SACV;AACF;;AAEA;OACAH,CAAC,GAAGgC,CAAC,CAACgR,IAAI,CAAC7S,CAAC,EAAE4M,CAAC,CAAC;OAEhB;AACF;;AAEA;KACA9M,CAAC,CAAC8H,IAAI,CAAC/H,CAAC,CAAC,CAAC2K,IAAI,CAACoC,CAAC,CAAC;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;KACA,MAAM6G,EAAE,GAAG3T,CAAC,CAAC+S,IAAI,CAAC84E,EAAE,EAAEzhF,CAAC,EAAE,IAAI,CAAC;KAC9B,MAAMwJ,EAAE,GAAG5T,CAAC,CAAC+S,IAAI,CAAC+4E,EAAE,EAAEjjF,CAAC,EAAE,IAAI,CAAC;AAC9B,KAAA,MAAMujF,EAAE,GAAGz4E,EAAE,CAACpM,GAAG,CAACqM,EAAE,CAAC,CAAC7L,GAAG,CAACgkF,EAAE,CAAC,CAACrhF,IAAI,CAACN,CAAC,CAAC;AACrC,KAAA,MAAMhB,CAAC,GAAGgjF,EAAE,CAACrkF,GAAG,CAACc,CAAC,CAAC,CAACrC,IAAI,CAACoN,EAAE,CAAC,CAAClJ,IAAI,CAACoC,CAAC,CAAC;KAEpC,IAAI1D,CAAC,CAAC2J,IAAI,CAAC7S,CAAC,EAAE4M,CAAC,CAAC,CAACnJ,GAAG,CAAC3D,CAAC,CAAC,KAAK,CAAC,EAC3B,MAAM,IAAI1F,KAAK,CAAC,0BAA0B,CAAC;;AAE7C;KACA8O,CAAC,CAACtB,IAAI,CAAC0/B,EAAE,CAAC,CAAC98B,IAAI,CAACoC,CAAC,CAAC;KAElB,OAAO1D,CAAC,CAAC3Q,MAAM,CAAC,IAAI,EAAEqU,CAAC,CAAC8L,UAAU,EAAE,CAAC;AACvC;AAEA0f,GAAAA,QAAQA,CAAC72B,IAAI,EAAEguB,QAAQ,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAn3B,KAAAA,MAAM,CAAEmJ,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;KAC7BnJ,MAAM,CAACM,MAAM,CAACC,aAAa,CAAC42B,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,CAAC;AACvDn3B,KAAAA,MAAM,CAACmJ,IAAI,IAAI,EAAE,CAAC;KAClBnJ,MAAM,CAACm3B,QAAQ,IAAI,CAAC,IAAI,CAACA,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC;AAE7C,KAAA,MAAMvvB,CAAC,GAAG,IAAI0F,EAAE,CAAC6pB,QAAQ,CAAC;KAE1B,SAAS;AACP,OAAA,MAAMrlB,CAAC,GAAG+8E,WAAW,CAAC,CAAC1lF,IAAI,KAAK,CAAC,KAAKA,IAAI,GAAG,CAAC,CAAC,CAAC;OAChD,MAAMoH,CAAC,GAAGs+E,WAAW,CAAC1lF,IAAI,KAAK,CAAC,CAAC;OAEjC,IAAI2I,CAAC,CAACzG,GAAG,CAACkF,CAAC,CAAC,KAAK,CAAC,EAChB;AAEF,OAAA,IAAIuB,CAAC,CAACzG,GAAG,CAACkF,CAAC,CAAC,GAAG,CAAC,EACduB,CAAC,CAACoO,IAAI,CAAC3P,CAAC,CAAC;AAEX,OAAA,IAAIuB,CAAC,CAAC7C,GAAG,CAACsB,CAAC,CAAC,CAAC+C,SAAS,EAAE,IAAI,CAACnK,IAAI,KAAK,CAAC,IAAI,EAAE,EAC3C;OAEF,MAAMqL,CAAC,GAAG1C,CAAC,CAACrC,GAAG,CAACc,CAAC,CAAC;AAElB,OAAA,IAAIiE,CAAC,CAAClB,SAAS,EAAE,KAAKnK,IAAI,EACxB;;AAEF;OACA,MAAMuqF,GAAG,GAAG5hF,CAAC,CAAC5C,IAAI,CAAC,CAAC,CAAC;OACrB,MAAMykF,GAAG,GAAGpjF,CAAC,CAACrB,IAAI,CAAC,CAAC,CAAC;OACrB,MAAM0kF,GAAG,GAAGF,GAAG,CAACjkF,GAAG,CAACkkF,GAAG,CAAC;AAExB,OAAA,IAAI/rF,CAAC,CAAC6R,GAAG,CAACm6E,GAAG,CAAC,CAAC57E,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAC1B;;AAEF;AACA,OAAA,MAAM67E,GAAG,GAAGD,GAAG,CAAC1xF,GAAG,CAACwxF,GAAG,CAACj6E,GAAG,CAACk6E,GAAG,CAAC,CAAC;OACjC,MAAMhsF,CAAC,GAAGC,CAAC,CAACqS,MAAM,CAAC45E,GAAG,CAAC;OAEvB,IAAIlsF,CAAC,CAAC2L,SAAS,EAAE,IAAMnK,IAAI,GAAG,CAAC,KAAM,CAAE,EACrC;OAEF,MAAMoqF,EAAE,GAAG5rF,CAAC,CAAC1F,GAAG,CAACyxF,GAAG,CAAC;OACrB,MAAMF,EAAE,GAAG7rF,CAAC,CAAC1F,GAAG,CAAC0xF,GAAG,CAAC;OACrB,MAAMF,EAAE,GAAGljF,CAAC,CAAC0J,MAAM,CAACnI,CAAC,CAAC;OAEtB,IAAI,CAAC0C,CAAC,GAAGA,CAAC;OACV,IAAI,CAAC5M,CAAC,GAAGA,CAAC;OACV,IAAI,CAACD,CAAC,GAAGA,CAAC;OACV,IAAI,CAACmK,CAAC,GAAGA,CAAC;OACV,IAAI,CAACvB,CAAC,GAAGA,CAAC;OACV,IAAI,CAACgjF,EAAE,GAAGA,EAAE;OACZ,IAAI,CAACC,EAAE,GAAGA,EAAE;OACZ,IAAI,CAACC,EAAE,GAAGA,EAAE;AAEZ,OAAA,OAAO,IAAI;AACb;AACF;AAEA,GAAA,MAAMM,eAAeA,CAAC5qF,IAAI,EAAEguB,QAAQ,EAAE;AACpCn3B,KAAAA,MAAM,CAAEmJ,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;KAC7BnJ,MAAM,CAACM,MAAM,CAACC,aAAa,CAAC42B,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,CAAC;AACvDn3B,KAAAA,MAAM,CAACmJ,IAAI,IAAI,EAAE,CAAC;KAClBnJ,MAAM,CAACm3B,QAAQ,IAAI,CAAC,IAAI,CAACA,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC;KAE7C,MAAMzyB,MAAM,GAAG43B,cAAM,CAAC53B,MAAM,IAAI43B,cAAM,CAACC,QAAQ;KAE/C,IAAI,CAAC73B,MAAM,EACT,MAAM,IAAI1C,KAAK,CAAC,2BAA2B,CAAC;KAE9C,MAAM;OAAC2oE;AAAM,MAAC,GAAGjmE,MAAM;AAEvB,KAAA,IAAI,CAACimE,MAAM,IAAI,CAACA,MAAM,CAACqpB,WAAW,IAAI,CAACrpB,MAAM,CAACspB,SAAS,EACrD,MAAM,IAAIjyF,KAAK,CAAC,2BAA2B,CAAC;AAE9C,KAAA,MAAM4F,CAAC,GAAG,IAAI0F,EAAE,CAAC6pB,QAAQ,CAAC;KAE1B,MAAMg0C,IAAI,GAAG;OACX/nD,IAAI,EAAE,mBAAmB;OACzB8wE,aAAa,EAAE/qF,IAAI;OACnBgrF,cAAc,EAAEvsF,CAAC,CAACyZ,WAAW,CAAC9X,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAClDhE,OAAAA,IAAI,EAAE;AAAE6d,SAAAA,IAAI,EAAE;AAAU;MACzB;AAED,KAAA,MAAMgxE,EAAE,GAAG,MAAMzpB,MAAM,CAACqpB,WAAW,CAAC7oB,IAAI,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC;AACzD,KAAA,MAAMkpB,GAAG,GAAG,MAAM1pB,MAAM,CAACspB,SAAS,CAAC,KAAK,EAAEG,EAAE,CAAChiB,UAAU,CAAC;AACxD,KAAA,MAAMtgE,CAAC,GAAGxE,EAAE,CAACtM,MAAM,CAAC8vF,MAAM,CAACjB,SAAS,CAACwE,GAAG,CAACviF,CAAC,CAAC,CAAC;AAC5C,KAAA,MAAMvB,CAAC,GAAGjD,EAAE,CAACtM,MAAM,CAAC8vF,MAAM,CAACjB,SAAS,CAACwE,GAAG,CAAC9jF,CAAC,CAAC,CAAC;KAE5C,OAAO,IAAI,CAAC+jF,OAAO,CAACxiF,CAAC,EAAEvB,CAAC,EAAE3I,CAAC,CAAC;AAC9B;AAEA,GAAA,MAAM2sF,aAAaA,CAACprF,IAAI,EAAEguB,QAAQ,EAAE;KAClC,IAAI;OACF,OAAO,MAAM,IAAI,CAAC48D,eAAe,CAAC5qF,IAAI,EAAEguB,QAAQ,CAAC;MAClD,CAAC,OAAOvvB,CAAC,EAAE;OACV,OAAO,IAAI,CAACo4B,QAAQ,CAAC72B,IAAI,EAAEguB,QAAQ,CAAC;AACtC;AACF;AAEAm9D,GAAAA,OAAOA,CAACxiF,CAAC,EAAEvB,CAAC,EAAE3I,CAAC,EAAE;AACf5H,KAAAA,MAAM,CAAC8R,CAAC,YAAYxE,EAAE,CAAC;AACvBtN,KAAAA,MAAM,CAACuQ,CAAC,YAAYjD,EAAE,CAAC;AACvBtN,KAAAA,MAAM,CAAC4H,CAAC,YAAY0F,EAAE,CAAC;KAEvB,IAAIwE,CAAC,CAACzG,GAAG,CAACkF,CAAC,CAAC,GAAG,CAAC,EACd,CAACuB,CAAC,EAAEvB,CAAC,CAAC,GAAG,CAACA,CAAC,EAAEuB,CAAC,CAAC;AAEjB,KAAA,IAAIA,CAAC,CAACzG,GAAG,CAACkF,CAAC,CAAC,KAAK,CAAC,EAChB,MAAM,IAAIvO,KAAK,CAAC,0BAA0B,CAAC;KAE7C,IAAI8P,CAAC,CAACkG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIlG,CAAC,CAACwB,SAAS,EAAE,GAAG69E,QAAQ,EAC3C,MAAM,IAAInvF,KAAK,CAAC,0BAA0B,CAAC;KAE7C,IAAIuO,CAAC,CAACyH,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIzH,CAAC,CAAC+C,SAAS,EAAE,GAAG69E,QAAQ,EAC3C,MAAM,IAAInvF,KAAK,CAAC,0BAA0B,CAAC;KAE7C,IAAI4F,CAAC,CAACoQ,IAAI,CAACo5E,OAAO,CAAC,GAAG,CAAC,IAAIxpF,CAAC,CAAC0L,SAAS,EAAE,GAAGg+E,YAAY,EACrD,MAAM,IAAItvF,KAAK,CAAC,0BAA0B,CAAC;KAE7C,IAAI,CAAC8P,CAAC,CAACY,KAAK,EAAE,IAAI,CAACnC,CAAC,CAACmC,KAAK,EAAE,IAAI,CAAC9K,CAAC,CAAC8K,KAAK,EAAE,EACxC,MAAM,IAAI1Q,KAAK,CAAC,0BAA0B,CAAC;KAE7C,MAAMwS,CAAC,GAAG1C,CAAC,CAACrC,GAAG,CAACc,CAAC,CAAC;AAElBvQ,KAAAA,MAAM,CAACwU,CAAC,CAAC9B,KAAK,EAAE,CAAC;KAEjB,IAAI8B,CAAC,CAAClB,SAAS,EAAE,GAAG49E,QAAQ,IAAI18E,CAAC,CAAClB,SAAS,EAAE,GAAG69E,QAAQ,EACtD,MAAM,IAAInvF,KAAK,CAAC,0BAA0B,CAAC;KAE7C,MAAM0xF,GAAG,GAAG5hF,CAAC,CAAC5C,IAAI,CAAC,CAAC,CAAC;KACrB,MAAMykF,GAAG,GAAGpjF,CAAC,CAACrB,IAAI,CAAC,CAAC,CAAC;KACrB,MAAM2kF,GAAG,GAAGH,GAAG,CAAC95E,GAAG,CAAC+5E,GAAG,CAAC;KACxB,MAAMhsF,CAAC,GAAGC,CAAC,CAACqS,MAAM,CAAC45E,GAAG,CAAC;KACvB,MAAMN,EAAE,GAAG5rF,CAAC,CAAC1F,GAAG,CAACyxF,GAAG,CAAC;KACrB,MAAMF,EAAE,GAAG7rF,CAAC,CAAC1F,GAAG,CAAC0xF,GAAG,CAAC;KACrB,MAAMF,EAAE,GAAGljF,CAAC,CAAC0J,MAAM,CAACnI,CAAC,CAAC;KAEtB,IAAI,CAAC0C,CAAC,GAAGA,CAAC;KACV,IAAI,CAAC5M,CAAC,GAAGA,CAAC;KACV,IAAI,CAACD,CAAC,GAAGA,CAAC;KACV,IAAI,CAACmK,CAAC,GAAGA,CAAC;KACV,IAAI,CAACvB,CAAC,GAAGA,CAAC;KACV,IAAI,CAACgjF,EAAE,GAAGA,EAAE;KACZ,IAAI,CAACC,EAAE,GAAGA,EAAE;KACZ,IAAI,CAACC,EAAE,GAAGA,EAAE;AAEZ,KAAA,OAAO,IAAI;AACb;AAEAe,GAAAA,OAAOA,CAAC1iF,CAAC,EAAEvB,CAAC,EAAE5I,CAAC,EAAE;AACf3H,KAAAA,MAAM,CAAC8R,CAAC,YAAYxE,EAAE,CAAC;AACvBtN,KAAAA,MAAM,CAACuQ,CAAC,YAAYjD,EAAE,CAAC;AACvBtN,KAAAA,MAAM,CAAC2H,CAAC,YAAY2F,EAAE,CAAC;KAEvB,IAAIwE,CAAC,CAACkG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIlG,CAAC,CAACwB,SAAS,EAAE,GAAG69E,QAAQ,EAC3C,MAAM,IAAInvF,KAAK,CAAC,0BAA0B,CAAC;KAE7C,IAAIuO,CAAC,CAACyH,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIzH,CAAC,CAAC+C,SAAS,EAAE,GAAG69E,QAAQ,EAC3C,MAAM,IAAInvF,KAAK,CAAC,0BAA0B,CAAC;AAE7C,KAAA,IAAI,CAAC8P,CAAC,CAACY,KAAK,EAAE,IAAI,CAACnC,CAAC,CAACmC,KAAK,EAAE,EAC1B,MAAM,IAAI1Q,KAAK,CAAC,0BAA0B,CAAC;KAE7C,MAAM0xF,GAAG,GAAG5hF,CAAC,CAAC5C,IAAI,CAAC,CAAC,CAAC;KACrB,MAAMykF,GAAG,GAAGpjF,CAAC,CAACrB,IAAI,CAAC,CAAC,CAAC;KACrB,MAAM0kF,GAAG,GAAGF,GAAG,CAACjkF,GAAG,CAACkkF,GAAG,CAAC;KAExB,IAAIhsF,CAAC,CAACqQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIrQ,CAAC,CAAC0D,GAAG,CAACuoF,GAAG,CAAC,IAAI,CAAC,EAClC,MAAM,IAAI5xF,KAAK,CAAC,0BAA0B,CAAC;AAE7C,KAAA,MAAM6xF,GAAG,GAAGD,GAAG,CAAC1xF,GAAG,CAACwxF,GAAG,CAACj6E,GAAG,CAACk6E,GAAG,CAAC,CAAC;KACjC,MAAM/rF,CAAC,GAAGD,CAAC,CAACsS,MAAM,CAAC45E,GAAG,CAAC;KAEvB,OAAO,IAAI,CAACS,OAAO,CAACxiF,CAAC,EAAEvB,CAAC,EAAE3I,CAAC,CAAC;AAC9B;AAEA6sF,GAAAA,OAAOA,CAACjgF,CAAC,EAAE5M,CAAC,EAAED,CAAC,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA3H,KAAAA,MAAM,CAACwU,CAAC,YAAYlH,EAAE,CAAC;AACvBtN,KAAAA,MAAM,CAAC4H,CAAC,YAAY0F,EAAE,CAAC;AACvBtN,KAAAA,MAAM,CAAC2H,CAAC,YAAY2F,EAAE,CAAC;AAEvB,KAAA,IAAIkH,CAAC,CAAChU,IAAI,EAAE,GAAG,CAAC,EACd,MAAM,IAAIwB,KAAK,CAAC,0BAA0B,CAAC;KAE7C,IAAIwS,CAAC,CAAClB,SAAS,EAAE,GAAG49E,QAAQ,IAAI18E,CAAC,CAAClB,SAAS,EAAE,GAAG69E,QAAQ,EACtD,MAAM,IAAInvF,KAAK,CAAC,0BAA0B,CAAC;KAE7C,IAAI4F,CAAC,CAACoQ,IAAI,CAACo5E,OAAO,CAAC,GAAG,CAAC,IAAIxpF,CAAC,CAAC0L,SAAS,EAAE,GAAGg+E,YAAY,EACrD,MAAM,IAAItvF,KAAK,CAAC,0BAA0B,CAAC;KAE7C,IAAI2F,CAAC,CAACqQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIrQ,CAAC,CAAC2L,SAAS,EAAE,GAAG69E,QAAQ,EAC3C,MAAM,IAAInvF,KAAK,CAAC,0BAA0B,CAAC;AAE7C,KAAA,IAAI,CAACwS,CAAC,CAAC9B,KAAK,EAAE,IAAI,CAAC9K,CAAC,CAAC8K,KAAK,EAAE,EAC1B,MAAM,IAAI1Q,KAAK,CAAC,0BAA0B,CAAC;AAE7C,KAAA,MAAM6F,CAAC,GAAGD,CAAC,CAAC6H,GAAG,CAAC9H,CAAC,CAAC,CAACqH,KAAK,CAAC,CAAC,CAAC;KAC3B,MAAMgN,GAAG,GAAGxH,CAAC,CAACtF,IAAI,CAAC,CAAC,CAAC;AACrB,KAAA,MAAMzF,CAAC,GAAG5B,CAAC,CAACqU,QAAQ,EAAE;KACtB,MAAMpU,CAAC,GAAGD,CAAC,CAACsP,KAAK,CAAC1N,CAAC,CAAC;KAEpB,KAAK,IAAIvD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;OAC3B,MAAMsB,CAAC,GAAG8F,EAAE,CAAC+O,MAAM,CAACX,GAAG,EAAE,CAAC,EAAEM,GAAG,CAAC;OAEhC,IAAIvU,CAAC,GAAGD,CAAC,CAACiT,IAAI,CAAC3S,CAAC,EAAE0M,CAAC,CAAC;AAEpB,OAAA,IAAI/M,CAAC,CAACuQ,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIvQ,CAAC,CAAC4D,GAAG,CAAC2Q,GAAG,CAAC,KAAK,CAAC,EACrC;OAEF,KAAK,IAAI3R,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,CAAC,EAAEY,CAAC,EAAE,EAAE;SAC1B,MAAM3C,CAAC,GAAGD,CAAC,CAACsL,GAAG,EAAE,CAACX,IAAI,CAACoC,CAAC,CAAC;SAEzB,IAAI9M,CAAC,CAACsQ,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AACnB,WAAA,MAAMlG,CAAC,GAAG0C,CAAC,CAACiF,GAAG,CAAChS,CAAC,CAACyH,IAAI,CAAC,CAAC,CAAC,CAAC;AAC1B,WAAA,MAAMqB,CAAC,GAAGiE,CAAC,CAACiF,GAAG,CAAChS,CAAC,CAACmH,IAAI,CAAC,CAAC,CAAC,CAAC;WAE1B,OAAO,IAAI,CAAC0lF,OAAO,CAACxiF,CAAC,EAAEvB,CAAC,EAAE3I,CAAC,CAAC;AAC9B;SAEA,IAAIF,CAAC,CAAC2D,GAAG,CAAC2Q,GAAG,CAAC,KAAK,CAAC,EAClB;SAEFvU,CAAC,GAAGC,CAAC;AACP;AACF;AAEA,KAAA,MAAM,IAAI1F,KAAK,CAAC,0BAA0B,CAAC;AAC7C;AAEAkvE,GAAAA,QAAQA,GAAG;AACT,KAAA,MAAMvzB,GAAG,GAAG,IAAI01C,YAAY,EAAE;AAE9B11C,KAAAA,GAAG,CAACnpC,CAAC,GAAG,IAAI,CAACA,CAAC;AACdmpC,KAAAA,GAAG,CAAC/1C,CAAC,GAAG,IAAI,CAACA,CAAC;AAEd,KAAA,OAAO+1C,GAAG;AACZ;AAEAx9C,GAAAA,MAAMA,GAAG;KACP,IAAI+E,IAAI,GAAG,CAAC;AAEZA,KAAAA,IAAI,IAAI83C,IAAI,CAAC7e,WAAW,CAAC,CAAC,CAAC;KAC3Bj5B,IAAI,IAAI83C,IAAI,CAAC9e,OAAO,CAAC,IAAI,CAAC1pB,CAAC,CAAC;KAC5BtP,IAAI,IAAI83C,IAAI,CAAC9e,OAAO,CAAC,IAAI,CAACt2B,CAAC,CAAC;KAC5B1C,IAAI,IAAI83C,IAAI,CAAC9e,OAAO,CAAC,IAAI,CAACv2B,CAAC,CAAC;KAC5BzC,IAAI,IAAI83C,IAAI,CAAC9e,OAAO,CAAC,IAAI,CAACpsB,CAAC,CAAC;KAC5B5M,IAAI,IAAI83C,IAAI,CAAC9e,OAAO,CAAC,IAAI,CAAC3tB,CAAC,CAAC;KAC5BrL,IAAI,IAAI83C,IAAI,CAAC9e,OAAO,CAAC,IAAI,CAACq1D,EAAE,CAAC;KAC7BruF,IAAI,IAAI83C,IAAI,CAAC9e,OAAO,CAAC,IAAI,CAACs1D,EAAE,CAAC;KAC7BtuF,IAAI,IAAI83C,IAAI,CAAC9e,OAAO,CAAC,IAAI,CAACu1D,EAAE,CAAC;AAE7B,KAAA,MAAMrsF,GAAG,GAAGxD,MAAM,CAACqC,KAAK,CAAC+2C,IAAI,CAAC/e,OAAO,CAAC/4B,IAAI,CAAC,CAAC;KAE5C,IAAI6B,GAAG,GAAG,CAAC;KAEXA,GAAG,GAAGi2C,IAAI,CAAC3e,QAAQ,CAACj3B,GAAG,EAAEL,GAAG,EAAE7B,IAAI,CAAC;KACnC6B,GAAG,GAAGi2C,IAAI,CAACze,YAAY,CAACn3B,GAAG,EAAEL,GAAG,EAAE,CAAC,CAAC;AACpCA,KAAAA,GAAG,GAAGi2C,IAAI,CAAC1e,QAAQ,CAACl3B,GAAG,EAAEL,GAAG,EAAE,IAAI,CAACyN,CAAC,CAAC;AACrCzN,KAAAA,GAAG,GAAGi2C,IAAI,CAAC1e,QAAQ,CAACl3B,GAAG,EAAEL,GAAG,EAAE,IAAI,CAACa,CAAC,CAAC;AACrCb,KAAAA,GAAG,GAAGi2C,IAAI,CAAC1e,QAAQ,CAACl3B,GAAG,EAAEL,GAAG,EAAE,IAAI,CAACY,CAAC,CAAC;AACrCZ,KAAAA,GAAG,GAAGi2C,IAAI,CAAC1e,QAAQ,CAACl3B,GAAG,EAAEL,GAAG,EAAE,IAAI,CAAC+K,CAAC,CAAC;AACrC/K,KAAAA,GAAG,GAAGi2C,IAAI,CAAC1e,QAAQ,CAACl3B,GAAG,EAAEL,GAAG,EAAE,IAAI,CAACwJ,CAAC,CAAC;AACrCxJ,KAAAA,GAAG,GAAGi2C,IAAI,CAAC1e,QAAQ,CAACl3B,GAAG,EAAEL,GAAG,EAAE,IAAI,CAACwsF,EAAE,CAAC;AACtCxsF,KAAAA,GAAG,GAAGi2C,IAAI,CAAC1e,QAAQ,CAACl3B,GAAG,EAAEL,GAAG,EAAE,IAAI,CAACysF,EAAE,CAAC;AACtCzsF,KAAAA,GAAG,GAAGi2C,IAAI,CAAC1e,QAAQ,CAACl3B,GAAG,EAAEL,GAAG,EAAE,IAAI,CAAC0sF,EAAE,CAAC;AAEtCzzF,KAAAA,MAAM,CAAC+G,GAAG,KAAKK,GAAG,CAACtG,MAAM,CAAC;AAE1B,KAAA,OAAOsG,GAAG;AACZ;GAEApG,MAAMA,CAACmF,IAAI,EAAE;KACX,IAAIY,GAAG,GAAG,CAAC;KAEXA,GAAG,GAAGi2C,IAAI,CAACnf,OAAO,CAAC13B,IAAI,EAAEY,GAAG,CAAC;KAC7BA,GAAG,GAAGi2C,IAAI,CAACjf,WAAW,CAAC53B,IAAI,EAAEY,GAAG,EAAE,CAAC,CAAC;AAEpC,KAAA,CAAC,IAAI,CAACyN,CAAC,EAAEzN,GAAG,CAAC,GAAGi2C,IAAI,CAAClf,OAAO,CAAC33B,IAAI,EAAEY,GAAG,CAAC;AACvC,KAAA,CAAC,IAAI,CAACa,CAAC,EAAEb,GAAG,CAAC,GAAGi2C,IAAI,CAAClf,OAAO,CAAC33B,IAAI,EAAEY,GAAG,CAAC;AACvC,KAAA,CAAC,IAAI,CAACY,CAAC,EAAEZ,GAAG,CAAC,GAAGi2C,IAAI,CAAClf,OAAO,CAAC33B,IAAI,EAAEY,GAAG,CAAC;AACvC,KAAA,CAAC,IAAI,CAAC+K,CAAC,EAAE/K,GAAG,CAAC,GAAGi2C,IAAI,CAAClf,OAAO,CAAC33B,IAAI,EAAEY,GAAG,CAAC;AACvC,KAAA,CAAC,IAAI,CAACwJ,CAAC,EAAExJ,GAAG,CAAC,GAAGi2C,IAAI,CAAClf,OAAO,CAAC33B,IAAI,EAAEY,GAAG,CAAC;AACvC,KAAA,CAAC,IAAI,CAACwsF,EAAE,EAAExsF,GAAG,CAAC,GAAGi2C,IAAI,CAAClf,OAAO,CAAC33B,IAAI,EAAEY,GAAG,CAAC;AACxC,KAAA,CAAC,IAAI,CAACysF,EAAE,EAAEzsF,GAAG,CAAC,GAAGi2C,IAAI,CAAClf,OAAO,CAAC33B,IAAI,EAAEY,GAAG,CAAC;AACxC,KAAA,CAAC,IAAI,CAAC0sF,EAAE,EAAE1sF,GAAG,CAAC,GAAGi2C,IAAI,CAAClf,OAAO,CAAC33B,IAAI,EAAEY,GAAG,CAAC;KAExC,IAAIA,GAAG,KAAKZ,IAAI,CAACrF,MAAM,EACrB,MAAM,IAAIkB,KAAK,CAAC,iBAAiB,CAAC;AAEpC,KAAA,OAAO,IAAI;AACb;AAEA,GAAA,OAAOg+B,QAAQA,CAAC72B,IAAI,EAAEguB,QAAQ,EAAE;KAC9B,OAAO,IAAIm8D,aAAa,EAAE,CAACtzD,QAAQ,CAAC72B,IAAI,EAAEguB,QAAQ,CAAC;AACrD;AAEA,GAAA,aAAao9D,aAAaA,CAACprF,IAAI,EAAEguB,QAAQ,EAAE;KACzC,OAAO,IAAIm8D,aAAa,EAAE,CAACiB,aAAa,CAACprF,IAAI,EAAEguB,QAAQ,CAAC;AAC1D;GAEA,OAAOm9D,OAAOA,CAACxiF,CAAC,EAAEvB,CAAC,EAAE3I,CAAC,EAAE;AACtB,KAAA,OAAO,IAAI0rF,aAAa,EAAE,CAACgB,OAAO,CAACxiF,CAAC,EAAEvB,CAAC,EAAE3I,CAAC,CAAC;AAC7C;GAEA,OAAO4sF,OAAOA,CAAC1iF,CAAC,EAAEvB,CAAC,EAAE5I,CAAC,EAAE;AACtB,KAAA,OAAO,IAAI2rF,aAAa,EAAE,CAACkB,OAAO,CAAC1iF,CAAC,EAAEvB,CAAC,EAAE5I,CAAC,CAAC;AAC7C;GAEA,OAAO8sF,OAAOA,CAACjgF,CAAC,EAAE5M,CAAC,EAAED,CAAC,EAAE;AACtB,KAAA,OAAO,IAAI2rF,aAAa,EAAE,CAACmB,OAAO,CAACjgF,CAAC,EAAE5M,CAAC,EAAED,CAAC,CAAC;AAC7C;GAEA,OAAO3G,MAAMA,CAACmF,IAAI,EAAE;KAClB,OAAO,IAAImtF,aAAa,EAAE,CAACtyF,MAAM,CAACmF,IAAI,CAAC;AACzC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAASq3C,kBAAkBA,CAACr0C,IAAI,EAAEguB,QAAQ,EAAE;AAC1C,GAAA,IAAIhuB,IAAI,IAAI,IAAI,EACdA,IAAI,GAAG6nF,YAAY;AAErB,GAAA,IAAI75D,QAAQ,IAAI,IAAI,EAClBA,QAAQ,GAAG85D,WAAW;AAExBjxF,GAAAA,MAAM,CAAEmJ,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;GAC7BnJ,MAAM,CAACM,MAAM,CAACC,aAAa,CAAC42B,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,CAAC;GAEvD,IAAIhuB,IAAI,GAAG+nF,QAAQ,IAAI/nF,IAAI,GAAGgoF,QAAQ,EACpC,MAAM,IAAIj+E,UAAU,CAAC,CAAA,mBAAA,EAAsBg+E,QAAQ,CAAOC,IAAAA,EAAAA,QAAQ,GAAG,CAAC;GAExE,IAAIh6D,QAAQ,GAAGi6D,OAAO,IAAIj6D,QAAQ,GAAGk6D,OAAO,EAC1C,MAAM,IAAIn+E,UAAU,CAAC,CAAA,uBAAA,EAA0Bk+E,OAAO,CAAOC,IAAAA,EAAAA,OAAO,GAAG,CAAC;AAE1E,GAAA,IAAIl6D,QAAQ,KAAK,CAAC,IAAI,CAACA,QAAQ,GAAG,CAAC,MAAM,CAAC,EACxC,MAAM,IAAIjkB,UAAU,CAAC,yBAAyB,CAAC;GAEjD,MAAMvN,GAAG,GAAG2tF,aAAa,CAACtzD,QAAQ,CAAC72B,IAAI,EAAEguB,QAAQ,CAAC;AAElD,GAAA,OAAOxxB,GAAG,CAACxF,MAAM,EAAE;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,eAAeu0F,uBAAuBA,CAACvrF,IAAI,EAAEguB,QAAQ,EAAE;AACrD,GAAA,IAAIhuB,IAAI,IAAI,IAAI,EACdA,IAAI,GAAG6nF,YAAY;AAErB,GAAA,IAAI75D,QAAQ,IAAI,IAAI,EAClBA,QAAQ,GAAG85D,WAAW;AAExBjxF,GAAAA,MAAM,CAAEmJ,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;GAC7BnJ,MAAM,CAACM,MAAM,CAACC,aAAa,CAAC42B,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,CAAC;GAEvD,IAAIhuB,IAAI,GAAG+nF,QAAQ,IAAI/nF,IAAI,GAAGgoF,QAAQ,EACpC,MAAM,IAAIj+E,UAAU,CAAC,CAAA,mBAAA,EAAsBg+E,QAAQ,CAAOC,IAAAA,EAAAA,QAAQ,GAAG,CAAC;GAExE,IAAIh6D,QAAQ,GAAGi6D,OAAO,IAAIj6D,QAAQ,GAAGk6D,OAAO,EAC1C,MAAM,IAAIn+E,UAAU,CAAC,CAAA,uBAAA,EAA0Bk+E,OAAO,CAAOC,IAAAA,EAAAA,OAAO,GAAG,CAAC;AAE1E,GAAA,IAAIl6D,QAAQ,KAAK,CAAC,IAAI,CAACA,QAAQ,GAAG,CAAC,MAAM,CAAC,EACxC,MAAM,IAAIjkB,UAAU,CAAC,yBAAyB,CAAC;GAEjD,MAAMvN,GAAG,GAAG,MAAM2tF,aAAa,CAACiB,aAAa,CAACprF,IAAI,EAAEguB,QAAQ,CAAC;AAE7D,GAAA,OAAOxxB,GAAG,CAACxF,MAAM,EAAE;AACrB;;AAEA;AACA;AACA;AACA;AACA;;CAEA,SAASw0F,cAAcA,CAAChvF,GAAG,EAAE;GAC3B,MAAMmG,CAAC,GAAGwnF,aAAa,CAACtyF,MAAM,CAAC2E,GAAG,CAAC;AAEnC,GAAA,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,0BAA0B,CAAC;AAE7C,GAAA,OAAO8J,CAAC,CAAC3C,IAAI,EAAE;AACjB;;AAEA;AACA;AACA;AACA;AACA;;CAEA,SAASs0C,gBAAgBA,CAAC93C,GAAG,EAAE;AAC7B;GACA3F,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACD,GAAG,CAAC,CAAC;AAE5B,GAAA,IAAImG,CAAC;GAEL,IAAI;AACFA,KAAAA,CAAC,GAAGwnF,aAAa,CAACtyF,MAAM,CAAC2E,GAAG,CAAC;IAC9B,CAAC,OAAOiC,CAAC,EAAE;AACV,KAAA,OAAO,KAAK;AACd;AAEA,GAAA,OAAOkE,CAAC,CAACm1B,MAAM,EAAE;AACnB;;AAEA;AACA;AACA;AACA;AACA;;CAEA,SAAS6c,gBAAgBA,CAACr7B,IAAI,EAAE;AAC9B;GACAziB,MAAM,CAACyiB,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,CAAC;AAExC,GAAA,IAAI3W,CAAC,GAAG,IAAIwnF,aAAa,EAAE;AAE3B,GAAA,IAAI7wE,IAAI,CAACjO,CAAC,IAAI,IAAI,EAChB1I,CAAC,CAAC0I,CAAC,GAAGlH,EAAE,CAACtM,MAAM,CAACyhB,IAAI,CAACjO,CAAC,CAAC;AAEzB,GAAA,IAAIiO,IAAI,CAAC7a,CAAC,IAAI,IAAI,EAChBkE,CAAC,CAAClE,CAAC,GAAG0F,EAAE,CAACtM,MAAM,CAACyhB,IAAI,CAAC7a,CAAC,CAAC;AAEzB,GAAA,IAAI6a,IAAI,CAAC9a,CAAC,IAAI,IAAI,EAChBmE,CAAC,CAACnE,CAAC,GAAG2F,EAAE,CAACtM,MAAM,CAACyhB,IAAI,CAAC9a,CAAC,CAAC;AAEzB,GAAA,IAAI8a,IAAI,CAAC3Q,CAAC,IAAI,IAAI,EAChBhG,CAAC,CAACgG,CAAC,GAAGxE,EAAE,CAACtM,MAAM,CAACyhB,IAAI,CAAC3Q,CAAC,CAAC;AAEzB,GAAA,IAAI2Q,IAAI,CAAClS,CAAC,IAAI,IAAI,EAChBzE,CAAC,CAACyE,CAAC,GAAGjD,EAAE,CAACtM,MAAM,CAACyhB,IAAI,CAAClS,CAAC,CAAC;AAEzB,GAAA,IAAIkS,IAAI,CAAC8wE,EAAE,IAAI,IAAI,EACjBznF,CAAC,CAACynF,EAAE,GAAGjmF,EAAE,CAACtM,MAAM,CAACyhB,IAAI,CAAC8wE,EAAE,CAAC;AAE3B,GAAA,IAAI9wE,IAAI,CAAC+wE,EAAE,IAAI,IAAI,EACjB1nF,CAAC,CAAC0nF,EAAE,GAAGlmF,EAAE,CAACtM,MAAM,CAACyhB,IAAI,CAAC+wE,EAAE,CAAC;AAE3B,GAAA,IAAI/wE,IAAI,CAACgxE,EAAE,IAAI,IAAI,EACjB3nF,CAAC,CAAC2nF,EAAE,GAAGnmF,EAAE,CAACtM,MAAM,CAACyhB,IAAI,CAACgxE,EAAE,CAAC;AAE3B,GAAA,IAAI,CAAC3nF,CAAC,CAACm1B,MAAM,EAAE,EAAE;AACf,KAAA,IAAI,CAACn1B,CAAC,CAACgG,CAAC,CAAC1B,MAAM,EAAE,IAAI,CAACtE,CAAC,CAACyE,CAAC,CAACH,MAAM,EAAE,EAAE;OAClC,IAAI,CAACtE,CAAC,CAAClE,CAAC,CAACwI,MAAM,EAAE,EACftE,CAAC,GAAGwnF,aAAa,CAACgB,OAAO,CAACxoF,CAAC,CAACgG,CAAC,EAAEhG,CAAC,CAACyE,CAAC,EAAEzE,CAAC,CAAClE,CAAC,CAAC,CAAC,KAEzCkE,CAAC,GAAGwnF,aAAa,CAACkB,OAAO,CAAC1oF,CAAC,CAACgG,CAAC,EAAEhG,CAAC,CAACyE,CAAC,EAAEzE,CAAC,CAACnE,CAAC,CAAC;AAC5C,MAAC,MAAM;AACLmE,OAAAA,CAAC,GAAGwnF,aAAa,CAACmB,OAAO,CAAC3oF,CAAC,CAAC0I,CAAC,EAAE1I,CAAC,CAAClE,CAAC,EAAEkE,CAAC,CAACnE,CAAC,CAAC;AAC1C;AACF;AAEA,GAAA,OAAOmE,CAAC,CAAC3L,MAAM,EAAE;AACnB;;AAEA;AACA;AACA;AACA;AACA;;CAEA,SAASu9C,gBAAgBA,CAAC/3C,GAAG,EAAE;AAC7B;GACA,MAAMmG,CAAC,GAAGwnF,aAAa,CAACtyF,MAAM,CAAC2E,GAAG,CAAC;AAEnC,GAAA,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,0BAA0B,CAAC;GAE7C,OAAO;AACLwS,KAAAA,CAAC,EAAE1I,CAAC,CAAC0I,CAAC,CAACrU,MAAM,EAAE;AACfyH,KAAAA,CAAC,EAAEkE,CAAC,CAAClE,CAAC,CAACzH,MAAM,EAAE;AACfwH,KAAAA,CAAC,EAAEmE,CAAC,CAACnE,CAAC,CAACxH,MAAM,EAAE;AACf2R,KAAAA,CAAC,EAAEhG,CAAC,CAACgG,CAAC,CAAC3R,MAAM,EAAE;AACfoQ,KAAAA,CAAC,EAAEzE,CAAC,CAACyE,CAAC,CAACpQ,MAAM,EAAE;AACfozF,KAAAA,EAAE,EAAEznF,CAAC,CAACynF,EAAE,CAACpzF,MAAM,EAAE;AACjBqzF,KAAAA,EAAE,EAAE1nF,CAAC,CAAC0nF,EAAE,CAACrzF,MAAM,EAAE;AACjBszF,KAAAA,EAAE,EAAE3nF,CAAC,CAAC2nF,EAAE,CAACtzF,MAAM;IAChB;AACH;;AAEA;AACA;AACA;AACA;AACA;;CAEA,SAASy9C,eAAeA,CAACj4C,GAAG,EAAE;GAC5B,MAAMmG,CAAC,GAAGwnF,aAAa,CAACtyF,MAAM,CAAC2E,GAAG,CAAC;AAEnC,GAAA,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,0BAA0B,CAAC;AAE7C,GAAA,MAAM8P,CAAC,GAAGhG,CAAC,CAAColE,QAAQ,EAAE;AAEtB,GAAA,OAAOp/D,CAAC,CAAC3R,MAAM,EAAE;AACnB;;AAEA;AACA;AACA;AACA;AACA;;CAEA,SAASy0F,aAAaA,CAACjvF,GAAG,EAAE;GAC1B,MAAMmG,CAAC,GAAGunF,YAAY,CAACryF,MAAM,CAAC2E,GAAG,CAAC;AAElC,GAAA,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,yBAAyB,CAAC;AAE5C,GAAA,OAAO8J,CAAC,CAAC3C,IAAI,EAAE;AACjB;;AAEA;AACA;AACA;AACA;AACA;;CAEA,SAASu1C,eAAeA,CAAC/4C,GAAG,EAAE;AAC5B;GACA3F,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACD,GAAG,CAAC,CAAC;AAE5B,GAAA,IAAImG,CAAC;GAEL,IAAI;AACFA,KAAAA,CAAC,GAAGunF,YAAY,CAACryF,MAAM,CAAC2E,GAAG,CAAC;IAC7B,CAAC,OAAOiC,CAAC,EAAE;AACV,KAAA,OAAO,KAAK;AACd;AAEA,GAAA,OAAOkE,CAAC,CAACm1B,MAAM,EAAE;AACnB;;AAEA;AACA;AACA;AACA;AACA;;CAEA,SAAS0d,eAAeA,CAACl8B,IAAI,EAAE;AAC7B;GACAziB,MAAM,CAACyiB,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,CAAC;AAExC,GAAA,MAAM3W,CAAC,GAAG,IAAIunF,YAAY,EAAE;AAE5B,GAAA,IAAI5wE,IAAI,CAACjO,CAAC,IAAI,IAAI,EAChB1I,CAAC,CAAC0I,CAAC,GAAGlH,EAAE,CAACtM,MAAM,CAACyhB,IAAI,CAACjO,CAAC,CAAC;AAEzB,GAAA,IAAIiO,IAAI,CAAC7a,CAAC,IAAI,IAAI,EAChBkE,CAAC,CAAClE,CAAC,GAAG0F,EAAE,CAACtM,MAAM,CAACyhB,IAAI,CAAC7a,CAAC,CAAC;AAEzB,GAAA,IAAI,CAACkE,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,yBAAyB,CAAC;AAE5C,GAAA,OAAO8J,CAAC,CAAC3L,MAAM,EAAE;AACnB;;AAEA;AACA;AACA;AACA;AACA;;CAEA,SAAS09C,eAAeA,CAACl4C,GAAG,EAAE;AAC5B;GACA,MAAMmG,CAAC,GAAGunF,YAAY,CAACryF,MAAM,CAAC2E,GAAG,CAAC;AAElC,GAAA,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,yBAAyB,CAAC;GAE5C,OAAO;AACLwS,KAAAA,CAAC,EAAE1I,CAAC,CAAC0I,CAAC,CAACrU,MAAM,EAAE;AACfyH,KAAAA,CAAC,EAAEkE,CAAC,CAAClE,CAAC,CAACzH,MAAM;IACd;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAASK,IAAIA,CAAC+E,IAAI,EAAEV,GAAG,EAAEc,GAAG,EAAE;AAC5B;AACA;AACA,GAAA,IAAIJ,IAAI,IAAI,OAAOA,IAAI,CAAC2D,EAAE,KAAK,QAAQ,EACrC3D,IAAI,GAAGA,IAAI,CAAC2D,EAAE;GAEhBlJ,MAAM,CAACuF,IAAI,IAAI,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,CAAC;GAChDvF,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;GAE5B,MAAM,CAAC2b,MAAM,EAAEq0E,IAAI,CAAC,GAAGC,aAAa,CAACvvF,IAAI,EAAEV,GAAG,CAAC;GAE/C,IAAI,CAAC2b,MAAM,EACT,MAAM,IAAIxe,KAAK,CAAC,4BAA4B,CAAC;GAE/C,IAAI6C,GAAG,CAAC/D,MAAM,KAAK+zF,IAAI,EACrB,MAAM,IAAI7yF,KAAK,CAAC,2BAA2B,CAAC;GAE9C,MAAM8J,CAAC,GAAGwnF,aAAa,CAACtyF,MAAM,CAAC2E,GAAG,CAAC;AAEnC,GAAA,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,0BAA0B,CAAC;AAE7C,GAAA,MAAM+yF,IAAI,GAAGv0E,MAAM,CAAC1f,MAAM,GAAG+zF,IAAI;AACjC,GAAA,MAAMG,IAAI,GAAGlpF,CAAC,CAAC5G,IAAI,EAAE;GAErB,IAAI8vF,IAAI,GAAGD,IAAI,GAAG,EAAE,EAClB,MAAM,IAAI/yF,KAAK,CAAC,2BAA2B,CAAC;;AAE9C;GACA,MAAMizF,EAAE,GAAGrxF,MAAM,CAACqC,KAAK,CAAC+uF,IAAI,CAAC;AAE7BC,GAAAA,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI;AACZA,GAAAA,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI;GAEZ,KAAK,IAAI/uF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8uF,IAAI,GAAGD,IAAI,GAAG,CAAC,EAAE7uF,CAAC,EAAE,EACtC+uF,EAAE,CAAC/uF,CAAC,CAAC,GAAG,IAAI;GAEd+uF,EAAE,CAACD,IAAI,GAAGD,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI;GAE1Bv0E,MAAM,CAACtZ,IAAI,CAAC+tF,EAAE,EAAED,IAAI,GAAGD,IAAI,CAAC;GAC5BlwF,GAAG,CAACqC,IAAI,CAAC+tF,EAAE,EAAED,IAAI,GAAGH,IAAI,CAAC;AAEzB,GAAA,OAAO/oF,CAAC,CAAC64E,OAAO,CAACsQ,EAAE,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;CAEA,SAASh0D,MAAMA,CAAC17B,IAAI,EAAEV,GAAG,EAAE46B,GAAG,EAAE95B,GAAG,EAAE;AACnC,GAAA,IAAIJ,IAAI,IAAI,OAAOA,IAAI,CAAC2D,EAAE,KAAK,QAAQ,EACrC3D,IAAI,GAAGA,IAAI,CAAC2D,EAAE;GAEhBlJ,MAAM,CAACuF,IAAI,IAAI,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,CAAC;GAChDvF,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;GAC5B7E,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAAC65B,GAAG,CAAC,CAAC;GAC5Bz/B,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACD,GAAG,CAAC,CAAC;GAE5B,IAAI;KACF,OAAOu7B,OAAO,CAAC37B,IAAI,EAAEV,GAAG,EAAE46B,GAAG,EAAE95B,GAAG,CAAC;IACpC,CAAC,OAAOiC,CAAC,EAAE;AACV,KAAA,OAAO,KAAK;AACd;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;CAEA,SAASs5B,OAAOA,CAAC37B,IAAI,EAAEV,GAAG,EAAE46B,GAAG,EAAE95B,GAAG,EAAE;AACpC;AACA;GACA,MAAM,CAAC6a,MAAM,EAAEq0E,IAAI,CAAC,GAAGC,aAAa,CAACvvF,IAAI,EAAEV,GAAG,CAAC;AAE/C,GAAA,IAAI,CAAC2b,MAAM,EACT,OAAO,KAAK;GAEd,IAAI3b,GAAG,CAAC/D,MAAM,KAAK+zF,IAAI,EACrB,OAAO,KAAK;GAEd,MAAM/oF,CAAC,GAAGunF,YAAY,CAACryF,MAAM,CAAC2E,GAAG,CAAC;GAElC,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,OAAO,KAAK;AAEd,GAAA,MAAM+zD,IAAI,GAAGlpF,CAAC,CAAC5G,IAAI,EAAE;GAErB,IAAIu6B,GAAG,CAAC3+B,MAAM,KAAKk0F,IAAI,EACrB,OAAO,KAAK;AAEd,GAAA,MAAMD,IAAI,GAAGv0E,MAAM,CAAC1f,MAAM,GAAG+zF,IAAI;GAEjC,IAAIG,IAAI,GAAGD,IAAI,GAAG,EAAE,EAClB,OAAO,KAAK;GAEd,MAAME,EAAE,GAAGnpF,CAAC,CAACizB,OAAO,CAACU,GAAG,CAAC;;AAEzB;GACA,IAAIy1D,EAAE,GAAG,CAAC;GAEVA,EAAE,IAAIjF,aAAa,CAACgF,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;GAChCC,EAAE,IAAIjF,aAAa,CAACgF,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;GAEhC,KAAK,IAAI/uF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8uF,IAAI,GAAGD,IAAI,GAAG,CAAC,EAAE7uF,CAAC,EAAE,EACtCgvF,EAAE,IAAIjF,aAAa,CAACgF,EAAE,CAAC/uF,CAAC,CAAC,EAAE,IAAI,CAAC;AAElCgvF,GAAAA,EAAE,IAAIjF,aAAa,CAACgF,EAAE,CAACD,IAAI,GAAGD,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;AAC9CG,GAAAA,EAAE,IAAIlN,SAAS,CAACiN,EAAE,CAACpqF,KAAK,CAACmqF,IAAI,GAAGD,IAAI,EAAEC,IAAI,GAAGH,IAAI,CAAC,EAAEr0E,MAAM,CAAC;AAC3D00E,GAAAA,EAAE,IAAIlN,SAAS,CAACiN,EAAE,CAACpqF,KAAK,CAACmqF,IAAI,GAAGH,IAAI,EAAEG,IAAI,CAAC,EAAEnwF,GAAG,CAAC;GAEjD,OAAOqwF,EAAE,KAAK,CAAC;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAASn2D,OAAOA,CAACl6B,GAAG,EAAEc,GAAG,EAAE;AACzB;GACA3F,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;GAE5B,MAAMiH,CAAC,GAAGunF,YAAY,CAACryF,MAAM,CAAC2E,GAAG,CAAC;AAElC,GAAA,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,yBAAyB,CAAC;AAE5C,GAAA,MAAMgzF,IAAI,GAAGlpF,CAAC,CAAC5G,IAAI,EAAE;AAErB,GAAA,IAAIL,GAAG,CAAC/D,MAAM,GAAGk0F,IAAI,GAAG,EAAE,EACxB,MAAM,IAAIhzF,KAAK,CAAC,2BAA2B,CAAC;;AAE9C;GACA,MAAMizF,EAAE,GAAGrxF,MAAM,CAACqC,KAAK,CAAC+uF,IAAI,CAAC;AAC7B,GAAA,MAAMG,IAAI,GAAGtwF,GAAG,CAAC/D,MAAM;AACvB,GAAA,MAAMs0F,IAAI,GAAGJ,IAAI,GAAGG,IAAI,GAAG,CAAC;AAE5BF,GAAAA,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI;AACZA,GAAAA,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI;GAEZv5E,GAAG,CAACshB,UAAU,CAACi4D,EAAE,EAAE,CAAC,EAAEG,IAAI,CAAC;AAE3B,GAAA,KAAK,IAAIlvF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,GAAGkvF,IAAI,EAAElvF,CAAC,EAAE,EAAE;AACjC,KAAA,OAAO+uF,EAAE,CAAC/uF,CAAC,CAAC,KAAK,IAAI,EACnBwV,GAAG,CAACshB,UAAU,CAACi4D,EAAE,EAAE/uF,CAAC,EAAE,CAAC,CAAC;AAC5B;GAEA+uF,EAAE,CAACD,IAAI,GAAGG,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI;GAE1BtwF,GAAG,CAACqC,IAAI,CAAC+tF,EAAE,EAAED,IAAI,GAAGG,IAAI,CAAC;AAEzB,GAAA,OAAOrpF,CAAC,CAACizB,OAAO,CAACk2D,EAAE,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAAStQ,OAAOA,CAAC9/E,GAAG,EAAEc,GAAG,EAAE;AACzB;GACA3F,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;GAE5B,MAAMiH,CAAC,GAAGwnF,aAAa,CAACtyF,MAAM,CAAC2E,GAAG,CAAC;AAEnC,GAAA,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,0BAA0B,CAAC;AAE7C,GAAA,MAAMgzF,IAAI,GAAGlpF,CAAC,CAAC5G,IAAI,EAAE;GAErB,IAAI8vF,IAAI,GAAG,EAAE,EACX,MAAM,IAAIhzF,KAAK,CAAC,0BAA0B,CAAC;GAE7C,IAAI6C,GAAG,CAAC/D,MAAM,KAAKk0F,IAAI,EACrB,MAAM,IAAIhzF,KAAK,CAAC,2BAA2B,CAAC;;AAE9C;GACA,MAAMizF,EAAE,GAAGnpF,CAAC,CAAC64E,OAAO,CAAC9/E,GAAG,CAAC;GACzB,MAAMwE,IAAI,GAAG4mF,aAAa,CAACgF,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;GACvC,MAAMpxD,GAAG,GAAGosD,aAAa,CAACgF,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;GAEtC,IAAI9zF,KAAK,GAAG,CAAC;GACb,IAAIk0F,OAAO,GAAG,CAAC;AAEf,GAAA,KAAK,IAAInvF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+uF,EAAE,CAACn0F,MAAM,EAAEoF,CAAC,EAAE,EAAE;KAClC,MAAMovF,OAAO,GAAGrF,aAAa,CAACgF,EAAE,CAAC/uF,CAAC,CAAC,EAAE,IAAI,CAAC;KAE1C/E,KAAK,GAAG+uF,UAAU,CAAC/uF,KAAK,EAAE+E,CAAC,EAAEmvF,OAAO,GAAGC,OAAO,CAAC;KAC/CD,OAAO,GAAGnF,UAAU,CAACmF,OAAO,EAAE,CAAC,EAAEC,OAAO,CAAC;AAC3C;GAEA,MAAMC,OAAO,GAAGnF,OAAO,CAAC,CAAC,GAAG,CAAC,EAAEjvF,KAAK,CAAC;GACrC,MAAM4hE,KAAK,GAAG15D,IAAI,GAAGw6B,GAAG,IAAIwxD,OAAO,GAAG,CAAC,CAAC,GAAGE,OAAO;GAClD,MAAMj8D,MAAM,GAAG42D,UAAU,CAAC,CAAC,EAAE/uF,KAAK,GAAG,CAAC,EAAE4hE,KAAK,CAAC;GAE9C,IAAIA,KAAK,KAAK,CAAC,EACb,MAAM,IAAI/gE,KAAK,CAAC,yBAAyB,CAAC;AAE5C,GAAA,OAAOizF,EAAE,CAACpqF,KAAK,CAACyuB,MAAM,CAAC;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;CAEA,SAASk8D,OAAOA,CAACjwF,IAAI,EAAEV,GAAG,EAAEc,GAAG,EAAE8vF,OAAO,EAAE;AACxC;AACA,GAAA,IAAIA,OAAO,IAAI,IAAI,EACjBA,OAAO,GAAGjE,gBAAgB;GAE5BxxF,MAAM,CAACuF,IAAI,IAAI,OAAOA,IAAI,CAAC2D,EAAE,KAAK,QAAQ,CAAC;GAC3ClJ,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;GAC5B7E,MAAM,CAAC,CAACy1F,OAAO,GAAG,CAAC,MAAMA,OAAO,CAAC;AAEjC,GAAA,IAAI5wF,GAAG,CAAC/D,MAAM,KAAKyE,IAAI,CAACL,IAAI,EAC1B,MAAM,IAAIlD,KAAK,CAAC,2BAA2B,CAAC;GAE9C,MAAM8J,CAAC,GAAGwnF,aAAa,CAACtyF,MAAM,CAAC2E,GAAG,CAAC;AAEnC,GAAA,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,0BAA0B,CAAC;AAE7C,GAAA,MAAMmH,IAAI,GAAG2C,CAAC,CAAC3C,IAAI,EAAE;AACrB,GAAA,MAAM6rF,IAAI,GAAI7rF,IAAI,GAAG,CAAC,KAAM,CAAC;AAC7B,GAAA,MAAMusF,KAAK,GAAIvsF,IAAI,GAAG,CAAC,KAAM,CAAC;GAE9B,IAAIssF,OAAO,KAAKlE,gBAAgB,EAC9BkE,OAAO,GAAGC,KAAK,GAAG,CAAC,GAAGnwF,IAAI,CAACL,IAAI,CAAC,KAC7B,IAAIuwF,OAAO,KAAKjE,gBAAgB,EACnCiE,OAAO,GAAGlwF,IAAI,CAACL,IAAI;AAErB,GAAA,IAAIuwF,OAAO,GAAG,CAAC,IAAIA,OAAO,GAAGT,IAAI,EAC/B,MAAM,IAAIhzF,KAAK,CAAC,0BAA0B,CAAC;GAE7C,MAAM6oE,IAAI,GAAGnvD,GAAG,CAACoI,WAAW,CAAC2xE,OAAO,CAAC;AACrC,GAAA,MAAMR,EAAE,GAAGU,SAAS,CAACpwF,IAAI,EAAEV,GAAG,EAAEsE,IAAI,GAAG,CAAC,EAAE0hE,IAAI,CAAC;;AAE/C;AACA;AACA;AACA,GAAA,OAAO/+D,CAAC,CAAC64E,OAAO,CAACsQ,EAAE,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;CAEA,SAASW,SAASA,CAACrwF,IAAI,EAAEV,GAAG,EAAE46B,GAAG,EAAE95B,GAAG,EAAE8vF,OAAO,EAAE;AAC/C,GAAA,IAAIA,OAAO,IAAI,IAAI,EACjBA,OAAO,GAAGjE,gBAAgB;GAE5BxxF,MAAM,CAACuF,IAAI,IAAI,OAAOA,IAAI,CAAC2D,EAAE,KAAK,QAAQ,CAAC;GAC3ClJ,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;GAC5B7E,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAAC65B,GAAG,CAAC,CAAC;GAC5Bz/B,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACD,GAAG,CAAC,CAAC;GAC5B3F,MAAM,CAAC,CAACy1F,OAAO,GAAG,CAAC,MAAMA,OAAO,CAAC;GAEjC,IAAI;KACF,OAAOI,UAAU,CAACtwF,IAAI,EAAEV,GAAG,EAAE46B,GAAG,EAAE95B,GAAG,EAAE8vF,OAAO,CAAC;IAChD,CAAC,OAAO7tF,CAAC,EAAE;AACV,KAAA,OAAO,KAAK;AACd;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;CAEA,SAASiuF,UAAUA,CAACtwF,IAAI,EAAEV,GAAG,EAAE46B,GAAG,EAAE95B,GAAG,EAAE8vF,OAAO,EAAE;AAChD;GACA,IAAI5wF,GAAG,CAAC/D,MAAM,KAAKyE,IAAI,CAACL,IAAI,EAC1B,OAAO,KAAK;GAEd,MAAM4G,CAAC,GAAGunF,YAAY,CAACryF,MAAM,CAAC2E,GAAG,CAAC;GAElC,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,OAAO,KAAK;AAEd,GAAA,MAAM93B,IAAI,GAAG2C,CAAC,CAAC3C,IAAI,EAAE;AACrB,GAAA,MAAM6rF,IAAI,GAAI7rF,IAAI,GAAG,CAAC,KAAM,CAAC;GAE7B,IAAIs2B,GAAG,CAAC3+B,MAAM,KAAKk0F,IAAI,EACrB,OAAO,KAAK;GAEd,IAAIS,OAAO,KAAKlE,gBAAgB,EAC9BkE,OAAO,GAAG,CAAC,CAAC;QACT,IAAIA,OAAO,KAAKjE,gBAAgB,EACnCiE,OAAO,GAAGlwF,IAAI,CAACL,IAAI;GAErB,IAAIuwF,OAAO,GAAG,CAAC,IAAIA,OAAO,GAAGT,IAAI,EAC/B,OAAO,KAAK;GAEd,IAAIC,EAAE,GAAGnpF,CAAC,CAACizB,OAAO,CAACU,GAAG,CAAC;;AAEvB;AACA;AACA;AACA;AACA;GACA,IAAI,CAAEt2B,IAAI,GAAG,CAAC,GAAI,CAAC,MAAM,CAAC,EAAE;KAC1B,IAAI8rF,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,EAChB,OAAO,KAAK;AAEdA,KAAAA,EAAE,GAAGA,EAAE,CAACpqF,KAAK,CAAC,CAAC,CAAC;AAClB;AAEA,GAAA,OAAOirF,SAAS,CAACvwF,IAAI,EAAEV,GAAG,EAAEowF,EAAE,EAAE9rF,IAAI,GAAG,CAAC,EAAEssF,OAAO,CAAC;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;CAEA,SAASM,WAAWA,CAACxwF,IAAI,EAAEV,GAAG,EAAEc,GAAG,EAAEkgD,KAAK,EAAE;AAC1C;AACA,GAAA,IAAIA,KAAK,IAAI,IAAI,EACfA,KAAK,GAAG4/B,KAAK;GAEfzlF,MAAM,CAACuF,IAAI,IAAI,OAAOA,IAAI,CAAC2D,EAAE,KAAK,QAAQ,CAAC;GAC3ClJ,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;GAC5B7E,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACigD,KAAK,CAAC,CAAC;GAE9B,MAAM/5C,CAAC,GAAGunF,YAAY,CAACryF,MAAM,CAAC2E,GAAG,CAAC;AAElC,GAAA,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,yBAAyB,CAAC;AAE5C,GAAA,MAAMgzF,IAAI,GAAGlpF,CAAC,CAAC5G,IAAI,EAAE;AACrB,GAAA,MAAMiwF,IAAI,GAAGtwF,GAAG,CAAC/D,MAAM;AACvB,GAAA,MAAM+zF,IAAI,GAAGtvF,IAAI,CAACL,IAAI;AAEtB,GAAA,IAAIiwF,IAAI,GAAGH,IAAI,GAAG,CAAC,GAAGH,IAAI,GAAG,CAAC,EAC5B,MAAM,IAAI7yF,KAAK,CAAC,2BAA2B,CAAC;;AAE9C;GACA,MAAMizF,EAAE,GAAGrxF,MAAM,CAACqC,KAAK,CAAC+uF,IAAI,CAAC;GAC7B,MAAMgB,KAAK,GAAGzwF,IAAI,CAACkD,MAAM,CAACo9C,KAAK,CAAC;GAChC,MAAMnjB,IAAI,GAAGuyD,EAAE,CAACpqF,KAAK,CAAC,CAAC,EAAE,CAAC,GAAGgqF,IAAI,CAAC;GAClC,MAAM1rB,EAAE,GAAG8rB,EAAE,CAACpqF,KAAK,CAAC,CAAC,GAAGgqF,IAAI,CAAC;AAC7B,GAAA,MAAMoB,IAAI,GAAG9sB,EAAE,CAACroE,MAAM;AAEtBm0F,GAAAA,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI;GAEZv5E,GAAG,CAACshB,UAAU,CAAC0F,IAAI,EAAE,CAAC,EAAEA,IAAI,CAAC5hC,MAAM,CAAC;AAEpCk1F,GAAAA,KAAK,CAAC9uF,IAAI,CAACiiE,EAAE,EAAE,CAAC,CAAC;AACjBA,GAAAA,EAAE,CAACmH,IAAI,CAAC,IAAI,EAAEukB,IAAI,EAAEoB,IAAI,GAAGd,IAAI,GAAG,CAAC,CAAC;GACpChsB,EAAE,CAAC8sB,IAAI,GAAGd,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI;GAC1BtwF,GAAG,CAACqC,IAAI,CAACiiE,EAAE,EAAE8sB,IAAI,GAAGd,IAAI,CAAC;AAEzBe,GAAAA,OAAO,CAAC3wF,IAAI,EAAE4jE,EAAE,EAAEzmC,IAAI,CAAC;AACvBwzD,GAAAA,OAAO,CAAC3wF,IAAI,EAAEm9B,IAAI,EAAEymC,EAAE,CAAC;AAEvB,GAAA,OAAOr9D,CAAC,CAACizB,OAAO,CAACk2D,EAAE,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;CAEA,SAASkB,WAAWA,CAAC5wF,IAAI,EAAEV,GAAG,EAAEc,GAAG,EAAEkgD,KAAK,EAAE;AAC1C;AACA,GAAA,IAAIA,KAAK,IAAI,IAAI,EACfA,KAAK,GAAG4/B,KAAK;GAEfzlF,MAAM,CAACuF,IAAI,IAAI,OAAOA,IAAI,CAAC2D,EAAE,KAAK,QAAQ,CAAC;GAC3ClJ,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;GAC5B7E,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACigD,KAAK,CAAC,CAAC;GAE9B,MAAM/5C,CAAC,GAAGwnF,aAAa,CAACtyF,MAAM,CAAC2E,GAAG,CAAC;AAEnC,GAAA,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,0BAA0B,CAAC;AAE7C,GAAA,MAAMgzF,IAAI,GAAGlpF,CAAC,CAAC5G,IAAI,EAAE;AACrB,GAAA,MAAMiwF,IAAI,GAAGtwF,GAAG,CAAC/D,MAAM;AACvB,GAAA,MAAM+zF,IAAI,GAAGtvF,IAAI,CAACL,IAAI;AAEtB,GAAA,IAAI8vF,IAAI,GAAGH,IAAI,GAAG,CAAC,GAAG,CAAC,EACrB,MAAM,IAAI7yF,KAAK,CAAC,+BAA+B,CAAC;GAElD,IAAImzF,IAAI,KAAKH,IAAI,EACf,MAAM,IAAIhzF,KAAK,CAAC,2BAA2B,CAAC;;AAE9C;GACA,MAAMizF,EAAE,GAAGnpF,CAAC,CAAC64E,OAAO,CAAC9/E,GAAG,CAAC;GACzB,MAAMuxF,MAAM,GAAG7wF,IAAI,CAACkD,MAAM,CAACo9C,KAAK,CAAC;GACjC,MAAMx8C,IAAI,GAAG4mF,aAAa,CAACgF,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;GACvC,MAAMvyD,IAAI,GAAGuyD,EAAE,CAACpqF,KAAK,CAAC,CAAC,EAAEgqF,IAAI,GAAG,CAAC,CAAC;GAClC,MAAM1rB,EAAE,GAAG8rB,EAAE,CAACpqF,KAAK,CAACgqF,IAAI,GAAG,CAAC,CAAC;AAE7BqB,GAAAA,OAAO,CAAC3wF,IAAI,EAAEm9B,IAAI,EAAEymC,EAAE,CAAC;AACvB+sB,GAAAA,OAAO,CAAC3wF,IAAI,EAAE4jE,EAAE,EAAEzmC,IAAI,CAAC;GAEvB,MAAMszD,KAAK,GAAG7sB,EAAE,CAACt+D,KAAK,CAAC,CAAC,EAAEgqF,IAAI,CAAC;GAC/B,MAAMwB,MAAM,GAAGrO,SAAS,CAACgO,KAAK,EAAEI,MAAM,CAAC;GACvC,MAAME,IAAI,GAAGntB,EAAE,CAACt+D,KAAK,CAACgqF,IAAI,CAAC;GAE3B,IAAIQ,OAAO,GAAG,CAAC;GACf,IAAIl0F,KAAK,GAAG,CAAC;GACb,IAAIo1F,OAAO,GAAG,CAAC;AAEf,GAAA,KAAK,IAAIrwF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGowF,IAAI,CAACx1F,MAAM,EAAEoF,CAAC,EAAE,EAAE;KACpC,MAAMovF,OAAO,GAAGrF,aAAa,CAACqG,IAAI,CAACpwF,CAAC,CAAC,EAAE,IAAI,CAAC;KAC5C,MAAMswF,OAAO,GAAGvG,aAAa,CAACqG,IAAI,CAACpwF,CAAC,CAAC,EAAE,IAAI,CAAC;KAE5C/E,KAAK,GAAG+uF,UAAU,CAAC/uF,KAAK,EAAE+E,CAAC,EAAEmvF,OAAO,GAAGmB,OAAO,CAAC;KAC/CnB,OAAO,GAAGnF,UAAU,CAACmF,OAAO,EAAE,CAAC,EAAEmB,OAAO,CAAC;AACzCD,KAAAA,OAAO,GAAGrG,UAAU,CAACqG,OAAO,EAAE,CAAC,EAAElB,OAAO,IAAIC,OAAO,GAAG,CAAC,CAAC,CAAC;AAC3D;AAEA,GAAA,MAAMvyB,KAAK,GAAG15D,IAAI,GAAGgtF,MAAM,IAAIE,OAAO,GAAG,CAAC,CAAC,IAAIlB,OAAO,GAAG,CAAC,CAAC;GAE3D,IAAItyB,KAAK,KAAK,CAAC,EACb,MAAM,IAAI/gE,KAAK,CAAC,yBAAyB,CAAC;GAE5C,OAAOs0F,IAAI,CAACzrF,KAAK,CAAC1J,KAAK,GAAG,CAAC,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAASs1F,IAAIA,CAAC5xF,GAAG,EAAEsE,IAAI,EAAExD,GAAG,EAAE;GAC5B3F,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;AAC5B7E,GAAAA,MAAM,CAAEmJ,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;GAE7B,MAAM2C,CAAC,GAAGunF,YAAY,CAACryF,MAAM,CAAC2E,GAAG,CAAC;AAElC,GAAA,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,yBAAyB,CAAC;AAE5C,GAAA,IAAI6C,GAAG,CAAC/D,MAAM,KAAKgL,CAAC,CAAC5G,IAAI,EAAE,EACzB,MAAM,IAAIlD,KAAK,CAAC,yBAAyB,CAAC;AAE5C,GAAA,IAAImH,IAAI,GAAG2C,CAAC,CAAC3C,IAAI,EAAE,EACjB,MAAM,IAAInH,KAAK,CAAC,iCAAiC,CAAC;AAEpD,GAAA,MAAMuf,KAAK,GAAIpY,IAAI,GAAG,CAAC,KAAM,CAAC;GAC9B,MAAMzB,CAAC,GAAG4F,EAAE,CAACtM,MAAM,CAAC6D,GAAG,CAAC;AAExB,GAAA,IAAI6C,CAAC,CAAC2D,GAAG,CAACS,CAAC,CAAC0I,CAAC,CAAC,IAAI,CAAC,EACjB,MAAM,IAAIxS,KAAK,CAAC,yBAAyB,CAAC;GAE5C,MAAM00F,IAAI,GAAGppF,EAAE,CAACzB,KAAK,CAAC,CAAC,EAAE1C,IAAI,CAAC;GAC9B,MAAMwtF,IAAI,GAAGD,IAAI,CAACznF,GAAG,CAACvH,CAAC,CAAC,CAACwG,IAAI,CAACpC,CAAC,CAAC0I,CAAC,CAAC,CAACxF,KAAK,CAAC,CAAC,CAAC,CAAC9M,GAAG,CAAC4J,CAAC,CAAC0I,CAAC,CAAC;GAEpDxU,MAAM,CAAC22F,IAAI,CAACn2F,IAAI,EAAE,GAAG,CAAC,CAAC;GAEvB,IAAI+S,CAAC,GAAGmjF,IAAI;GAEZ,OAAOnjF,CAAC,CAAClI,GAAG,CAACqrF,IAAI,CAAC,IAAI,CAAC,EAAE;KACvB,MAAMptF,CAAC,GAAGgE,EAAE,CAAC+O,MAAM,CAACX,GAAG,EAAE,CAAC,EAAEi7E,IAAI,CAAC;AAEjCpjF,KAAAA,CAAC,GAAG7L,CAAC,CAACgH,GAAG,CAACpF,CAAC,CAACmG,GAAG,CAAC3D,CAAC,CAAC0I,CAAC,CAAC,CAAC;AACvB;AAEAxU,GAAAA,MAAM,CAACuT,CAAC,CAACtR,GAAG,CAAC6J,CAAC,CAAC0I,CAAC,CAAC,CAACnJ,GAAG,CAAC3D,CAAC,CAAC,KAAK,CAAC,CAAC;GAC/B1H,MAAM,CAACuT,CAAC,CAACD,SAAS,EAAE,IAAInK,IAAI,CAAC;GAE7B,OAAOoK,CAAC,CAACpT,MAAM,CAAC,IAAI,EAAEohB,KAAK,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAASq1E,MAAMA,CAAC/xF,GAAG,EAAEsE,IAAI,EAAExD,GAAG,EAAE;GAC9B3F,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;AAC5B7E,GAAAA,MAAM,CAAEmJ,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;GAE7B,MAAM2C,CAAC,GAAGunF,YAAY,CAACryF,MAAM,CAAC2E,GAAG,CAAC;AAElC,GAAA,IAAI,CAACmG,CAAC,CAACm1B,MAAM,EAAE,EACb,MAAM,IAAIj/B,KAAK,CAAC,yBAAyB,CAAC;AAE5C,GAAA,MAAMgzF,IAAI,GAAGlpF,CAAC,CAAC5G,IAAI,EAAE;GAErB,IAAIL,GAAG,CAAC/D,MAAM,GAAGk0F,IAAI,EACnB,MAAM,IAAIhzF,KAAK,CAAC,yBAAyB,CAAC;GAE5C,MAAMuR,CAAC,GAAGjG,EAAE,CAACtM,MAAM,CAAC6D,GAAG,CAAC;AAExB,GAAA,IAAIsE,IAAI,KAAK,CAAC,IAAIoK,CAAC,CAACD,SAAS,EAAE,GAAGnK,IAAI,EACpC,MAAM,IAAInH,KAAK,CAAC,yBAAyB,CAAC;GAE5C,MAAM0F,CAAC,GAAG6L,CAAC,CAACnB,IAAI,CAACtG,CAAC,CAAC0I,CAAC,CAAC;GAErB,OAAO9M,CAAC,CAACvH,MAAM,CAAC,IAAI,EAAE60F,IAAI,CAAC;AAC7B;;AAEA;AACA;AACA;;AAEA,CAAA,SAASF,aAAaA,CAAC1xE,IAAI,EAAEve,GAAG,EAAE;AAChC;GACA7E,MAAM,CAACojB,IAAI,IAAI,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,CAAC;GAChDpjB,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;GAE5B,IAAIue,IAAI,IAAI,IAAI,EACd,OAAO,CAACqiE,KAAK,EAAE5gF,GAAG,CAAC/D,MAAM,CAAC;AAE5B,GAAA,MAAM0f,MAAM,GAAGkxE,UAAU,CAACtuE,IAAI,CAAC;GAE/B,IAAI5C,MAAM,IAAI,IAAI,EAChB,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AAElB,GAAA,IAAIA,MAAM,CAAC1f,MAAM,KAAK,CAAC,EACrB,OAAO,CAAC2kF,KAAK,EAAEjlE,MAAM,CAAC,CAAC,CAAC,CAAC;GAE3B,OAAO,CACLA,MAAM,EACNA,MAAM,CAACA,MAAM,CAAC1f,MAAM,GAAG,CAAC,CAAC,CAC1B;AACH;;AAEA;AACA;AACA;;AAEA,CAAA,SAASo1F,OAAOA,CAAC3wF,IAAI,EAAE6B,GAAG,EAAEs7B,IAAI,EAAE;AAChC;GACA1iC,MAAM,CAACuF,IAAI,IAAI,OAAOA,IAAI,CAAC2D,EAAE,KAAK,QAAQ,CAAC;GAC3ClJ,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACwB,GAAG,CAAC,CAAC;GAC5BpH,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAAC88B,IAAI,CAAC,CAAC;GAE7B,MAAM2lD,GAAG,GAAGzkF,MAAM,CAACqC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC;GAEjC,IAAIC,CAAC,GAAG,CAAC;AAET,GAAA,OAAOA,CAAC,GAAGkB,GAAG,CAACtG,MAAM,EAAE;KACrB,MAAM2H,MAAM,GAAGlD,IAAI,CAACuD,KAAK,CAAC45B,IAAI,EAAE2lD,GAAG,CAAC;KAEpC,IAAIh+E,CAAC,GAAG,CAAC;KAET,OAAOnE,CAAC,GAAGkB,GAAG,CAACtG,MAAM,IAAIuJ,CAAC,GAAG5B,MAAM,CAAC3H,MAAM,EACxCsG,GAAG,CAAClB,CAAC,EAAE,CAAC,IAAIuC,MAAM,CAAC4B,CAAC,EAAE,CAAC;KAEzB,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;AACvBg+E,OAAAA,GAAG,CAACh+E,CAAC,CAAC,IAAI,CAAC;AAEX,OAAA,IAAIg+E,GAAG,CAACh+E,CAAC,CAAC,KAAK,IAAI,EACjB;AACJ;AACF;AACF;;AAEA;AACA;AACA;;CAEA,SAASsrF,SAASA,CAACpwF,IAAI,EAAEV,GAAG,EAAEgyF,MAAM,EAAEhsB,IAAI,EAAE;AAC1C;GACA7qE,MAAM,CAACuF,IAAI,IAAI,OAAOA,IAAI,CAAC2D,EAAE,KAAK,QAAQ,CAAC;GAC3ClJ,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;AAC5B7E,GAAAA,MAAM,CAAE62F,MAAM,KAAK,CAAC,KAAMA,MAAM,CAAC;GACjC72F,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACilE,IAAI,CAAC,CAAC;AAE7B,GAAA,MAAMgqB,IAAI,GAAGtvF,IAAI,CAACL,IAAI;AACtB,GAAA,MAAM4xF,IAAI,GAAGjsB,IAAI,CAAC/pE,MAAM;AACxB,GAAA,MAAM40F,KAAK,GAAImB,MAAM,GAAG,CAAC,KAAM,CAAC;GAEhC,IAAIhyF,GAAG,CAAC/D,MAAM,KAAK+zF,IAAI,EACrB,MAAM,IAAI7yF,KAAK,CAAC,2BAA2B,CAAC;AAE9C,GAAA,IAAI0zF,KAAK,GAAGb,IAAI,GAAGiC,IAAI,GAAG,CAAC,EACzB,MAAM,IAAI90F,KAAK,CAAC,mBAAmB,CAAC;;AAEtC;GACA,MAAMizF,EAAE,GAAGrxF,MAAM,CAACqC,KAAK,CAACyvF,KAAK,CAAC;AAC9B,GAAA,MAAMvsB,EAAE,GAAG8rB,EAAE,CAACpqF,KAAK,CAAC,CAAC,EAAE6qF,KAAK,GAAGb,IAAI,GAAG,CAAC,CAAC;AACxC,GAAA,MAAMhvF,CAAC,GAAGovF,EAAE,CAACpqF,KAAK,CAAC6qF,KAAK,GAAGb,IAAI,GAAG,CAAC,EAAEa,KAAK,GAAG,CAAC,CAAC;GAC/C,MAAMzK,EAAE,GAAG1lF,IAAI,CAACuD,KAAK,CAAC2oF,MAAM,EAAE5sF,GAAG,EAAEgmE,IAAI,CAAC;GACxC,MAAMt0D,IAAI,GAAG,IAAI,KAAM,CAAC,GAAGm/E,KAAK,GAAGmB,MAAO;AAE1C1tB,GAAAA,EAAE,CAACmH,IAAI,CAAC,IAAI,EAAE,CAAC,EAAEolB,KAAK,GAAGoB,IAAI,GAAGjC,IAAI,GAAG,CAAC,CAAC;GACzC1rB,EAAE,CAACusB,KAAK,GAAGoB,IAAI,GAAGjC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI;AAClChqB,GAAAA,IAAI,CAAC3jE,IAAI,CAACiiE,EAAE,EAAEusB,KAAK,GAAGoB,IAAI,GAAGjC,IAAI,GAAG,CAAC,CAAC;AACtC5J,GAAAA,EAAE,CAAC/jF,IAAI,CAACrB,CAAC,EAAE,CAAC,CAAC;AACbovF,GAAAA,EAAE,CAACS,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;AAEpBQ,GAAAA,OAAO,CAAC3wF,IAAI,EAAE4jE,EAAE,EAAEtjE,CAAC,CAAC;AAEpBsjE,GAAAA,EAAE,CAAC,CAAC,CAAC,IAAI5yD,IAAI;AAEb,GAAA,OAAO0+E,EAAE;AACX;CAEA,SAASa,SAASA,CAACvwF,IAAI,EAAEV,GAAG,EAAEowF,EAAE,EAAE4B,MAAM,EAAEC,IAAI,EAAE;AAC9C;GACA92F,MAAM,CAACuF,IAAI,IAAI,OAAOA,IAAI,CAAC2D,EAAE,KAAK,QAAQ,CAAC;GAC3ClJ,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACf,GAAG,CAAC,CAAC;GAC5B7E,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACqvF,EAAE,CAAC,CAAC;AAC3Bj1F,GAAAA,MAAM,CAAE62F,MAAM,KAAK,CAAC,KAAMA,MAAM,CAAC;AACjC72F,GAAAA,MAAM,CAAE82F,IAAI,KAAK,CAAC,KAAMA,IAAI,CAAC;AAE7B,GAAA,MAAMjC,IAAI,GAAGtvF,IAAI,CAACL,IAAI;AACtB,GAAA,MAAMwwF,KAAK,GAAImB,MAAM,GAAG,CAAC,KAAM,CAAC;GAEhC,IAAIhyF,GAAG,CAAC/D,MAAM,KAAK+zF,IAAI,EACrB,OAAO,KAAK;GAEd,IAAIa,KAAK,GAAGb,IAAI,GAAGiC,IAAI,GAAG,CAAC,EACzB,OAAO,KAAK;GAEd,IAAI7B,EAAE,CAACS,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,EACxB,OAAO,KAAK;;AAEd;AACA,GAAA,MAAMvsB,EAAE,GAAG8rB,EAAE,CAACpqF,KAAK,CAAC,CAAC,EAAE6qF,KAAK,GAAGb,IAAI,GAAG,CAAC,CAAC;AACxC,GAAA,MAAMhvF,CAAC,GAAGovF,EAAE,CAACpqF,KAAK,CAAC6qF,KAAK,GAAGb,IAAI,GAAG,CAAC,EAAEa,KAAK,GAAG,CAAC,CAAC;GAC/C,MAAMn/E,IAAI,GAAG,IAAI,KAAM,CAAC,GAAGm/E,KAAK,GAAGmB,MAAO;GAE1C,IAAI5B,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC1+E,IAAI,EACf,OAAO,KAAK;AAEd2/E,GAAAA,OAAO,CAAC3wF,IAAI,EAAE4jE,EAAE,EAAEtjE,CAAC,CAAC;AAEpBsjE,GAAAA,EAAE,CAAC,CAAC,CAAC,IAAI5yD,IAAI;GAEb,IAAIugF,IAAI,KAAK,CAAC,EAAE;AAAE;KAChBA,IAAI,GAAG,EAAE;AAET,KAAA,KAAK,IAAI5wF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGijE,EAAE,CAACroE,MAAM,EAAEoF,CAAC,EAAE,EAAE;AAClC,OAAA,IAAIijE,EAAE,CAACjjE,CAAC,CAAC,KAAK,IAAI,EAChB;AAEF,OAAA,IAAIijE,EAAE,CAACjjE,CAAC,CAAC,KAAK,IAAI,EAAE;SAClB4wF,IAAI,GAAG3tB,EAAE,CAACroE,MAAM,IAAIoF,CAAC,GAAG,CAAC,CAAC;SAC1B;AACF;AAEA,OAAA,OAAO,KAAK;AACd;AAEA,KAAA,IAAI4wF,IAAI,KAAK,EAAE,EACb,OAAO,KAAK;AAChB,IAAC,MAAM;KACL,MAAMhwF,GAAG,GAAGqiE,EAAE,CAACroE,MAAM,GAAGg2F,IAAI,GAAG,CAAC;KAEhC,KAAK,IAAI5wF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,GAAG,EAAEZ,CAAC,EAAE,EAAE;OAC5B,IAAIijE,EAAE,CAACjjE,CAAC,CAAC,KAAK,IAAI,EAChB,OAAO,KAAK;AAChB;KAEA,IAAIijE,EAAE,CAACriE,GAAG,CAAC,KAAK,IAAI,EAClB,OAAO,KAAK;AAChB;GAEA,MAAM+jE,IAAI,GAAG1B,EAAE,CAACt+D,KAAK,CAACs+D,EAAE,CAACroE,MAAM,GAAGg2F,IAAI,CAAC;GACvC,MAAM7L,EAAE,GAAG1lF,IAAI,CAACuD,KAAK,CAAC2oF,MAAM,EAAE5sF,GAAG,EAAEgmE,IAAI,CAAC;AAExC,GAAA,OAAOogB,EAAE,CAAC/nC,MAAM,CAACr9C,CAAC,CAAC;AACrB;;AAEA;AACA;AACA;;AAEA3F,CAAAA,GAAAA,CAAAA,MAAc,GAAG,CAAC;AAClBA,CAAAA,GAAAA,CAAAA,gBAAwB,GAAGqxF,gBAAgB;AAC3CrxF,CAAAA,GAAAA,CAAAA,gBAAwB,GAAGsxF,gBAAgB;AAC3CtxF,CAAAA,GAAAA,CAAAA,kBAA0B,GAAGs9C,kBAAkB;AAC/Ct9C,CAAAA,GAAAA,CAAAA,uBAA+B,GAAGw0F,uBAAuB;AACzDx0F,CAAAA,GAAAA,CAAAA,cAAsB,GAAGy0F,cAAc;AACvCz0F,CAAAA,GAAAA,CAAAA,gBAAwB,GAAGu9C,gBAAgB;AAC3Cv9C,CAAAA,GAAAA,CAAAA,gBAAwB,GAAG49C,gBAAgB;AAC3C59C,CAAAA,GAAAA,CAAAA,gBAAwB,GAAGw9C,gBAAgB;AAC3Cx9C,CAAAA,GAAAA,CAAAA,eAAuB,GAAG09C,eAAe;AACzC19C,CAAAA,GAAAA,CAAAA,aAAqB,GAAG00F,aAAa;AACrC10F,CAAAA,GAAAA,CAAAA,eAAuB,GAAGw+C,eAAe;AACzCx+C,CAAAA,GAAAA,CAAAA,eAAuB,GAAGy+C,eAAe;AACzCz+C,CAAAA,GAAAA,CAAAA,eAAuB,GAAG29C,eAAe;AACzC39C,CAAAA,GAAAA,CAAAA,IAAY,GAAGM,IAAI;AACnBN,CAAAA,GAAAA,CAAAA,MAAc,GAAG+gC,MAAM;AACvB/gC,CAAAA,GAAAA,CAAAA,OAAe,GAAG6+B,OAAO;AACzB7+B,CAAAA,GAAAA,CAAAA,OAAe,GAAGykF,OAAO;AACzBzkF,CAAAA,GAAAA,CAAAA,OAAe,GAAGs1F,OAAO;AACzBt1F,CAAAA,GAAAA,CAAAA,SAAiB,GAAG01F,SAAS;AAC7B11F,CAAAA,GAAAA,CAAAA,WAAmB,GAAG61F,WAAW;AACjC71F,CAAAA,GAAAA,CAAAA,WAAmB,GAAGi2F,WAAW;AACjCj2F,CAAAA,GAAAA,CAAAA,IAAY,GAAGu2F,IAAI;AACnBv2F,CAAAA,GAAAA,CAAAA,MAAc,GAAG02F,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CCtqDvB,MAAM52F,MAAM,GAAGC,aAA4B,EAAA;CAC3C,MAAMivE,MAAM,GAAGjvE,aAAmB,EAAA;CAClC,MAAMwG,MAAM,GAAGxG,aAAmB,EAAA;;AAElC;AACA;AACA;;AAEA,CAAA,MAAM82F,KAAK,GAAGnzF,MAAM,CAACqC,KAAK,CAAC,EAAE,CAAC;AAC9B,CAAA,MAAM+wF,KAAK,GAAG,IAAIxwF,WAAW,CAAC,EAAE,CAAC;AACjC,CAAA,MAAMywF,KAAK,GAAG,IAAIzwF,WAAW,CAAC,EAAE,CAAC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,SAASs4B,MAAMA,CAACixC,MAAM,EAAElF,IAAI,EAAE2e,CAAC,EAAElgF,CAAC,EAAEwI,CAAC,EAAEhL,GAAG,EAAE;AAC1C,GAAA,IAAI,OAAOipE,MAAM,KAAK,QAAQ,EAC5BA,MAAM,GAAGnsE,MAAM,CAACnB,IAAI,CAACstE,MAAM,EAAE,MAAM,CAAC;AAEtC,GAAA,IAAI,OAAOlF,IAAI,KAAK,QAAQ,EAC1BA,IAAI,GAAGjnE,MAAM,CAACnB,IAAI,CAACooE,IAAI,EAAE,MAAM,CAAC;GAElC,IAAIA,IAAI,IAAI,IAAI,EACdA,IAAI,GAAGjnE,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;GAExBjG,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACmqE,MAAM,CAAC,CAAC;GAC/B/vE,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACilE,IAAI,CAAC,CAAC;AAC7B7qE,GAAAA,MAAM,CAAEwpF,CAAC,KAAK,CAAC,KAAMA,CAAC,CAAC;AACvBxpF,GAAAA,MAAM,CAAEsJ,CAAC,KAAK,CAAC,KAAMA,CAAC,CAAC;AACvBtJ,GAAAA,MAAM,CAAE8R,CAAC,KAAK,CAAC,KAAMA,CAAC,CAAC;AACvB9R,GAAAA,MAAM,CAAE8G,GAAG,KAAK,CAAC,KAAMA,GAAG,CAAC;AAE3B,GAAA,IAAIwC,CAAC,GAAGwI,CAAC,IAAK,CAAC,IAAI,EAAG,EACpB,MAAM,IAAI9P,KAAK,CAAC,OAAO,CAAC;AAE1B,GAAA,IAAI,CAACwnF,CAAC,GAAIA,CAAC,GAAG,CAAE,MAAM,CAAC,IAAIA,CAAC,KAAK,CAAC,EAChC,MAAM,IAAIxnF,KAAK,CAAC,QAAQ,CAAC;GAE3B,IAAIwnF,CAAC,GAAG,UAAU,EAChB,MAAM,IAAIxnF,KAAK,CAAC,QAAQ,CAAC;GAE3B,MAAMk1F,EAAE,GAAGtzF,MAAM,CAACqC,KAAK,CAAC,GAAG,GAAGqD,CAAC,CAAC;GAChC,MAAMk5B,CAAC,GAAG5+B,MAAM,CAACqC,KAAK,CAAC,GAAG,GAAGqD,CAAC,GAAGkgF,CAAC,CAAC;GACnC,MAAM3/E,CAAC,GAAGqlE,MAAM,CAACpwC,MAAM,CAACr4B,MAAM,EAAEspE,MAAM,EAAElF,IAAI,EAAE,CAAC,EAAE/4D,CAAC,GAAG,GAAG,GAAGxI,CAAC,CAAC;AAE7D,GAAA,KAAK,IAAIpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4L,CAAC,EAAE5L,CAAC,EAAE,EACxBixF,IAAI,CAACttF,CAAC,EAAE3D,CAAC,GAAG,GAAG,GAAGoD,CAAC,EAAEA,CAAC,EAAEkgF,CAAC,EAAEhnD,CAAC,EAAE00D,EAAE,CAAC;AAEnC7hC,GAAAA,KAAK,EAAE;AAEP,GAAA,OAAO6Z,MAAM,CAACpwC,MAAM,CAACr4B,MAAM,EAAEspE,MAAM,EAAElmE,CAAC,EAAE,CAAC,EAAE/C,GAAG,CAAC;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAA,eAAekkE,WAAWA,CAAC+E,MAAM,EAAElF,IAAI,EAAE2e,CAAC,EAAElgF,CAAC,EAAEwI,CAAC,EAAEhL,GAAG,EAAE;AACrD,GAAA,IAAI,OAAOipE,MAAM,KAAK,QAAQ,EAC5BA,MAAM,GAAGnsE,MAAM,CAACnB,IAAI,CAACstE,MAAM,EAAE,MAAM,CAAC;AAEtC,GAAA,IAAI,OAAOlF,IAAI,KAAK,QAAQ,EAC1BA,IAAI,GAAGjnE,MAAM,CAACnB,IAAI,CAACooE,IAAI,EAAE,MAAM,CAAC;GAElC,IAAIA,IAAI,IAAI,IAAI,EACdA,IAAI,GAAGjnE,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;GAExBjG,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACmqE,MAAM,CAAC,CAAC;GAC/B/vE,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACilE,IAAI,CAAC,CAAC;AAC7B7qE,GAAAA,MAAM,CAAEwpF,CAAC,KAAK,CAAC,KAAMA,CAAC,CAAC;AACvBxpF,GAAAA,MAAM,CAAEsJ,CAAC,KAAK,CAAC,KAAMA,CAAC,CAAC;AACvBtJ,GAAAA,MAAM,CAAE8R,CAAC,KAAK,CAAC,KAAMA,CAAC,CAAC;AACvB9R,GAAAA,MAAM,CAAE8G,GAAG,KAAK,CAAC,KAAMA,GAAG,CAAC;AAE3B,GAAA,IAAIwC,CAAC,GAAGwI,CAAC,IAAK,CAAC,IAAI,EAAG,EACpB,MAAM,IAAI9P,KAAK,CAAC,OAAO,CAAC;AAE1B,GAAA,IAAI,CAACwnF,CAAC,GAAIA,CAAC,GAAG,CAAE,MAAM,CAAC,IAAIA,CAAC,KAAK,CAAC,EAChC,MAAM,IAAIxnF,KAAK,CAAC,QAAQ,CAAC;GAE3B,IAAIwnF,CAAC,GAAG,UAAU,EAChB,MAAM,IAAIxnF,KAAK,CAAC,QAAQ,CAAC;GAE3B,MAAMk1F,EAAE,GAAGtzF,MAAM,CAACqC,KAAK,CAAC,GAAG,GAAGqD,CAAC,CAAC;GAChC,MAAMk5B,CAAC,GAAG5+B,MAAM,CAACqC,KAAK,CAAC,GAAG,GAAGqD,CAAC,GAAGkgF,CAAC,CAAC;GACnC,MAAM3/E,CAAC,GAAG,MAAMqlE,MAAM,CAAClE,WAAW,CAACvkE,MAAM,EAAEspE,MAAM,EAAElF,IAAI,EAAE,CAAC,EAAE/4D,CAAC,GAAG,GAAG,GAAGxI,CAAC,CAAC;AAExE,GAAA,KAAK,IAAIpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4L,CAAC,EAAE5L,CAAC,EAAE,EACxB,MAAMkxF,SAAS,CAACvtF,CAAC,EAAE3D,CAAC,GAAG,GAAG,GAAGoD,CAAC,EAAEA,CAAC,EAAEkgF,CAAC,EAAEhnD,CAAC,EAAE00D,EAAE,CAAC;AAE9C7hC,GAAAA,KAAK,EAAE;AAEP,GAAA,OAAO6Z,MAAM,CAAClE,WAAW,CAACvkE,MAAM,EAAEspE,MAAM,EAAElmE,CAAC,EAAE,CAAC,EAAE/C,GAAG,CAAC;AACtD;;AAEA;AACA;AACA;;CAEA,SAASuwF,SAASA,CAACxtF,CAAC,EAAE;GACpB,MAAMytF,GAAG,GAAGN,KAAK;GACjB,MAAM39C,CAAC,GAAG49C,KAAK;GAEf,KAAK,IAAI/wF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzBoxF,GAAG,CAACpxF,CAAC,CAAC,GAAG6B,OAAO,CAAC8B,CAAC,EAAE3D,CAAC,GAAG,CAAC,CAAC;GAE5B,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzBmzC,CAAC,CAACnzC,CAAC,CAAC,GAAGoxF,GAAG,CAACpxF,CAAC,CAAC;AAEf,GAAA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;AAC7BmzC,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC1BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACzBA,KAAAA,CAAC,CAAC,EAAE,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAC3BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAE3BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACzBA,KAAAA,CAAC,CAAC,EAAE,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAC1BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAC3BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AAE3BA,KAAAA,CAAC,CAAC,EAAE,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAC3BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC3BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AAC3BA,KAAAA,CAAC,CAAC,EAAE,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAE3BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC3BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC1BA,KAAAA,CAAC,CAAC,EAAE,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAC3BA,KAAAA,CAAC,CAAC,EAAE,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAE5BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACzBA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACzBA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAC1BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAE1BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACzBA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACzBA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAC1BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAE1BA,KAAAA,CAAC,CAAC,EAAE,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAC3BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC3BA,KAAAA,CAAC,CAAC,CAAC,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AAC3BA,KAAAA,CAAC,CAAC,EAAE,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAE3BA,KAAAA,CAAC,CAAC,EAAE,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5BA,KAAAA,CAAC,CAAC,EAAE,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5BA,KAAAA,CAAC,CAAC,EAAE,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7BA,KAAAA,CAAC,CAAC,EAAE,CAAC,IAAI7Y,CAAC,CAAC6Y,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AAC/B;GAEA,KAAK,IAAInzC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzBoxF,GAAG,CAACpxF,CAAC,CAAC,IAAImzC,CAAC,CAACnzC,CAAC,CAAC;GAEhB,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzBmB,QAAQ,CAACwC,CAAC,EAAEytF,GAAG,CAACpxF,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC;AAC9B;AAEA,CAAA,SAASs6B,CAACA,CAACh5B,CAAC,EAAEC,CAAC,EAAE;GACf,OAAQD,CAAC,IAAIC,CAAC,GAAKD,CAAC,KAAM,EAAE,GAAGC,CAAG;AACpC;CAEA,SAAS8vF,eAAeA,CAAC1tF,CAAC,EAAEyvC,CAAC,EAAEk+C,EAAE,EAAEluF,CAAC,EAAE;GACpC,MAAM+vC,CAAC,GAAG09C,KAAK;AAEfU,GAAAA,MAAM,CAACp+C,CAAC,EAAExvC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAGP,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC;AAErC,GAAA,KAAK,IAAIpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,GAAGoD,CAAC,EAAEpD,CAAC,EAAE,EAAE;AAC9BwxF,KAAAA,MAAM,CAACr+C,CAAC,EAAExvC,CAAC,EAAE,CAAC,EAAE3D,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC;KAC3BmxF,SAAS,CAACh+C,CAAC,CAAC;AACZo+C,KAAAA,MAAM,CAACn+C,CAAC,EAAED,CAAC,EAAEm+C,EAAE,GAAGtxF,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;AAClC;AAEA,GAAA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoD,CAAC,EAAEpD,CAAC,EAAE,EACxBuxF,MAAM,CAAC5tF,CAAC,EAAEyvC,CAAC,EAAEpzC,CAAC,GAAG,EAAE,EAAEsxF,EAAE,GAAItxF,CAAC,GAAG,CAAC,GAAI,EAAE,EAAE,EAAE,CAAC;AAE7C,GAAA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoD,CAAC,EAAEpD,CAAC,EAAE,EACxBuxF,MAAM,CAAC5tF,CAAC,EAAEyvC,CAAC,EAAE,CAACpzC,CAAC,GAAGoD,CAAC,IAAI,EAAE,EAAEkuF,EAAE,GAAG,CAACtxF,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC;AACzD;AAEA,CAAA,SAASyxF,UAAUA,CAAC9tF,CAAC,EAAEP,CAAC,EAAE;AACxB,GAAA,OAAOvB,OAAO,CAAC8B,CAAC,EAAE,CAAC,CAAC,GAAGP,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;AACrC;AAEA,CAAA,SAAS6tF,IAAIA,CAACttF,CAAC,EAAE+tF,EAAE,EAAEtuF,CAAC,EAAEkgF,CAAC,EAAEhnD,CAAC,EAAE00D,EAAE,EAAE;GAChC,MAAM79C,CAAC,GAAG69C,EAAE;GACZ,MAAM59C,CAAC,GAAG49C,EAAE;AAEZO,GAAAA,MAAM,CAACp+C,CAAC,EAAExvC,CAAC,EAAE,CAAC,EAAE+tF,EAAE,EAAE,GAAG,GAAGtuF,CAAC,CAAC;GAE5B,KAAK,IAAIpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsjF,CAAC,EAAEtjF,CAAC,EAAE,EAAE;AAC1BuxF,KAAAA,MAAM,CAACj1D,CAAC,EAAE6W,CAAC,EAAEnzC,CAAC,IAAI,GAAG,GAAGoD,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAGA,CAAC,CAAC;KACvCiuF,eAAe,CAACl+C,CAAC,EAAEC,CAAC,EAAE,GAAG,GAAGhwC,CAAC,EAAEA,CAAC,CAAC;AACnC;GAEA,KAAK,IAAIpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsjF,CAAC,EAAEtjF,CAAC,EAAE,EAAE;KAC1B,MAAMmE,CAAC,GAAGstF,UAAU,CAACt+C,CAAC,EAAE/vC,CAAC,CAAC,GAAIkgF,CAAC,GAAG,CAAE;AAEpCkO,KAAAA,MAAM,CAACr+C,CAAC,EAAE7W,CAAC,EAAE,CAAC,EAAEn4B,CAAC,IAAI,GAAG,GAAGf,CAAC,CAAC,EAAE,GAAG,GAAGA,CAAC,CAAC;KACvCiuF,eAAe,CAACl+C,CAAC,EAAEC,CAAC,EAAE,GAAG,GAAGhwC,CAAC,EAAEA,CAAC,CAAC;AACnC;AAEAmuF,GAAAA,MAAM,CAAC5tF,CAAC,EAAEwvC,CAAC,EAAEu+C,EAAE,EAAE,CAAC,EAAE,GAAG,GAAGtuF,CAAC,CAAC;AAC9B;AAEA,CAAA,eAAe8tF,SAASA,CAACvtF,CAAC,EAAE+tF,EAAE,EAAEtuF,CAAC,EAAEkgF,CAAC,EAAEhnD,CAAC,EAAE00D,EAAE,EAAE;GAC3C,MAAM79C,CAAC,GAAG69C,EAAE;GACZ,MAAM59C,CAAC,GAAG49C,EAAE;AAEZO,GAAAA,MAAM,CAACp+C,CAAC,EAAExvC,CAAC,EAAE,CAAC,EAAE+tF,EAAE,EAAE,GAAG,GAAGtuF,CAAC,CAAC;GAE5B,KAAK,IAAIpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsjF,CAAC,EAAEtjF,CAAC,EAAE,EAAE;AAC1BuxF,KAAAA,MAAM,CAACj1D,CAAC,EAAE6W,CAAC,EAAEnzC,CAAC,IAAI,GAAG,GAAGoD,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAGA,CAAC,CAAC;KACvCiuF,eAAe,CAACl+C,CAAC,EAAEC,CAAC,EAAE,GAAG,GAAGhwC,CAAC,EAAEA,CAAC,CAAC;KAEjC,MAAMuuF,IAAI,EAAE;AACd;GAEA,KAAK,IAAI3xF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsjF,CAAC,EAAEtjF,CAAC,EAAE,EAAE;KAC1B,MAAMmE,CAAC,GAAGstF,UAAU,CAACt+C,CAAC,EAAE/vC,CAAC,CAAC,GAAIkgF,CAAC,GAAG,CAAE;AAEpCkO,KAAAA,MAAM,CAACr+C,CAAC,EAAE7W,CAAC,EAAE,CAAC,EAAEn4B,CAAC,IAAI,GAAG,GAAGf,CAAC,CAAC,EAAE,GAAG,GAAGA,CAAC,CAAC;KACvCiuF,eAAe,CAACl+C,CAAC,EAAEC,CAAC,EAAE,GAAG,GAAGhwC,CAAC,EAAEA,CAAC,CAAC;KAEjC,MAAMuuF,IAAI,EAAE;AACd;AAEAJ,GAAAA,MAAM,CAAC5tF,CAAC,EAAEwvC,CAAC,EAAEu+C,EAAE,EAAE,CAAC,EAAE,GAAG,GAAGtuF,CAAC,CAAC;AAC9B;CAEA,SAASmuF,MAAMA,CAAC/sF,GAAG,EAAEo/E,GAAG,EAAEgO,MAAM,EAAEC,MAAM,EAAEjxF,GAAG,EAAE;AAC7CgjF,GAAAA,GAAG,CAAC5iF,IAAI,CAACwD,GAAG,EAAEotF,MAAM,EAAEC,MAAM,EAAEA,MAAM,GAAGjxF,GAAG,CAAC;AAC7C;CAEA,SAAS4wF,MAAMA,CAAChtF,GAAG,EAAEo/E,GAAG,EAAEgO,MAAM,EAAEC,MAAM,EAAEjxF,GAAG,EAAE;GAC7C,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,GAAG,EAAEZ,CAAC,EAAE,EAC1BwE,GAAG,CAACotF,MAAM,GAAG5xF,CAAC,CAAC,IAAI4jF,GAAG,CAACiO,MAAM,GAAG7xF,CAAC,CAAC;AACtC;AAEA,CAAA,SAAS2xF,IAAIA,GAAG;GACd,OAAO,IAAIruB,OAAO,CAAClgE,CAAC,IAAI0uF,YAAY,CAAC1uF,CAAC,CAAC,CAAC;AAC1C;AAEA,CAAA,SAAS+rD,KAAKA,GAAG;AACf,GAAA,KAAK,IAAInvD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EACzB6wF,KAAK,CAAC7wF,CAAC,CAAC,GAAG,CAAC;GAEd,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;AAC3B8wF,KAAAA,KAAK,CAAC9wF,CAAC,CAAC,GAAG,CAAC;AACZ+wF,KAAAA,KAAK,CAAC/wF,CAAC,CAAC,GAAG,CAAC;AACd;AACF;AAEA,CAAA,SAAS6B,OAAOA,CAAC5B,IAAI,EAAEa,GAAG,EAAE;GAC1B,OAAQb,IAAI,CAACa,GAAG,EAAE,CAAC,GACXb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,KAAK,GACnBb,IAAI,CAACa,GAAG,EAAE,CAAC,GAAG,OAAO,GACrBb,IAAI,CAACa,GAAG,CAAC,GAAG,SAAS;AAC/B;AAEA,CAAA,SAASK,QAAQA,CAACqD,GAAG,EAAEtK,GAAG,EAAE4G,GAAG,EAAE;AAC/B0D,GAAAA,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG;GAChBA,GAAG,MAAM,CAAC;AACVsK,GAAAA,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG;GAChBA,GAAG,MAAM,CAAC;AACVsK,GAAAA,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG;GAChBA,GAAG,MAAM,CAAC;AACVsK,GAAAA,GAAG,CAAC1D,GAAG,EAAE,CAAC,GAAG5G,GAAG;AAChB,GAAA,OAAO4G,GAAG;AACZ;;AAEA;AACA;AACA;;AAEA9G,CAAAA,MAAAA,CAAAA,MAAc,GAAG,CAAC;AAClBA,CAAAA,MAAAA,CAAAA,MAAc,GAAG4+B,MAAM;AACvB5+B,CAAAA,MAAAA,CAAAA,WAAmB,GAAG8qE,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;CCzSjC,MAAMhrE,MAAM,GAAGC,aAA4B,EAAA;CAC3C,MAAMwG,MAAM,GAAGxG,aAAmB,EAAA;CAClC,MAAM+E,IAAI,GAAG/E,WAA0B,EAAA;;AAEvC;AACA;AACA;;CAEA,MAAM6yF,MAAM,SAASrsF,MAAM,CAAC;AAC1BpE,GAAAA,WAAWA,GAAG;AACZ,KAAA,KAAK,EAAE;AACT;AAEAqD,GAAAA,IAAIA,GAAG;AACL,KAAA,IAAI,CAACgB,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;AAC1B,KAAA,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU;KAC1B,IAAI,CAACxB,IAAI,GAAG,CAAC;AACb,KAAA,OAAO,IAAI;AACb;AAEAa,GAAAA,KAAKA,GAAG;KACN,OAAO,KAAK,CAACA,KAAK,EAAE,CAAC8E,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AACnC;GAEA,OAAOtF,IAAIA,GAAG;KACZ,OAAO,IAAIutF,MAAM,EAAE;AACrB;GAEA,OAAOtqF,IAAIA,GAAG;AACZ,KAAA,OAAO,IAAIxD,IAAI,CAAC8tF,MAAM,EAAE,EAAE,CAAC;AAC7B;GAEA,OAAOrqF,MAAMA,CAACtC,IAAI,EAAE;AAClB,KAAA,OAAO2sF,MAAM,CAACpqF,GAAG,CAAChD,IAAI,EAAE,CAACI,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,EAAE;AAC/C;AAEA,GAAA,OAAO4C,IAAIA,CAACC,IAAI,EAAEC,KAAK,EAAE;AACvB7I,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACgD,IAAI,CAAC,IAAIA,IAAI,CAAC9H,MAAM,KAAK,EAAE,CAAC;AACnDd,KAAAA,MAAM,CAAC4D,MAAM,CAACgC,QAAQ,CAACiD,KAAK,CAAC,IAAIA,KAAK,CAAC/H,MAAM,KAAK,EAAE,CAAC;KACrD,OAAOgyF,MAAM,CAACpqF,GAAG,CAAChD,IAAI,EAAE,CAACI,MAAM,CAAC8C,IAAI,CAAC,CAAC9C,MAAM,CAAC+C,KAAK,CAAC,CAAC9C,KAAK,EAAE;AAC7D;GAEA,OAAO+C,KAAKA,CAAC3D,CAAC,EAAEC,CAAC,EAAE2D,CAAC,EAAE;KACpB,MAAM;OAACL;AAAG,MAAC,GAAGoqF,MAAM;KAEpBpqF,GAAG,CAAChD,IAAI,EAAE;AACVgD,KAAAA,GAAG,CAAC5C,MAAM,CAACX,CAAC,CAAC;AACbuD,KAAAA,GAAG,CAAC5C,MAAM,CAACV,CAAC,CAAC;KAEb,IAAI2D,CAAC,EACHL,GAAG,CAAC5C,MAAM,CAACiD,CAAC,CAAC;AAEf,KAAA,OAAOL,GAAG,CAAC3C,KAAK,EAAE;AACpB;AAEA,GAAA,OAAOiD,GAAGA,CAAC7C,IAAI,EAAER,GAAG,EAAE;AACpB,KAAA,OAAOmtF,MAAM,CAACtqF,IAAI,EAAE,CAAC9C,IAAI,CAACC,GAAG,CAAC,CAACG,MAAM,CAACK,IAAI,CAAC,CAACJ,KAAK,EAAE;AACrD;AACF;;AAEA;AACA;AACA;;CAEA+sF,MAAM,CAAC7pF,MAAM,GAAG,CAAC;CACjB6pF,MAAM,CAAC5pF,EAAE,GAAG,QAAQ;CACpB4pF,MAAM,CAAC5tF,IAAI,GAAG,EAAE;CAChB4tF,MAAM,CAAC3pF,IAAI,GAAG,GAAG;CACjB2pF,MAAM,CAAC1pF,SAAS,GAAG,EAAE;CACrB0pF,MAAM,CAACzpF,IAAI,GAAGzF,MAAM,CAACqC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AACpC6sF,CAAAA,MAAM,CAACpqF,GAAG,GAAG,IAAIoqF,MAAM,EAAE;;AAEzB;AACA;AACA;;AAEAvvF,CAAAA,MAAc,GAAGuvF,MAAM;;;;;;;;;;;;;;;;;AC3FvB;AACA5yF,EAAAA,OAAAA,CAAAA,GAAAA,GAAcD,UAAgB,EAAA;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAAA,CAAAA,EAAAA,GAAaD,SAAe,EAAA;AAC5B;AACAC,EAAAA,OAAAA,CAAAA,QAAAA,GAAmBD,eAAqB,EAAA;AACxC;AACAC,EAAAA,OAAAA,CAAAA,OAAAA,GAAkBD,cAAoB,EAAA;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAAA,CAAAA,OAAAA,GAAkBD,cAAoB,EAAA;AACtCC,EAAAA,OAAAA,CAAAA,OAAAA,GAAkBD,cAAoB,EAAA;AACtC;AACA;AACAC,EAAAA,OAAAA,CAAAA,QAAAA,GAAmBD,eAAsB,EAAA;AACzCC,EAAAA,OAAAA,CAAAA,MAAAA,GAAiBD,aAAmB,EAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAAA,CAAAA,MAAAA,GAAiBD,aAAmB,EAAA;AACpC;AACAC,EAAAA,OAAAA,CAAAA,OAAAA,GAAkBD,cAAoB,EAAA;AACtC;AACAC,EAAAA,OAAAA,CAAAA,IAAAA,GAAeD,WAAiB,EAAA;AAChCC,EAAAA,OAAAA,CAAAA,IAAAA,GAAeD,WAAiB,EAAA;AAChCC,EAAAA,OAAAA,CAAAA,IAAAA,GAAeD,WAAiB,EAAA;AAChCC,EAAAA,OAAAA,CAAAA,IAAAA,GAAeD,WAAiB,EAAA;AAChCC,EAAAA,OAAAA,CAAAA,MAAAA,GAAiBD,aAAmB,EAAA;AACpC;AACA;AACAC,EAAAA,OAAAA,CAAAA,MAAAA,GAAiBD,aAAmB,EAAA;AACpCC,EAAAA,OAAAA,CAAAA,SAAAA,GAAoBD,gBAAsB,EAAA;AAC1CC,EAAAA,OAAAA,CAAAA,GAAAA,GAAcD,UAAgB,EAAA;AAC9B;AACAC,EAAAA,OAAAA,CAAAA,IAAAA,GAAeD,WAAiB,EAAA;AAChC;AACA;AACAC,EAAAA,OAAAA,CAAAA,MAAAA,GAAiBD,aAAmB,EAAA;AACpCC,EAAAA,OAAAA,CAAAA,SAAAA,GAAoBD,gBAAsB,EAAA;AAC1C;AACA;AACAC,EAAAA,OAAAA,CAAAA,IAAAA,GAAeD,WAAiB,EAAA;AAChCC,EAAAA,OAAAA,CAAAA,MAAAA,GAAiBD,aAAmB,EAAA;AACpCC,EAAAA,OAAAA,CAAAA,MAAAA,GAAiBD,aAAmB,EAAA;AACpCC,EAAAA,OAAAA,CAAAA,MAAAA,GAAiBD,aAAmB,EAAA;AACpCC,EAAAA,OAAAA,CAAAA,MAAAA,GAAiBD,aAAmB,EAAA;AACpC;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAAA,CAAAA,KAAAA,GAAgBD,YAAkB,EAAA;AAClC;AACAC,EAAAA,OAAAA,CAAAA,QAAAA,GAAmBD,eAAqB,EAAA;AACxC;AACA;AACA;AACA;;AAEAC,EAAAA,OAAAA,CAAAA,OAAAA,GAAkB,OAAO;AACzBA,EAAAA,OAAAA,CAAAA,MAAAA,GAAiBA,OAAO,CAACuG,MAAM,CAACwC,MAAM,CAAA;;;;;;;;;;;;;;;;;;;;;CCxFtC,MAAM;GAACkF;AAAO,EAAC,GAAGlO,eAAgB,EAAA;CAClC,MAAMqiD,GAAG,GAAGriD,YAAgB,EAAA;CAC5B,MAAMg4F,OAAO,GAAGh4F,cAA6B,EAAA;;AAE7C;AACA;AACA;;AAEA,CAAA,MAAM+6E,KAAK,GAAGp3E,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;CAC7B,MAAMiyF,UAAU,GAAG,sDAAsD;CACzE,MAAMC,GAAG,GAAG,sDAAsD;;AAElE;AACA;AACA;;AAEA,CAAA,MAAMC,WAAW,SAAS91C,GAAG,CAAC+1C,MAAM,CAAC;AACnC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAEEh2F,WAAWA,CAAC6C,IAAI,EAAEsP,CAAC,EAAEwpC,KAAK,EAAEl4C,MAAM,EAAE;AAClC,KAAA,KAAK,EAAE;KAEP,IAAI,CAACw4D,MAAM,GAAG0c,KAAK;KACnB,IAAI,CAAC91E,IAAI,GAAG,CAAC;KACb,IAAI,CAACsP,CAAC,GAAG,CAAC;KACV,IAAI,CAACwpC,KAAK,GAAG,CAAC;KACd,IAAI,CAACl4C,MAAM,GAAGsyF,WAAW,CAACloF,KAAK,CAACtD,IAAI;AAEpC,KAAA,IAAI1H,IAAI,IAAI,IAAI,EACd,IAAI,CAAC1C,WAAW,CAAC0C,IAAI,EAAEsP,CAAC,EAAEwpC,KAAK,EAAEl4C,MAAM,CAAC;AAC5C;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAEEtD,WAAWA,CAAC0C,IAAI,EAAEsP,CAAC,EAAEwpC,KAAK,EAAEl4C,MAAM,EAAE;AAClC,KAAA,IAAIk4C,KAAK,IAAI,IAAI,IAAIA,KAAK,KAAK,EAAE,EAC/BA,KAAK,GAAIhwC,IAAI,CAACqO,MAAM,EAAE,GAAG,WAAW,KAAM,CAAC;AAE7C,KAAA,IAAIvW,MAAM,IAAI,IAAI,IAAIA,MAAM,KAAK,EAAE,EACjCA,MAAM,GAAGsyF,WAAW,CAACloF,KAAK,CAACtD,IAAI;AAEjC,KAAA,IAAI,OAAO9G,MAAM,KAAK,QAAQ,EAAE;OAC9BA,MAAM,GAAGsyF,WAAW,CAACloF,KAAK,CAACpK,MAAM,CAACg2C,WAAW,EAAE,CAAC;OAChD3tC,OAAO,CAACrI,MAAM,IAAI,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC;AAC3C;AAEAqI,KAAAA,OAAO,CAAC7N,MAAM,CAACC,aAAa,CAAC2E,IAAI,CAAC,IAAIA,IAAI,IAAI,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC;AACnEiJ,KAAAA,OAAO,CAAC7N,MAAM,CAACC,aAAa,CAACiU,CAAC,CAAC,IAAIA,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC;KAC1DrG,OAAO,CAAE6vC,KAAK,KAAK,CAAC,KAAMA,KAAK,EAAE,OAAO,EAAE,SAAS,CAAC;KACpD7vC,OAAO,CAAErI,MAAM,KAAK,CAAC,KAAMA,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC;KACvDqI,OAAO,CAACrI,MAAM,IAAI,CAAC,EAAE,QAAQ,EAAE,uBAAuB,CAAC;AAEvD,KAAA,IAAIZ,IAAI,GAAG,CAAC,EACVA,IAAI,GAAG,CAAC;AAEV,KAAA,IAAIsP,CAAC,KAAK,CAAC,EACTA,CAAC,GAAG,CAAC;KAEPtP,IAAI,IAAIA,IAAI,GAAG,CAAC;AAEhB,KAAA,IAAI,CAACo5D,MAAM,GAAG16D,MAAM,CAACqC,KAAK,CAACf,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC;KAC1C,IAAI,CAACA,IAAI,GAAGA,IAAI;KAChB,IAAI,CAACsP,CAAC,GAAGA,CAAC;KACV,IAAI,CAACwpC,KAAK,GAAGA,KAAK;KAClB,IAAI,CAACl4C,MAAM,GAAGA,MAAM;AAEpB,KAAA,OAAO,IAAI;AACb;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;GAEE,OAAOtD,WAAWA,CAAC0C,IAAI,EAAEsP,CAAC,EAAEwpC,KAAK,EAAEl4C,MAAM,EAAE;AACzC,KAAA,OAAO,IAAI,IAAI,EAAE,CAACtD,WAAW,CAAC0C,IAAI,EAAEsP,CAAC,EAAEwpC,KAAK,EAAEl4C,MAAM,CAAC;AACvD;;AAEA;AACF;AACA;AACA;AACA;AACA;;AAEEP,GAAAA,IAAIA,CAACjD,KAAK,EAAEkS,CAAC,EAAE;AACb,KAAA,OAAOyjF,OAAO,CAACj6C,KAAK,CAAC17C,KAAK,EAAEkS,CAAC,EAAE,IAAI,CAACwpC,KAAK,CAAC,GAAG,IAAI,CAAC94C,IAAI;AACxD;;AAEA;AACF;AACA;;AAEEozF,GAAAA,KAAKA,GAAG;AACN,KAAA,IAAI,CAACh6B,MAAM,CAACgS,IAAI,CAAC,CAAC,CAAC;AACrB;;AAEA;AACF;AACA;AACA;AACA;;AAEE5hE,GAAAA,GAAGA,CAACpM,KAAK,EAAE0gD,GAAG,EAAE;KACd,MAAMp+C,GAAG,GAAGyb,QAAQ,CAAC/d,KAAK,EAAE0gD,GAAG,CAAC;AAEhC,KAAA,KAAK,IAAI98C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACsO,CAAC,EAAEtO,CAAC,EAAE,EAAE;OAC/B,MAAM/E,KAAK,GAAG,IAAI,CAACoE,IAAI,CAACX,GAAG,EAAEsB,CAAC,CAAC;AAC/B,OAAA,IAAI,CAACo4D,MAAM,CAACn9D,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAGA,KAAK,CAAC;AAC9C;AACF;;AAEA;AACF;AACA;AACA;AACA;AACA;;AAEEE,GAAAA,IAAIA,CAACiB,KAAK,EAAE0gD,GAAG,EAAE;KACf,MAAMp+C,GAAG,GAAGyb,QAAQ,CAAC/d,KAAK,EAAE0gD,GAAG,CAAC;AAEhC,KAAA,KAAK,IAAI98C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACsO,CAAC,EAAEtO,CAAC,EAAE,EAAE;OAC/B,MAAM/E,KAAK,GAAG,IAAI,CAACoE,IAAI,CAACX,GAAG,EAAEsB,CAAC,CAAC;OAC/B,IAAI,CAAC,IAAI,CAACo4D,MAAM,CAACn9D,KAAK,KAAK,CAAC,CAAC,GAAI,CAAC,KAAK,CAAC,GAAGA,KAAK,CAAE,MAAM,CAAC,EACvD,OAAO,KAAK;AAChB;AAEA,KAAA,OAAO,IAAI;AACb;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AAEEo3F,GAAAA,KAAKA,CAACj2F,KAAK,EAAE0gD,GAAG,EAAE;KAChB,MAAMp+C,GAAG,GAAGyb,QAAQ,CAAC/d,KAAK,EAAE0gD,GAAG,CAAC;KAEhC,IAAIw1C,GAAG,GAAG,KAAK;AAEf,KAAA,KAAK,IAAItyF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACsO,CAAC,EAAEtO,CAAC,EAAE,EAAE;OAC/B,MAAM/E,KAAK,GAAG,IAAI,CAACoE,IAAI,CAACX,GAAG,EAAEsB,CAAC,CAAC;OAC/B,IAAI,CAACsyF,GAAG,IAAI,CAAC,IAAI,CAACl6B,MAAM,CAACn9D,KAAK,KAAK,CAAC,CAAC,GAAI,CAAC,KAAK,CAAC,GAAGA,KAAK,CAAE,MAAM,CAAC,EAC/Dq3F,GAAG,GAAG,IAAI;AACZ,OAAA,IAAI,CAACl6B,MAAM,CAACn9D,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAGA,KAAK,CAAC;AAC9C;AAEA,KAAA,OAAOq3F,GAAG;AACZ;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAEE,OAAOC,QAAQA,CAACztF,KAAK,EAAEo8C,IAAI,EAAEthD,MAAM,EAAE;AACnCqI,KAAAA,OAAO,CAAC7N,MAAM,CAACC,aAAa,CAACyK,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAE,OAAO,EAAE,SAAS,CAAC;AACrEmD,KAAAA,OAAO,CAAC,OAAOi5C,IAAI,KAAK,QAAQ,IAAItlD,QAAQ,CAACslD,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC;AACrEj5C,KAAAA,OAAO,CAACi5C,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAI,CAAC,EAAE,MAAM,EAAE,4BAA4B,CAAC;AAErE,KAAA,MAAMj+C,IAAI,GAAI,EAAE,GAAG+uF,UAAU,GAAGltF,KAAK,GAAGgD,IAAI,CAACqoE,GAAG,CAACjvB,IAAI,CAAC,GAAI,CAAC;KAC3D,MAAMliD,IAAI,GAAG8I,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE9E,IAAI,CAAC;AAE9B,KAAA,IAAIrD,MAAM,KAAK,EAAE,EAAE;AACjB,OAAA,IAAIZ,IAAI,GAAGkzF,WAAW,CAACM,qBAAqB,GAAG,CAAC,EAC9C,MAAM,IAAI12F,KAAK,CAAC,2CAA2C,CAAC;AAChE;AAEA,KAAA,MAAMwS,CAAC,GAAGxG,IAAI,CAACC,GAAG,CAAC,CAAC,EAAG/I,IAAI,GAAG8F,KAAK,GAAGmtF,GAAG,GAAI,CAAC,CAAC;AAE/C,KAAA,IAAIryF,MAAM,KAAK,EAAE,EAAE;OACjB,IAAI0O,CAAC,GAAG4jF,WAAW,CAACO,cAAc,EAChC,MAAM,IAAI32F,KAAK,CAAC,2CAA2C,CAAC;AAChE;KAEA,OAAO,IAAI,IAAI,CAACkD,IAAI,EAAEsP,CAAC,EAAE,EAAE,EAAE1O,MAAM,CAAC;AACtC;;AAEA;AACF;AACA;AACA;;AAEE8yF,GAAAA,mBAAmBA,GAAG;KACpB,IAAI,IAAI,CAAC1zF,IAAI,GAAGkzF,WAAW,CAACM,qBAAqB,GAAG,CAAC,EACnD,OAAO,KAAK;KAEd,IAAI,IAAI,CAAClkF,CAAC,GAAG4jF,WAAW,CAACO,cAAc,EACrC,OAAO,KAAK;AAEd,KAAA,OAAO,IAAI;AACb;;AAEA;AACF;AACA;AACA;;AAEEj1C,GAAAA,OAAOA,GAAG;KACR,OAAOpB,GAAG,CAAC6a,YAAY,CAAC,IAAI,CAACmB,MAAM,CAAC,GAAG,CAAC;AAC1C;;AAEA;AACF;AACA;AACA;;GAEEjd,KAAKA,CAACD,EAAE,EAAE;AACRA,KAAAA,EAAE,CAACiY,aAAa,CAAC,IAAI,CAACiF,MAAM,CAAC;AAC7Bld,KAAAA,EAAE,CAAC/5C,QAAQ,CAAC,IAAI,CAACmN,CAAC,CAAC;AACnB4sC,KAAAA,EAAE,CAAC/5C,QAAQ,CAAC,IAAI,CAAC22C,KAAK,CAAC;AACvBoD,KAAAA,EAAE,CAACwC,OAAO,CAAC,IAAI,CAAC99C,MAAM,CAAC;AACvB,KAAA,OAAOs7C,EAAE;AACX;;AAEA;AACF;AACA;AACA;AACA;;GAEEgD,IAAIA,CAACD,EAAE,EAAE;AACP,KAAA,IAAI,CAACma,MAAM,GAAGna,EAAE,CAACwc,YAAY,EAAE;KAC/B,IAAI,CAACz7D,IAAI,GAAG,IAAI,CAACo5D,MAAM,CAACx9D,MAAM,GAAG,CAAC;AAClC,KAAA,IAAI,CAAC0T,CAAC,GAAG2vC,EAAE,CAACp8C,OAAO,EAAE;AACrB,KAAA,IAAI,CAACi2C,KAAK,GAAGmG,EAAE,CAACp8C,OAAO,EAAE;AACzB,KAAA,IAAI,CAACjC,MAAM,GAAGq+C,EAAE,CAACE,MAAM,EAAE;KAEzB,IAAI,IAAI,CAACv+C,MAAM,GAAG,CAAC,EACjB,MAAM,IAAI9D,KAAK,CAAC,sBAAsB,CAAC;AAEzC,KAAA,OAAO,IAAI;AACb;AACF;;AAEA;AACA;AACA;AACA;AACA;;CAEAo2F,WAAW,CAACM,qBAAqB,GAAG,KAAK;;AAEzC;AACA;AACA;AACA;AACA;;CAEAN,WAAW,CAACO,cAAc,GAAG,EAAE;;AAE/B;AACA;AACA;AACA;AACA;;CAEAP,WAAW,CAACloF,KAAK,GAAG;AAClB;AACF;AACA;;GAEEtD,IAAI,EAAE,CAAC;AAEP;AACF;AACA;;GAEEK,GAAG,EAAE,CAAC;AAEN;AACF;AACA;AACA;;AAEE4rF,GAAAA,WAAW,EAAE;EACd;;AAED;AACA;AACA;AACA;;CAEAT,WAAW,CAACU,UAAU,GAAG,CACvB,MAAM,EACN,KAAK,EACL,aAAa,CACd;;AAED;AACA;AACA;;AAEA,CAAA,SAASz4E,QAAQA,CAAC/d,KAAK,EAAE0gD,GAAG,EAAE;AAC5B,GAAA,IAAI,OAAO1gD,KAAK,KAAK,QAAQ,EAAE;KAC7B6L,OAAO,CAACvK,MAAM,CAACgC,QAAQ,CAACtD,KAAK,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC;AAClD,KAAA,OAAOA,KAAK;AACd;GAEA6L,OAAO,CAAC,OAAO60C,GAAG,KAAK,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC;GAEjD,OAAOp/C,MAAM,CAACnB,IAAI,CAACH,KAAK,EAAE0gD,GAAG,CAAC;AAChC;;AAEA;AACA;AACA;;AAEAz/C,CAAAA,KAAc,GAAG60F,WAAW;;;;;;;;;;;;;;;;;;CCrV5B,MAAM;GAACjqF;AAAO,EAAC,GAAGlO,eAAgB,EAAA;CAClC,MAAM;GAACu4D;AAAQ,EAAC,GAAGv4D,YAAgB,EAAA;CACnC,MAAMg4F,OAAO,GAAGh4F,cAA6B,EAAA;AAC7C,CAAA,MAAM+6E,KAAK,GAAGp3E,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC;;AAE7B;AACA;AACA;;AAEA,CAAA,MAAM8yF,aAAa,CAAC;AAClB;AACF;AACA;AACA;AACA;AACA;;AAEE12F,GAAAA,WAAWA,CAAC2I,KAAK,EAAEo8C,IAAI,EAAE;KACvB,IAAI,CAACgO,OAAO,GAAG,CAAC;KAChB,IAAI,CAAC4jC,UAAU,GAAG,CAAC;KACnB,IAAI,CAACxkF,CAAC,GAAG,CAAC;KACV,IAAI,CAACoH,KAAK,GAAG,CAAC;KACd,IAAI,CAAC1W,IAAI,GAAG,CAAC;KACb,IAAI,CAAC8F,KAAK,GAAG,CAAC;KACd,IAAI,CAACgzC,KAAK,GAAG,CAAC;KACd,IAAI,CAACsgB,MAAM,GAAG0c,KAAK;KAEnB,IAAIhwE,KAAK,IAAI,IAAI,EACf,IAAI,CAACytF,QAAQ,CAACztF,KAAK,EAAEo8C,IAAI,CAAC;AAC9B;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AAEEqxC,GAAAA,QAAQA,CAACztF,KAAK,EAAEo8C,IAAI,EAAE;AACpBj5C,KAAAA,OAAO,CAAC7N,MAAM,CAACC,aAAa,CAACyK,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAE,OAAO,EAAE,SAAS,CAAC;AACrEmD,KAAAA,OAAO,CAAC,OAAOi5C,IAAI,KAAK,QAAQ,IAAItlD,QAAQ,CAACslD,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC;AACrEj5C,KAAAA,OAAO,CAACi5C,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAI,CAAC,EAAE,MAAM,EAAE,4BAA4B,CAAC;KAErE,MAAM6xC,OAAO,GAAGjrF,IAAI,CAACqoE,GAAG,CAACjvB,IAAI,CAAC;AAE9B,KAAA,MAAM5yC,CAAC,GAAGxG,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACoD,GAAG,CAACpD,IAAI,CAAC+8D,KAAK,CAACkuB,OAAO,GAAGjrF,IAAI,CAACqoE,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;KACxE,MAAMz6D,KAAK,GAAG,CAAC5Q,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;AAEjC,KAAA,MAAMiD,GAAG,GAAG2N,KAAK,GAAG,CAAC;KAErB,IAAI1W,IAAI,GAAG,EAAE,GAAGsP,CAAC,GAAGvG,GAAG,GAAGD,IAAI,CAACqoE,GAAG,CAAC,GAAG,GAAGroE,IAAI,CAAC3N,GAAG,CAAC44F,OAAO,GAAGzkF,CAAC,CAAC,CAAC;AAC/DtP,KAAAA,IAAI,GAAG8I,IAAI,CAAC+H,IAAI,CAAC7Q,IAAI,CAAC;KAEtB8F,KAAK,GAAG,CAAC,CAAC9F,IAAI,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC;KACnC8F,KAAK,MAAM,CAAC;KACZA,KAAK,GAAGgD,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEjD,KAAK,CAAC;KAE1B,MAAMgzC,KAAK,GAAIhwC,IAAI,CAACqO,MAAM,EAAE,GAAG,WAAW,KAAM,CAAC;KAEjD,MAAMiiD,MAAM,GAAG16D,MAAM,CAACqC,KAAK,CAAC+E,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC;KAE5C,IAAI,CAACwJ,CAAC,GAAGA,CAAC;KACV,IAAI,CAACoH,KAAK,GAAGA,KAAK;KAClB,IAAI,CAAC1W,IAAI,GAAGA,IAAI;KAChB,IAAI,CAAC8F,KAAK,GAAGA,KAAK;KAClB,IAAI,CAACgzC,KAAK,GAAGA,KAAK;KAClB,IAAI,CAACsgB,MAAM,GAAGA,MAAM;AAEpB,KAAA,OAAO,IAAI;AACb;;AAEA;AACF;AACA;AACA;AACA;AACA;;AAEE,GAAA,OAAOm6B,QAAQA,CAACztF,KAAK,EAAEo8C,IAAI,EAAE;KAC3B,OAAO,IAAI,IAAI,EAAE,CAACqxC,QAAQ,CAACztF,KAAK,EAAEo8C,IAAI,CAAC;AACzC;;AAEA;AACF;AACA;AACA;AACA;AACA;;AAEE7hD,GAAAA,IAAIA,CAACjD,KAAK,EAAEkS,CAAC,EAAE;KACb,OAAOyjF,OAAO,CAACj6C,KAAK,CAAC17C,KAAK,EAAEkS,CAAC,EAAE,IAAI,CAACwpC,KAAK,CAAC;AAC5C;;AAEA;AACF;AACA;;AAEEs6C,GAAAA,KAAKA,GAAG;AACN,KAAA,IAAI,IAAI,CAACljC,OAAO,KAAK,CAAC,EACpB;KAEF,IAAI,CAACA,OAAO,GAAG,CAAC;KAChB,IAAI,CAAC4jC,UAAU,GAAG,CAAC;AACnB,KAAA,IAAI,CAAC16B,MAAM,CAACgS,IAAI,CAAC,CAAC,CAAC;AACrB;;AAEA;AACF;AACA;AACA;AACA;;AAEE5hE,GAAAA,GAAGA,CAACpM,KAAK,EAAE0gD,GAAG,EAAE;KACd,MAAMp+C,GAAG,GAAGyb,QAAQ,CAAC/d,KAAK,EAAE0gD,GAAG,CAAC;KAEhC,IAAI,IAAI,CAACoS,OAAO,KAAK,IAAI,CAACx5C,KAAK,EAAE;OAC/B,IAAI,CAACw5C,OAAO,GAAG,CAAC;OAChB,IAAI,CAAC4jC,UAAU,IAAI,CAAC;OAEpB,IAAI,IAAI,CAACA,UAAU,KAAK,CAAC,EACvB,IAAI,CAACA,UAAU,GAAG,CAAC;OAErB,MAAMzhD,EAAE,GAAG,CAAC,IAAI,CAACyhD,UAAU,GAAG,CAAC,IAAI,UAAU;OAC7C,MAAMxhD,EAAE,GAAG,CAAC,IAAI,CAACwhD,UAAU,KAAK,CAAC,IAAI,UAAU;AAE/C,OAAA,KAAK,IAAI9yF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC8E,KAAK,EAAE9E,CAAC,IAAI,CAAC,EAAE;AACtC,SAAA,MAAMgzF,IAAI,GAAGhzF,CAAC,GAAG,CAAC;SAClB,MAAMizF,IAAI,GAAG,CAACjzF,CAAC,GAAG,CAAC,IAAI,CAAC;SACxB,MAAM0qC,EAAE,GAAGwT,IAAI,CAAC,IAAI,CAACka,MAAM,EAAE46B,IAAI,CAAC;SAClC,MAAMroD,EAAE,GAAGuT,IAAI,CAAC,IAAI,CAACka,MAAM,EAAE66B,IAAI,CAAC;AAClC,SAAA,MAAMC,GAAG,GAAIxoD,EAAE,CAAChwC,EAAE,GAAG22C,EAAE,GAAK1G,EAAE,CAACjwC,EAAE,GAAG42C,EAAG;AACvC,SAAA,MAAM6hD,GAAG,GAAIzoD,EAAE,CAACjwC,EAAE,GAAG42C,EAAE,GAAK1G,EAAE,CAAClwC,EAAE,GAAG62C,EAAG;SAEvC5G,EAAE,CAAChwC,EAAE,IAAIw4F,GAAG;SACZxoD,EAAE,CAACjwC,EAAE,IAAI04F,GAAG;SACZxoD,EAAE,CAACjwC,EAAE,IAAIw4F,GAAG;SACZvoD,EAAE,CAAClwC,EAAE,IAAI04F,GAAG;SAEZh4C,KAAK,CAAC,IAAI,CAACid,MAAM,EAAE1tB,EAAE,EAAEsoD,IAAI,CAAC;SAC5B73C,KAAK,CAAC,IAAI,CAACid,MAAM,EAAEztB,EAAE,EAAEsoD,IAAI,CAAC;AAC9B;AACF;KAEA,IAAI,CAAC/jC,OAAO,IAAI,CAAC;AAEjB,KAAA,KAAK,IAAIlvD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACsO,CAAC,EAAEtO,CAAC,EAAE,EAAE;OAC/B,MAAMX,IAAI,GAAG,IAAI,CAACA,IAAI,CAACX,GAAG,EAAEsB,CAAC,CAAC;AAC9B,OAAA,MAAMiD,IAAI,GAAG5D,IAAI,GAAG,IAAI;OACxB,MAAMwB,GAAG,GAAG,CAACxB,IAAI,KAAK,CAAC,IAAI,IAAI,CAACyF,KAAK;OACrC,MAAMkuF,IAAI,GAAG,CAACnyF,GAAG,GAAG,EAAE,IAAI,CAAC;OAC3B,MAAMoyF,IAAI,GAAG,CAACpyF,GAAG,GAAG,CAAC,IAAI,CAAC;AAC1B,OAAA,MAAM0L,GAAG,GAAGtJ,IAAI,GAAG,CAAC;OACpB,MAAMinE,GAAG,GAAG,CAACjnE,IAAI,GAAGsJ,GAAG,IAAI,CAAC;AAE5B,OAAA,IAAI,CAAC6rD,MAAM,CAAC46B,IAAI,GAAG9oB,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI39D,GAAG,CAAC;AACtC,OAAA,IAAI,CAAC6rD,MAAM,CAAC46B,IAAI,GAAG9oB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC4oB,UAAU,GAAG,CAAC,KAAKvmF,GAAG;AAEvD,OAAA,IAAI,CAAC6rD,MAAM,CAAC66B,IAAI,GAAG/oB,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI39D,GAAG,CAAC;AACtC,OAAA,IAAI,CAAC6rD,MAAM,CAAC66B,IAAI,GAAG/oB,GAAG,CAAC,IAAK,IAAI,CAAC4oB,UAAU,KAAK,CAAC,IAAKvmF,GAAG;AAC3D;AACF;;AAEA;AACF;AACA;AACA;AACA;AACA;;AAEEpR,GAAAA,IAAIA,CAACiB,KAAK,EAAE0gD,GAAG,EAAE;KACf,IAAI,IAAI,CAACoS,OAAO,KAAK,CAAC,EACpB,OAAO,KAAK;KAEd,MAAMxwD,GAAG,GAAGyb,QAAQ,CAAC/d,KAAK,EAAE0gD,GAAG,CAAC;AAEhC,KAAA,KAAK,IAAI98C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACsO,CAAC,EAAEtO,CAAC,EAAE,EAAE;OAC/B,MAAMX,IAAI,GAAG,IAAI,CAACA,IAAI,CAACX,GAAG,EAAEsB,CAAC,CAAC;AAC9B,OAAA,MAAMiD,IAAI,GAAG5D,IAAI,GAAG,IAAI;OACxB,MAAMwB,GAAG,GAAG,CAACxB,IAAI,KAAK,CAAC,IAAI,IAAI,CAACyF,KAAK;OACrC,MAAMkuF,IAAI,GAAG,CAACnyF,GAAG,GAAG,EAAE,IAAI,CAAC;OAC3B,MAAMoyF,IAAI,GAAG,CAACpyF,GAAG,GAAG,CAAC,IAAI,CAAC;AAC1B,OAAA,MAAM0L,GAAG,GAAGtJ,IAAI,GAAG,CAAC;OACpB,MAAMinE,GAAG,GAAG,CAACjnE,IAAI,GAAGsJ,GAAG,IAAI,CAAC;AAE5B,OAAA,MAAM6mF,IAAI,GAAI,IAAI,CAACh7B,MAAM,CAAC46B,IAAI,GAAG9oB,GAAG,CAAC,KAAK39D,GAAG,GAAI,CAAC;AAClD,OAAA,MAAM8mF,IAAI,GAAI,IAAI,CAACj7B,MAAM,CAAC66B,IAAI,GAAG/oB,GAAG,CAAC,KAAK39D,GAAG,GAAI,CAAC;OAElD,IAAI,CAAC6mF,IAAI,GAAGC,IAAI,MAAM,CAAC,EACrB,OAAO,KAAK;AAChB;AAEA,KAAA,OAAO,IAAI;AACb;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AAEEhB,GAAAA,KAAKA,CAACj2F,KAAK,EAAE0gD,GAAG,EAAE;KAChB,MAAMp+C,GAAG,GAAGyb,QAAQ,CAAC/d,KAAK,EAAE0gD,GAAG,CAAC;KAEhC,IAAI,CAAC,IAAI,CAAC3hD,IAAI,CAACuD,GAAG,CAAC,EAAE;AACnB,OAAA,IAAI,CAAC8J,GAAG,CAAC9J,GAAG,CAAC;AACb,OAAA,OAAO,IAAI;AACb;AAEA,KAAA,OAAO,KAAK;AACd;AACF;;AAEA;AACA;AACA;;AAEA,CAAA,MAAMs8D,GAAG,CAAC;AACR7+D,GAAAA,WAAWA,CAACzB,EAAE,EAAED,EAAE,EAAE;KAClB,IAAI,CAACC,EAAE,GAAGA,EAAE;KACZ,IAAI,CAACD,EAAE,GAAGA,EAAE;AACd;AACF;AAEA,CAAA,SAASyjD,IAAIA,CAACj+C,IAAI,EAAEa,GAAG,EAAE;GACvB,MAAMpG,EAAE,GAAG43D,QAAQ,CAACzwD,OAAO,CAAC5B,IAAI,EAAEa,GAAG,GAAG,CAAC,CAAC;GAC1C,MAAMrG,EAAE,GAAG63D,QAAQ,CAACzwD,OAAO,CAAC5B,IAAI,EAAEa,GAAG,CAAC;AACtC,GAAA,OAAO,IAAIk6D,GAAG,CAACtgE,EAAE,EAAED,EAAE,CAAC;AACxB;AAEA,CAAA,SAAS0gD,KAAKA,CAACl7C,IAAI,EAAE7D,KAAK,EAAE0E,GAAG,EAAE;AAC/BwxD,GAAAA,QAAQ,CAACnxD,QAAQ,CAAClB,IAAI,EAAE7D,KAAK,CAAC1B,EAAE,EAAEoG,GAAG,GAAG,CAAC,CAAC;GAC1CwxD,QAAQ,CAACnxD,QAAQ,CAAClB,IAAI,EAAE7D,KAAK,CAAC3B,EAAE,EAAEqG,GAAG,CAAC;AACxC;AAEA,CAAA,SAASqZ,QAAQA,CAAC/d,KAAK,EAAE0gD,GAAG,EAAE;AAC5B,GAAA,IAAI,OAAO1gD,KAAK,KAAK,QAAQ,EAAE;KAC7B6L,OAAO,CAACvK,MAAM,CAACgC,QAAQ,CAACtD,KAAK,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC;AAClD,KAAA,OAAOA,KAAK;AACd;GAEA6L,OAAO,CAAC,OAAO60C,GAAG,KAAK,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC;GAEjD,OAAOp/C,MAAM,CAACnB,IAAI,CAACH,KAAK,EAAE0gD,GAAG,CAAC;AAChC;;AAEA;AACA;AACA;;AAEAz/C,CAAAA,OAAc,GAAGw1F,aAAa;;;;;;;;;;;;;;;;CC7P9B,MAAMX,WAAW,GAAGn4F,YAAkB,EAAA;CACtC,MAAM84F,aAAa,GAAG94F,cAAoB,EAAA;AAE1CC,CAAAA,OAAAA,CAAAA,WAAmB,GAAGk4F,WAAW;AACjCl4F,CAAAA,OAAAA,CAAAA,aAAqB,GAAG64F,aAAa;;;;;;;;;;;;;ACVrCx1F,CAAAA,KAAc,GAAG,CACfK,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IAAI,CACT,kEAAkE,EAClE,KAAK,CAAC,EACRmB,MAAM,CAACnB,IA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","x_google_ignoreList":[0,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,66,81,82,86,87]}